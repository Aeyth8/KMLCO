#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_Elite_Server_01

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Keaton_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function ABP_Elite_Server_01.ABP_Elite_Server_01_C.ExecuteUbergraph_ABP_Elite_Server_01
// 0x04B0 (0x04B0 - 0x0000)
struct ABP_Elite_Server_01_C_ExecuteUbergraph_ABP_Elite_Server_01 final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AActor* OverlappedActor, class AActor* OtherActor)> K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0014)(ZeroConstructor, NoDestructor)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetTPRotation_ReturnValue;                // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Vector_Distance_ReturnValue;              // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_LessLess_VectorRotator_ReturnValue;       // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotFromX_ReturnValue;                 // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue;              // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACACharacter_NPC*                       K2Node_DynamicCast_AsCACharacter_NPC;              // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_OverlappedActor_1;              // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_OtherActor_1;                   // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACAProjectileBase*                      K2Node_DynamicCast_AsCAProjectile_Base;            // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_OverlappedActor;                // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_OtherActor;                     // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACAProjectileBase*                      K2Node_DynamicCast_AsCAProjectile_Base_1;          // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_GetOwningComponent_ReturnValue;           // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BD[0x3];                                       // 0x00BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C5[0x3];                                       // 0x00C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AActor* OverlappedActor, class AActor* OtherActor)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x00C8(0x0014)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACACharacter*                           K2Node_CustomEvent_character;                      // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectSpec                    K2Node_CustomEvent_death_gameplay_effect_spec;     // 0x00E8(0x0298)(ConstParm)
	float                                         K2Node_CustomEvent_damage_magnitude;               // 0x0380(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_384[0x4];                                      // 0x0384(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FNetworkedHit                          K2Node_CustomEvent_networked_hit;                  // 0x0388(0x0068)(ConstParm, NoDestructor)
	const class AActor*                           K2Node_CustomEvent_killer;                         // 0x03F0(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class ACACharacter* Character, struct FGameplayEffectSpec& Death_gameplay_effect_spec, float Damage_magnitude, struct FNetworkedHit& Networked_hit, class AActor* Killer)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x03F8(0x0014)(ZeroConstructor, NoDestructor)
	TDelegate<void(bool Is_in_pool)>              K2Node_CreateDelegate_OutputDelegate_3;            // 0x040C(0x0014)(ZeroConstructor, NoDestructor)
	bool                                          K2Node_CustomEvent_is_in_pool;                     // 0x0420(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_421[0x3];                                      // 0x0421(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetAIHeading_ReturnValue;                 // 0x0424(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetTPLocation_ReturnValue;                // 0x0428(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0434(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_435[0x3];                                      // 0x0435(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x0438(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetYawPitchFromVector_Yaw;                // 0x0444(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetYawPitchFromVector_Pitch;              // 0x0448(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetTPRotation_ReturnValue_1;              // 0x044C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0458(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x045C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0460(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SignedAngleDifference_ReturnValue;        // 0x0464(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0468(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0469(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x046A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x046B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x046C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x046D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECAAwarenessState                             CallFunc_GetAwarenessState_ReturnValue;            // 0x046E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46F[0x1];                                      // 0x046F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaTimeX;                           // 0x0470(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0474(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0475(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0476(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_477[0x1];                                      // 0x0477(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0478(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_1;                // 0x047C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACAEquipmentBase*                       CallFunc_GetCurrentDevice_ReturnValue;             // 0x0480(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACAExoticWeaponBase*                    K2Node_DynamicCast_AsCAExotic_Weapon_Base;         // 0x0488(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0490(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_491[0x7];                                      // 0x0491(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ICAWeaponInterface>    CallFunc_IsWeaponFiring_self_CastInput;            // 0x0498(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsWeaponFiring_ReturnValue;               // 0x04A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x04A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ABP_Elite_Server_01_C_ExecuteUbergraph_ABP_Elite_Server_01) == 0x000008, "Wrong alignment on ABP_Elite_Server_01_C_ExecuteUbergraph_ABP_Elite_Server_01");
static_assert(sizeof(ABP_Elite_Server_01_C_ExecuteUbergraph_ABP_Elite_Server_01) == 0x0004B0, "Wrong size on ABP_Elite_Server_01_C_ExecuteUbergraph_ABP_Elite_Server_01");
static_assert(offsetof(ABP_Elite_Server_01_C_ExecuteUbergraph_ABP_Elite_Server_01, EntryPoint) == 0x000000, "Member 'ABP_Elite_Server_01_C_ExecuteUbergraph_ABP_Elite_Server_01::EntryPoint' has a wrong offset!");
static_assert(offsetof(ABP_Elite_Server_01_C_ExecuteUbergraph_ABP_Elite_Server_01, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'ABP_Elite_Server_01_C_ExecuteUbergraph_ABP_Elite_Server_01::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(ABP_Elite_Server_01_C_ExecuteUbergraph_ABP_Elite_Server_01, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000018, "Member 'ABP_Elite_Server_01_C_ExecuteUbergraph_ABP_Elite_Server_01::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Elite_Server_01_C_ExecuteUbergraph_ABP_Elite_Server_01, CallFunc_GetTPRotation_ReturnValue) == 0x000024, "Member 'ABP_Elite_Server_01_C_ExecuteUbergraph_ABP_Elite_Server_01::CallFunc_GetTPRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Elite_Server_01_C_ExecuteUbergraph_ABP_Elite_Server_01, CallFunc_Vector_Distance_ReturnValue) == 0x000030, "Member 'ABP_Elite_Server_01_C_ExecuteUbergraph_ABP_Elite_Server_01::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Elite_Server_01_C_ExecuteUbergraph_ABP_Elite_Server_01, CallFunc_LessLess_VectorRotator_ReturnValue) == 0x000034, "Member 'ABP_Elite_Server_01_C_ExecuteUbergraph_ABP_Elite_Server_01::CallFunc_LessLess_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Elite_Server_01_C_ExecuteUbergraph_ABP_Elite_Server_01, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000040, "Member 'ABP_Elite_Server_01_C_ExecuteUbergraph_ABP_Elite_Server_01::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Elite_Server_01_C_ExecuteUbergraph_ABP_Elite_Server_01, CallFunc_MakeRotFromX_ReturnValue) == 0x000044, "Member 'ABP_Elite_Server_01_C_ExecuteUbergraph_ABP_Elite_Server_01::CallFunc_MakeRotFromX_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Elite_Server_01_C_ExecuteUbergraph_ABP_Elite_Server_01, CallFunc_TryGetPawnOwner_ReturnValue) == 0x000050, "Member 'ABP_Elite_Server_01_C_ExecuteUbergraph_ABP_Elite_Server_01::CallFunc_TryGetPawnOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Elite_Server_01_C_ExecuteUbergraph_ABP_Elite_Server_01, CallFunc_IsValid_ReturnValue) == 0x000058, "Member 'ABP_Elite_Server_01_C_ExecuteUbergraph_ABP_Elite_Server_01::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Elite_Server_01_C_ExecuteUbergraph_ABP_Elite_Server_01, K2Node_DynamicCast_AsCACharacter_NPC) == 0x000060, "Member 'ABP_Elite_Server_01_C_ExecuteUbergraph_ABP_Elite_Server_01::K2Node_DynamicCast_AsCACharacter_NPC' has a wrong offset!");
static_assert(offsetof(ABP_Elite_Server_01_C_ExecuteUbergraph_ABP_Elite_Server_01, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'ABP_Elite_Server_01_C_ExecuteUbergraph_ABP_Elite_Server_01::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ABP_Elite_Server_01_C_ExecuteUbergraph_ABP_Elite_Server_01, K2Node_CustomEvent_OverlappedActor_1) == 0x000070, "Member 'ABP_Elite_Server_01_C_ExecuteUbergraph_ABP_Elite_Server_01::K2Node_CustomEvent_OverlappedActor_1' has a wrong offset!");
static_assert(offsetof(ABP_Elite_Server_01_C_ExecuteUbergraph_ABP_Elite_Server_01, K2Node_CustomEvent_OtherActor_1) == 0x000078, "Member 'ABP_Elite_Server_01_C_ExecuteUbergraph_ABP_Elite_Server_01::K2Node_CustomEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(ABP_Elite_Server_01_C_ExecuteUbergraph_ABP_Elite_Server_01, K2Node_DynamicCast_AsCAProjectile_Base) == 0x000080, "Member 'ABP_Elite_Server_01_C_ExecuteUbergraph_ABP_Elite_Server_01::K2Node_DynamicCast_AsCAProjectile_Base' has a wrong offset!");
static_assert(offsetof(ABP_Elite_Server_01_C_ExecuteUbergraph_ABP_Elite_Server_01, K2Node_DynamicCast_bSuccess_1) == 0x000088, "Member 'ABP_Elite_Server_01_C_ExecuteUbergraph_ABP_Elite_Server_01::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(ABP_Elite_Server_01_C_ExecuteUbergraph_ABP_Elite_Server_01, K2Node_CustomEvent_OverlappedActor) == 0x000090, "Member 'ABP_Elite_Server_01_C_ExecuteUbergraph_ABP_Elite_Server_01::K2Node_CustomEvent_OverlappedActor' has a wrong offset!");
static_assert(offsetof(ABP_Elite_Server_01_C_ExecuteUbergraph_ABP_Elite_Server_01, K2Node_CustomEvent_OtherActor) == 0x000098, "Member 'ABP_Elite_Server_01_C_ExecuteUbergraph_ABP_Elite_Server_01::K2Node_CustomEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(ABP_Elite_Server_01_C_ExecuteUbergraph_ABP_Elite_Server_01, K2Node_DynamicCast_AsCAProjectile_Base_1) == 0x0000A0, "Member 'ABP_Elite_Server_01_C_ExecuteUbergraph_ABP_Elite_Server_01::K2Node_DynamicCast_AsCAProjectile_Base_1' has a wrong offset!");
static_assert(offsetof(ABP_Elite_Server_01_C_ExecuteUbergraph_ABP_Elite_Server_01, K2Node_DynamicCast_bSuccess_2) == 0x0000A8, "Member 'ABP_Elite_Server_01_C_ExecuteUbergraph_ABP_Elite_Server_01::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(ABP_Elite_Server_01_C_ExecuteUbergraph_ABP_Elite_Server_01, CallFunc_GetOwningComponent_ReturnValue) == 0x0000B0, "Member 'ABP_Elite_Server_01_C_ExecuteUbergraph_ABP_Elite_Server_01::CallFunc_GetOwningComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Elite_Server_01_C_ExecuteUbergraph_ABP_Elite_Server_01, CallFunc_Array_AddUnique_ReturnValue) == 0x0000B8, "Member 'ABP_Elite_Server_01_C_ExecuteUbergraph_ABP_Elite_Server_01::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Elite_Server_01_C_ExecuteUbergraph_ABP_Elite_Server_01, CallFunc_Array_RemoveItem_ReturnValue) == 0x0000BC, "Member 'ABP_Elite_Server_01_C_ExecuteUbergraph_ABP_Elite_Server_01::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Elite_Server_01_C_ExecuteUbergraph_ABP_Elite_Server_01, CallFunc_Array_Length_ReturnValue) == 0x0000C0, "Member 'ABP_Elite_Server_01_C_ExecuteUbergraph_ABP_Elite_Server_01::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Elite_Server_01_C_ExecuteUbergraph_ABP_Elite_Server_01, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000C4, "Member 'ABP_Elite_Server_01_C_ExecuteUbergraph_ABP_Elite_Server_01::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Elite_Server_01_C_ExecuteUbergraph_ABP_Elite_Server_01, K2Node_CreateDelegate_OutputDelegate_1) == 0x0000C8, "Member 'ABP_Elite_Server_01_C_ExecuteUbergraph_ABP_Elite_Server_01::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(ABP_Elite_Server_01_C_ExecuteUbergraph_ABP_Elite_Server_01, K2Node_CustomEvent_character) == 0x0000E0, "Member 'ABP_Elite_Server_01_C_ExecuteUbergraph_ABP_Elite_Server_01::K2Node_CustomEvent_character' has a wrong offset!");
static_assert(offsetof(ABP_Elite_Server_01_C_ExecuteUbergraph_ABP_Elite_Server_01, K2Node_CustomEvent_death_gameplay_effect_spec) == 0x0000E8, "Member 'ABP_Elite_Server_01_C_ExecuteUbergraph_ABP_Elite_Server_01::K2Node_CustomEvent_death_gameplay_effect_spec' has a wrong offset!");
static_assert(offsetof(ABP_Elite_Server_01_C_ExecuteUbergraph_ABP_Elite_Server_01, K2Node_CustomEvent_damage_magnitude) == 0x000380, "Member 'ABP_Elite_Server_01_C_ExecuteUbergraph_ABP_Elite_Server_01::K2Node_CustomEvent_damage_magnitude' has a wrong offset!");
static_assert(offsetof(ABP_Elite_Server_01_C_ExecuteUbergraph_ABP_Elite_Server_01, K2Node_CustomEvent_networked_hit) == 0x000388, "Member 'ABP_Elite_Server_01_C_ExecuteUbergraph_ABP_Elite_Server_01::K2Node_CustomEvent_networked_hit' has a wrong offset!");
static_assert(offsetof(ABP_Elite_Server_01_C_ExecuteUbergraph_ABP_Elite_Server_01, K2Node_CustomEvent_killer) == 0x0003F0, "Member 'ABP_Elite_Server_01_C_ExecuteUbergraph_ABP_Elite_Server_01::K2Node_CustomEvent_killer' has a wrong offset!");
static_assert(offsetof(ABP_Elite_Server_01_C_ExecuteUbergraph_ABP_Elite_Server_01, K2Node_CreateDelegate_OutputDelegate_2) == 0x0003F8, "Member 'ABP_Elite_Server_01_C_ExecuteUbergraph_ABP_Elite_Server_01::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(ABP_Elite_Server_01_C_ExecuteUbergraph_ABP_Elite_Server_01, K2Node_CreateDelegate_OutputDelegate_3) == 0x00040C, "Member 'ABP_Elite_Server_01_C_ExecuteUbergraph_ABP_Elite_Server_01::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(ABP_Elite_Server_01_C_ExecuteUbergraph_ABP_Elite_Server_01, K2Node_CustomEvent_is_in_pool) == 0x000420, "Member 'ABP_Elite_Server_01_C_ExecuteUbergraph_ABP_Elite_Server_01::K2Node_CustomEvent_is_in_pool' has a wrong offset!");
static_assert(offsetof(ABP_Elite_Server_01_C_ExecuteUbergraph_ABP_Elite_Server_01, CallFunc_GetAIHeading_ReturnValue) == 0x000424, "Member 'ABP_Elite_Server_01_C_ExecuteUbergraph_ABP_Elite_Server_01::CallFunc_GetAIHeading_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Elite_Server_01_C_ExecuteUbergraph_ABP_Elite_Server_01, CallFunc_GetTPLocation_ReturnValue) == 0x000428, "Member 'ABP_Elite_Server_01_C_ExecuteUbergraph_ABP_Elite_Server_01::CallFunc_GetTPLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Elite_Server_01_C_ExecuteUbergraph_ABP_Elite_Server_01, CallFunc_IsValid_ReturnValue_1) == 0x000434, "Member 'ABP_Elite_Server_01_C_ExecuteUbergraph_ABP_Elite_Server_01::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Elite_Server_01_C_ExecuteUbergraph_ABP_Elite_Server_01, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x000438, "Member 'ABP_Elite_Server_01_C_ExecuteUbergraph_ABP_Elite_Server_01::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Elite_Server_01_C_ExecuteUbergraph_ABP_Elite_Server_01, CallFunc_GetYawPitchFromVector_Yaw) == 0x000444, "Member 'ABP_Elite_Server_01_C_ExecuteUbergraph_ABP_Elite_Server_01::CallFunc_GetYawPitchFromVector_Yaw' has a wrong offset!");
static_assert(offsetof(ABP_Elite_Server_01_C_ExecuteUbergraph_ABP_Elite_Server_01, CallFunc_GetYawPitchFromVector_Pitch) == 0x000448, "Member 'ABP_Elite_Server_01_C_ExecuteUbergraph_ABP_Elite_Server_01::CallFunc_GetYawPitchFromVector_Pitch' has a wrong offset!");
static_assert(offsetof(ABP_Elite_Server_01_C_ExecuteUbergraph_ABP_Elite_Server_01, CallFunc_GetTPRotation_ReturnValue_1) == 0x00044C, "Member 'ABP_Elite_Server_01_C_ExecuteUbergraph_ABP_Elite_Server_01::CallFunc_GetTPRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Elite_Server_01_C_ExecuteUbergraph_ABP_Elite_Server_01, CallFunc_BreakRotator_Roll) == 0x000458, "Member 'ABP_Elite_Server_01_C_ExecuteUbergraph_ABP_Elite_Server_01::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(ABP_Elite_Server_01_C_ExecuteUbergraph_ABP_Elite_Server_01, CallFunc_BreakRotator_Pitch) == 0x00045C, "Member 'ABP_Elite_Server_01_C_ExecuteUbergraph_ABP_Elite_Server_01::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(ABP_Elite_Server_01_C_ExecuteUbergraph_ABP_Elite_Server_01, CallFunc_BreakRotator_Yaw) == 0x000460, "Member 'ABP_Elite_Server_01_C_ExecuteUbergraph_ABP_Elite_Server_01::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(ABP_Elite_Server_01_C_ExecuteUbergraph_ABP_Elite_Server_01, CallFunc_SignedAngleDifference_ReturnValue) == 0x000464, "Member 'ABP_Elite_Server_01_C_ExecuteUbergraph_ABP_Elite_Server_01::CallFunc_SignedAngleDifference_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Elite_Server_01_C_ExecuteUbergraph_ABP_Elite_Server_01, CallFunc_BooleanOR_ReturnValue) == 0x000468, "Member 'ABP_Elite_Server_01_C_ExecuteUbergraph_ABP_Elite_Server_01::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Elite_Server_01_C_ExecuteUbergraph_ABP_Elite_Server_01, CallFunc_BooleanOR_ReturnValue_1) == 0x000469, "Member 'ABP_Elite_Server_01_C_ExecuteUbergraph_ABP_Elite_Server_01::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Elite_Server_01_C_ExecuteUbergraph_ABP_Elite_Server_01, CallFunc_BooleanOR_ReturnValue_2) == 0x00046A, "Member 'ABP_Elite_Server_01_C_ExecuteUbergraph_ABP_Elite_Server_01::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_Elite_Server_01_C_ExecuteUbergraph_ABP_Elite_Server_01, CallFunc_Not_PreBool_ReturnValue) == 0x00046B, "Member 'ABP_Elite_Server_01_C_ExecuteUbergraph_ABP_Elite_Server_01::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Elite_Server_01_C_ExecuteUbergraph_ABP_Elite_Server_01, CallFunc_BooleanAND_ReturnValue) == 0x00046C, "Member 'ABP_Elite_Server_01_C_ExecuteUbergraph_ABP_Elite_Server_01::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Elite_Server_01_C_ExecuteUbergraph_ABP_Elite_Server_01, CallFunc_BooleanOR_ReturnValue_3) == 0x00046D, "Member 'ABP_Elite_Server_01_C_ExecuteUbergraph_ABP_Elite_Server_01::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_Elite_Server_01_C_ExecuteUbergraph_ABP_Elite_Server_01, CallFunc_GetAwarenessState_ReturnValue) == 0x00046E, "Member 'ABP_Elite_Server_01_C_ExecuteUbergraph_ABP_Elite_Server_01::CallFunc_GetAwarenessState_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Elite_Server_01_C_ExecuteUbergraph_ABP_Elite_Server_01, K2Node_Event_DeltaTimeX) == 0x000470, "Member 'ABP_Elite_Server_01_C_ExecuteUbergraph_ABP_Elite_Server_01::K2Node_Event_DeltaTimeX' has a wrong offset!");
static_assert(offsetof(ABP_Elite_Server_01_C_ExecuteUbergraph_ABP_Elite_Server_01, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000474, "Member 'ABP_Elite_Server_01_C_ExecuteUbergraph_ABP_Elite_Server_01::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Elite_Server_01_C_ExecuteUbergraph_ABP_Elite_Server_01, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000475, "Member 'ABP_Elite_Server_01_C_ExecuteUbergraph_ABP_Elite_Server_01::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Elite_Server_01_C_ExecuteUbergraph_ABP_Elite_Server_01, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000476, "Member 'ABP_Elite_Server_01_C_ExecuteUbergraph_ABP_Elite_Server_01::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Elite_Server_01_C_ExecuteUbergraph_ABP_Elite_Server_01, CallFunc_SelectFloat_ReturnValue) == 0x000478, "Member 'ABP_Elite_Server_01_C_ExecuteUbergraph_ABP_Elite_Server_01::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Elite_Server_01_C_ExecuteUbergraph_ABP_Elite_Server_01, CallFunc_SelectFloat_ReturnValue_1) == 0x00047C, "Member 'ABP_Elite_Server_01_C_ExecuteUbergraph_ABP_Elite_Server_01::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Elite_Server_01_C_ExecuteUbergraph_ABP_Elite_Server_01, CallFunc_GetCurrentDevice_ReturnValue) == 0x000480, "Member 'ABP_Elite_Server_01_C_ExecuteUbergraph_ABP_Elite_Server_01::CallFunc_GetCurrentDevice_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Elite_Server_01_C_ExecuteUbergraph_ABP_Elite_Server_01, K2Node_DynamicCast_AsCAExotic_Weapon_Base) == 0x000488, "Member 'ABP_Elite_Server_01_C_ExecuteUbergraph_ABP_Elite_Server_01::K2Node_DynamicCast_AsCAExotic_Weapon_Base' has a wrong offset!");
static_assert(offsetof(ABP_Elite_Server_01_C_ExecuteUbergraph_ABP_Elite_Server_01, K2Node_DynamicCast_bSuccess_3) == 0x000490, "Member 'ABP_Elite_Server_01_C_ExecuteUbergraph_ABP_Elite_Server_01::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(ABP_Elite_Server_01_C_ExecuteUbergraph_ABP_Elite_Server_01, CallFunc_IsWeaponFiring_self_CastInput) == 0x000498, "Member 'ABP_Elite_Server_01_C_ExecuteUbergraph_ABP_Elite_Server_01::CallFunc_IsWeaponFiring_self_CastInput' has a wrong offset!");
static_assert(offsetof(ABP_Elite_Server_01_C_ExecuteUbergraph_ABP_Elite_Server_01, CallFunc_IsWeaponFiring_ReturnValue) == 0x0004A8, "Member 'ABP_Elite_Server_01_C_ExecuteUbergraph_ABP_Elite_Server_01::CallFunc_IsWeaponFiring_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Elite_Server_01_C_ExecuteUbergraph_ABP_Elite_Server_01, CallFunc_IsValid_ReturnValue_2) == 0x0004A9, "Member 'ABP_Elite_Server_01_C_ExecuteUbergraph_ABP_Elite_Server_01::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

// Function ABP_Elite_Server_01.ABP_Elite_Server_01_C.OnPoolStateChanged
// 0x0001 (0x0001 - 0x0000)
struct ABP_Elite_Server_01_C_OnPoolStateChanged final
{
public:
	bool                                          Is_in_pool;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ABP_Elite_Server_01_C_OnPoolStateChanged) == 0x000001, "Wrong alignment on ABP_Elite_Server_01_C_OnPoolStateChanged");
static_assert(sizeof(ABP_Elite_Server_01_C_OnPoolStateChanged) == 0x000001, "Wrong size on ABP_Elite_Server_01_C_OnPoolStateChanged");
static_assert(offsetof(ABP_Elite_Server_01_C_OnPoolStateChanged, Is_in_pool) == 0x000000, "Member 'ABP_Elite_Server_01_C_OnPoolStateChanged::Is_in_pool' has a wrong offset!");

// Function ABP_Elite_Server_01.ABP_Elite_Server_01_C.OnDeath
// 0x0318 (0x0318 - 0x0000)
struct ABP_Elite_Server_01_C_OnDeath final
{
public:
	class ACACharacter*                           Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectSpec                    Death_gameplay_effect_spec;                        // 0x0008(0x0298)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	float                                         Damage_magnitude;                                  // 0x02A0(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A4[0x4];                                      // 0x02A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FNetworkedHit                          Networked_hit;                                     // 0x02A8(0x0068)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	const class AActor*                           Killer;                                            // 0x0310(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Elite_Server_01_C_OnDeath) == 0x000008, "Wrong alignment on ABP_Elite_Server_01_C_OnDeath");
static_assert(sizeof(ABP_Elite_Server_01_C_OnDeath) == 0x000318, "Wrong size on ABP_Elite_Server_01_C_OnDeath");
static_assert(offsetof(ABP_Elite_Server_01_C_OnDeath, Character) == 0x000000, "Member 'ABP_Elite_Server_01_C_OnDeath::Character' has a wrong offset!");
static_assert(offsetof(ABP_Elite_Server_01_C_OnDeath, Death_gameplay_effect_spec) == 0x000008, "Member 'ABP_Elite_Server_01_C_OnDeath::Death_gameplay_effect_spec' has a wrong offset!");
static_assert(offsetof(ABP_Elite_Server_01_C_OnDeath, Damage_magnitude) == 0x0002A0, "Member 'ABP_Elite_Server_01_C_OnDeath::Damage_magnitude' has a wrong offset!");
static_assert(offsetof(ABP_Elite_Server_01_C_OnDeath, Networked_hit) == 0x0002A8, "Member 'ABP_Elite_Server_01_C_OnDeath::Networked_hit' has a wrong offset!");
static_assert(offsetof(ABP_Elite_Server_01_C_OnDeath, Killer) == 0x000310, "Member 'ABP_Elite_Server_01_C_OnDeath::Killer' has a wrong offset!");

// Function ABP_Elite_Server_01.ABP_Elite_Server_01_C.OnEndOverlap
// 0x0010 (0x0010 - 0x0000)
struct ABP_Elite_Server_01_C_OnEndOverlap final
{
public:
	class AActor*                                 OverlappedActor;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Elite_Server_01_C_OnEndOverlap) == 0x000008, "Wrong alignment on ABP_Elite_Server_01_C_OnEndOverlap");
static_assert(sizeof(ABP_Elite_Server_01_C_OnEndOverlap) == 0x000010, "Wrong size on ABP_Elite_Server_01_C_OnEndOverlap");
static_assert(offsetof(ABP_Elite_Server_01_C_OnEndOverlap, OverlappedActor) == 0x000000, "Member 'ABP_Elite_Server_01_C_OnEndOverlap::OverlappedActor' has a wrong offset!");
static_assert(offsetof(ABP_Elite_Server_01_C_OnEndOverlap, OtherActor) == 0x000008, "Member 'ABP_Elite_Server_01_C_OnEndOverlap::OtherActor' has a wrong offset!");

// Function ABP_Elite_Server_01.ABP_Elite_Server_01_C.OnBeginOverlap
// 0x0010 (0x0010 - 0x0000)
struct ABP_Elite_Server_01_C_OnBeginOverlap final
{
public:
	class AActor*                                 OverlappedActor;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Elite_Server_01_C_OnBeginOverlap) == 0x000008, "Wrong alignment on ABP_Elite_Server_01_C_OnBeginOverlap");
static_assert(sizeof(ABP_Elite_Server_01_C_OnBeginOverlap) == 0x000010, "Wrong size on ABP_Elite_Server_01_C_OnBeginOverlap");
static_assert(offsetof(ABP_Elite_Server_01_C_OnBeginOverlap, OverlappedActor) == 0x000000, "Member 'ABP_Elite_Server_01_C_OnBeginOverlap::OverlappedActor' has a wrong offset!");
static_assert(offsetof(ABP_Elite_Server_01_C_OnBeginOverlap, OtherActor) == 0x000008, "Member 'ABP_Elite_Server_01_C_OnBeginOverlap::OtherActor' has a wrong offset!");

// Function ABP_Elite_Server_01.ABP_Elite_Server_01_C.BlueprintUpdateAnimation
// 0x0004 (0x0004 - 0x0000)
struct ABP_Elite_Server_01_C_BlueprintUpdateAnimation final
{
public:
	float                                         DeltaTimeX;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Elite_Server_01_C_BlueprintUpdateAnimation) == 0x000004, "Wrong alignment on ABP_Elite_Server_01_C_BlueprintUpdateAnimation");
static_assert(sizeof(ABP_Elite_Server_01_C_BlueprintUpdateAnimation) == 0x000004, "Wrong size on ABP_Elite_Server_01_C_BlueprintUpdateAnimation");
static_assert(offsetof(ABP_Elite_Server_01_C_BlueprintUpdateAnimation, DeltaTimeX) == 0x000000, "Member 'ABP_Elite_Server_01_C_BlueprintUpdateAnimation::DeltaTimeX' has a wrong offset!");

// Function ABP_Elite_Server_01.ABP_Elite_Server_01_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct ABP_Elite_Server_01_C_AnimGraph final
{
public:
	struct FPoseLink                              AnimGraph_0;                                       // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABP_Elite_Server_01_C_AnimGraph) == 0x000008, "Wrong alignment on ABP_Elite_Server_01_C_AnimGraph");
static_assert(sizeof(ABP_Elite_Server_01_C_AnimGraph) == 0x000010, "Wrong size on ABP_Elite_Server_01_C_AnimGraph");
static_assert(offsetof(ABP_Elite_Server_01_C_AnimGraph, AnimGraph_0) == 0x000000, "Member 'ABP_Elite_Server_01_C_AnimGraph::AnimGraph_0' has a wrong offset!");

}

