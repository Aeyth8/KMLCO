#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_Human_TP_NormalG

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Keaton_structs.hpp"
#include "Keaton_classes.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_Human_TP_NormalG.ABP_Human_TP_NormalG_C
// 0xA1C0 (0xB3D0 - 0x1210)
class UABP_Human_TP_NormalG_C final : public UCAAnimInstance_Player_TP
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x1210(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_17;                       // 0x1218(0x0110)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_16;                       // 0x1328(0x0110)()
	struct FAnimNode_LegIK                        AnimGraphNode_LegIK_13;                            // 0x1438(0x0100)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_15;                       // 0x1538(0x0110)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_14;                       // 0x1648(0x0110)()
	struct FAnimNode_LegIK                        AnimGraphNode_LegIK_12;                            // 0x1758(0x0100)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone_3;                          // 0x1858(0x0100)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone_2;                          // 0x1958(0x0100)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_13;                       // 0x1A58(0x0110)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_15;                  // 0x1B68(0x00A0)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_12;                       // 0x1C08(0x0110)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_8;             // 0x1D18(0x0020)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_8;             // 0x1D38(0x0020)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_14;                  // 0x1D58(0x00A0)()
	struct FAnimNode_RefPose                      AnimGraphNode_LocalRefPose_1;                      // 0x1DF8(0x0018)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone_1;                          // 0x1E10(0x0100)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend_17;                      // 0x1F10(0x00C8)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone;                            // 0x1FD8(0x0100)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_11;                       // 0x20D8(0x0110)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_10;                       // 0x21E8(0x0110)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_3;                    // 0x22F8(0x0158)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_82;                 // 0x2450(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_81;                 // 0x2478(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_80;                 // 0x24A0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_79;                 // 0x24C8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_78;                 // 0x24F0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_77;                 // 0x2518(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_76;                 // 0x2540(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_75;                 // 0x2568(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_74;                 // 0x2590(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_73;                 // 0x25B8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_72;                 // 0x25E0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_71;                 // 0x2608(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_70;                 // 0x2630(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_69;                 // 0x2658(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_68;                 // 0x2680(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_67;                 // 0x26A8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_66;                 // 0x26D0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_65;                 // 0x26F8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_64;                 // 0x2720(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_63;                 // 0x2748(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_62;                 // 0x2770(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_61;                 // 0x2798(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_60;                 // 0x27C0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_59;                 // 0x27E8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_58;                 // 0x2810(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_57;                 // 0x2838(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_56;                 // 0x2860(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_55;                 // 0x2888(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_54;                 // 0x28B0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_53;                 // 0x28D8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_52;                 // 0x2900(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_51;                 // 0x2928(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_50;                 // 0x2950(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_49;                 // 0x2978(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_48;                 // 0x29A0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_47;                 // 0x29C8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_46;                 // 0x29F0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_45;                 // 0x2A18(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_44;                 // 0x2A40(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_43;                 // 0x2A68(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_42;                 // 0x2A90(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_41;                 // 0x2AB8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_40;                 // 0x2AE0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_39;                 // 0x2B08(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_38;                 // 0x2B30(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_37;                 // 0x2B58(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_36;                 // 0x2B80(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_35;                 // 0x2BA8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_34;                 // 0x2BD0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_33;                 // 0x2BF8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_32;                 // 0x2C20(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_31;                 // 0x2C48(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_30;                 // 0x2C70(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_29;                 // 0x2C98(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_28;                 // 0x2CC0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_27;                 // 0x2CE8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_26;                 // 0x2D10(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_25;                 // 0x2D38(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_24;                 // 0x2D60(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_23;                 // 0x2D88(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_22;                 // 0x2DB0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_21;                 // 0x2DD8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_20;                 // 0x2E00(0x0028)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend_16;                      // 0x2E28(0x00C8)()
	struct FAnimNode_TransitionPoseEvaluator      AnimGraphNode_TransitionPoseEvaluator_1;           // 0x2EF0(0x00F8)()
	struct FAnimNode_TransitionPoseEvaluator      AnimGraphNode_TransitionPoseEvaluator;             // 0x2FE8(0x00F8)()
	struct FAnimNode_StateResult                  AnimGraphNode_CustomTransitionResult;              // 0x30E0(0x0038)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_19;                 // 0x3118(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_18;                 // 0x3140(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_17;                 // 0x3168(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_16;                 // 0x3190(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_15;                 // 0x31B8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_14;                 // 0x31E0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_13;                 // 0x3208(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_12;                 // 0x3230(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_11;                 // 0x3258(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_10;                 // 0x3280(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_9;                  // 0x32A8(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_34;                   // 0x32D0(0x0080)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend_15;                      // 0x3350(0x00C8)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend_14;                      // 0x3418(0x00C8)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_22;                 // 0x34E0(0x00E8)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_21;                 // 0x35C8(0x00E8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_27;                      // 0x36B0(0x0038)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_7;             // 0x36E8(0x0020)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_7;             // 0x3708(0x0020)()
	struct FAnimNode_LegIK                        AnimGraphNode_LegIK_11;                            // 0x3728(0x0100)()
	struct FAnimNode_LegIK                        AnimGraphNode_LegIK_10;                            // 0x3828(0x0100)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_9;                        // 0x3928(0x0110)()
	struct FAnimNode_ModifyCurve                  AnimGraphNode_ModifyCurve_9;                       // 0x3A38(0x0058)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend_13;                      // 0x3A90(0x00C8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_33;                   // 0x3B58(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_32;                   // 0x3BD8(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_26;                      // 0x3C58(0x0038)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_20;                 // 0x3C90(0x00E8)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_13;                  // 0x3D78(0x00A0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_31;                   // 0x3E18(0x0080)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_12;                  // 0x3E98(0x00A0)()
	struct FAnimNode_ModifyCurve                  AnimGraphNode_ModifyCurve_8;                       // 0x3F38(0x0058)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_30;                   // 0x3F90(0x0080)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_11;                  // 0x4010(0x00A0)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_19;                 // 0x40B0(0x00E8)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_10;                  // 0x4198(0x00A0)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend_12;                      // 0x4238(0x00C8)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_18;                 // 0x4300(0x00E8)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_17;                 // 0x43E8(0x00E8)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_6;             // 0x44D0(0x0020)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_6;             // 0x44F0(0x0020)()
	struct FAnimNode_LegIK                        AnimGraphNode_LegIK_9;                             // 0x4510(0x0100)()
	struct FAnimNode_LegIK                        AnimGraphNode_LegIK_8;                             // 0x4610(0x0100)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_8;                        // 0x4710(0x0110)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_25;                      // 0x4820(0x0038)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_7;                     // 0x4858(0x0030)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_2;                  // 0x4888(0x00C0)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_1;                  // 0x4948(0x00C0)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_6;                     // 0x4A08(0x0030)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_7;                        // 0x4A38(0x0110)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_5;             // 0x4B48(0x0020)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_5;             // 0x4B68(0x0020)()
	struct FAnimNode_LegIK                        AnimGraphNode_LegIK_7;                             // 0x4B88(0x0100)()
	struct FAnimNode_LegIK                        AnimGraphNode_LegIK_6;                             // 0x4C88(0x0100)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend_11;                      // 0x4D88(0x00C8)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_16;                 // 0x4E50(0x00E8)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_15;                 // 0x4F38(0x00E8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_24;                      // 0x5020(0x0038)()
	struct FAnimNode_RefPose                      AnimGraphNode_LocalRefPose;                        // 0x5058(0x0018)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_23;                      // 0x5070(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_29;                   // 0x50A8(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_22;                      // 0x5128(0x0038)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend_10;                      // 0x5160(0x00C8)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_14;                 // 0x5228(0x00E8)()
	struct FAnimNode_ModifyCurve                  AnimGraphNode_ModifyCurve_7;                       // 0x5310(0x0058)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_13;                 // 0x5368(0x00E8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_21;                      // 0x5450(0x0038)()
	struct FAnimNode_RotateRootBone               AnimGraphNode_RotateRootBone_2;                    // 0x5488(0x00E0)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_4;             // 0x5568(0x0020)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_4;             // 0x5588(0x0020)()
	struct FAnimNode_LegIK                        AnimGraphNode_LegIK_5;                             // 0x55A8(0x0100)()
	struct FAnimNode_LegIK                        AnimGraphNode_LegIK_4;                             // 0x56A8(0x0100)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_12;                 // 0x57A8(0x00E8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_20;                      // 0x5890(0x0038)()
	struct FAnimNode_RotateRootBone               AnimGraphNode_RotateRootBone_1;                    // 0x58C8(0x00E0)()
	struct FAnimNode_ModifyCurve                  AnimGraphNode_ModifyCurve_6;                       // 0x59A8(0x0058)()
	struct FAnimNode_RotateRootBone               AnimGraphNode_RotateRootBone;                      // 0x5A00(0x00E0)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_1;                     // 0x5AE0(0x00D0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_28;                   // 0x5BB0(0x0080)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_11;                 // 0x5C30(0x00E8)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_3;             // 0x5D18(0x0020)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_3;             // 0x5D38(0x0020)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_6;                        // 0x5D58(0x0110)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_19;                      // 0x5E68(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_27;                   // 0x5EA0(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_18;                      // 0x5F20(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_26;                   // 0x5F58(0x0080)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_9;                   // 0x5FD8(0x00A0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_25;                   // 0x6078(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_17;                      // 0x60F8(0x0038)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend_9;                       // 0x6130(0x00C8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_24;                   // 0x61F8(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_23;                   // 0x6278(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_16;                      // 0x62F8(0x0038)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend_8;                       // 0x6330(0x00C8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_22;                   // 0x63F8(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_21;                   // 0x6478(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_15;                      // 0x64F8(0x0038)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_8;                  // 0x6530(0x0028)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend_7;                       // 0x6558(0x00C8)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_10;                 // 0x6620(0x00E8)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_9;                  // 0x6708(0x00E8)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_8;                   // 0x67F0(0x00A0)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend_6;                       // 0x6890(0x00C8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_20;                   // 0x6958(0x0080)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_8;                  // 0x69D8(0x00E8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_14;                      // 0x6AC0(0x0038)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_7;                  // 0x6AF8(0x00E8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_13;                      // 0x6BE0(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_19;                   // 0x6C18(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_12;                      // 0x6C98(0x0038)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_2;             // 0x6CD0(0x0020)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_2;             // 0x6CF0(0x0020)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_5;                        // 0x6D10(0x0110)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_18;                   // 0x6E20(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_11;                      // 0x6EA0(0x0038)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_1;             // 0x6ED8(0x0020)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_1;             // 0x6EF8(0x0020)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_4;                        // 0x6F18(0x0110)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend_5;                       // 0x7028(0x00C8)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_5;                     // 0x70F0(0x0030)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend;                    // 0x7120(0x00C0)()
	struct FAnimNode_LegIK                        AnimGraphNode_LegIK_3;                             // 0x71E0(0x0100)()
	struct FAnimNode_LegIK                        AnimGraphNode_LegIK_2;                             // 0x72E0(0x0100)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_7;                   // 0x73E0(0x00A0)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_6;                   // 0x7480(0x00A0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_17;                   // 0x7520(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_16;                   // 0x75A0(0x0080)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_5;                   // 0x7620(0x00A0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_15;                   // 0x76C0(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_14;                   // 0x7740(0x0080)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_4;                   // 0x77C0(0x00A0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_13;                   // 0x7860(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_12;                   // 0x78E0(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_11;                   // 0x7960(0x0080)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_3;                   // 0x79E0(0x00A0)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_10;                      // 0x7A80(0x0038)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_6;                  // 0x7AB8(0x00E8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_9;                       // 0x7BA0(0x0038)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum_1;                   // 0x7BD8(0x00B0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_10;                   // 0x7C88(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_9;                    // 0x7D08(0x0080)()
	struct FAnimNode_ModifyCurve                  AnimGraphNode_ModifyCurve_5;                       // 0x7D88(0x0058)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend_4;                       // 0x7DE0(0x00C8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_8;                    // 0x7EA8(0x0080)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum;                     // 0x7F28(0x00B0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_7;                    // 0x7FD8(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_8;                       // 0x8058(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_6;                    // 0x8090(0x0080)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend_3;                       // 0x8110(0x00C8)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend_2;                       // 0x81D8(0x00C8)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_5;                  // 0x82A0(0x00E8)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_4;                  // 0x8388(0x00E8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_7;                       // 0x8470(0x0038)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_4;                     // 0x84A8(0x0030)()
	struct FAnimNode_RotationOffsetBlendSpace     AnimGraphNode_RotationOffsetBlendSpace;            // 0x84D8(0x0198)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_6;                       // 0x8670(0x0038)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend_1;                       // 0x86A8(0x00C8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_5;                    // 0x8770(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x87F0(0x0080)()
	struct FAnimNode_ModifyCurve                  AnimGraphNode_ModifyCurve_4;                       // 0x8870(0x0058)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_3;                        // 0x88C8(0x0110)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_2;                        // 0x89D8(0x0110)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_1;                              // 0x8AE8(0x00E8)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x8BD0(0x00E8)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive;                       // 0x8CB8(0x00D0)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x8D88(0x0020)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x8DA8(0x0020)()
	struct FAnimNode_LegIK                        AnimGraphNode_LegIK_1;                             // 0x8DC8(0x0100)()
	struct FAnimNode_LegIK                        AnimGraphNode_LegIK;                               // 0x8EC8(0x0100)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_1;                        // 0x8FC8(0x0110)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_7;                  // 0x90D8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_6;                  // 0x9100(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_5;                  // 0x9128(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x9150(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x9178(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x91A0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x91C8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x91F0(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x9218(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x9298(0x0080)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_2;                   // 0x9318(0x00A0)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_5;                       // 0x93B8(0x0038)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator_1;                 // 0x93F0(0x0050)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_4;                       // 0x9440(0x0038)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator;                   // 0x9478(0x0050)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x94C8(0x0038)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_3;                     // 0x9500(0x0030)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x9530(0x0038)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_2;                     // 0x9568(0x0030)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x9598(0x0038)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_1;                      // 0x95D0(0x00B0)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x9680(0x0038)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x96B8(0x00B0)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x9768(0x0038)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone;                          // 0x97A0(0x0110)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend;                         // 0x98B0(0x00C8)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_2;                    // 0x9978(0x0158)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_1;                     // 0x9AD0(0x0030)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x9B00(0x0030)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_1;                   // 0x9B30(0x00A0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x9BD0(0x0080)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_1;                    // 0x9C50(0x0158)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x9DA8(0x0080)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x9E28(0x0158)()
	struct FAnimNode_PoseSnapshot                 AnimGraphNode_PoseSnapshot;                        // 0x9F80(0x00B0)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_3;                  // 0xA030(0x00E8)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_2;                  // 0xA118(0x00E8)()
	struct FAnimNode_ModifyCurve                  AnimGraphNode_ModifyCurve_3;                       // 0xA200(0x0058)()
	struct FAnimNode_ModifyCurve                  AnimGraphNode_ModifyCurve_2;                       // 0xA258(0x0058)()
	struct FAnimNode_ModifyCurve                  AnimGraphNode_ModifyCurve_1;                       // 0xA2B0(0x0058)()
	struct FAnimNode_ModifyCurve                  AnimGraphNode_ModifyCurve;                         // 0xA308(0x0058)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_1;                  // 0xA360(0x00E8)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer;                    // 0xA448(0x00E8)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0xA530(0x00A0)()
	struct FVector                                VelocityLocal;                                     // 0xA5D0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LowTraversalHeight;                                // 0xA5DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HighTraversalHeight;                               // 0xA5E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsTraversing;                                      // 0xA5E4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A5E5[0x3];                                     // 0xA5E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TargetHeading;                                     // 0xA5E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentHeading;                                    // 0xA5EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HeadingDelta;                                      // 0xA5F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TurnRate;                                          // 0xA5F4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               HeadingDeltaRotator;                               // 0xA5F8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          ActivelyTurning;                                   // 0xA604(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsPoseBeingUsed;                                   // 0xA605(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A606[0x2];                                     // 0xA606(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         StepPhase;                                         // 0xA608(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          StepToLeft;                                        // 0xA60C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A60D[0x3];                                     // 0xA60D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TimeToNextMidContact;                              // 0xA610(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TimeSinceLastMidContact;                           // 0xA614(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LongJump;                                          // 0xA618(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A619[0x3];                                     // 0xA619(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                MeasuredVelocity;                                  // 0xA61C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                MeasuredAcceleration;                              // 0xA628(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ContactProjectionCM;                               // 0xA634(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ContactProjectionVector;                           // 0xA640(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SyncMarkersAreValid;                               // 0xA64C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A64D[0x3];                                     // 0xA64D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DeltaT;                                            // 0xA650(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ToeBoneToSole;                                     // 0xA654(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LocomotionSpeed;                                   // 0xA660(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          WasTraversing;                                     // 0xA664(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsVault_;                                          // 0xA665(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A666[0x2];                                     // 0xA666(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         InitialTraversalHeight;                            // 0xA668(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RemainingTraversalHeight;                          // 0xA66C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RemainingTraversalTime;                            // 0xA670(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RemainingTraversalAnimTime;                        // 0xA674(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TraversalPlayRate;                                 // 0xA678(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TraversalDirection;                                // 0xA67C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AimHeading;                                        // 0xA688(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SlidingLoopAudioOn;                                // 0xA68C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A68D[0x3];                                     // 0xA68D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               SlopeRotator;                                      // 0xA690(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FRotator                               LeanRotator;                                       // 0xA69C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FVector                                LocallySmoothedAcceleration;                       // 0xA6A8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Slow_Fast_Blend;                                   // 0xA6B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LastValidSlideHeading;                             // 0xA6B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StrafeAngle;                                       // 0xA6BC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StartStrength;                                     // 0xA6C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         D_MoveYaw;                                         // 0xA6C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         D_MovePitch;                                       // 0xA6C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsSprinting;                                       // 0xA6CC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsServer;                                          // 0xA6CD(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A6CE[0x2];                                     // 0xA6CE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           FidgetTimer;                                       // 0xA6D0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      FidgetCurrentAnim;                                 // 0xA6D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      FidgetTestAnim;                                    // 0xA6E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FidgetAlpha;                                       // 0xA6E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsStopping;                                        // 0xA6EC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A6ED[0x3];                                     // 0xA6ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ACACharacter_MainPlayer*                CAChar_MainPlayer;                                 // 0xA6F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         IsStoppingDelayer;                                 // 0xA6F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsStoppingInput;                                   // 0xA6FC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A6FD[0x3];                                     // 0xA6FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   PrevDevicePose;                                    // 0xA700(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PrevPoseAlpha;                                     // 0xA70C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NextContactValid;                                  // 0xA710(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A711[0x3];                                     // 0xA711(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         SlideAngle;                                        // 0xA714(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SavedSnapshotOffset;                               // 0xA718(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LandRequired;                                      // 0xA724(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A725[0x3];                                     // 0xA725(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         GroundToZeroGBlend;                                // 0xA728(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A72C[0x4];                                     // 0xA72C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             LandingGroundFrame;                                // 0xA730(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FTransform                             TakeoffGroundFrame;                                // 0xA760(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         TakeOffMeshPos;                                    // 0xA790(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MeshPosition;                                      // 0xA794(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCACharacterAnimationComponent*         CACharAnimComp;                                    // 0xA798(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SlopeSampleVector;                                 // 0xA7A0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                GroundForwardSample;                               // 0xA7AC(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 Prev_Values;                                       // 0xA7B8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRotator                               FidgetLookDir;                                     // 0xA7C8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         DEBUG_lastFootstepTime;                            // 0xA7D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FLinearColor>                   DebugCols;                                         // 0xA7D8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	ECAPlayerMovementMode                         Movement_Mode;                                     // 0xA7E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECAPlayerMovementMetaMode                     Movement_Meta_Mode;                                // 0xA7E9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A7EA[0x6];                                     // 0xA7EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPoseSnapshot                          PrevWeaponPoseSnapshot;                            // 0xA7F0(0x0040)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         InjuredBodySmooth;                                 // 0xA830(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SprintSpeedMod;                                    // 0xA834(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         JogSpeedMod;                                       // 0xA838(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A83C[0x4];                                     // 0xA83C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCAAnimInstance_Component_Equipment    Equipment_Component;                               // 0xA840(0x0AF8)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         LocoHeading;                                       // 0xB338(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          StrafeAngleTest;                                   // 0xB33C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B33D[0x3];                                     // 0xB33D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            StrafeCurve;                                       // 0xB340(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBlendSpaceBase*                        NormalGLoco;                                       // 0xB348(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBlendSpaceBase*                        MagBootLoco;                                       // 0xB350(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBlendSpaceBase*                        CrouchLoco;                                        // 0xB358(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 On;                                                // 0xB360(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	struct FVector                                StoppingVelocityLocal;                             // 0xB370(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EffortStrengthX;                                   // 0xB37C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TpTurningThresholdRight;                           // 0xB380(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TpTurningThresholdLeft;                            // 0xB384(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                PlayerInput;                                       // 0xB388(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StartToSprintAnimTimeThreshold;                    // 0xB394(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Stopping_Locomotion_Speed;                         // 0xB398(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Stopping_Strafe_Angle;                             // 0xB39C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                PlayerInputSmoothed;                               // 0xB3A0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PlayerInputSpeed;                                  // 0xB3AC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseMagbootLoco;                                    // 0xB3B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B3B1[0x7];                                     // 0xB3B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UABP_Human_TP_C*                        Parent_HumanTPAnimGraph;                           // 0xB3B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CapsuleHalfHeight;                                 // 0xB3C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AdsIdleAnimStrengthMultiplier;                     // 0xB3C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         IdleHipRotationMultiplier;                         // 0xB3C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_ABP_Human_TP_NormalG(int32 EntryPoint);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Human_TP_NormalG_AnimGraphNode_TransitionResult_E13ECF854444D15100CB4C9125C67E8D();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Human_TP_NormalG_AnimGraphNode_TransitionResult_78D32B5A4B59F5FF67BE73B93F1AB768();
	void OnHitReceivedEvent(const struct FNetworkedHit& Hit);
	void AnimNotify_OnStopping();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Human_TP_NormalG_AnimGraphNode_TransitionResult_9430A36B4BBEE5BDE47D1CBD38BE3585();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Human_TP_NormalG_AnimGraphNode_TransitionResult_66EE8B2B4ED2F4FF44628DBEBCFCAADA();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Human_TP_NormalG_AnimGraphNode_TransitionResult_4A7DB64B4993895B4E01BA8D28B15AEC();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Human_TP_NormalG_AnimGraphNode_TransitionResult_B42916B845C8E6ACE17BB4B5DA55B2CB();
	void AbortFidget(bool ResetTimer, bool Instantly);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Human_TP_NormalG_AnimGraphNode_TransitionResult_19CBB1AF48468AD69A3008A6B88C14EC();
	void AnimNotify_OnSlideOut();
	void AnimNotify_OnSlideIn();
	void AnimNotify_OnMagbootsTakeOffEntered();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Human_TP_NormalG_AnimGraphNode_TransitionResult_960398ED4706D829E30233BE0242227D();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Human_TP_NormalG_AnimGraphNode_TransitionResult_4CE21B9148E8F82848D5689CD0AC8FC8();
	void BlueprintInitializeAnimation();
	void OnDeviceChanged();
	void AnimNotify_OnIdleChangeCrouch();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Human_TP_NormalG_AnimGraphNode_TransitionResult_9409444541946BA3E802A0BB4CF43AFC();
	void IdleTimer();
	void AnimNotify_OnExitIdle();
	void AnimNotify_OnEnterIdle();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Human_TP_NormalG_AnimGraphNode_TransitionResult_3FD562294E9F0E3A8BF1D4AEED595619();
	void AnimNotify_OnLandingImpactStateEntered();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Human_TP_NormalG_AnimGraphNode_TwoWayBlend_7ABC3B624FB40E8D7DA3B1B3D22D455B();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Human_TP_NormalG_AnimGraphNode_TransitionResult_3FB32B3A4632921620290CB35C77C97F();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Human_TP_NormalG_AnimGraphNode_TransitionResult_97A46E8946E9FD79A48658A8AC0D3997();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Human_TP_NormalG_AnimGraphNode_TransitionResult_61876658443DD5CA288DD295423D141B();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Human_TP_NormalG_AnimGraphNode_TransitionResult_91F6EC664D48690584AAF3BC486C1543();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Human_TP_NormalG_AnimGraphNode_TransitionResult_D6B8DE2B46C2EE65F8842F93DE4A5D3A();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Human_TP_NormalG_AnimGraphNode_TransitionResult_C33EF7D04C2D365CC627E08B593AF57A();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Human_TP_NormalG_AnimGraphNode_TransitionResult_5581725E4AF404D7CD13D3AE12AF0669();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Human_TP_NormalG_AnimGraphNode_TransitionResult_16BF9D5E4DD3785D77406CB4C5E80729();
	void AnimNotify_SND_Foot_Down();
	void AnimNotify_OnLandEnd();
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Human_TP_NormalG_AnimGraphNode_SequencePlayer_51D75A3847E0F50B3DFBCFB327FE57E4();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Human_TP_NormalG_AnimGraphNode_SequencePlayer_8B27D8974549AC74A2838386A808D695();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Human_TP_NormalG_AnimGraphNode_ModifyBone_C42EB3954A62114F54199ABDEBB0B3A5();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Human_TP_NormalG_AnimGraphNode_ModifyBone_1F0F9FA54B9A61D7F93ECFBFBA8A51B4();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Human_TP_NormalG_AnimGraphNode_TransitionResult_F7477D7D4CFA3838D3E6939B5B62F6E5();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Human_TP_NormalG_AnimGraphNode_BlendListByBool_FA7DCB1E4912EF5E48A8439338599F46();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Human_TP_NormalG_AnimGraphNode_BlendListByBool_33752AFC43D8E4D3F2B8B29B17FF7C46();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Human_TP_NormalG_AnimGraphNode_ModifyBone_D68C534649DD113897A1D2A1DDD80925();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Human_TP_NormalG_AnimGraphNode_BlendSpacePlayer_8DACFAD3478EED6C1DBA03A99DD4548C();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Human_TP_NormalG_AnimGraphNode_BlendSpacePlayer_8A3790E24D0F883F9C8C42AD1E5BAE16();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Human_TP_NormalG_AnimGraphNode_TwoWayBlend_6F78DE9142A6C427F44393B70217213D();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Human_TP_NormalG_AnimGraphNode_BlendListByBool_7A23CB124F9DF37F1844F28D69EE6066();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Human_TP_NormalG_AnimGraphNode_BlendListByBool_8CD9D715421DC0601160609CE4DC7B24();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Human_TP_NormalG_AnimGraphNode_BlendSpacePlayer_713CD93546BAE934DBBD6C984C784E1D();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Human_TP_NormalG_AnimGraphNode_ModifyBone_BA9DA4294BCE8735370162A0BC290C73();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Human_TP_NormalG_AnimGraphNode_BlendListByBool_F58F8F924E3C6359D0DBCEAEE40D8FF1();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Human_TP_NormalG_AnimGraphNode_BlendListByBool_33B6789B490E239BD54C879991A5318F();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Human_TP_NormalG_AnimGraphNode_TransitionResult_BA73B59747C80FA673A374A539EA1617();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Human_TP_NormalG_AnimGraphNode_BlendListByBool_463F8A42427702ECC891F1909AC8CCD7();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Human_TP_NormalG_AnimGraphNode_BlendListByBool_16014EF74568001CFBB5B186D67ABF8D();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Human_TP_NormalG_AnimGraphNode_ModifyBone_356021D44438EBA66D5DFF838F6D58DC();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Human_TP_NormalG_AnimGraphNode_SequencePlayer_5F24BF844CCAF0BABB333794CBF4A901();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Human_TP_NormalG_AnimGraphNode_SequencePlayer_BE7BAAB441032C52A793AFA39CCA7259();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Human_TP_NormalG_AnimGraphNode_ModifyCurve_D2CB7CE244BBB9B9A051A2AD4A70E266();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Human_TP_NormalG_AnimGraphNode_SequencePlayer_6699B5EA46F81294C7BA6284BFBDE67E();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Human_TP_NormalG_AnimGraphNode_TransitionResult_6328AFC7430C5036159F10BC655286E1();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Human_TP_NormalG_AnimGraphNode_TransitionResult_69A51BAE42653D9149B85DA22AB08856();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Human_TP_NormalG_AnimGraphNode_SequenceEvaluator_CFB8F6214AA67371BF53BC93EAD88895();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Human_TP_NormalG_AnimGraphNode_ModifyBone_B59F83DB47B321552E929F9E6AC82B84();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Human_TP_NormalG_AnimGraphNode_ModifyBone_1FC2DF784CBEAE6C40C557BF69F0E36A();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Human_TP_NormalG_AnimGraphNode_ModifyBone_0F3CC9534D9FD18C651C4F90A455CF08();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Human_TP_NormalG_AnimGraphNode_ModifyBone_7B0BDEBD4050EAF078FD19AED437BECC();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Human_TP_NormalG_AnimGraphNode_LegIK_AF0CAFD9495C5979B41401A6DF7297F0();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Human_TP_NormalG_AnimGraphNode_ModifyBone_3C13D8224651DA7E6CE9E59D4D0D55C7();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Human_TP_NormalG_AnimGraphNode_LegIK_8895FBE04305F046BD719E824F469EF7();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Human_TP_NormalG_AnimGraphNode_CopyBone_0BAD0EB84227142719E1C88882361196();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Human_TP_NormalG_AnimGraphNode_CopyBone_9AF616BE47083E2077EEFB813592876E();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Human_TP_NormalG_AnimGraphNode_ModifyBone_4BA6A13C4D8E8C788BD5D1B5E9E272FA();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Human_TP_NormalG_AnimGraphNode_ModifyBone_B31647D745B17037FB1B78BFFBAA6261();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Human_TP_NormalG_AnimGraphNode_ModifyBone_B189D0C14136DDB5A11708B026F0024C();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Human_TP_NormalG_AnimGraphNode_BlendSpacePlayer_3455218A4975F1E3A62B59912FF8A730();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Human_TP_NormalG_AnimGraphNode_BlendSpacePlayer_B24B37E044232105A7B72685CAAD0269();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Human_TP_NormalG_AnimGraphNode_ModifyCurve_2A974DAF4506F809448F23A4B0166F21();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Human_TP_NormalG_AnimGraphNode_BlendSpacePlayer_83EBD488429245A56B1B47A9F769229A();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Human_TP_NormalG_AnimGraphNode_BlendSpacePlayer_B980AE0840B73E1B797B8D88E33D2B2A();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Human_TP_NormalG_AnimGraphNode_BlendListByBool_A35AF58147D92AC0E79E80A09C544E94();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Human_TP_NormalG_AnimGraphNode_TransitionResult_DD05B50941B31790A47E60BD531EFD15();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Human_TP_NormalG_AnimGraphNode_TransitionResult_AE6B0B5B4928659D8F12DC9DDB0045A2();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Human_TP_NormalG_AnimGraphNode_TransitionResult_E7B4421040BB9FA6B216DFAEDF4C7AAF();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Human_TP_NormalG_AnimGraphNode_TransitionResult_4EAB725447477261B63CA9811D2ACABE();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Human_TP_NormalG_AnimGraphNode_TransitionResult_D4267AFC495092C248E11E866ADB262B();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Human_TP_NormalG_AnimGraphNode_TransitionResult_48B73EFA4000B84045BC72BADEEF7376();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Human_TP_NormalG_AnimGraphNode_TransitionResult_B4137F3041DBBC319C7647B61A7BFAF0();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Human_TP_NormalG_AnimGraphNode_TransitionResult_DF76DF9242C968099EAC3E83F912E6A1();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Human_TP_NormalG_AnimGraphNode_TransitionResult_503E53DE47DAD0835F140A86A5871F36();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Human_TP_NormalG_AnimGraphNode_TransitionResult_7DD9911F476E5175200199A5DBD04733();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Human_TP_NormalG_AnimGraphNode_TransitionResult_B3AEE78E4C15C5FEEEC2B79C70803B5B();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Human_TP_NormalG_AnimGraphNode_TransitionResult_127308084038126415872885A25AEE21();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Human_TP_NormalG_AnimGraphNode_TransitionResult_5A3A49F84A1668B3BAAA9980DCAE2BF2();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Human_TP_NormalG_AnimGraphNode_TransitionResult_916C968F4C79B710ADBBCDB4CA2E57C8();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Human_TP_NormalG_AnimGraphNode_TransitionResult_D8039E3D4015E1550510E0B501A0BE75();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Human_TP_NormalG_AnimGraphNode_TransitionResult_0A08AF2E41638ACAB2EF00BEA4312A84();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Human_TP_NormalG_AnimGraphNode_TransitionResult_F2E043D84C483E728A5E208671FDB4D1();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Human_TP_NormalG_AnimGraphNode_TransitionResult_E379440642ED1A8248F43BBC26F8B40F();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Human_TP_NormalG_AnimGraphNode_TransitionResult_CAB68EB04F9A762470FE5A9E268FC087();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Human_TP_NormalG_AnimGraphNode_TransitionResult_61CB05FF42227F024F6DE29A383946F0();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Human_TP_NormalG_AnimGraphNode_TransitionResult_95330F1B4142C5D692BA3FAD18C6BBAA();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Human_TP_NormalG_AnimGraphNode_TransitionResult_166CA0E5466F332DAB317E98241666CB();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Human_TP_NormalG_AnimGraphNode_TransitionResult_AECB7BBD4EDD65A44670D5A3EE560CEC();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Human_TP_NormalG_AnimGraphNode_TransitionResult_FB0079DE414909639AD1DD97F63B4681();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Human_TP_NormalG_AnimGraphNode_TransitionResult_988CDEC74CAB7B422BC23FABB48F10D5();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Human_TP_NormalG_AnimGraphNode_TransitionResult_B93592764ECC5B7A772F65999B4FC899();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Human_TP_NormalG_AnimGraphNode_TransitionResult_6370455949BFE240D07FB0B9EE1FB734();
	void UpdateFootPlanting();
	void StopIdleAnimationSFX(class ACACharacter_MainPlayer* Character_Main_Player);
	void AnimGraph(struct FPoseLink* AnimGraph_0);

	void IsFidgetPlaying(bool* Playing, bool* PlayingTP) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_Human_TP_NormalG_C">();
	}
	static class UABP_Human_TP_NormalG_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_Human_TP_NormalG_C>();
	}
};
static_assert(alignof(UABP_Human_TP_NormalG_C) == 0x000010, "Wrong alignment on UABP_Human_TP_NormalG_C");
static_assert(sizeof(UABP_Human_TP_NormalG_C) == 0x00B3D0, "Wrong size on UABP_Human_TP_NormalG_C");
static_assert(offsetof(UABP_Human_TP_NormalG_C, UberGraphFrame) == 0x001210, "Member 'UABP_Human_TP_NormalG_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_ModifyBone_17) == 0x001218, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_ModifyBone_17' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_ModifyBone_16) == 0x001328, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_ModifyBone_16' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_LegIK_13) == 0x001438, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_LegIK_13' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_ModifyBone_15) == 0x001538, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_ModifyBone_15' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_ModifyBone_14) == 0x001648, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_ModifyBone_14' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_LegIK_12) == 0x001758, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_LegIK_12' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_CopyBone_3) == 0x001858, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_CopyBone_3' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_CopyBone_2) == 0x001958, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_CopyBone_2' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_ModifyBone_13) == 0x001A58, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_ModifyBone_13' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_BlendListByBool_15) == 0x001B68, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_BlendListByBool_15' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_ModifyBone_12) == 0x001C08, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_ModifyBone_12' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_ComponentToLocalSpace_8) == 0x001D18, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_ComponentToLocalSpace_8' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_LocalToComponentSpace_8) == 0x001D38, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_LocalToComponentSpace_8' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_BlendListByBool_14) == 0x001D58, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_BlendListByBool_14' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_LocalRefPose_1) == 0x001DF8, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_LocalRefPose_1' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_CopyBone_1) == 0x001E10, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_CopyBone_1' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_TwoWayBlend_17) == 0x001F10, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_TwoWayBlend_17' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_CopyBone) == 0x001FD8, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_CopyBone' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_ModifyBone_11) == 0x0020D8, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_ModifyBone_11' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_ModifyBone_10) == 0x0021E8, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_ModifyBone_10' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_SaveCachedPose_3) == 0x0022F8, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_SaveCachedPose_3' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_TransitionResult_82) == 0x002450, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_TransitionResult_82' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_TransitionResult_81) == 0x002478, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_TransitionResult_81' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_TransitionResult_80) == 0x0024A0, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_TransitionResult_80' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_TransitionResult_79) == 0x0024C8, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_TransitionResult_79' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_TransitionResult_78) == 0x0024F0, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_TransitionResult_78' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_TransitionResult_77) == 0x002518, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_TransitionResult_77' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_TransitionResult_76) == 0x002540, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_TransitionResult_76' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_TransitionResult_75) == 0x002568, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_TransitionResult_75' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_TransitionResult_74) == 0x002590, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_TransitionResult_74' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_TransitionResult_73) == 0x0025B8, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_TransitionResult_73' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_TransitionResult_72) == 0x0025E0, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_TransitionResult_72' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_TransitionResult_71) == 0x002608, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_TransitionResult_71' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_TransitionResult_70) == 0x002630, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_TransitionResult_70' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_TransitionResult_69) == 0x002658, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_TransitionResult_69' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_TransitionResult_68) == 0x002680, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_TransitionResult_68' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_TransitionResult_67) == 0x0026A8, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_TransitionResult_67' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_TransitionResult_66) == 0x0026D0, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_TransitionResult_66' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_TransitionResult_65) == 0x0026F8, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_TransitionResult_65' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_TransitionResult_64) == 0x002720, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_TransitionResult_64' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_TransitionResult_63) == 0x002748, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_TransitionResult_63' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_TransitionResult_62) == 0x002770, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_TransitionResult_62' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_TransitionResult_61) == 0x002798, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_TransitionResult_61' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_TransitionResult_60) == 0x0027C0, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_TransitionResult_60' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_TransitionResult_59) == 0x0027E8, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_TransitionResult_59' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_TransitionResult_58) == 0x002810, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_TransitionResult_58' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_TransitionResult_57) == 0x002838, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_TransitionResult_57' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_TransitionResult_56) == 0x002860, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_TransitionResult_56' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_TransitionResult_55) == 0x002888, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_TransitionResult_55' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_TransitionResult_54) == 0x0028B0, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_TransitionResult_54' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_TransitionResult_53) == 0x0028D8, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_TransitionResult_53' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_TransitionResult_52) == 0x002900, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_TransitionResult_52' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_TransitionResult_51) == 0x002928, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_TransitionResult_51' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_TransitionResult_50) == 0x002950, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_TransitionResult_50' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_TransitionResult_49) == 0x002978, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_TransitionResult_49' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_TransitionResult_48) == 0x0029A0, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_TransitionResult_48' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_TransitionResult_47) == 0x0029C8, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_TransitionResult_47' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_TransitionResult_46) == 0x0029F0, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_TransitionResult_46' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_TransitionResult_45) == 0x002A18, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_TransitionResult_45' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_TransitionResult_44) == 0x002A40, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_TransitionResult_44' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_TransitionResult_43) == 0x002A68, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_TransitionResult_43' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_TransitionResult_42) == 0x002A90, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_TransitionResult_42' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_TransitionResult_41) == 0x002AB8, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_TransitionResult_41' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_TransitionResult_40) == 0x002AE0, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_TransitionResult_40' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_TransitionResult_39) == 0x002B08, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_TransitionResult_39' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_TransitionResult_38) == 0x002B30, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_TransitionResult_38' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_TransitionResult_37) == 0x002B58, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_TransitionResult_37' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_TransitionResult_36) == 0x002B80, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_TransitionResult_36' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_TransitionResult_35) == 0x002BA8, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_TransitionResult_35' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_TransitionResult_34) == 0x002BD0, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_TransitionResult_34' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_TransitionResult_33) == 0x002BF8, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_TransitionResult_33' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_TransitionResult_32) == 0x002C20, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_TransitionResult_32' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_TransitionResult_31) == 0x002C48, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_TransitionResult_31' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_TransitionResult_30) == 0x002C70, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_TransitionResult_30' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_TransitionResult_29) == 0x002C98, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_TransitionResult_29' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_TransitionResult_28) == 0x002CC0, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_TransitionResult_28' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_TransitionResult_27) == 0x002CE8, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_TransitionResult_27' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_TransitionResult_26) == 0x002D10, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_TransitionResult_26' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_TransitionResult_25) == 0x002D38, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_TransitionResult_25' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_TransitionResult_24) == 0x002D60, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_TransitionResult_24' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_TransitionResult_23) == 0x002D88, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_TransitionResult_23' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_TransitionResult_22) == 0x002DB0, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_TransitionResult_22' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_TransitionResult_21) == 0x002DD8, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_TransitionResult_21' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_TransitionResult_20) == 0x002E00, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_TransitionResult_20' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_TwoWayBlend_16) == 0x002E28, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_TwoWayBlend_16' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_TransitionPoseEvaluator_1) == 0x002EF0, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_TransitionPoseEvaluator_1' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_TransitionPoseEvaluator) == 0x002FE8, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_TransitionPoseEvaluator' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_CustomTransitionResult) == 0x0030E0, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_CustomTransitionResult' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_TransitionResult_19) == 0x003118, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_TransitionResult_19' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_TransitionResult_18) == 0x003140, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_TransitionResult_18' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_TransitionResult_17) == 0x003168, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_TransitionResult_17' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_TransitionResult_16) == 0x003190, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_TransitionResult_16' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_TransitionResult_15) == 0x0031B8, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_TransitionResult_15' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_TransitionResult_14) == 0x0031E0, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_TransitionResult_14' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_TransitionResult_13) == 0x003208, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_TransitionResult_13' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_TransitionResult_12) == 0x003230, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_TransitionResult_12' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_TransitionResult_11) == 0x003258, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_TransitionResult_11' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_TransitionResult_10) == 0x003280, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_TransitionResult_10' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_TransitionResult_9) == 0x0032A8, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_TransitionResult_9' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_SequencePlayer_34) == 0x0032D0, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_SequencePlayer_34' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_TwoWayBlend_15) == 0x003350, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_TwoWayBlend_15' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_TwoWayBlend_14) == 0x003418, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_TwoWayBlend_14' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_BlendSpacePlayer_22) == 0x0034E0, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_BlendSpacePlayer_22' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_BlendSpacePlayer_21) == 0x0035C8, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_BlendSpacePlayer_21' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_StateResult_27) == 0x0036B0, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_StateResult_27' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_ComponentToLocalSpace_7) == 0x0036E8, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_ComponentToLocalSpace_7' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_LocalToComponentSpace_7) == 0x003708, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_LocalToComponentSpace_7' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_LegIK_11) == 0x003728, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_LegIK_11' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_LegIK_10) == 0x003828, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_LegIK_10' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_ModifyBone_9) == 0x003928, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_ModifyBone_9' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_ModifyCurve_9) == 0x003A38, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_ModifyCurve_9' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_TwoWayBlend_13) == 0x003A90, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_TwoWayBlend_13' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_SequencePlayer_33) == 0x003B58, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_SequencePlayer_33' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_SequencePlayer_32) == 0x003BD8, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_SequencePlayer_32' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_StateResult_26) == 0x003C58, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_StateResult_26' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_BlendSpacePlayer_20) == 0x003C90, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_BlendSpacePlayer_20' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_BlendListByBool_13) == 0x003D78, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_BlendListByBool_13' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_SequencePlayer_31) == 0x003E18, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_SequencePlayer_31' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_BlendListByBool_12) == 0x003E98, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_BlendListByBool_12' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_ModifyCurve_8) == 0x003F38, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_ModifyCurve_8' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_SequencePlayer_30) == 0x003F90, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_SequencePlayer_30' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_BlendListByBool_11) == 0x004010, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_BlendListByBool_11' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_BlendSpacePlayer_19) == 0x0040B0, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_BlendSpacePlayer_19' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_BlendListByBool_10) == 0x004198, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_BlendListByBool_10' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_TwoWayBlend_12) == 0x004238, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_TwoWayBlend_12' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_BlendSpacePlayer_18) == 0x004300, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_BlendSpacePlayer_18' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_BlendSpacePlayer_17) == 0x0043E8, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_BlendSpacePlayer_17' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_ComponentToLocalSpace_6) == 0x0044D0, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_ComponentToLocalSpace_6' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_LocalToComponentSpace_6) == 0x0044F0, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_LocalToComponentSpace_6' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_LegIK_9) == 0x004510, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_LegIK_9' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_LegIK_8) == 0x004610, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_LegIK_8' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_ModifyBone_8) == 0x004710, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_ModifyBone_8' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_StateResult_25) == 0x004820, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_StateResult_25' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_UseCachedPose_7) == 0x004858, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_UseCachedPose_7' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_LayeredBoneBlend_2) == 0x004888, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_LayeredBoneBlend_2' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_LayeredBoneBlend_1) == 0x004948, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_LayeredBoneBlend_1' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_UseCachedPose_6) == 0x004A08, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_UseCachedPose_6' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_ModifyBone_7) == 0x004A38, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_ModifyBone_7' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_ComponentToLocalSpace_5) == 0x004B48, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_ComponentToLocalSpace_5' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_LocalToComponentSpace_5) == 0x004B68, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_LocalToComponentSpace_5' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_LegIK_7) == 0x004B88, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_LegIK_7' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_LegIK_6) == 0x004C88, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_LegIK_6' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_TwoWayBlend_11) == 0x004D88, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_TwoWayBlend_11' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_BlendSpacePlayer_16) == 0x004E50, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_BlendSpacePlayer_16' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_BlendSpacePlayer_15) == 0x004F38, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_BlendSpacePlayer_15' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_StateResult_24) == 0x005020, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_StateResult_24' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_LocalRefPose) == 0x005058, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_LocalRefPose' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_StateResult_23) == 0x005070, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_StateResult_23' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_SequencePlayer_29) == 0x0050A8, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_SequencePlayer_29' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_StateResult_22) == 0x005128, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_StateResult_22' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_TwoWayBlend_10) == 0x005160, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_TwoWayBlend_10' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_BlendSpacePlayer_14) == 0x005228, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_BlendSpacePlayer_14' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_ModifyCurve_7) == 0x005310, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_ModifyCurve_7' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_BlendSpacePlayer_13) == 0x005368, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_BlendSpacePlayer_13' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_StateResult_21) == 0x005450, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_StateResult_21' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_RotateRootBone_2) == 0x005488, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_RotateRootBone_2' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_ComponentToLocalSpace_4) == 0x005568, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_ComponentToLocalSpace_4' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_LocalToComponentSpace_4) == 0x005588, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_LocalToComponentSpace_4' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_LegIK_5) == 0x0055A8, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_LegIK_5' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_LegIK_4) == 0x0056A8, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_LegIK_4' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_BlendSpacePlayer_12) == 0x0057A8, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_BlendSpacePlayer_12' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_StateResult_20) == 0x005890, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_StateResult_20' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_RotateRootBone_1) == 0x0058C8, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_RotateRootBone_1' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_ModifyCurve_6) == 0x0059A8, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_ModifyCurve_6' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_RotateRootBone) == 0x005A00, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_RotateRootBone' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_ApplyAdditive_1) == 0x005AE0, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_ApplyAdditive_1' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_SequencePlayer_28) == 0x005BB0, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_SequencePlayer_28' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_BlendSpacePlayer_11) == 0x005C30, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_BlendSpacePlayer_11' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_ComponentToLocalSpace_3) == 0x005D18, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_ComponentToLocalSpace_3' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_LocalToComponentSpace_3) == 0x005D38, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_LocalToComponentSpace_3' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_ModifyBone_6) == 0x005D58, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_ModifyBone_6' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_StateResult_19) == 0x005E68, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_StateResult_19' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_SequencePlayer_27) == 0x005EA0, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_SequencePlayer_27' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_StateResult_18) == 0x005F20, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_StateResult_18' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_SequencePlayer_26) == 0x005F58, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_SequencePlayer_26' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_BlendListByBool_9) == 0x005FD8, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_BlendListByBool_9' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_SequencePlayer_25) == 0x006078, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_SequencePlayer_25' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_StateResult_17) == 0x0060F8, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_StateResult_17' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_TwoWayBlend_9) == 0x006130, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_TwoWayBlend_9' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_SequencePlayer_24) == 0x0061F8, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_SequencePlayer_24' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_SequencePlayer_23) == 0x006278, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_SequencePlayer_23' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_StateResult_16) == 0x0062F8, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_StateResult_16' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_TwoWayBlend_8) == 0x006330, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_TwoWayBlend_8' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_SequencePlayer_22) == 0x0063F8, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_SequencePlayer_22' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_SequencePlayer_21) == 0x006478, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_SequencePlayer_21' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_StateResult_15) == 0x0064F8, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_StateResult_15' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_TransitionResult_8) == 0x006530, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_TransitionResult_8' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_TwoWayBlend_7) == 0x006558, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_TwoWayBlend_7' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_BlendSpacePlayer_10) == 0x006620, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_BlendSpacePlayer_10' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_BlendSpacePlayer_9) == 0x006708, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_BlendSpacePlayer_9' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_BlendListByBool_8) == 0x0067F0, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_BlendListByBool_8' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_TwoWayBlend_6) == 0x006890, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_TwoWayBlend_6' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_SequencePlayer_20) == 0x006958, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_SequencePlayer_20' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_BlendSpacePlayer_8) == 0x0069D8, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_BlendSpacePlayer_8' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_StateResult_14) == 0x006AC0, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_StateResult_14' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_BlendSpacePlayer_7) == 0x006AF8, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_BlendSpacePlayer_7' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_StateResult_13) == 0x006BE0, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_StateResult_13' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_SequencePlayer_19) == 0x006C18, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_SequencePlayer_19' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_StateResult_12) == 0x006C98, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_StateResult_12' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_ComponentToLocalSpace_2) == 0x006CD0, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_ComponentToLocalSpace_2' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_LocalToComponentSpace_2) == 0x006CF0, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_LocalToComponentSpace_2' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_ModifyBone_5) == 0x006D10, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_ModifyBone_5' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_SequencePlayer_18) == 0x006E20, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_SequencePlayer_18' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_StateResult_11) == 0x006EA0, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_StateResult_11' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_ComponentToLocalSpace_1) == 0x006ED8, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_ComponentToLocalSpace_1' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_LocalToComponentSpace_1) == 0x006EF8, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_LocalToComponentSpace_1' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_ModifyBone_4) == 0x006F18, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_ModifyBone_4' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_TwoWayBlend_5) == 0x007028, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_TwoWayBlend_5' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_UseCachedPose_5) == 0x0070F0, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_UseCachedPose_5' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_LayeredBoneBlend) == 0x007120, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_LayeredBoneBlend' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_LegIK_3) == 0x0071E0, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_LegIK_3' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_LegIK_2) == 0x0072E0, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_LegIK_2' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_BlendListByBool_7) == 0x0073E0, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_BlendListByBool_7' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_BlendListByBool_6) == 0x007480, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_BlendListByBool_6' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_SequencePlayer_17) == 0x007520, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_SequencePlayer_17' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_SequencePlayer_16) == 0x0075A0, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_SequencePlayer_16' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_BlendListByBool_5) == 0x007620, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_BlendListByBool_5' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_SequencePlayer_15) == 0x0076C0, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_SequencePlayer_15' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_SequencePlayer_14) == 0x007740, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_SequencePlayer_14' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_BlendListByBool_4) == 0x0077C0, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_BlendListByBool_4' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_SequencePlayer_13) == 0x007860, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_SequencePlayer_13' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_SequencePlayer_12) == 0x0078E0, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_SequencePlayer_12' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_SequencePlayer_11) == 0x007960, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_SequencePlayer_11' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_BlendListByBool_3) == 0x0079E0, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_BlendListByBool_3' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_StateResult_10) == 0x007A80, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_StateResult_10' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_BlendSpacePlayer_6) == 0x007AB8, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_BlendSpacePlayer_6' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_StateResult_9) == 0x007BA0, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_StateResult_9' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_BlendListByEnum_1) == 0x007BD8, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_BlendListByEnum_1' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_SequencePlayer_10) == 0x007C88, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_SequencePlayer_10' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_SequencePlayer_9) == 0x007D08, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_SequencePlayer_9' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_ModifyCurve_5) == 0x007D88, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_ModifyCurve_5' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_TwoWayBlend_4) == 0x007DE0, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_TwoWayBlend_4' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_SequencePlayer_8) == 0x007EA8, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_SequencePlayer_8' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_BlendListByEnum) == 0x007F28, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_BlendListByEnum' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_SequencePlayer_7) == 0x007FD8, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_SequencePlayer_7' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_StateResult_8) == 0x008058, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_StateResult_8' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_SequencePlayer_6) == 0x008090, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_SequencePlayer_6' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_TwoWayBlend_3) == 0x008110, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_TwoWayBlend_3' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_TwoWayBlend_2) == 0x0081D8, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_TwoWayBlend_2' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_BlendSpacePlayer_5) == 0x0082A0, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_BlendSpacePlayer_5' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_BlendSpacePlayer_4) == 0x008388, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_BlendSpacePlayer_4' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_StateResult_7) == 0x008470, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_StateResult_7' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_UseCachedPose_4) == 0x0084A8, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_UseCachedPose_4' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_RotationOffsetBlendSpace) == 0x0084D8, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_RotationOffsetBlendSpace' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_StateResult_6) == 0x008670, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_StateResult_6' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_TwoWayBlend_1) == 0x0086A8, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_TwoWayBlend_1' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_SequencePlayer_5) == 0x008770, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_SequencePlayer_5' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_SequencePlayer_4) == 0x0087F0, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_ModifyCurve_4) == 0x008870, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_ModifyCurve_4' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_ModifyBone_3) == 0x0088C8, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_ModifyBone_3' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_ModifyBone_2) == 0x0089D8, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_ModifyBone_2' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_Slot_1) == 0x008AE8, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_Slot_1' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_Slot) == 0x008BD0, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_ApplyAdditive) == 0x008CB8, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_ApplyAdditive' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_ComponentToLocalSpace) == 0x008D88, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_LocalToComponentSpace) == 0x008DA8, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_LegIK_1) == 0x008DC8, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_LegIK_1' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_LegIK) == 0x008EC8, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_LegIK' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_ModifyBone_1) == 0x008FC8, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_ModifyBone_1' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_TransitionResult_7) == 0x0090D8, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_TransitionResult_7' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_TransitionResult_6) == 0x009100, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_TransitionResult_6' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_TransitionResult_5) == 0x009128, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_TransitionResult_5' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_TransitionResult_4) == 0x009150, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_TransitionResult_3) == 0x009178, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_TransitionResult_2) == 0x0091A0, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_TransitionResult_1) == 0x0091C8, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_TransitionResult) == 0x0091F0, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_SequencePlayer_3) == 0x009218, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_SequencePlayer_2) == 0x009298, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_BlendListByBool_2) == 0x009318, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_BlendListByBool_2' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_StateResult_5) == 0x0093B8, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_StateResult_5' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_SequenceEvaluator_1) == 0x0093F0, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_SequenceEvaluator_1' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_StateResult_4) == 0x009440, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_StateResult_4' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_SequenceEvaluator) == 0x009478, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_SequenceEvaluator' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_StateResult_3) == 0x0094C8, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_UseCachedPose_3) == 0x009500, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_UseCachedPose_3' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_StateResult_2) == 0x009530, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_UseCachedPose_2) == 0x009568, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_UseCachedPose_2' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_StateResult_1) == 0x009598, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_StateMachine_1) == 0x0095D0, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_StateMachine_1' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_StateResult) == 0x009680, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_StateMachine) == 0x0096B8, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_Root) == 0x009768, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_ModifyBone) == 0x0097A0, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_ModifyBone' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_TwoWayBlend) == 0x0098B0, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_TwoWayBlend' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_SaveCachedPose_2) == 0x009978, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_SaveCachedPose_2' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_UseCachedPose_1) == 0x009AD0, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_UseCachedPose_1' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_UseCachedPose) == 0x009B00, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_BlendListByBool_1) == 0x009B30, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_BlendListByBool_1' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_SequencePlayer_1) == 0x009BD0, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_SaveCachedPose_1) == 0x009C50, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_SaveCachedPose_1' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_SequencePlayer) == 0x009DA8, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_SaveCachedPose) == 0x009E28, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_PoseSnapshot) == 0x009F80, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_PoseSnapshot' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_BlendSpacePlayer_3) == 0x00A030, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_BlendSpacePlayer_3' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_BlendSpacePlayer_2) == 0x00A118, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_BlendSpacePlayer_2' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_ModifyCurve_3) == 0x00A200, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_ModifyCurve_3' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_ModifyCurve_2) == 0x00A258, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_ModifyCurve_2' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_ModifyCurve_1) == 0x00A2B0, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_ModifyCurve_1' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_ModifyCurve) == 0x00A308, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_ModifyCurve' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_BlendSpacePlayer_1) == 0x00A360, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_BlendSpacePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_BlendSpacePlayer) == 0x00A448, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_BlendSpacePlayer' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AnimGraphNode_BlendListByBool) == 0x00A530, "Member 'UABP_Human_TP_NormalG_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, VelocityLocal) == 0x00A5D0, "Member 'UABP_Human_TP_NormalG_C::VelocityLocal' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, LowTraversalHeight) == 0x00A5DC, "Member 'UABP_Human_TP_NormalG_C::LowTraversalHeight' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, HighTraversalHeight) == 0x00A5E0, "Member 'UABP_Human_TP_NormalG_C::HighTraversalHeight' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, IsTraversing) == 0x00A5E4, "Member 'UABP_Human_TP_NormalG_C::IsTraversing' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, TargetHeading) == 0x00A5E8, "Member 'UABP_Human_TP_NormalG_C::TargetHeading' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, CurrentHeading) == 0x00A5EC, "Member 'UABP_Human_TP_NormalG_C::CurrentHeading' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, HeadingDelta) == 0x00A5F0, "Member 'UABP_Human_TP_NormalG_C::HeadingDelta' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, TurnRate) == 0x00A5F4, "Member 'UABP_Human_TP_NormalG_C::TurnRate' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, HeadingDeltaRotator) == 0x00A5F8, "Member 'UABP_Human_TP_NormalG_C::HeadingDeltaRotator' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, ActivelyTurning) == 0x00A604, "Member 'UABP_Human_TP_NormalG_C::ActivelyTurning' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, IsPoseBeingUsed) == 0x00A605, "Member 'UABP_Human_TP_NormalG_C::IsPoseBeingUsed' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, StepPhase) == 0x00A608, "Member 'UABP_Human_TP_NormalG_C::StepPhase' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, StepToLeft) == 0x00A60C, "Member 'UABP_Human_TP_NormalG_C::StepToLeft' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, TimeToNextMidContact) == 0x00A610, "Member 'UABP_Human_TP_NormalG_C::TimeToNextMidContact' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, TimeSinceLastMidContact) == 0x00A614, "Member 'UABP_Human_TP_NormalG_C::TimeSinceLastMidContact' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, LongJump) == 0x00A618, "Member 'UABP_Human_TP_NormalG_C::LongJump' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, MeasuredVelocity) == 0x00A61C, "Member 'UABP_Human_TP_NormalG_C::MeasuredVelocity' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, MeasuredAcceleration) == 0x00A628, "Member 'UABP_Human_TP_NormalG_C::MeasuredAcceleration' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, ContactProjectionCM) == 0x00A634, "Member 'UABP_Human_TP_NormalG_C::ContactProjectionCM' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, ContactProjectionVector) == 0x00A640, "Member 'UABP_Human_TP_NormalG_C::ContactProjectionVector' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, SyncMarkersAreValid) == 0x00A64C, "Member 'UABP_Human_TP_NormalG_C::SyncMarkersAreValid' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, DeltaT) == 0x00A650, "Member 'UABP_Human_TP_NormalG_C::DeltaT' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, ToeBoneToSole) == 0x00A654, "Member 'UABP_Human_TP_NormalG_C::ToeBoneToSole' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, LocomotionSpeed) == 0x00A660, "Member 'UABP_Human_TP_NormalG_C::LocomotionSpeed' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, WasTraversing) == 0x00A664, "Member 'UABP_Human_TP_NormalG_C::WasTraversing' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, IsVault_) == 0x00A665, "Member 'UABP_Human_TP_NormalG_C::IsVault_' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, InitialTraversalHeight) == 0x00A668, "Member 'UABP_Human_TP_NormalG_C::InitialTraversalHeight' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, RemainingTraversalHeight) == 0x00A66C, "Member 'UABP_Human_TP_NormalG_C::RemainingTraversalHeight' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, RemainingTraversalTime) == 0x00A670, "Member 'UABP_Human_TP_NormalG_C::RemainingTraversalTime' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, RemainingTraversalAnimTime) == 0x00A674, "Member 'UABP_Human_TP_NormalG_C::RemainingTraversalAnimTime' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, TraversalPlayRate) == 0x00A678, "Member 'UABP_Human_TP_NormalG_C::TraversalPlayRate' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, TraversalDirection) == 0x00A67C, "Member 'UABP_Human_TP_NormalG_C::TraversalDirection' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AimHeading) == 0x00A688, "Member 'UABP_Human_TP_NormalG_C::AimHeading' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, SlidingLoopAudioOn) == 0x00A68C, "Member 'UABP_Human_TP_NormalG_C::SlidingLoopAudioOn' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, SlopeRotator) == 0x00A690, "Member 'UABP_Human_TP_NormalG_C::SlopeRotator' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, LeanRotator) == 0x00A69C, "Member 'UABP_Human_TP_NormalG_C::LeanRotator' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, LocallySmoothedAcceleration) == 0x00A6A8, "Member 'UABP_Human_TP_NormalG_C::LocallySmoothedAcceleration' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, Slow_Fast_Blend) == 0x00A6B4, "Member 'UABP_Human_TP_NormalG_C::Slow_Fast_Blend' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, LastValidSlideHeading) == 0x00A6B8, "Member 'UABP_Human_TP_NormalG_C::LastValidSlideHeading' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, StrafeAngle) == 0x00A6BC, "Member 'UABP_Human_TP_NormalG_C::StrafeAngle' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, StartStrength) == 0x00A6C0, "Member 'UABP_Human_TP_NormalG_C::StartStrength' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, D_MoveYaw) == 0x00A6C4, "Member 'UABP_Human_TP_NormalG_C::D_MoveYaw' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, D_MovePitch) == 0x00A6C8, "Member 'UABP_Human_TP_NormalG_C::D_MovePitch' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, IsSprinting) == 0x00A6CC, "Member 'UABP_Human_TP_NormalG_C::IsSprinting' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, IsServer) == 0x00A6CD, "Member 'UABP_Human_TP_NormalG_C::IsServer' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, FidgetTimer) == 0x00A6D0, "Member 'UABP_Human_TP_NormalG_C::FidgetTimer' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, FidgetCurrentAnim) == 0x00A6D8, "Member 'UABP_Human_TP_NormalG_C::FidgetCurrentAnim' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, FidgetTestAnim) == 0x00A6E0, "Member 'UABP_Human_TP_NormalG_C::FidgetTestAnim' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, FidgetAlpha) == 0x00A6E8, "Member 'UABP_Human_TP_NormalG_C::FidgetAlpha' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, IsStopping) == 0x00A6EC, "Member 'UABP_Human_TP_NormalG_C::IsStopping' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, CAChar_MainPlayer) == 0x00A6F0, "Member 'UABP_Human_TP_NormalG_C::CAChar_MainPlayer' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, IsStoppingDelayer) == 0x00A6F8, "Member 'UABP_Human_TP_NormalG_C::IsStoppingDelayer' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, IsStoppingInput) == 0x00A6FC, "Member 'UABP_Human_TP_NormalG_C::IsStoppingInput' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, PrevDevicePose) == 0x00A700, "Member 'UABP_Human_TP_NormalG_C::PrevDevicePose' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, PrevPoseAlpha) == 0x00A70C, "Member 'UABP_Human_TP_NormalG_C::PrevPoseAlpha' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, NextContactValid) == 0x00A710, "Member 'UABP_Human_TP_NormalG_C::NextContactValid' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, SlideAngle) == 0x00A714, "Member 'UABP_Human_TP_NormalG_C::SlideAngle' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, SavedSnapshotOffset) == 0x00A718, "Member 'UABP_Human_TP_NormalG_C::SavedSnapshotOffset' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, LandRequired) == 0x00A724, "Member 'UABP_Human_TP_NormalG_C::LandRequired' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, GroundToZeroGBlend) == 0x00A728, "Member 'UABP_Human_TP_NormalG_C::GroundToZeroGBlend' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, LandingGroundFrame) == 0x00A730, "Member 'UABP_Human_TP_NormalG_C::LandingGroundFrame' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, TakeoffGroundFrame) == 0x00A760, "Member 'UABP_Human_TP_NormalG_C::TakeoffGroundFrame' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, TakeOffMeshPos) == 0x00A790, "Member 'UABP_Human_TP_NormalG_C::TakeOffMeshPos' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, MeshPosition) == 0x00A794, "Member 'UABP_Human_TP_NormalG_C::MeshPosition' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, CACharAnimComp) == 0x00A798, "Member 'UABP_Human_TP_NormalG_C::CACharAnimComp' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, SlopeSampleVector) == 0x00A7A0, "Member 'UABP_Human_TP_NormalG_C::SlopeSampleVector' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, GroundForwardSample) == 0x00A7AC, "Member 'UABP_Human_TP_NormalG_C::GroundForwardSample' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, Prev_Values) == 0x00A7B8, "Member 'UABP_Human_TP_NormalG_C::Prev_Values' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, FidgetLookDir) == 0x00A7C8, "Member 'UABP_Human_TP_NormalG_C::FidgetLookDir' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, DEBUG_lastFootstepTime) == 0x00A7D4, "Member 'UABP_Human_TP_NormalG_C::DEBUG_lastFootstepTime' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, DebugCols) == 0x00A7D8, "Member 'UABP_Human_TP_NormalG_C::DebugCols' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, Movement_Mode) == 0x00A7E8, "Member 'UABP_Human_TP_NormalG_C::Movement_Mode' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, Movement_Meta_Mode) == 0x00A7E9, "Member 'UABP_Human_TP_NormalG_C::Movement_Meta_Mode' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, PrevWeaponPoseSnapshot) == 0x00A7F0, "Member 'UABP_Human_TP_NormalG_C::PrevWeaponPoseSnapshot' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, InjuredBodySmooth) == 0x00A830, "Member 'UABP_Human_TP_NormalG_C::InjuredBodySmooth' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, SprintSpeedMod) == 0x00A834, "Member 'UABP_Human_TP_NormalG_C::SprintSpeedMod' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, JogSpeedMod) == 0x00A838, "Member 'UABP_Human_TP_NormalG_C::JogSpeedMod' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, Equipment_Component) == 0x00A840, "Member 'UABP_Human_TP_NormalG_C::Equipment_Component' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, LocoHeading) == 0x00B338, "Member 'UABP_Human_TP_NormalG_C::LocoHeading' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, StrafeAngleTest) == 0x00B33C, "Member 'UABP_Human_TP_NormalG_C::StrafeAngleTest' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, StrafeCurve) == 0x00B340, "Member 'UABP_Human_TP_NormalG_C::StrafeCurve' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, NormalGLoco) == 0x00B348, "Member 'UABP_Human_TP_NormalG_C::NormalGLoco' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, MagBootLoco) == 0x00B350, "Member 'UABP_Human_TP_NormalG_C::MagBootLoco' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, CrouchLoco) == 0x00B358, "Member 'UABP_Human_TP_NormalG_C::CrouchLoco' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, On) == 0x00B360, "Member 'UABP_Human_TP_NormalG_C::On' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, StoppingVelocityLocal) == 0x00B370, "Member 'UABP_Human_TP_NormalG_C::StoppingVelocityLocal' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, EffortStrengthX) == 0x00B37C, "Member 'UABP_Human_TP_NormalG_C::EffortStrengthX' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, TpTurningThresholdRight) == 0x00B380, "Member 'UABP_Human_TP_NormalG_C::TpTurningThresholdRight' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, TpTurningThresholdLeft) == 0x00B384, "Member 'UABP_Human_TP_NormalG_C::TpTurningThresholdLeft' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, PlayerInput) == 0x00B388, "Member 'UABP_Human_TP_NormalG_C::PlayerInput' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, StartToSprintAnimTimeThreshold) == 0x00B394, "Member 'UABP_Human_TP_NormalG_C::StartToSprintAnimTimeThreshold' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, Stopping_Locomotion_Speed) == 0x00B398, "Member 'UABP_Human_TP_NormalG_C::Stopping_Locomotion_Speed' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, Stopping_Strafe_Angle) == 0x00B39C, "Member 'UABP_Human_TP_NormalG_C::Stopping_Strafe_Angle' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, PlayerInputSmoothed) == 0x00B3A0, "Member 'UABP_Human_TP_NormalG_C::PlayerInputSmoothed' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, PlayerInputSpeed) == 0x00B3AC, "Member 'UABP_Human_TP_NormalG_C::PlayerInputSpeed' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, UseMagbootLoco) == 0x00B3B0, "Member 'UABP_Human_TP_NormalG_C::UseMagbootLoco' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, Parent_HumanTPAnimGraph) == 0x00B3B8, "Member 'UABP_Human_TP_NormalG_C::Parent_HumanTPAnimGraph' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, CapsuleHalfHeight) == 0x00B3C0, "Member 'UABP_Human_TP_NormalG_C::CapsuleHalfHeight' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, AdsIdleAnimStrengthMultiplier) == 0x00B3C4, "Member 'UABP_Human_TP_NormalG_C::AdsIdleAnimStrengthMultiplier' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_NormalG_C, IdleHipRotationMultiplier) == 0x00B3C8, "Member 'UABP_Human_TP_NormalG_C::IdleHipRotationMultiplier' has a wrong offset!");

}

