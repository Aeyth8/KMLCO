#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GadgetBox

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Keaton_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_GadgetBox.BP_GadgetBox_C
// 0x00A8 (0x03E8 - 0x0340)
class ABP_GadgetBox_C : public ACAActorWithAbilities
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0340(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBPC_DropSpawnerBase_C*                 BPC_DropSpawnerBase;                               // 0x0348(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCACollisionComponent*                  ResetOverlap;                                      // 0x0350(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCACollisionComponent*                  Proximity;                                         // 0x0358(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBPC_UseableGadgetBox_C*                BPC_UseableGadgetBox;                              // 0x0360(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh;                                        // 0x0368(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0370(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            OpenStaticMesh;                                    // 0x0378(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsOpen;                                            // 0x0380(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor)
	uint8                                         Pad_381[0x3];                                      // 0x0381(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Highlight_Name;                                    // 0x0384(0x000C)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Item_Amount;                                       // 0x0390(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_394[0x4];                                      // 0x0394(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            ClosedStaticMesh;                                  // 0x0398(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Reset_Delay;                                       // 0x03A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A4[0x4];                                      // 0x03A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ACAPickUp*>                      SpawnedItems;                                      // 0x03A8(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	bool                                          ItemSpawned;                                       // 0x03B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B9[0x3];                                      // 0x03B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Throw_Cone_Max_Half_Angle;                         // 0x03BC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Angle_Between_Directions;                          // 0x03C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Upwards_Inclination;                               // 0x03C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Throw_Velocity;                                    // 0x03C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3CC[0x4];                                      // 0x03CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 Pickup_Carrier_Class;                              // 0x03D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Offset;                                            // 0x03D8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldReset;                                       // 0x03E4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          UseRightVector;                                    // 0x03E5(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BP_GadgetBox(int32 EntryPoint);
	void BndEvt__ResetOverlap_K2Node_ComponentBoundEvent_1_SceneComponentEndOverlapSignature__DelegateSignature(class USceneComponent* OverlappedComponent, class AActor* OtherActor, class USceneComponent* OtherComp, int32 OtherBodyIndex);
	void Reset();
	void On_Interaction_Ability_Used();
	void ReceiveBeginPlay();
	void OnRep_IsOpen();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_GadgetBox_C">();
	}
	static class ABP_GadgetBox_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_GadgetBox_C>();
	}
};
static_assert(alignof(ABP_GadgetBox_C) == 0x000008, "Wrong alignment on ABP_GadgetBox_C");
static_assert(sizeof(ABP_GadgetBox_C) == 0x0003E8, "Wrong size on ABP_GadgetBox_C");
static_assert(offsetof(ABP_GadgetBox_C, UberGraphFrame) == 0x000340, "Member 'ABP_GadgetBox_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_GadgetBox_C, BPC_DropSpawnerBase) == 0x000348, "Member 'ABP_GadgetBox_C::BPC_DropSpawnerBase' has a wrong offset!");
static_assert(offsetof(ABP_GadgetBox_C, ResetOverlap) == 0x000350, "Member 'ABP_GadgetBox_C::ResetOverlap' has a wrong offset!");
static_assert(offsetof(ABP_GadgetBox_C, Proximity) == 0x000358, "Member 'ABP_GadgetBox_C::Proximity' has a wrong offset!");
static_assert(offsetof(ABP_GadgetBox_C, BPC_UseableGadgetBox) == 0x000360, "Member 'ABP_GadgetBox_C::BPC_UseableGadgetBox' has a wrong offset!");
static_assert(offsetof(ABP_GadgetBox_C, StaticMesh) == 0x000368, "Member 'ABP_GadgetBox_C::StaticMesh' has a wrong offset!");
static_assert(offsetof(ABP_GadgetBox_C, DefaultSceneRoot) == 0x000370, "Member 'ABP_GadgetBox_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_GadgetBox_C, OpenStaticMesh) == 0x000378, "Member 'ABP_GadgetBox_C::OpenStaticMesh' has a wrong offset!");
static_assert(offsetof(ABP_GadgetBox_C, IsOpen) == 0x000380, "Member 'ABP_GadgetBox_C::IsOpen' has a wrong offset!");
static_assert(offsetof(ABP_GadgetBox_C, Highlight_Name) == 0x000384, "Member 'ABP_GadgetBox_C::Highlight_Name' has a wrong offset!");
static_assert(offsetof(ABP_GadgetBox_C, Item_Amount) == 0x000390, "Member 'ABP_GadgetBox_C::Item_Amount' has a wrong offset!");
static_assert(offsetof(ABP_GadgetBox_C, ClosedStaticMesh) == 0x000398, "Member 'ABP_GadgetBox_C::ClosedStaticMesh' has a wrong offset!");
static_assert(offsetof(ABP_GadgetBox_C, Reset_Delay) == 0x0003A0, "Member 'ABP_GadgetBox_C::Reset_Delay' has a wrong offset!");
static_assert(offsetof(ABP_GadgetBox_C, SpawnedItems) == 0x0003A8, "Member 'ABP_GadgetBox_C::SpawnedItems' has a wrong offset!");
static_assert(offsetof(ABP_GadgetBox_C, ItemSpawned) == 0x0003B8, "Member 'ABP_GadgetBox_C::ItemSpawned' has a wrong offset!");
static_assert(offsetof(ABP_GadgetBox_C, Throw_Cone_Max_Half_Angle) == 0x0003BC, "Member 'ABP_GadgetBox_C::Throw_Cone_Max_Half_Angle' has a wrong offset!");
static_assert(offsetof(ABP_GadgetBox_C, Angle_Between_Directions) == 0x0003C0, "Member 'ABP_GadgetBox_C::Angle_Between_Directions' has a wrong offset!");
static_assert(offsetof(ABP_GadgetBox_C, Upwards_Inclination) == 0x0003C4, "Member 'ABP_GadgetBox_C::Upwards_Inclination' has a wrong offset!");
static_assert(offsetof(ABP_GadgetBox_C, Throw_Velocity) == 0x0003C8, "Member 'ABP_GadgetBox_C::Throw_Velocity' has a wrong offset!");
static_assert(offsetof(ABP_GadgetBox_C, Pickup_Carrier_Class) == 0x0003D0, "Member 'ABP_GadgetBox_C::Pickup_Carrier_Class' has a wrong offset!");
static_assert(offsetof(ABP_GadgetBox_C, Offset) == 0x0003D8, "Member 'ABP_GadgetBox_C::Offset' has a wrong offset!");
static_assert(offsetof(ABP_GadgetBox_C, ShouldReset) == 0x0003E4, "Member 'ABP_GadgetBox_C::ShouldReset' has a wrong offset!");
static_assert(offsetof(ABP_GadgetBox_C, UseRightVector) == 0x0003E5, "Member 'ABP_GadgetBox_C::UseRightVector' has a wrong offset!");

}

