#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: StartUp_EpilepsyWarning_FlowState

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Keaton_structs.hpp"
#include "Keaton_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass StartUp_EpilepsyWarning_FlowState.Startup_EpilepsyWarning_FlowState_C
// 0x0090 (0x0180 - 0x00F0)
class UStartup_EpilepsyWarning_FlowState_C final : public UCAFlowStateLogic
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00F0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	bool                                          Is_erroring;                                       // 0x00F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCAScreenRequest                       Screen_request;                                    // 0x0100(0x0080)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_Startup_EpilepsyWarning_FlowState(int32 EntryPoint);
	void OnEnterState();
	void OnExitState();
	void OnAlreadyShowing_8CA21E234055249D87F268A4FC517CED(class UCABaseScreen* Screen, class UCAViewMediator* Mediator);
	void OnShowing_8CA21E234055249D87F268A4FC517CED(class UCABaseScreen* Screen, class UCAViewMediator* Mediator);
	void OnMediatorReady_8CA21E234055249D87F268A4FC517CED(class UCABaseScreen* Screen, class UCAViewMediator* Mediator);
	void OnError_8CA21E234055249D87F268A4FC517CED(class UCABaseScreen* Screen, class UCAViewMediator* Mediator);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Startup_EpilepsyWarning_FlowState_C">();
	}
	static class UStartup_EpilepsyWarning_FlowState_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UStartup_EpilepsyWarning_FlowState_C>();
	}
};
static_assert(alignof(UStartup_EpilepsyWarning_FlowState_C) == 0x000008, "Wrong alignment on UStartup_EpilepsyWarning_FlowState_C");
static_assert(sizeof(UStartup_EpilepsyWarning_FlowState_C) == 0x000180, "Wrong size on UStartup_EpilepsyWarning_FlowState_C");
static_assert(offsetof(UStartup_EpilepsyWarning_FlowState_C, UberGraphFrame) == 0x0000F0, "Member 'UStartup_EpilepsyWarning_FlowState_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UStartup_EpilepsyWarning_FlowState_C, Is_erroring) == 0x0000F8, "Member 'UStartup_EpilepsyWarning_FlowState_C::Is_erroring' has a wrong offset!");
static_assert(offsetof(UStartup_EpilepsyWarning_FlowState_C, Screen_request) == 0x000100, "Member 'UStartup_EpilepsyWarning_FlowState_C::Screen_request' has a wrong offset!");

}

