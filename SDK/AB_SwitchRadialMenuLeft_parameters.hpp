#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AB_SwitchRadialMenuLeft

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function AB_SwitchRadialMenuLeft.AB_SwitchRadialMenuLeft_C.ExecuteUbergraph_AB_SwitchRadialMenuLeft
// 0x01A0 (0x01A0 - 0x0000)
struct AB_SwitchRadialMenuLeft_C_ExecuteUbergraph_AB_SwitchRadialMenuLeft final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventData                     K2Node_CustomEvent_Payload;                        // 0x0008(0x00B8)()
	TDelegate<void(const struct FGameplayEventData& Payload)> K2Node_CreateDelegate_OutputDelegate;              // 0x00C0(0x0014)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventData                     Temp_struct_Variable;                              // 0x00D8(0x00B8)()
	class UAbilityTask_WaitGameplayEvent*         CallFunc_WaitGameplayEvent_ReturnValue;            // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AB_SwitchRadialMenuLeft_C_ExecuteUbergraph_AB_SwitchRadialMenuLeft) == 0x000008, "Wrong alignment on AB_SwitchRadialMenuLeft_C_ExecuteUbergraph_AB_SwitchRadialMenuLeft");
static_assert(sizeof(AB_SwitchRadialMenuLeft_C_ExecuteUbergraph_AB_SwitchRadialMenuLeft) == 0x0001A0, "Wrong size on AB_SwitchRadialMenuLeft_C_ExecuteUbergraph_AB_SwitchRadialMenuLeft");
static_assert(offsetof(AB_SwitchRadialMenuLeft_C_ExecuteUbergraph_AB_SwitchRadialMenuLeft, EntryPoint) == 0x000000, "Member 'AB_SwitchRadialMenuLeft_C_ExecuteUbergraph_AB_SwitchRadialMenuLeft::EntryPoint' has a wrong offset!");
static_assert(offsetof(AB_SwitchRadialMenuLeft_C_ExecuteUbergraph_AB_SwitchRadialMenuLeft, K2Node_CustomEvent_Payload) == 0x000008, "Member 'AB_SwitchRadialMenuLeft_C_ExecuteUbergraph_AB_SwitchRadialMenuLeft::K2Node_CustomEvent_Payload' has a wrong offset!");
static_assert(offsetof(AB_SwitchRadialMenuLeft_C_ExecuteUbergraph_AB_SwitchRadialMenuLeft, K2Node_CreateDelegate_OutputDelegate) == 0x0000C0, "Member 'AB_SwitchRadialMenuLeft_C_ExecuteUbergraph_AB_SwitchRadialMenuLeft::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(AB_SwitchRadialMenuLeft_C_ExecuteUbergraph_AB_SwitchRadialMenuLeft, Temp_struct_Variable) == 0x0000D8, "Member 'AB_SwitchRadialMenuLeft_C_ExecuteUbergraph_AB_SwitchRadialMenuLeft::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(AB_SwitchRadialMenuLeft_C_ExecuteUbergraph_AB_SwitchRadialMenuLeft, CallFunc_WaitGameplayEvent_ReturnValue) == 0x000190, "Member 'AB_SwitchRadialMenuLeft_C_ExecuteUbergraph_AB_SwitchRadialMenuLeft::CallFunc_WaitGameplayEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_SwitchRadialMenuLeft_C_ExecuteUbergraph_AB_SwitchRadialMenuLeft, CallFunc_IsValid_ReturnValue) == 0x000198, "Member 'AB_SwitchRadialMenuLeft_C_ExecuteUbergraph_AB_SwitchRadialMenuLeft::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function AB_SwitchRadialMenuLeft.AB_SwitchRadialMenuLeft_C.EventReceived_465BE6084DE98A462A3413BC437DA0AA
// 0x00B8 (0x00B8 - 0x0000)
struct AB_SwitchRadialMenuLeft_C_EventReceived_465BE6084DE98A462A3413BC437DA0AA final
{
public:
	struct FGameplayEventData                     Payload;                                           // 0x0000(0x00B8)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(AB_SwitchRadialMenuLeft_C_EventReceived_465BE6084DE98A462A3413BC437DA0AA) == 0x000008, "Wrong alignment on AB_SwitchRadialMenuLeft_C_EventReceived_465BE6084DE98A462A3413BC437DA0AA");
static_assert(sizeof(AB_SwitchRadialMenuLeft_C_EventReceived_465BE6084DE98A462A3413BC437DA0AA) == 0x0000B8, "Wrong size on AB_SwitchRadialMenuLeft_C_EventReceived_465BE6084DE98A462A3413BC437DA0AA");
static_assert(offsetof(AB_SwitchRadialMenuLeft_C_EventReceived_465BE6084DE98A462A3413BC437DA0AA, Payload) == 0x000000, "Member 'AB_SwitchRadialMenuLeft_C_EventReceived_465BE6084DE98A462A3413BC437DA0AA::Payload' has a wrong offset!");

}

