#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPUI_HUD_InGame_Contract

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function BPUI_HUD_InGame_Contract.BPUI_HUD_InGame_Contract_C.ExecuteUbergraph_BPUI_HUD_InGame_Contract
// 0x0028 (0x0028 - 0x0000)
struct BPUI_HUD_InGame_Contract_C_ExecuteUbergraph_BPUI_HUD_InGame_Contract final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_Event_tag_1;                                // 0x0004(0x000C)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_Event_tag;                                  // 0x0010(0x000C)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_Event_player_pawn;                          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPUI_HUD_InGame_Contract_C_ExecuteUbergraph_BPUI_HUD_InGame_Contract) == 0x000008, "Wrong alignment on BPUI_HUD_InGame_Contract_C_ExecuteUbergraph_BPUI_HUD_InGame_Contract");
static_assert(sizeof(BPUI_HUD_InGame_Contract_C_ExecuteUbergraph_BPUI_HUD_InGame_Contract) == 0x000028, "Wrong size on BPUI_HUD_InGame_Contract_C_ExecuteUbergraph_BPUI_HUD_InGame_Contract");
static_assert(offsetof(BPUI_HUD_InGame_Contract_C_ExecuteUbergraph_BPUI_HUD_InGame_Contract, EntryPoint) == 0x000000, "Member 'BPUI_HUD_InGame_Contract_C_ExecuteUbergraph_BPUI_HUD_InGame_Contract::EntryPoint' has a wrong offset!");
static_assert(offsetof(BPUI_HUD_InGame_Contract_C_ExecuteUbergraph_BPUI_HUD_InGame_Contract, K2Node_Event_tag_1) == 0x000004, "Member 'BPUI_HUD_InGame_Contract_C_ExecuteUbergraph_BPUI_HUD_InGame_Contract::K2Node_Event_tag_1' has a wrong offset!");
static_assert(offsetof(BPUI_HUD_InGame_Contract_C_ExecuteUbergraph_BPUI_HUD_InGame_Contract, K2Node_Event_tag) == 0x000010, "Member 'BPUI_HUD_InGame_Contract_C_ExecuteUbergraph_BPUI_HUD_InGame_Contract::K2Node_Event_tag' has a wrong offset!");
static_assert(offsetof(BPUI_HUD_InGame_Contract_C_ExecuteUbergraph_BPUI_HUD_InGame_Contract, K2Node_Event_player_pawn) == 0x000020, "Member 'BPUI_HUD_InGame_Contract_C_ExecuteUbergraph_BPUI_HUD_InGame_Contract::K2Node_Event_player_pawn' has a wrong offset!");

// Function BPUI_HUD_InGame_Contract.BPUI_HUD_InGame_Contract_C.NotifyPlayerPawnChanged
// 0x0008 (0x0008 - 0x0000)
struct BPUI_HUD_InGame_Contract_C_NotifyPlayerPawnChanged final
{
public:
	class APawn*                                  Player_pawn;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPUI_HUD_InGame_Contract_C_NotifyPlayerPawnChanged) == 0x000008, "Wrong alignment on BPUI_HUD_InGame_Contract_C_NotifyPlayerPawnChanged");
static_assert(sizeof(BPUI_HUD_InGame_Contract_C_NotifyPlayerPawnChanged) == 0x000008, "Wrong size on BPUI_HUD_InGame_Contract_C_NotifyPlayerPawnChanged");
static_assert(offsetof(BPUI_HUD_InGame_Contract_C_NotifyPlayerPawnChanged, Player_pawn) == 0x000000, "Member 'BPUI_HUD_InGame_Contract_C_NotifyPlayerPawnChanged::Player_pawn' has a wrong offset!");

// Function BPUI_HUD_InGame_Contract.BPUI_HUD_InGame_Contract_C.NotifyTagRemoved
// 0x000C (0x000C - 0x0000)
struct BPUI_HUD_InGame_Contract_C_NotifyTagRemoved final
{
public:
	struct FGameplayTag                           Tag;                                               // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPUI_HUD_InGame_Contract_C_NotifyTagRemoved) == 0x000004, "Wrong alignment on BPUI_HUD_InGame_Contract_C_NotifyTagRemoved");
static_assert(sizeof(BPUI_HUD_InGame_Contract_C_NotifyTagRemoved) == 0x00000C, "Wrong size on BPUI_HUD_InGame_Contract_C_NotifyTagRemoved");
static_assert(offsetof(BPUI_HUD_InGame_Contract_C_NotifyTagRemoved, Tag) == 0x000000, "Member 'BPUI_HUD_InGame_Contract_C_NotifyTagRemoved::Tag' has a wrong offset!");

// Function BPUI_HUD_InGame_Contract.BPUI_HUD_InGame_Contract_C.NotifyTagAdded
// 0x000C (0x000C - 0x0000)
struct BPUI_HUD_InGame_Contract_C_NotifyTagAdded final
{
public:
	struct FGameplayTag                           Tag;                                               // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPUI_HUD_InGame_Contract_C_NotifyTagAdded) == 0x000004, "Wrong alignment on BPUI_HUD_InGame_Contract_C_NotifyTagAdded");
static_assert(sizeof(BPUI_HUD_InGame_Contract_C_NotifyTagAdded) == 0x00000C, "Wrong size on BPUI_HUD_InGame_Contract_C_NotifyTagAdded");
static_assert(offsetof(BPUI_HUD_InGame_Contract_C_NotifyTagAdded, Tag) == 0x000000, "Member 'BPUI_HUD_InGame_Contract_C_NotifyTagAdded::Tag' has a wrong offset!");

}

