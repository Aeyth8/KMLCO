#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPUI_ArcLens_TeammateWidget

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BPUI_ArcLens_TeammateWidget.BPUI_ArcLens_TeammateWidget_C.ExecuteUbergraph_BPUI_ArcLens_TeammateWidget
// 0x0030 (0x0030 - 0x0000)
struct BPUI_ArcLens_TeammateWidget_C_ExecuteUbergraph_BPUI_ArcLens_TeammateWidget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_health;                               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_old_health;                           // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool Is_clamped)>              K2Node_CreateDelegate_OutputDelegate;              // 0x0014(0x0014)(ZeroConstructor, NoDestructor)
	bool                                          K2Node_CustomEvent_is_clamped;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsClamped_ReturnValue;                    // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPUI_ArcLens_TeammateWidget_C_ExecuteUbergraph_BPUI_ArcLens_TeammateWidget) == 0x000004, "Wrong alignment on BPUI_ArcLens_TeammateWidget_C_ExecuteUbergraph_BPUI_ArcLens_TeammateWidget");
static_assert(sizeof(BPUI_ArcLens_TeammateWidget_C_ExecuteUbergraph_BPUI_ArcLens_TeammateWidget) == 0x000030, "Wrong size on BPUI_ArcLens_TeammateWidget_C_ExecuteUbergraph_BPUI_ArcLens_TeammateWidget");
static_assert(offsetof(BPUI_ArcLens_TeammateWidget_C_ExecuteUbergraph_BPUI_ArcLens_TeammateWidget, EntryPoint) == 0x000000, "Member 'BPUI_ArcLens_TeammateWidget_C_ExecuteUbergraph_BPUI_ArcLens_TeammateWidget::EntryPoint' has a wrong offset!");
static_assert(offsetof(BPUI_ArcLens_TeammateWidget_C_ExecuteUbergraph_BPUI_ArcLens_TeammateWidget, Temp_bool_Variable) == 0x000004, "Member 'BPUI_ArcLens_TeammateWidget_C_ExecuteUbergraph_BPUI_ArcLens_TeammateWidget::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BPUI_ArcLens_TeammateWidget_C_ExecuteUbergraph_BPUI_ArcLens_TeammateWidget, Temp_byte_Variable) == 0x000005, "Member 'BPUI_ArcLens_TeammateWidget_C_ExecuteUbergraph_BPUI_ArcLens_TeammateWidget::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPUI_ArcLens_TeammateWidget_C_ExecuteUbergraph_BPUI_ArcLens_TeammateWidget, Temp_byte_Variable_1) == 0x000006, "Member 'BPUI_ArcLens_TeammateWidget_C_ExecuteUbergraph_BPUI_ArcLens_TeammateWidget::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BPUI_ArcLens_TeammateWidget_C_ExecuteUbergraph_BPUI_ArcLens_TeammateWidget, Temp_bool_Variable_1) == 0x000007, "Member 'BPUI_ArcLens_TeammateWidget_C_ExecuteUbergraph_BPUI_ArcLens_TeammateWidget::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BPUI_ArcLens_TeammateWidget_C_ExecuteUbergraph_BPUI_ArcLens_TeammateWidget, Temp_byte_Variable_2) == 0x000008, "Member 'BPUI_ArcLens_TeammateWidget_C_ExecuteUbergraph_BPUI_ArcLens_TeammateWidget::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BPUI_ArcLens_TeammateWidget_C_ExecuteUbergraph_BPUI_ArcLens_TeammateWidget, Temp_byte_Variable_3) == 0x000009, "Member 'BPUI_ArcLens_TeammateWidget_C_ExecuteUbergraph_BPUI_ArcLens_TeammateWidget::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BPUI_ArcLens_TeammateWidget_C_ExecuteUbergraph_BPUI_ArcLens_TeammateWidget, K2Node_Event_health) == 0x00000C, "Member 'BPUI_ArcLens_TeammateWidget_C_ExecuteUbergraph_BPUI_ArcLens_TeammateWidget::K2Node_Event_health' has a wrong offset!");
static_assert(offsetof(BPUI_ArcLens_TeammateWidget_C_ExecuteUbergraph_BPUI_ArcLens_TeammateWidget, K2Node_Event_old_health) == 0x000010, "Member 'BPUI_ArcLens_TeammateWidget_C_ExecuteUbergraph_BPUI_ArcLens_TeammateWidget::K2Node_Event_old_health' has a wrong offset!");
static_assert(offsetof(BPUI_ArcLens_TeammateWidget_C_ExecuteUbergraph_BPUI_ArcLens_TeammateWidget, K2Node_CreateDelegate_OutputDelegate) == 0x000014, "Member 'BPUI_ArcLens_TeammateWidget_C_ExecuteUbergraph_BPUI_ArcLens_TeammateWidget::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BPUI_ArcLens_TeammateWidget_C_ExecuteUbergraph_BPUI_ArcLens_TeammateWidget, K2Node_CustomEvent_is_clamped) == 0x000028, "Member 'BPUI_ArcLens_TeammateWidget_C_ExecuteUbergraph_BPUI_ArcLens_TeammateWidget::K2Node_CustomEvent_is_clamped' has a wrong offset!");
static_assert(offsetof(BPUI_ArcLens_TeammateWidget_C_ExecuteUbergraph_BPUI_ArcLens_TeammateWidget, CallFunc_Not_PreBool_ReturnValue) == 0x000029, "Member 'BPUI_ArcLens_TeammateWidget_C_ExecuteUbergraph_BPUI_ArcLens_TeammateWidget::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPUI_ArcLens_TeammateWidget_C_ExecuteUbergraph_BPUI_ArcLens_TeammateWidget, CallFunc_IsClamped_ReturnValue) == 0x00002A, "Member 'BPUI_ArcLens_TeammateWidget_C_ExecuteUbergraph_BPUI_ArcLens_TeammateWidget::CallFunc_IsClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPUI_ArcLens_TeammateWidget_C_ExecuteUbergraph_BPUI_ArcLens_TeammateWidget, CallFunc_Not_PreBool_ReturnValue_1) == 0x00002B, "Member 'BPUI_ArcLens_TeammateWidget_C_ExecuteUbergraph_BPUI_ArcLens_TeammateWidget::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPUI_ArcLens_TeammateWidget_C_ExecuteUbergraph_BPUI_ArcLens_TeammateWidget, K2Node_Select_Default) == 0x00002C, "Member 'BPUI_ArcLens_TeammateWidget_C_ExecuteUbergraph_BPUI_ArcLens_TeammateWidget::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BPUI_ArcLens_TeammateWidget_C_ExecuteUbergraph_BPUI_ArcLens_TeammateWidget, K2Node_Select_Default_1) == 0x00002D, "Member 'BPUI_ArcLens_TeammateWidget_C_ExecuteUbergraph_BPUI_ArcLens_TeammateWidget::K2Node_Select_Default_1' has a wrong offset!");

// Function BPUI_ArcLens_TeammateWidget.BPUI_ArcLens_TeammateWidget_C.OnClampChanged
// 0x0001 (0x0001 - 0x0000)
struct BPUI_ArcLens_TeammateWidget_C_OnClampChanged final
{
public:
	bool                                          Is_clamped;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPUI_ArcLens_TeammateWidget_C_OnClampChanged) == 0x000001, "Wrong alignment on BPUI_ArcLens_TeammateWidget_C_OnClampChanged");
static_assert(sizeof(BPUI_ArcLens_TeammateWidget_C_OnClampChanged) == 0x000001, "Wrong size on BPUI_ArcLens_TeammateWidget_C_OnClampChanged");
static_assert(offsetof(BPUI_ArcLens_TeammateWidget_C_OnClampChanged, Is_clamped) == 0x000000, "Member 'BPUI_ArcLens_TeammateWidget_C_OnClampChanged::Is_clamped' has a wrong offset!");

// Function BPUI_ArcLens_TeammateWidget.BPUI_ArcLens_TeammateWidget_C.OnHealthChanged
// 0x0008 (0x0008 - 0x0000)
struct BPUI_ArcLens_TeammateWidget_C_OnHealthChanged final
{
public:
	float                                         Health;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Old_health;                                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPUI_ArcLens_TeammateWidget_C_OnHealthChanged) == 0x000004, "Wrong alignment on BPUI_ArcLens_TeammateWidget_C_OnHealthChanged");
static_assert(sizeof(BPUI_ArcLens_TeammateWidget_C_OnHealthChanged) == 0x000008, "Wrong size on BPUI_ArcLens_TeammateWidget_C_OnHealthChanged");
static_assert(offsetof(BPUI_ArcLens_TeammateWidget_C_OnHealthChanged, Health) == 0x000000, "Member 'BPUI_ArcLens_TeammateWidget_C_OnHealthChanged::Health' has a wrong offset!");
static_assert(offsetof(BPUI_ArcLens_TeammateWidget_C_OnHealthChanged, Old_health) == 0x000004, "Member 'BPUI_ArcLens_TeammateWidget_C_OnHealthChanged::Old_health' has a wrong offset!");

// Function BPUI_ArcLens_TeammateWidget.BPUI_ArcLens_TeammateWidget_C.OnPlayerColorChanged
// 0x0010 (0x0010 - 0x0000)
struct BPUI_ArcLens_TeammateWidget_C_OnPlayerColorChanged final
{
public:
	struct FLinearColor                           Player_color;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPUI_ArcLens_TeammateWidget_C_OnPlayerColorChanged) == 0x000004, "Wrong alignment on BPUI_ArcLens_TeammateWidget_C_OnPlayerColorChanged");
static_assert(sizeof(BPUI_ArcLens_TeammateWidget_C_OnPlayerColorChanged) == 0x000010, "Wrong size on BPUI_ArcLens_TeammateWidget_C_OnPlayerColorChanged");
static_assert(offsetof(BPUI_ArcLens_TeammateWidget_C_OnPlayerColorChanged, Player_color) == 0x000000, "Member 'BPUI_ArcLens_TeammateWidget_C_OnPlayerColorChanged::Player_color' has a wrong offset!");

}

