#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AB_Player_ManagedBase

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function AB_Player_ManagedBase.AB_Player_ManagedBase_C.ExecuteUbergraph_AB_Player_ManagedBase
// 0x0508 (0x0508 - 0x0000)
struct AB_Player_ManagedBase_C_ExecuteUbergraph_AB_Player_ManagedBase final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventData                     K2Node_CustomEvent_Payload_1;                      // 0x0008(0x00B8)()
	struct FGameplayEventData                     Temp_struct_Variable;                              // 0x00C0(0x00B8)()
	TDelegate<void(const struct FGameplayEventData& Payload)> K2Node_CreateDelegate_OutputDelegate;              // 0x0178(0x0014)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_18C[0x4];                                      // 0x018C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventData                     K2Node_CustomEvent_Payload;                        // 0x0190(0x00B8)()
	struct FGameplayEventData                     Temp_struct_Variable_1;                            // 0x0248(0x00B8)()
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0300(0x0014)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0314(0x0014)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x0328(0x0014)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_4;            // 0x033C(0x0014)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_5;            // 0x0350(0x0014)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_K2_CommitAbility_ReturnValue;             // 0x0364(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_365[0x3];                                      // 0x0365(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_get_end_ability_tag_ReturnValue;          // 0x0368(0x000C)(ConstParm, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_374[0x4];                                      // 0x0374(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventData                     K2Node_Event_EventData;                            // 0x0378(0x00B8)(ConstParm)
	class UAbilityTask_WaitGameplayEvent*         CallFunc_WaitGameplayEvent_ReturnValue;            // 0x0430(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0438(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMovementAbility_ReturnValue;            // 0x0439(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_43A[0x2];                                      // 0x043A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_get_commit_ability_tag_ReturnValue;       // 0x043C(0x000C)(ConstParm, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FGameplayEventData& Payload)> K2Node_CreateDelegate_OutputDelegate_6;            // 0x0448(0x0014)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_45C[0x4];                                      // 0x045C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilityTask_WaitGameplayEvent*         CallFunc_WaitGameplayEvent_ReturnValue_1;          // 0x0460(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0468(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_CommitAbility_ReturnValue_1;           // 0x0469(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_StopWhenAbilityEnds;            // 0x046A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_46B[0x5];                                      // 0x046B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayAbilityActorInfo              CallFunc_GetActorInfo_ReturnValue;                 // 0x0470(0x0050)(ContainsInstancedReference)
	class ACACharacter*                           K2Node_DynamicCast_AsCACharacter;                  // 0x04C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x04C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4C9[0x7];                                      // 0x04C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACAEquipmentBase*                       CallFunc_GetCurrentlyHeldDevice_ReturnValue;       // 0x04D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x04D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D9[0x7];                                      // 0x04D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACAWeapon*                              K2Node_DynamicCast_AsCAWeapon;                     // 0x04E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x04E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4E9[0x7];                                      // 0x04E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc_GetCharacterEquipAnim_ReturnValue;        // 0x04F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAbilityTask_PlayMontageAndWait*        CallFunc_CreatePlayMontageAndWaitProxy_ReturnValue; // 0x04F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0500(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AB_Player_ManagedBase_C_ExecuteUbergraph_AB_Player_ManagedBase) == 0x000008, "Wrong alignment on AB_Player_ManagedBase_C_ExecuteUbergraph_AB_Player_ManagedBase");
static_assert(sizeof(AB_Player_ManagedBase_C_ExecuteUbergraph_AB_Player_ManagedBase) == 0x000508, "Wrong size on AB_Player_ManagedBase_C_ExecuteUbergraph_AB_Player_ManagedBase");
static_assert(offsetof(AB_Player_ManagedBase_C_ExecuteUbergraph_AB_Player_ManagedBase, EntryPoint) == 0x000000, "Member 'AB_Player_ManagedBase_C_ExecuteUbergraph_AB_Player_ManagedBase::EntryPoint' has a wrong offset!");
static_assert(offsetof(AB_Player_ManagedBase_C_ExecuteUbergraph_AB_Player_ManagedBase, K2Node_CustomEvent_Payload_1) == 0x000008, "Member 'AB_Player_ManagedBase_C_ExecuteUbergraph_AB_Player_ManagedBase::K2Node_CustomEvent_Payload_1' has a wrong offset!");
static_assert(offsetof(AB_Player_ManagedBase_C_ExecuteUbergraph_AB_Player_ManagedBase, Temp_struct_Variable) == 0x0000C0, "Member 'AB_Player_ManagedBase_C_ExecuteUbergraph_AB_Player_ManagedBase::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(AB_Player_ManagedBase_C_ExecuteUbergraph_AB_Player_ManagedBase, K2Node_CreateDelegate_OutputDelegate) == 0x000178, "Member 'AB_Player_ManagedBase_C_ExecuteUbergraph_AB_Player_ManagedBase::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(AB_Player_ManagedBase_C_ExecuteUbergraph_AB_Player_ManagedBase, K2Node_CustomEvent_Payload) == 0x000190, "Member 'AB_Player_ManagedBase_C_ExecuteUbergraph_AB_Player_ManagedBase::K2Node_CustomEvent_Payload' has a wrong offset!");
static_assert(offsetof(AB_Player_ManagedBase_C_ExecuteUbergraph_AB_Player_ManagedBase, Temp_struct_Variable_1) == 0x000248, "Member 'AB_Player_ManagedBase_C_ExecuteUbergraph_AB_Player_ManagedBase::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(AB_Player_ManagedBase_C_ExecuteUbergraph_AB_Player_ManagedBase, K2Node_CreateDelegate_OutputDelegate_1) == 0x000300, "Member 'AB_Player_ManagedBase_C_ExecuteUbergraph_AB_Player_ManagedBase::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(AB_Player_ManagedBase_C_ExecuteUbergraph_AB_Player_ManagedBase, K2Node_CreateDelegate_OutputDelegate_2) == 0x000314, "Member 'AB_Player_ManagedBase_C_ExecuteUbergraph_AB_Player_ManagedBase::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(AB_Player_ManagedBase_C_ExecuteUbergraph_AB_Player_ManagedBase, K2Node_CreateDelegate_OutputDelegate_3) == 0x000328, "Member 'AB_Player_ManagedBase_C_ExecuteUbergraph_AB_Player_ManagedBase::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(AB_Player_ManagedBase_C_ExecuteUbergraph_AB_Player_ManagedBase, K2Node_CreateDelegate_OutputDelegate_4) == 0x00033C, "Member 'AB_Player_ManagedBase_C_ExecuteUbergraph_AB_Player_ManagedBase::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(AB_Player_ManagedBase_C_ExecuteUbergraph_AB_Player_ManagedBase, K2Node_CreateDelegate_OutputDelegate_5) == 0x000350, "Member 'AB_Player_ManagedBase_C_ExecuteUbergraph_AB_Player_ManagedBase::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(AB_Player_ManagedBase_C_ExecuteUbergraph_AB_Player_ManagedBase, CallFunc_K2_CommitAbility_ReturnValue) == 0x000364, "Member 'AB_Player_ManagedBase_C_ExecuteUbergraph_AB_Player_ManagedBase::CallFunc_K2_CommitAbility_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_Player_ManagedBase_C_ExecuteUbergraph_AB_Player_ManagedBase, CallFunc_get_end_ability_tag_ReturnValue) == 0x000368, "Member 'AB_Player_ManagedBase_C_ExecuteUbergraph_AB_Player_ManagedBase::CallFunc_get_end_ability_tag_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_Player_ManagedBase_C_ExecuteUbergraph_AB_Player_ManagedBase, K2Node_Event_EventData) == 0x000378, "Member 'AB_Player_ManagedBase_C_ExecuteUbergraph_AB_Player_ManagedBase::K2Node_Event_EventData' has a wrong offset!");
static_assert(offsetof(AB_Player_ManagedBase_C_ExecuteUbergraph_AB_Player_ManagedBase, CallFunc_WaitGameplayEvent_ReturnValue) == 0x000430, "Member 'AB_Player_ManagedBase_C_ExecuteUbergraph_AB_Player_ManagedBase::CallFunc_WaitGameplayEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_Player_ManagedBase_C_ExecuteUbergraph_AB_Player_ManagedBase, CallFunc_IsValid_ReturnValue) == 0x000438, "Member 'AB_Player_ManagedBase_C_ExecuteUbergraph_AB_Player_ManagedBase::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_Player_ManagedBase_C_ExecuteUbergraph_AB_Player_ManagedBase, CallFunc_IsMovementAbility_ReturnValue) == 0x000439, "Member 'AB_Player_ManagedBase_C_ExecuteUbergraph_AB_Player_ManagedBase::CallFunc_IsMovementAbility_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_Player_ManagedBase_C_ExecuteUbergraph_AB_Player_ManagedBase, CallFunc_get_commit_ability_tag_ReturnValue) == 0x00043C, "Member 'AB_Player_ManagedBase_C_ExecuteUbergraph_AB_Player_ManagedBase::CallFunc_get_commit_ability_tag_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_Player_ManagedBase_C_ExecuteUbergraph_AB_Player_ManagedBase, K2Node_CreateDelegate_OutputDelegate_6) == 0x000448, "Member 'AB_Player_ManagedBase_C_ExecuteUbergraph_AB_Player_ManagedBase::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(AB_Player_ManagedBase_C_ExecuteUbergraph_AB_Player_ManagedBase, CallFunc_WaitGameplayEvent_ReturnValue_1) == 0x000460, "Member 'AB_Player_ManagedBase_C_ExecuteUbergraph_AB_Player_ManagedBase::CallFunc_WaitGameplayEvent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AB_Player_ManagedBase_C_ExecuteUbergraph_AB_Player_ManagedBase, CallFunc_IsValid_ReturnValue_1) == 0x000468, "Member 'AB_Player_ManagedBase_C_ExecuteUbergraph_AB_Player_ManagedBase::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AB_Player_ManagedBase_C_ExecuteUbergraph_AB_Player_ManagedBase, CallFunc_K2_CommitAbility_ReturnValue_1) == 0x000469, "Member 'AB_Player_ManagedBase_C_ExecuteUbergraph_AB_Player_ManagedBase::CallFunc_K2_CommitAbility_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AB_Player_ManagedBase_C_ExecuteUbergraph_AB_Player_ManagedBase, K2Node_CustomEvent_StopWhenAbilityEnds) == 0x00046A, "Member 'AB_Player_ManagedBase_C_ExecuteUbergraph_AB_Player_ManagedBase::K2Node_CustomEvent_StopWhenAbilityEnds' has a wrong offset!");
static_assert(offsetof(AB_Player_ManagedBase_C_ExecuteUbergraph_AB_Player_ManagedBase, CallFunc_GetActorInfo_ReturnValue) == 0x000470, "Member 'AB_Player_ManagedBase_C_ExecuteUbergraph_AB_Player_ManagedBase::CallFunc_GetActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_Player_ManagedBase_C_ExecuteUbergraph_AB_Player_ManagedBase, K2Node_DynamicCast_AsCACharacter) == 0x0004C0, "Member 'AB_Player_ManagedBase_C_ExecuteUbergraph_AB_Player_ManagedBase::K2Node_DynamicCast_AsCACharacter' has a wrong offset!");
static_assert(offsetof(AB_Player_ManagedBase_C_ExecuteUbergraph_AB_Player_ManagedBase, K2Node_DynamicCast_bSuccess) == 0x0004C8, "Member 'AB_Player_ManagedBase_C_ExecuteUbergraph_AB_Player_ManagedBase::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AB_Player_ManagedBase_C_ExecuteUbergraph_AB_Player_ManagedBase, CallFunc_GetCurrentlyHeldDevice_ReturnValue) == 0x0004D0, "Member 'AB_Player_ManagedBase_C_ExecuteUbergraph_AB_Player_ManagedBase::CallFunc_GetCurrentlyHeldDevice_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_Player_ManagedBase_C_ExecuteUbergraph_AB_Player_ManagedBase, CallFunc_IsValid_ReturnValue_2) == 0x0004D8, "Member 'AB_Player_ManagedBase_C_ExecuteUbergraph_AB_Player_ManagedBase::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AB_Player_ManagedBase_C_ExecuteUbergraph_AB_Player_ManagedBase, K2Node_DynamicCast_AsCAWeapon) == 0x0004E0, "Member 'AB_Player_ManagedBase_C_ExecuteUbergraph_AB_Player_ManagedBase::K2Node_DynamicCast_AsCAWeapon' has a wrong offset!");
static_assert(offsetof(AB_Player_ManagedBase_C_ExecuteUbergraph_AB_Player_ManagedBase, K2Node_DynamicCast_bSuccess_1) == 0x0004E8, "Member 'AB_Player_ManagedBase_C_ExecuteUbergraph_AB_Player_ManagedBase::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(AB_Player_ManagedBase_C_ExecuteUbergraph_AB_Player_ManagedBase, CallFunc_GetCharacterEquipAnim_ReturnValue) == 0x0004F0, "Member 'AB_Player_ManagedBase_C_ExecuteUbergraph_AB_Player_ManagedBase::CallFunc_GetCharacterEquipAnim_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_Player_ManagedBase_C_ExecuteUbergraph_AB_Player_ManagedBase, CallFunc_CreatePlayMontageAndWaitProxy_ReturnValue) == 0x0004F8, "Member 'AB_Player_ManagedBase_C_ExecuteUbergraph_AB_Player_ManagedBase::CallFunc_CreatePlayMontageAndWaitProxy_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_Player_ManagedBase_C_ExecuteUbergraph_AB_Player_ManagedBase, CallFunc_IsValid_ReturnValue_3) == 0x000500, "Member 'AB_Player_ManagedBase_C_ExecuteUbergraph_AB_Player_ManagedBase::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");

// Function AB_Player_ManagedBase.AB_Player_ManagedBase_C.PlayCurrentWeaponEquipAnim
// 0x0001 (0x0001 - 0x0000)
struct AB_Player_ManagedBase_C_PlayCurrentWeaponEquipAnim final
{
public:
	bool                                          StopWhenAbilityEnds;                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AB_Player_ManagedBase_C_PlayCurrentWeaponEquipAnim) == 0x000001, "Wrong alignment on AB_Player_ManagedBase_C_PlayCurrentWeaponEquipAnim");
static_assert(sizeof(AB_Player_ManagedBase_C_PlayCurrentWeaponEquipAnim) == 0x000001, "Wrong size on AB_Player_ManagedBase_C_PlayCurrentWeaponEquipAnim");
static_assert(offsetof(AB_Player_ManagedBase_C_PlayCurrentWeaponEquipAnim, StopWhenAbilityEnds) == 0x000000, "Member 'AB_Player_ManagedBase_C_PlayCurrentWeaponEquipAnim::StopWhenAbilityEnds' has a wrong offset!");

// Function AB_Player_ManagedBase.AB_Player_ManagedBase_C.K2_ActivateAbilityFromEvent
// 0x00B8 (0x00B8 - 0x0000)
struct AB_Player_ManagedBase_C_K2_ActivateAbilityFromEvent final
{
public:
	struct FGameplayEventData                     EventData;                                         // 0x0000(0x00B8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(AB_Player_ManagedBase_C_K2_ActivateAbilityFromEvent) == 0x000008, "Wrong alignment on AB_Player_ManagedBase_C_K2_ActivateAbilityFromEvent");
static_assert(sizeof(AB_Player_ManagedBase_C_K2_ActivateAbilityFromEvent) == 0x0000B8, "Wrong size on AB_Player_ManagedBase_C_K2_ActivateAbilityFromEvent");
static_assert(offsetof(AB_Player_ManagedBase_C_K2_ActivateAbilityFromEvent, EventData) == 0x000000, "Member 'AB_Player_ManagedBase_C_K2_ActivateAbilityFromEvent::EventData' has a wrong offset!");

// Function AB_Player_ManagedBase.AB_Player_ManagedBase_C.EventReceived_C2DC32E344FE1074D6A5F7BC28775170
// 0x00B8 (0x00B8 - 0x0000)
struct AB_Player_ManagedBase_C_EventReceived_C2DC32E344FE1074D6A5F7BC28775170 final
{
public:
	struct FGameplayEventData                     Payload;                                           // 0x0000(0x00B8)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(AB_Player_ManagedBase_C_EventReceived_C2DC32E344FE1074D6A5F7BC28775170) == 0x000008, "Wrong alignment on AB_Player_ManagedBase_C_EventReceived_C2DC32E344FE1074D6A5F7BC28775170");
static_assert(sizeof(AB_Player_ManagedBase_C_EventReceived_C2DC32E344FE1074D6A5F7BC28775170) == 0x0000B8, "Wrong size on AB_Player_ManagedBase_C_EventReceived_C2DC32E344FE1074D6A5F7BC28775170");
static_assert(offsetof(AB_Player_ManagedBase_C_EventReceived_C2DC32E344FE1074D6A5F7BC28775170, Payload) == 0x000000, "Member 'AB_Player_ManagedBase_C_EventReceived_C2DC32E344FE1074D6A5F7BC28775170::Payload' has a wrong offset!");

// Function AB_Player_ManagedBase.AB_Player_ManagedBase_C.EventReceived_6C98CA5C41D6C042F7CD2592EAA46138
// 0x00B8 (0x00B8 - 0x0000)
struct AB_Player_ManagedBase_C_EventReceived_6C98CA5C41D6C042F7CD2592EAA46138 final
{
public:
	struct FGameplayEventData                     Payload;                                           // 0x0000(0x00B8)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(AB_Player_ManagedBase_C_EventReceived_6C98CA5C41D6C042F7CD2592EAA46138) == 0x000008, "Wrong alignment on AB_Player_ManagedBase_C_EventReceived_6C98CA5C41D6C042F7CD2592EAA46138");
static_assert(sizeof(AB_Player_ManagedBase_C_EventReceived_6C98CA5C41D6C042F7CD2592EAA46138) == 0x0000B8, "Wrong size on AB_Player_ManagedBase_C_EventReceived_6C98CA5C41D6C042F7CD2592EAA46138");
static_assert(offsetof(AB_Player_ManagedBase_C_EventReceived_6C98CA5C41D6C042F7CD2592EAA46138, Payload) == 0x000000, "Member 'AB_Player_ManagedBase_C_EventReceived_6C98CA5C41D6C042F7CD2592EAA46138::Payload' has a wrong offset!");

// Function AB_Player_ManagedBase.AB_Player_ManagedBase_C.GetCurrentWeaponEquipAnim
// 0x0090 (0x0090 - 0x0000)
struct AB_Player_ManagedBase_C_GetCurrentWeaponEquipAnim final
{
public:
	class UAnimMontage*                           Equip_Anim;                                        // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayAbilityActorInfo              CallFunc_GetActorInfo_ReturnValue;                 // 0x0008(0x0050)(ContainsInstancedReference)
	class ACACharacter*                           K2Node_DynamicCast_AsCACharacter;                  // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACAEquipmentBase*                       CallFunc_GetCurrentlyHeldDevice_ReturnValue;       // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACAWeapon*                              K2Node_DynamicCast_AsCAWeapon;                     // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc_GetCharacterEquipAnim_ReturnValue;        // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AB_Player_ManagedBase_C_GetCurrentWeaponEquipAnim) == 0x000008, "Wrong alignment on AB_Player_ManagedBase_C_GetCurrentWeaponEquipAnim");
static_assert(sizeof(AB_Player_ManagedBase_C_GetCurrentWeaponEquipAnim) == 0x000090, "Wrong size on AB_Player_ManagedBase_C_GetCurrentWeaponEquipAnim");
static_assert(offsetof(AB_Player_ManagedBase_C_GetCurrentWeaponEquipAnim, Equip_Anim) == 0x000000, "Member 'AB_Player_ManagedBase_C_GetCurrentWeaponEquipAnim::Equip_Anim' has a wrong offset!");
static_assert(offsetof(AB_Player_ManagedBase_C_GetCurrentWeaponEquipAnim, CallFunc_GetActorInfo_ReturnValue) == 0x000008, "Member 'AB_Player_ManagedBase_C_GetCurrentWeaponEquipAnim::CallFunc_GetActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_Player_ManagedBase_C_GetCurrentWeaponEquipAnim, K2Node_DynamicCast_AsCACharacter) == 0x000058, "Member 'AB_Player_ManagedBase_C_GetCurrentWeaponEquipAnim::K2Node_DynamicCast_AsCACharacter' has a wrong offset!");
static_assert(offsetof(AB_Player_ManagedBase_C_GetCurrentWeaponEquipAnim, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'AB_Player_ManagedBase_C_GetCurrentWeaponEquipAnim::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AB_Player_ManagedBase_C_GetCurrentWeaponEquipAnim, CallFunc_GetCurrentlyHeldDevice_ReturnValue) == 0x000068, "Member 'AB_Player_ManagedBase_C_GetCurrentWeaponEquipAnim::CallFunc_GetCurrentlyHeldDevice_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_Player_ManagedBase_C_GetCurrentWeaponEquipAnim, CallFunc_IsValid_ReturnValue) == 0x000070, "Member 'AB_Player_ManagedBase_C_GetCurrentWeaponEquipAnim::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_Player_ManagedBase_C_GetCurrentWeaponEquipAnim, K2Node_DynamicCast_AsCAWeapon) == 0x000078, "Member 'AB_Player_ManagedBase_C_GetCurrentWeaponEquipAnim::K2Node_DynamicCast_AsCAWeapon' has a wrong offset!");
static_assert(offsetof(AB_Player_ManagedBase_C_GetCurrentWeaponEquipAnim, K2Node_DynamicCast_bSuccess_1) == 0x000080, "Member 'AB_Player_ManagedBase_C_GetCurrentWeaponEquipAnim::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(AB_Player_ManagedBase_C_GetCurrentWeaponEquipAnim, CallFunc_GetCharacterEquipAnim_ReturnValue) == 0x000088, "Member 'AB_Player_ManagedBase_C_GetCurrentWeaponEquipAnim::CallFunc_GetCharacterEquipAnim_ReturnValue' has a wrong offset!");

}

