#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_TurretSpecialist_Turret_Hanging

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function ABP_TurretSpecialist_Turret_Hanging.ABP_TurretSpecialist_Turret_Hanging_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct ABP_TurretSpecialist_Turret_Hanging_C_AnimGraph final
{
public:
	struct FPoseLink                              AnimGraph_0;                                       // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABP_TurretSpecialist_Turret_Hanging_C_AnimGraph) == 0x000008, "Wrong alignment on ABP_TurretSpecialist_Turret_Hanging_C_AnimGraph");
static_assert(sizeof(ABP_TurretSpecialist_Turret_Hanging_C_AnimGraph) == 0x000010, "Wrong size on ABP_TurretSpecialist_Turret_Hanging_C_AnimGraph");
static_assert(offsetof(ABP_TurretSpecialist_Turret_Hanging_C_AnimGraph, AnimGraph_0) == 0x000000, "Member 'ABP_TurretSpecialist_Turret_Hanging_C_AnimGraph::AnimGraph_0' has a wrong offset!");

// Function ABP_TurretSpecialist_Turret_Hanging.ABP_TurretSpecialist_Turret_Hanging_C.get_local_aim
// 0x00F8 (0x00F8 - 0x0000)
struct ABP_TurretSpecialist_Turret_Hanging_C_Get_local_aim final
{
public:
	class APawn*                                  Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               LocalAim_0;                                        // 0x0008(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACACharacter_NPC*                       K2Node_DynamicCast_AsCACharacter_NPC;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorUpVector_ReturnValue;             // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetBaseAimRotation_ReturnValue;           // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector_X;                            // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_RotatorToVector_ReturnValue;         // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue;              // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0064(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_RotatorToVector_ReturnValue_1;       // 0x007C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue;           // 0x008C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x009C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegAcos_ReturnValue;                      // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_LessLess_VectorRotator_ReturnValue;       // 0x00AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue_1;            // 0x00BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue_2;            // 0x00C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromX_ReturnValue;                 // 0x00D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue_3;            // 0x00E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromX_ReturnValue_1;               // 0x00EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ABP_TurretSpecialist_Turret_Hanging_C_Get_local_aim) == 0x000008, "Wrong alignment on ABP_TurretSpecialist_Turret_Hanging_C_Get_local_aim");
static_assert(sizeof(ABP_TurretSpecialist_Turret_Hanging_C_Get_local_aim) == 0x0000F8, "Wrong size on ABP_TurretSpecialist_Turret_Hanging_C_Get_local_aim");
static_assert(offsetof(ABP_TurretSpecialist_Turret_Hanging_C_Get_local_aim, Target) == 0x000000, "Member 'ABP_TurretSpecialist_Turret_Hanging_C_Get_local_aim::Target' has a wrong offset!");
static_assert(offsetof(ABP_TurretSpecialist_Turret_Hanging_C_Get_local_aim, LocalAim_0) == 0x000008, "Member 'ABP_TurretSpecialist_Turret_Hanging_C_Get_local_aim::LocalAim_0' has a wrong offset!");
static_assert(offsetof(ABP_TurretSpecialist_Turret_Hanging_C_Get_local_aim, K2Node_DynamicCast_AsCACharacter_NPC) == 0x000018, "Member 'ABP_TurretSpecialist_Turret_Hanging_C_Get_local_aim::K2Node_DynamicCast_AsCACharacter_NPC' has a wrong offset!");
static_assert(offsetof(ABP_TurretSpecialist_Turret_Hanging_C_Get_local_aim, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'ABP_TurretSpecialist_Turret_Hanging_C_Get_local_aim::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ABP_TurretSpecialist_Turret_Hanging_C_Get_local_aim, CallFunc_GetActorUpVector_ReturnValue) == 0x000024, "Member 'ABP_TurretSpecialist_Turret_Hanging_C_Get_local_aim::CallFunc_GetActorUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_TurretSpecialist_Turret_Hanging_C_Get_local_aim, CallFunc_GetBaseAimRotation_ReturnValue) == 0x000030, "Member 'ABP_TurretSpecialist_Turret_Hanging_C_Get_local_aim::CallFunc_GetBaseAimRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_TurretSpecialist_Turret_Hanging_C_Get_local_aim, CallFunc_BreakVector_X) == 0x00003C, "Member 'ABP_TurretSpecialist_Turret_Hanging_C_Get_local_aim::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(ABP_TurretSpecialist_Turret_Hanging_C_Get_local_aim, CallFunc_BreakVector_Y) == 0x000040, "Member 'ABP_TurretSpecialist_Turret_Hanging_C_Get_local_aim::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(ABP_TurretSpecialist_Turret_Hanging_C_Get_local_aim, CallFunc_BreakVector_Z) == 0x000044, "Member 'ABP_TurretSpecialist_Turret_Hanging_C_Get_local_aim::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(ABP_TurretSpecialist_Turret_Hanging_C_Get_local_aim, CallFunc_Conv_RotatorToVector_ReturnValue) == 0x000048, "Member 'ABP_TurretSpecialist_Turret_Hanging_C_Get_local_aim::CallFunc_Conv_RotatorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_TurretSpecialist_Turret_Hanging_C_Get_local_aim, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000054, "Member 'ABP_TurretSpecialist_Turret_Hanging_C_Get_local_aim::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_TurretSpecialist_Turret_Hanging_C_Get_local_aim, CallFunc_RotateAngleAxis_ReturnValue) == 0x000058, "Member 'ABP_TurretSpecialist_Turret_Hanging_C_Get_local_aim::CallFunc_RotateAngleAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_TurretSpecialist_Turret_Hanging_C_Get_local_aim, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000064, "Member 'ABP_TurretSpecialist_Turret_Hanging_C_Get_local_aim::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_TurretSpecialist_Turret_Hanging_C_Get_local_aim, CallFunc_BreakRotator_Roll) == 0x000070, "Member 'ABP_TurretSpecialist_Turret_Hanging_C_Get_local_aim::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(ABP_TurretSpecialist_Turret_Hanging_C_Get_local_aim, CallFunc_BreakRotator_Pitch) == 0x000074, "Member 'ABP_TurretSpecialist_Turret_Hanging_C_Get_local_aim::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(ABP_TurretSpecialist_Turret_Hanging_C_Get_local_aim, CallFunc_BreakRotator_Yaw) == 0x000078, "Member 'ABP_TurretSpecialist_Turret_Hanging_C_Get_local_aim::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(ABP_TurretSpecialist_Turret_Hanging_C_Get_local_aim, CallFunc_Conv_RotatorToVector_ReturnValue_1) == 0x00007C, "Member 'ABP_TurretSpecialist_Turret_Hanging_C_Get_local_aim::CallFunc_Conv_RotatorToVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_TurretSpecialist_Turret_Hanging_C_Get_local_aim, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000088, "Member 'ABP_TurretSpecialist_Turret_Hanging_C_Get_local_aim::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_TurretSpecialist_Turret_Hanging_C_Get_local_aim, CallFunc_Cross_VectorVector_ReturnValue) == 0x00008C, "Member 'ABP_TurretSpecialist_Turret_Hanging_C_Get_local_aim::CallFunc_Cross_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_TurretSpecialist_Turret_Hanging_C_Get_local_aim, CallFunc_Dot_VectorVector_ReturnValue) == 0x000098, "Member 'ABP_TurretSpecialist_Turret_Hanging_C_Get_local_aim::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_TurretSpecialist_Turret_Hanging_C_Get_local_aim, CallFunc_Normal_ReturnValue) == 0x00009C, "Member 'ABP_TurretSpecialist_Turret_Hanging_C_Get_local_aim::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_TurretSpecialist_Turret_Hanging_C_Get_local_aim, CallFunc_DegAcos_ReturnValue) == 0x0000A8, "Member 'ABP_TurretSpecialist_Turret_Hanging_C_Get_local_aim::CallFunc_DegAcos_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_TurretSpecialist_Turret_Hanging_C_Get_local_aim, CallFunc_LessLess_VectorRotator_ReturnValue) == 0x0000AC, "Member 'ABP_TurretSpecialist_Turret_Hanging_C_Get_local_aim::CallFunc_LessLess_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_TurretSpecialist_Turret_Hanging_C_Get_local_aim, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x0000B8, "Member 'ABP_TurretSpecialist_Turret_Hanging_C_Get_local_aim::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_TurretSpecialist_Turret_Hanging_C_Get_local_aim, CallFunc_RotateAngleAxis_ReturnValue_1) == 0x0000BC, "Member 'ABP_TurretSpecialist_Turret_Hanging_C_Get_local_aim::CallFunc_RotateAngleAxis_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_TurretSpecialist_Turret_Hanging_C_Get_local_aim, CallFunc_RotateAngleAxis_ReturnValue_2) == 0x0000C8, "Member 'ABP_TurretSpecialist_Turret_Hanging_C_Get_local_aim::CallFunc_RotateAngleAxis_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_TurretSpecialist_Turret_Hanging_C_Get_local_aim, CallFunc_MakeRotFromX_ReturnValue) == 0x0000D4, "Member 'ABP_TurretSpecialist_Turret_Hanging_C_Get_local_aim::CallFunc_MakeRotFromX_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_TurretSpecialist_Turret_Hanging_C_Get_local_aim, CallFunc_RotateAngleAxis_ReturnValue_3) == 0x0000E0, "Member 'ABP_TurretSpecialist_Turret_Hanging_C_Get_local_aim::CallFunc_RotateAngleAxis_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_TurretSpecialist_Turret_Hanging_C_Get_local_aim, CallFunc_MakeRotFromX_ReturnValue_1) == 0x0000EC, "Member 'ABP_TurretSpecialist_Turret_Hanging_C_Get_local_aim::CallFunc_MakeRotFromX_ReturnValue_1' has a wrong offset!");

// Function ABP_TurretSpecialist_Turret_Hanging.ABP_TurretSpecialist_Turret_Hanging_C.BlueprintUpdateAnimation
// 0x0004 (0x0004 - 0x0000)
struct ABP_TurretSpecialist_Turret_Hanging_C_BlueprintUpdateAnimation final
{
public:
	float                                         DeltaTimeX;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_TurretSpecialist_Turret_Hanging_C_BlueprintUpdateAnimation) == 0x000004, "Wrong alignment on ABP_TurretSpecialist_Turret_Hanging_C_BlueprintUpdateAnimation");
static_assert(sizeof(ABP_TurretSpecialist_Turret_Hanging_C_BlueprintUpdateAnimation) == 0x000004, "Wrong size on ABP_TurretSpecialist_Turret_Hanging_C_BlueprintUpdateAnimation");
static_assert(offsetof(ABP_TurretSpecialist_Turret_Hanging_C_BlueprintUpdateAnimation, DeltaTimeX) == 0x000000, "Member 'ABP_TurretSpecialist_Turret_Hanging_C_BlueprintUpdateAnimation::DeltaTimeX' has a wrong offset!");

// Function ABP_TurretSpecialist_Turret_Hanging.ABP_TurretSpecialist_Turret_Hanging_C.ExecuteUbergraph_ABP_TurretSpecialist_Turret_Hanging
// 0x0070 (0x0070 - 0x0000)
struct ABP_TurretSpecialist_Turret_Hanging_C_ExecuteUbergraph_ABP_TurretSpecialist_Turret_Hanging final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue_1;            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACACharacter_NPC*                       K2Node_DynamicCast_AsCACharacter_NPC;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetUpVector_ReturnValue;                  // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_NPC_Character_C*                    K2Node_DynamicCast_AsBP_NPC_Character;             // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsInNPCSpawnPool_ReturnValue;             // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A[0x2];                                       // 0x005A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_get_local_aim_LocalAim;                   // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_DeltaTimeX;                           // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_TurretSpecialist_Turret_Hanging_C_ExecuteUbergraph_ABP_TurretSpecialist_Turret_Hanging) == 0x000008, "Wrong alignment on ABP_TurretSpecialist_Turret_Hanging_C_ExecuteUbergraph_ABP_TurretSpecialist_Turret_Hanging");
static_assert(sizeof(ABP_TurretSpecialist_Turret_Hanging_C_ExecuteUbergraph_ABP_TurretSpecialist_Turret_Hanging) == 0x000070, "Wrong size on ABP_TurretSpecialist_Turret_Hanging_C_ExecuteUbergraph_ABP_TurretSpecialist_Turret_Hanging");
static_assert(offsetof(ABP_TurretSpecialist_Turret_Hanging_C_ExecuteUbergraph_ABP_TurretSpecialist_Turret_Hanging, EntryPoint) == 0x000000, "Member 'ABP_TurretSpecialist_Turret_Hanging_C_ExecuteUbergraph_ABP_TurretSpecialist_Turret_Hanging::EntryPoint' has a wrong offset!");
static_assert(offsetof(ABP_TurretSpecialist_Turret_Hanging_C_ExecuteUbergraph_ABP_TurretSpecialist_Turret_Hanging, CallFunc_TryGetPawnOwner_ReturnValue) == 0x000008, "Member 'ABP_TurretSpecialist_Turret_Hanging_C_ExecuteUbergraph_ABP_TurretSpecialist_Turret_Hanging::CallFunc_TryGetPawnOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_TurretSpecialist_Turret_Hanging_C_ExecuteUbergraph_ABP_TurretSpecialist_Turret_Hanging, CallFunc_TryGetPawnOwner_ReturnValue_1) == 0x000010, "Member 'ABP_TurretSpecialist_Turret_Hanging_C_ExecuteUbergraph_ABP_TurretSpecialist_Turret_Hanging::CallFunc_TryGetPawnOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_TurretSpecialist_Turret_Hanging_C_ExecuteUbergraph_ABP_TurretSpecialist_Turret_Hanging, K2Node_DynamicCast_AsCACharacter_NPC) == 0x000018, "Member 'ABP_TurretSpecialist_Turret_Hanging_C_ExecuteUbergraph_ABP_TurretSpecialist_Turret_Hanging::K2Node_DynamicCast_AsCACharacter_NPC' has a wrong offset!");
static_assert(offsetof(ABP_TurretSpecialist_Turret_Hanging_C_ExecuteUbergraph_ABP_TurretSpecialist_Turret_Hanging, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'ABP_TurretSpecialist_Turret_Hanging_C_ExecuteUbergraph_ABP_TurretSpecialist_Turret_Hanging::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ABP_TurretSpecialist_Turret_Hanging_C_ExecuteUbergraph_ABP_TurretSpecialist_Turret_Hanging, CallFunc_IsValid_ReturnValue) == 0x000021, "Member 'ABP_TurretSpecialist_Turret_Hanging_C_ExecuteUbergraph_ABP_TurretSpecialist_Turret_Hanging::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_TurretSpecialist_Turret_Hanging_C_ExecuteUbergraph_ABP_TurretSpecialist_Turret_Hanging, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000028, "Member 'ABP_TurretSpecialist_Turret_Hanging_C_ExecuteUbergraph_ABP_TurretSpecialist_Turret_Hanging::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_TurretSpecialist_Turret_Hanging_C_ExecuteUbergraph_ABP_TurretSpecialist_Turret_Hanging, CallFunc_IsValid_ReturnValue_1) == 0x000030, "Member 'ABP_TurretSpecialist_Turret_Hanging_C_ExecuteUbergraph_ABP_TurretSpecialist_Turret_Hanging::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_TurretSpecialist_Turret_Hanging_C_ExecuteUbergraph_ABP_TurretSpecialist_Turret_Hanging, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x000034, "Member 'ABP_TurretSpecialist_Turret_Hanging_C_ExecuteUbergraph_ABP_TurretSpecialist_Turret_Hanging::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_TurretSpecialist_Turret_Hanging_C_ExecuteUbergraph_ABP_TurretSpecialist_Turret_Hanging, CallFunc_GetUpVector_ReturnValue) == 0x000040, "Member 'ABP_TurretSpecialist_Turret_Hanging_C_ExecuteUbergraph_ABP_TurretSpecialist_Turret_Hanging::CallFunc_GetUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_TurretSpecialist_Turret_Hanging_C_ExecuteUbergraph_ABP_TurretSpecialist_Turret_Hanging, K2Node_DynamicCast_AsBP_NPC_Character) == 0x000050, "Member 'ABP_TurretSpecialist_Turret_Hanging_C_ExecuteUbergraph_ABP_TurretSpecialist_Turret_Hanging::K2Node_DynamicCast_AsBP_NPC_Character' has a wrong offset!");
static_assert(offsetof(ABP_TurretSpecialist_Turret_Hanging_C_ExecuteUbergraph_ABP_TurretSpecialist_Turret_Hanging, K2Node_DynamicCast_bSuccess_1) == 0x000058, "Member 'ABP_TurretSpecialist_Turret_Hanging_C_ExecuteUbergraph_ABP_TurretSpecialist_Turret_Hanging::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(ABP_TurretSpecialist_Turret_Hanging_C_ExecuteUbergraph_ABP_TurretSpecialist_Turret_Hanging, CallFunc_IsInNPCSpawnPool_ReturnValue) == 0x000059, "Member 'ABP_TurretSpecialist_Turret_Hanging_C_ExecuteUbergraph_ABP_TurretSpecialist_Turret_Hanging::CallFunc_IsInNPCSpawnPool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_TurretSpecialist_Turret_Hanging_C_ExecuteUbergraph_ABP_TurretSpecialist_Turret_Hanging, CallFunc_get_local_aim_LocalAim) == 0x00005C, "Member 'ABP_TurretSpecialist_Turret_Hanging_C_ExecuteUbergraph_ABP_TurretSpecialist_Turret_Hanging::CallFunc_get_local_aim_LocalAim' has a wrong offset!");
static_assert(offsetof(ABP_TurretSpecialist_Turret_Hanging_C_ExecuteUbergraph_ABP_TurretSpecialist_Turret_Hanging, K2Node_Event_DeltaTimeX) == 0x000068, "Member 'ABP_TurretSpecialist_Turret_Hanging_C_ExecuteUbergraph_ABP_TurretSpecialist_Turret_Hanging::K2Node_Event_DeltaTimeX' has a wrong offset!");

}

