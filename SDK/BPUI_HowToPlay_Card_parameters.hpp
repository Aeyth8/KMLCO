#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPUI_HowToPlay_Card

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BPUI_HowToPlay_Card.BPUI_HowToPlay_Card_C.ExecuteUbergraph_BPUI_HowToPlay_Card
// 0x00C8 (0x00C8 - 0x0000)
struct BPUI_HowToPlay_Card_C_ExecuteUbergraph_BPUI_HowToPlay_Card final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0014)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCAGamemodeInstructionsStep*            K2Node_DynamicCast_AsCAGamemode_Instructions_Step; // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UCAGamemodeInstructionsStep> CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue; // 0x0038(0x0030)(UObjectWrapper, HasGetValueTypeHash)
	class UObject*                                K2Node_CustomEvent_Loaded;                         // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_1;                            // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UCAGamemodeInstructionsStep> K2Node_CustomEvent_InstructionsStep;               // 0x0078(0x0030)(HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_CardIndex;                      // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_1;            // 0x00AC(0x0014)(ZeroConstructor, NoDestructor)
	class UObject*                                K2Node_CustomEvent_Loaded_1;                       // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPUI_HowToPlay_Card_C_ExecuteUbergraph_BPUI_HowToPlay_Card) == 0x000008, "Wrong alignment on BPUI_HowToPlay_Card_C_ExecuteUbergraph_BPUI_HowToPlay_Card");
static_assert(sizeof(BPUI_HowToPlay_Card_C_ExecuteUbergraph_BPUI_HowToPlay_Card) == 0x0000C8, "Wrong size on BPUI_HowToPlay_Card_C_ExecuteUbergraph_BPUI_HowToPlay_Card");
static_assert(offsetof(BPUI_HowToPlay_Card_C_ExecuteUbergraph_BPUI_HowToPlay_Card, EntryPoint) == 0x000000, "Member 'BPUI_HowToPlay_Card_C_ExecuteUbergraph_BPUI_HowToPlay_Card::EntryPoint' has a wrong offset!");
static_assert(offsetof(BPUI_HowToPlay_Card_C_ExecuteUbergraph_BPUI_HowToPlay_Card, Temp_object_Variable) == 0x000008, "Member 'BPUI_HowToPlay_Card_C_ExecuteUbergraph_BPUI_HowToPlay_Card::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BPUI_HowToPlay_Card_C_ExecuteUbergraph_BPUI_HowToPlay_Card, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'BPUI_HowToPlay_Card_C_ExecuteUbergraph_BPUI_HowToPlay_Card::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BPUI_HowToPlay_Card_C_ExecuteUbergraph_BPUI_HowToPlay_Card, K2Node_DynamicCast_AsCAGamemode_Instructions_Step) == 0x000028, "Member 'BPUI_HowToPlay_Card_C_ExecuteUbergraph_BPUI_HowToPlay_Card::K2Node_DynamicCast_AsCAGamemode_Instructions_Step' has a wrong offset!");
static_assert(offsetof(BPUI_HowToPlay_Card_C_ExecuteUbergraph_BPUI_HowToPlay_Card, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BPUI_HowToPlay_Card_C_ExecuteUbergraph_BPUI_HowToPlay_Card::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPUI_HowToPlay_Card_C_ExecuteUbergraph_BPUI_HowToPlay_Card, CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue) == 0x000038, "Member 'BPUI_HowToPlay_Card_C_ExecuteUbergraph_BPUI_HowToPlay_Card::CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPUI_HowToPlay_Card_C_ExecuteUbergraph_BPUI_HowToPlay_Card, K2Node_CustomEvent_Loaded) == 0x000068, "Member 'BPUI_HowToPlay_Card_C_ExecuteUbergraph_BPUI_HowToPlay_Card::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(BPUI_HowToPlay_Card_C_ExecuteUbergraph_BPUI_HowToPlay_Card, Temp_object_Variable_1) == 0x000070, "Member 'BPUI_HowToPlay_Card_C_ExecuteUbergraph_BPUI_HowToPlay_Card::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BPUI_HowToPlay_Card_C_ExecuteUbergraph_BPUI_HowToPlay_Card, K2Node_CustomEvent_InstructionsStep) == 0x000078, "Member 'BPUI_HowToPlay_Card_C_ExecuteUbergraph_BPUI_HowToPlay_Card::K2Node_CustomEvent_InstructionsStep' has a wrong offset!");
static_assert(offsetof(BPUI_HowToPlay_Card_C_ExecuteUbergraph_BPUI_HowToPlay_Card, K2Node_CustomEvent_CardIndex) == 0x0000A8, "Member 'BPUI_HowToPlay_Card_C_ExecuteUbergraph_BPUI_HowToPlay_Card::K2Node_CustomEvent_CardIndex' has a wrong offset!");
static_assert(offsetof(BPUI_HowToPlay_Card_C_ExecuteUbergraph_BPUI_HowToPlay_Card, K2Node_CreateDelegate_OutputDelegate_1) == 0x0000AC, "Member 'BPUI_HowToPlay_Card_C_ExecuteUbergraph_BPUI_HowToPlay_Card::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BPUI_HowToPlay_Card_C_ExecuteUbergraph_BPUI_HowToPlay_Card, K2Node_CustomEvent_Loaded_1) == 0x0000C0, "Member 'BPUI_HowToPlay_Card_C_ExecuteUbergraph_BPUI_HowToPlay_Card::K2Node_CustomEvent_Loaded_1' has a wrong offset!");

// Function BPUI_HowToPlay_Card.BPUI_HowToPlay_Card_C.SetInstructionsStep
// 0x0038 (0x0038 - 0x0000)
struct BPUI_HowToPlay_Card_C_SetInstructionsStep final
{
public:
	TSoftObjectPtr<class UCAGamemodeInstructionsStep> InstructionsStep;                                  // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	int32                                         CardIndex;                                         // 0x0030(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPUI_HowToPlay_Card_C_SetInstructionsStep) == 0x000008, "Wrong alignment on BPUI_HowToPlay_Card_C_SetInstructionsStep");
static_assert(sizeof(BPUI_HowToPlay_Card_C_SetInstructionsStep) == 0x000038, "Wrong size on BPUI_HowToPlay_Card_C_SetInstructionsStep");
static_assert(offsetof(BPUI_HowToPlay_Card_C_SetInstructionsStep, InstructionsStep) == 0x000000, "Member 'BPUI_HowToPlay_Card_C_SetInstructionsStep::InstructionsStep' has a wrong offset!");
static_assert(offsetof(BPUI_HowToPlay_Card_C_SetInstructionsStep, CardIndex) == 0x000030, "Member 'BPUI_HowToPlay_Card_C_SetInstructionsStep::CardIndex' has a wrong offset!");

// Function BPUI_HowToPlay_Card.BPUI_HowToPlay_Card_C.OnLoaded_52116C524653BCC5E85BFE898261A163
// 0x0008 (0x0008 - 0x0000)
struct BPUI_HowToPlay_Card_C_OnLoaded_52116C524653BCC5E85BFE898261A163 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPUI_HowToPlay_Card_C_OnLoaded_52116C524653BCC5E85BFE898261A163) == 0x000008, "Wrong alignment on BPUI_HowToPlay_Card_C_OnLoaded_52116C524653BCC5E85BFE898261A163");
static_assert(sizeof(BPUI_HowToPlay_Card_C_OnLoaded_52116C524653BCC5E85BFE898261A163) == 0x000008, "Wrong size on BPUI_HowToPlay_Card_C_OnLoaded_52116C524653BCC5E85BFE898261A163");
static_assert(offsetof(BPUI_HowToPlay_Card_C_OnLoaded_52116C524653BCC5E85BFE898261A163, Loaded) == 0x000000, "Member 'BPUI_HowToPlay_Card_C_OnLoaded_52116C524653BCC5E85BFE898261A163::Loaded' has a wrong offset!");

// Function BPUI_HowToPlay_Card.BPUI_HowToPlay_Card_C.OnLoaded_5039088C4FD4E1FB196E5F88F03D955E
// 0x0008 (0x0008 - 0x0000)
struct BPUI_HowToPlay_Card_C_OnLoaded_5039088C4FD4E1FB196E5F88F03D955E final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPUI_HowToPlay_Card_C_OnLoaded_5039088C4FD4E1FB196E5F88F03D955E) == 0x000008, "Wrong alignment on BPUI_HowToPlay_Card_C_OnLoaded_5039088C4FD4E1FB196E5F88F03D955E");
static_assert(sizeof(BPUI_HowToPlay_Card_C_OnLoaded_5039088C4FD4E1FB196E5F88F03D955E) == 0x000008, "Wrong size on BPUI_HowToPlay_Card_C_OnLoaded_5039088C4FD4E1FB196E5F88F03D955E");
static_assert(offsetof(BPUI_HowToPlay_Card_C_OnLoaded_5039088C4FD4E1FB196E5F88F03D955E, Loaded) == 0x000000, "Member 'BPUI_HowToPlay_Card_C_OnLoaded_5039088C4FD4E1FB196E5F88F03D955E::Loaded' has a wrong offset!");

// Function BPUI_HowToPlay_Card.BPUI_HowToPlay_Card_C.SetInstructionsStepInternal
// 0x0400 (0x0400 - 0x0000)
struct BPUI_HowToPlay_Card_C_SetInstructionsStepInternal final
{
public:
	TSoftObjectPtr<class UCAGamemodeInstructionsStep> InstructionsStep;                                  // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	int32                                         CardIndex;                                         // 0x0030(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            NewBrush;                                          // 0x0038(0x0090)(Edit, BlueprintVisible)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCAGameModeConfiguration*               K2Node_DynamicCast_AsCAGame_Mode_Configuration;    // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1; // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCAGameModeConfiguration*               K2Node_DynamicCast_AsCAGame_Mode_Configuration_1;  // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F1[0x3];                                       // 0x00F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue;             // 0x00F8(0x0018)()
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_114[0x4];                                      // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0118(0x0040)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue_1;           // 0x0158(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0170(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x01B0(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x01F0(0x0010)(ReferenceParm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x0200(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0240(0x0010)(ReferenceParm)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_2; // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCAGamemodeInstructionsStep*            K2Node_DynamicCast_AsCAGamemode_Instructions_Step; // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_261[0x3];                                      // 0x0261(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_Conv_ColorToLinearColor_ReturnValue;      // 0x0264(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_274[0x4];                                      // 0x0274(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_3; // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCAGamemodeInstructionsStep*            K2Node_DynamicCast_AsCAGamemode_Instructions_Step_1; // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_289[0x7];                                      // 0x0289(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_4; // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_ColorToLinearColor_ReturnValue_1;    // 0x0298(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCAGamemodeInstructionsStep*            K2Node_DynamicCast_AsCAGamemode_Instructions_Step_2; // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B1[0x7];                                      // 0x02B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x02B8(0x0028)()
	class FText                                   CallFunc_MakeTextFromCAText_text;                  // 0x02E0(0x0018)()
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x02F8(0x0018)()
	class FText                                   CallFunc_MakeTextFromCAText_text_1;                // 0x0310(0x0018)()
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0328(0x0018)()
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_5; // 0x0340(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCAGamemodeInstructionsStep*            K2Node_DynamicCast_AsCAGamemode_Instructions_Step_3; // 0x0348(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0350(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_351[0x7];                                      // 0x0351(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_6; // 0x0358(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_DynamicCast_AsTexture_2D;                   // 0x0360(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x0368(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_369[0x7];                                      // 0x0369(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            K2Node_Copy_ReturnValue;                           // 0x0370(0x0090)()
};
static_assert(alignof(BPUI_HowToPlay_Card_C_SetInstructionsStepInternal) == 0x000008, "Wrong alignment on BPUI_HowToPlay_Card_C_SetInstructionsStepInternal");
static_assert(sizeof(BPUI_HowToPlay_Card_C_SetInstructionsStepInternal) == 0x000400, "Wrong size on BPUI_HowToPlay_Card_C_SetInstructionsStepInternal");
static_assert(offsetof(BPUI_HowToPlay_Card_C_SetInstructionsStepInternal, InstructionsStep) == 0x000000, "Member 'BPUI_HowToPlay_Card_C_SetInstructionsStepInternal::InstructionsStep' has a wrong offset!");
static_assert(offsetof(BPUI_HowToPlay_Card_C_SetInstructionsStepInternal, CardIndex) == 0x000030, "Member 'BPUI_HowToPlay_Card_C_SetInstructionsStepInternal::CardIndex' has a wrong offset!");
static_assert(offsetof(BPUI_HowToPlay_Card_C_SetInstructionsStepInternal, NewBrush) == 0x000038, "Member 'BPUI_HowToPlay_Card_C_SetInstructionsStepInternal::NewBrush' has a wrong offset!");
static_assert(offsetof(BPUI_HowToPlay_Card_C_SetInstructionsStepInternal, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x0000C8, "Member 'BPUI_HowToPlay_Card_C_SetInstructionsStepInternal::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPUI_HowToPlay_Card_C_SetInstructionsStepInternal, K2Node_DynamicCast_AsCAGame_Mode_Configuration) == 0x0000D0, "Member 'BPUI_HowToPlay_Card_C_SetInstructionsStepInternal::K2Node_DynamicCast_AsCAGame_Mode_Configuration' has a wrong offset!");
static_assert(offsetof(BPUI_HowToPlay_Card_C_SetInstructionsStepInternal, K2Node_DynamicCast_bSuccess) == 0x0000D8, "Member 'BPUI_HowToPlay_Card_C_SetInstructionsStepInternal::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPUI_HowToPlay_Card_C_SetInstructionsStepInternal, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1) == 0x0000E0, "Member 'BPUI_HowToPlay_Card_C_SetInstructionsStepInternal::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPUI_HowToPlay_Card_C_SetInstructionsStepInternal, K2Node_DynamicCast_AsCAGame_Mode_Configuration_1) == 0x0000E8, "Member 'BPUI_HowToPlay_Card_C_SetInstructionsStepInternal::K2Node_DynamicCast_AsCAGame_Mode_Configuration_1' has a wrong offset!");
static_assert(offsetof(BPUI_HowToPlay_Card_C_SetInstructionsStepInternal, K2Node_DynamicCast_bSuccess_1) == 0x0000F0, "Member 'BPUI_HowToPlay_Card_C_SetInstructionsStepInternal::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BPUI_HowToPlay_Card_C_SetInstructionsStepInternal, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0000F4, "Member 'BPUI_HowToPlay_Card_C_SetInstructionsStepInternal::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPUI_HowToPlay_Card_C_SetInstructionsStepInternal, CallFunc_Conv_FloatToText_ReturnValue) == 0x0000F8, "Member 'BPUI_HowToPlay_Card_C_SetInstructionsStepInternal::CallFunc_Conv_FloatToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPUI_HowToPlay_Card_C_SetInstructionsStepInternal, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000110, "Member 'BPUI_HowToPlay_Card_C_SetInstructionsStepInternal::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPUI_HowToPlay_Card_C_SetInstructionsStepInternal, K2Node_MakeStruct_FormatArgumentData) == 0x000118, "Member 'BPUI_HowToPlay_Card_C_SetInstructionsStepInternal::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BPUI_HowToPlay_Card_C_SetInstructionsStepInternal, CallFunc_Conv_FloatToText_ReturnValue_1) == 0x000158, "Member 'BPUI_HowToPlay_Card_C_SetInstructionsStepInternal::CallFunc_Conv_FloatToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPUI_HowToPlay_Card_C_SetInstructionsStepInternal, K2Node_MakeStruct_FormatArgumentData_1) == 0x000170, "Member 'BPUI_HowToPlay_Card_C_SetInstructionsStepInternal::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BPUI_HowToPlay_Card_C_SetInstructionsStepInternal, K2Node_MakeStruct_FormatArgumentData_2) == 0x0001B0, "Member 'BPUI_HowToPlay_Card_C_SetInstructionsStepInternal::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BPUI_HowToPlay_Card_C_SetInstructionsStepInternal, K2Node_MakeArray_Array) == 0x0001F0, "Member 'BPUI_HowToPlay_Card_C_SetInstructionsStepInternal::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BPUI_HowToPlay_Card_C_SetInstructionsStepInternal, K2Node_MakeStruct_FormatArgumentData_3) == 0x000200, "Member 'BPUI_HowToPlay_Card_C_SetInstructionsStepInternal::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(BPUI_HowToPlay_Card_C_SetInstructionsStepInternal, K2Node_MakeArray_Array_1) == 0x000240, "Member 'BPUI_HowToPlay_Card_C_SetInstructionsStepInternal::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BPUI_HowToPlay_Card_C_SetInstructionsStepInternal, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_2) == 0x000250, "Member 'BPUI_HowToPlay_Card_C_SetInstructionsStepInternal::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPUI_HowToPlay_Card_C_SetInstructionsStepInternal, K2Node_DynamicCast_AsCAGamemode_Instructions_Step) == 0x000258, "Member 'BPUI_HowToPlay_Card_C_SetInstructionsStepInternal::K2Node_DynamicCast_AsCAGamemode_Instructions_Step' has a wrong offset!");
static_assert(offsetof(BPUI_HowToPlay_Card_C_SetInstructionsStepInternal, K2Node_DynamicCast_bSuccess_2) == 0x000260, "Member 'BPUI_HowToPlay_Card_C_SetInstructionsStepInternal::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BPUI_HowToPlay_Card_C_SetInstructionsStepInternal, CallFunc_Conv_ColorToLinearColor_ReturnValue) == 0x000264, "Member 'BPUI_HowToPlay_Card_C_SetInstructionsStepInternal::CallFunc_Conv_ColorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPUI_HowToPlay_Card_C_SetInstructionsStepInternal, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_3) == 0x000278, "Member 'BPUI_HowToPlay_Card_C_SetInstructionsStepInternal::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPUI_HowToPlay_Card_C_SetInstructionsStepInternal, K2Node_DynamicCast_AsCAGamemode_Instructions_Step_1) == 0x000280, "Member 'BPUI_HowToPlay_Card_C_SetInstructionsStepInternal::K2Node_DynamicCast_AsCAGamemode_Instructions_Step_1' has a wrong offset!");
static_assert(offsetof(BPUI_HowToPlay_Card_C_SetInstructionsStepInternal, K2Node_DynamicCast_bSuccess_3) == 0x000288, "Member 'BPUI_HowToPlay_Card_C_SetInstructionsStepInternal::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BPUI_HowToPlay_Card_C_SetInstructionsStepInternal, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_4) == 0x000290, "Member 'BPUI_HowToPlay_Card_C_SetInstructionsStepInternal::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BPUI_HowToPlay_Card_C_SetInstructionsStepInternal, CallFunc_Conv_ColorToLinearColor_ReturnValue_1) == 0x000298, "Member 'BPUI_HowToPlay_Card_C_SetInstructionsStepInternal::CallFunc_Conv_ColorToLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPUI_HowToPlay_Card_C_SetInstructionsStepInternal, K2Node_DynamicCast_AsCAGamemode_Instructions_Step_2) == 0x0002A8, "Member 'BPUI_HowToPlay_Card_C_SetInstructionsStepInternal::K2Node_DynamicCast_AsCAGamemode_Instructions_Step_2' has a wrong offset!");
static_assert(offsetof(BPUI_HowToPlay_Card_C_SetInstructionsStepInternal, K2Node_DynamicCast_bSuccess_4) == 0x0002B0, "Member 'BPUI_HowToPlay_Card_C_SetInstructionsStepInternal::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BPUI_HowToPlay_Card_C_SetInstructionsStepInternal, K2Node_MakeStruct_SlateColor) == 0x0002B8, "Member 'BPUI_HowToPlay_Card_C_SetInstructionsStepInternal::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(BPUI_HowToPlay_Card_C_SetInstructionsStepInternal, CallFunc_MakeTextFromCAText_text) == 0x0002E0, "Member 'BPUI_HowToPlay_Card_C_SetInstructionsStepInternal::CallFunc_MakeTextFromCAText_text' has a wrong offset!");
static_assert(offsetof(BPUI_HowToPlay_Card_C_SetInstructionsStepInternal, CallFunc_Format_ReturnValue) == 0x0002F8, "Member 'BPUI_HowToPlay_Card_C_SetInstructionsStepInternal::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPUI_HowToPlay_Card_C_SetInstructionsStepInternal, CallFunc_MakeTextFromCAText_text_1) == 0x000310, "Member 'BPUI_HowToPlay_Card_C_SetInstructionsStepInternal::CallFunc_MakeTextFromCAText_text_1' has a wrong offset!");
static_assert(offsetof(BPUI_HowToPlay_Card_C_SetInstructionsStepInternal, CallFunc_Format_ReturnValue_1) == 0x000328, "Member 'BPUI_HowToPlay_Card_C_SetInstructionsStepInternal::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPUI_HowToPlay_Card_C_SetInstructionsStepInternal, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_5) == 0x000340, "Member 'BPUI_HowToPlay_Card_C_SetInstructionsStepInternal::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BPUI_HowToPlay_Card_C_SetInstructionsStepInternal, K2Node_DynamicCast_AsCAGamemode_Instructions_Step_3) == 0x000348, "Member 'BPUI_HowToPlay_Card_C_SetInstructionsStepInternal::K2Node_DynamicCast_AsCAGamemode_Instructions_Step_3' has a wrong offset!");
static_assert(offsetof(BPUI_HowToPlay_Card_C_SetInstructionsStepInternal, K2Node_DynamicCast_bSuccess_5) == 0x000350, "Member 'BPUI_HowToPlay_Card_C_SetInstructionsStepInternal::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BPUI_HowToPlay_Card_C_SetInstructionsStepInternal, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_6) == 0x000358, "Member 'BPUI_HowToPlay_Card_C_SetInstructionsStepInternal::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BPUI_HowToPlay_Card_C_SetInstructionsStepInternal, K2Node_DynamicCast_AsTexture_2D) == 0x000360, "Member 'BPUI_HowToPlay_Card_C_SetInstructionsStepInternal::K2Node_DynamicCast_AsTexture_2D' has a wrong offset!");
static_assert(offsetof(BPUI_HowToPlay_Card_C_SetInstructionsStepInternal, K2Node_DynamicCast_bSuccess_6) == 0x000368, "Member 'BPUI_HowToPlay_Card_C_SetInstructionsStepInternal::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(BPUI_HowToPlay_Card_C_SetInstructionsStepInternal, K2Node_Copy_ReturnValue) == 0x000370, "Member 'BPUI_HowToPlay_Card_C_SetInstructionsStepInternal::K2Node_Copy_ReturnValue' has a wrong offset!");

}

