#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Player

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"
#include "Keaton_structs.hpp"
#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "CAAudio_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "EOutlineColours_structs.hpp"
#include "InputCore_structs.hpp"


namespace SDK::Params
{

// Function BP_Player.BP_Player_C.OnTeleport__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BP_Player_C_OnTeleport__DelegateSignature final
{
public:
	float                                         TeleportDuration;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          In;                                                // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Player_C_OnTeleport__DelegateSignature) == 0x000004, "Wrong alignment on BP_Player_C_OnTeleport__DelegateSignature");
static_assert(sizeof(BP_Player_C_OnTeleport__DelegateSignature) == 0x000008, "Wrong size on BP_Player_C_OnTeleport__DelegateSignature");
static_assert(offsetof(BP_Player_C_OnTeleport__DelegateSignature, TeleportDuration) == 0x000000, "Member 'BP_Player_C_OnTeleport__DelegateSignature::TeleportDuration' has a wrong offset!");
static_assert(offsetof(BP_Player_C_OnTeleport__DelegateSignature, In) == 0x000004, "Member 'BP_Player_C_OnTeleport__DelegateSignature::In' has a wrong offset!");

// Function BP_Player.BP_Player_C.ExecuteUbergraph_BP_Player
// 0x1018 (0x1018 - 0x0000)
struct BP_Player_C_ExecuteUbergraph_BP_Player final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FCAAudioEventType& Event_name)> Temp_delegate_Variable;                            // 0x0004(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	struct FCATeamID                              CallFunc_GetTeamID_ReturnValue;                    // 0x0018(0x0004)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCAAudioPlaybackInstance               CallFunc_PlayEvent_playback_instance;              // 0x0020(0x0010)()
	bool                                          CallFunc_PlayEvent_play_success;                   // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33[0x1];                                       // 0x0033(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      K2Node_Event_PC;                                   // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            K2Node_Event_NewController;                        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACAPlayerController*                    K2Node_DynamicCast_AsCAPlayer_Controller;          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_52[0x2];                                       // 0x0052(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCATeamID                              CallFunc_GetTeamID_ReturnValue_1;                  // 0x0054(0x0004)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FCAAudioEventType& Event_name)> Temp_delegate_Variable_1;                          // 0x0058(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FCAAudioEventType& Event_name)> Temp_delegate_Variable_2;                          // 0x0070(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Int;                            // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         K2Node_CustomEvent_SecurityPlayer;                 // 0x0090(0x0010)(ConstParm, ReferenceParm)
	TDelegate<void(float Percentage)>             K2Node_CreateDelegate_OutputDelegate;              // 0x00A0(0x0014)(ZeroConstructor, NoDestructor)
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue; // 0x00B4(0x0008)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UClass*                           K2Node_CustomEvent_item;                           // 0x00C0(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_WeaponTimeBetweenShots;         // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACACharacter*                           K2Node_CustomEvent_character_1;                    // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectSpec                    K2Node_CustomEvent_death_gameplay_effect_spec;     // 0x00D8(0x0298)(ConstParm)
	float                                         K2Node_CustomEvent_damage_magnitude;               // 0x0370(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_374[0x4];                                      // 0x0374(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FNetworkedHit                          K2Node_CustomEvent_networked_hit;                  // 0x0378(0x0068)(ConstParm, NoDestructor)
	const class AActor*                           K2Node_CustomEvent_killer;                         // 0x03E0(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RequestAndReportDebugHeal_ReturnValue;    // 0x03E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E9[0x3];                                      // 0x03E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCATeamID                              CallFunc_GetTeamID_ReturnValue_2;                  // 0x03EC(0x0004)(NoDestructor, HasGetValueTypeHash)
	class ACACharacter_MainPlayer*                K2Node_DynamicCast_AsCACharacter_Main_Player;      // 0x03F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x03F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECAPlayerAbilityMode                          K2Node_CustomEvent_ability;                        // 0x03F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_starting;                       // 0x03FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3FB[0x1];                                      // 0x03FB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const struct FCAAudioEventType& Event_name)> Temp_delegate_Variable_3;                          // 0x03FC(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	struct FCAAudioPlaybackInstance               CallFunc_PlayEvent_playback_instance_1;            // 0x0410(0x0010)()
	bool                                          CallFunc_PlayEvent_play_success_1;                 // 0x0420(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0421(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable_1;               // 0x0422(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsFirstPerson_ReturnValue;                // 0x0423(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsFirstPerson_ReturnValue_1;              // 0x0424(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0425(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_1;          // 0x0426(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_427[0x1];                                      // 0x0427(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_percentage;                     // 0x0428(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42C[0x4];                                      // 0x042C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FNetworkedHit                          K2Node_ComponentBoundEvent_hit;                    // 0x0430(0x0068)(ConstParm, NoDestructor)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0498(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x049C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x049D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49E[0x2];                                      // 0x049E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCAAudioPlaybackInstance               CallFunc_PlayEvent_playback_instance_2;            // 0x04A0(0x0010)()
	bool                                          CallFunc_PlayEvent_play_success_2;                 // 0x04B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4B1[0x7];                                      // 0x04B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCAAudioPlaybackInstance               CallFunc_PlayEvent_playback_instance_3;            // 0x04B8(0x0010)()
	bool                                          CallFunc_PlayEvent_play_success_3;                 // 0x04C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4C9[0x3];                                      // 0x04C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x04CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x04D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_teleport_duration_1;                  // 0x04D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_teleport_duration;                    // 0x04D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_ComponentBoundEvent_Tag_1;                  // 0x04DC(0x000C)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_ComponentBoundEvent_Tag;                    // 0x04E8(0x000C)(NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_1;                     // 0x04F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F5[0x3];                                      // 0x04F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const struct FCAAudioEventType& Event_name)> Temp_delegate_Variable_4;                          // 0x04F8(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	uint8                                         Pad_50C[0x4];                                      // 0x050C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCAAudioPlaybackInstance               CallFunc_PlayEvent_playback_instance_4;            // 0x0510(0x0010)()
	bool                                          CallFunc_PlayEvent_play_success_4;                 // 0x0520(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_521[0x7];                                      // 0x0521(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FNetworkedHit                          K2Node_Event_networked_hit;                        // 0x0528(0x0068)(ConstParm, NoDestructor)
	const class ACAEquipmentBase*                 K2Node_Event_hit_instigator;                       // 0x0590(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class ICADamageDealerInterface> CallFunc_GetWeaponClass_self_CastInput;            // 0x0598(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECAWeaponClass                                CallFunc_GetWeaponClass_ReturnValue;               // 0x05A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A9[0x7];                                      // 0x05A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ICADamageDealerInterface> CallFunc_GetWeaponClass_self_CastInput_1;          // 0x05B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECAWeaponClass                                CallFunc_GetWeaponClass_ReturnValue_1;             // 0x05C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x05C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x05C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5C3[0x1];                                      // 0x05C3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x05C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Set_Remove_ReturnValue;                   // 0x05C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5C9[0x3];                                      // 0x05C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x05CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECAGravHookStateChange                        K2Node_CustomEvent_state_change;                   // 0x05D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x05D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Player_Taken_Damage_SFX_Has_an_impact_SFX_event_fired; // 0x05D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x05D3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x05D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x05D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x05D6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasGameplayTag_ReturnValue;               // 0x05D7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TDelegate<void(ECAPlayerAbilityMode Ability, bool Starting)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x05D8(0x0014)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x05EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue_1;        // 0x05ED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue_2;        // 0x05EE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5EF[0x1];                                      // 0x05EF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(ECAGravHookStateChange State_change)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x05F0(0x0014)(ZeroConstructor, NoDestructor)
	EHealthState                                  K2Node_CustomEvent_health_state;                   // 0x0604(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_605[0x3];                                      // 0x0605(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             K2Node_ComponentBoundEvent_Character_1;            // 0x0608(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECAPlayerMovementMetaMode                     K2Node_ComponentBoundEvent_PrevMovementMetaMode;   // 0x0610(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECAPlayerMovementMetaMode                     K2Node_ComponentBoundEvent_MovementMetaMode;       // 0x0611(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_612[0x6];                                      // 0x0612(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             K2Node_ComponentBoundEvent_Character;              // 0x0618(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECAPlayerMovementMode                         K2Node_ComponentBoundEvent_PrevMovementMode;       // 0x0620(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECAPlayerMovementMode                         K2Node_ComponentBoundEvent_MovementMode;           // 0x0621(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x0622(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable_2;               // 0x0623(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetCurrentRemainingHealthSegments_ReturnValue; // 0x0624(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCurrentRemainingHealthSegments_ReturnValue_1; // 0x0628(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x062C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x062D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x062E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_62F[0x1];                                      // 0x062F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0630(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x0634(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x0638(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x063C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0640(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable_2;                     // 0x0641(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_642[0x6];                                      // 0x0642(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEffectSpec                    K2Node_ComponentBoundEvent_killing_effect_spec;    // 0x0648(0x0298)(ConstParm)
	float                                         K2Node_ComponentBoundEvent_delta_value;            // 0x08E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue_3;        // 0x08E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8E5[0x3];                                      // 0x08E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable;                                // 0x08E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8F4[0x4];                                      // 0x08F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACAPlayerController*                    CallFunc_GetAssociatedPlayerController_ReturnValue; // 0x08F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0900(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_901[0x3];                                      // 0x0901(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class ACACharacter* Character, struct FGameplayEffectSpec& Death_gameplay_effect_spec, float Damage_magnitude, struct FNetworkedHit& Networked_hit, class AActor* Killer)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x0904(0x0014)(ZeroConstructor, NoDestructor)
	class FName                                   Temp_name_Variable_1;                              // 0x0918(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_2;                              // 0x0924(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_2;               // 0x0930(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_new_state;                      // 0x0931(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_932[0x6];                                      // 0x0932(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEffectContextHandle           CallFunc_MakeEffectContext_ReturnValue;            // 0x0938(0x0018)()
	bool                                          CallFunc_RemoveActiveGameplayEffect_ReturnValue;   // 0x0950(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_951[0x3];                                      // 0x0951(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue_1; // 0x0954(0x0008)(NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_3;                              // 0x095C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_4;                              // 0x0968(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_5;                              // 0x0974(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsBeingViewed_ReturnValue;                // 0x0980(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsBeingViewed_ReturnValue_1;              // 0x0981(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsBeingViewed_ReturnValue_2;              // 0x0982(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsBeingViewed_ReturnValue_3;              // 0x0983(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FName                                   Temp_name_Variable_6;                              // 0x0984(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCADamageEffectInfo                    K2Node_ComponentBoundEvent_damage_effect_info;     // 0x0990(0x02F8)(ConstParm)
	class FName                                   Temp_name_Variable_7;                              // 0x0C88(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0C94(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0C95(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C96[0x2];                                      // 0x0C96(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetInstigatorFromEffectSpec_ReturnValue;  // 0x0C98(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Player_RivalHitReceived_Dialogue_Cooldown; // 0x0CA0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_8;                              // 0x0CA4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class ACACharacter*                     K2Node_CustomEvent_character;                      // 0x0CB0(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasGameplayTag_ReturnValue_1;             // 0x0CB8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CB9[0x3];                                      // 0x0CB9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCATeamID                              CallFunc_GetTeamID_ReturnValue_3;                  // 0x0CBC(0x0004)(NoDestructor, HasGetValueTypeHash)
	class ACACharacter_MainPlayer*                K2Node_DynamicCast_AsCACharacter_Main_Player_1;    // 0x0CC0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0CC8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0CC9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CCA[0x6];                                      // 0x0CCA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ACACharacter_NPC*                       K2Node_DynamicCast_AsCACharacter_NPC;              // 0x0CD0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0CD8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CD9[0x3];                                      // 0x0CD9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable_9;                              // 0x0CDC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECANPCType                                    CallFunc_GetNPCType_ReturnValue;                   // 0x0CE8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CE9[0x3];                                      // 0x0CE9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class ACACharacter* Character)> K2Node_CreateDelegate_OutputDelegate_4;            // 0x0CEC(0x0014)(ZeroConstructor, NoDestructor)
	class FName                                   Temp_name_Variable_10;                             // 0x0D00(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_11;                             // 0x0D0C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECASecurityAreaState                          K2Node_CustomEvent_new_area_state;                 // 0x0D18(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_3;               // 0x0D19(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_value;                          // 0x0D1A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1B[0x5];                                      // 0x0D1B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key;                       // 0x0D20(0x0020)(HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_12;                             // 0x0D40(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4C[0x4];                                      // 0x0D4C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACAGameState*                           CallFunc_GetGameState_ReturnValue;                 // 0x0D50(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCATeamID>                      CallFunc_GetAllTeams_teams;                        // 0x0D58(0x0010)(ReferenceParm)
	struct FCATeamID                              CallFunc_Array_Get_Item;                           // 0x0D68(0x0004)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0D6C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0D70(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue_1;            // 0x0D71(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0D72(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECANPCType                                    Temp_byte_Variable;                                // 0x0D73(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Select_Default;                             // 0x0D74(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACAGameState*                           CallFunc_GetGameState_ReturnValue_1;               // 0x0D80(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACAGameState*                           CallFunc_GetGameState_ReturnValue_2;               // 0x0D88(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTeamStateData                         CallFunc_GetTeamData_ReturnValue;                  // 0x0D90(0x0028)(ConstParm)
	struct FTeamStateData                         CallFunc_GetTeamData_ReturnValue_1;                // 0x0DB8(0x0028)(ConstParm)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0DE0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0DE1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DE2[0x2];                                      // 0x0DE2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0DE4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0DE8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DE9[0x3];                                      // 0x0DE9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue_1;            // 0x0DEC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0DF0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue_1;             // 0x0DF1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x0DF2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DF3[0x1];                                      // 0x0DF3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_5;            // 0x0DF4(0x0014)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0E08(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0E10(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_2;             // 0x0E14(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable_3;                     // 0x0E15(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E16[0x2];                                      // 0x0E16(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(ECASecurityAreaState New_area_state)> K2Node_CreateDelegate_OutputDelegate_6;            // 0x0E18(0x0014)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_7;            // 0x0E2C(0x0014)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_1;        // 0x0E40(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_Array_Get_Item_1;                         // 0x0E48(0x000C)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0E54(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetTagName_ReturnValue;                   // 0x0E58(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0E64(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ActorHasTag_ReturnValue;                  // 0x0E65(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x0E66(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue_3;               // 0x0E67(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_8;            // 0x0E68(0x0014)(ZeroConstructor, NoDestructor)
	TDelegate<void(const struct FCAAudioEventType& Event_name)> Temp_delegate_Variable_5;                          // 0x0E7C(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_2;        // 0x0E90(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FCAAudioPlaybackInstance               CallFunc_PlayEvent_playback_instance_5;            // 0x0E98(0x0010)()
	bool                                          CallFunc_PlayEvent_play_success_5;                 // 0x0EA8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_EA9[0x3];                                      // 0x0EA9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(bool New_state)>               K2Node_CreateDelegate_OutputDelegate_9;            // 0x0EAC(0x0014)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_Select_Default_1;                           // 0x0EC0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_10;           // 0x0ECC(0x0014)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue_4;               // 0x0EE0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_EE1[0x3];                                      // 0x0EE1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetSpecialistName_ReturnValue;            // 0x0EE4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0EF0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCATeamID                              CallFunc_GetTeamID_ReturnValue_4;                  // 0x0EF4(0x0004)(ConstParm, NoDestructor, HasGetValueTypeHash)
	TArray<class ACAPlayerController*>            CallFunc_GetPlayerControllersOnTeam_ReturnValue;   // 0x0EF8(0x0010)(ReferenceParm)
	class ACAPlayerController*                    CallFunc_Array_Get_Item_2;                         // 0x0F08(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0F10(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0F14(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F15[0x3];                                      // 0x0F15(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ACAPlayerState*                         K2Node_DynamicCast_AsCAPlayer_State;               // 0x0F18(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0F20(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F21[0x3];                                      // 0x0F21(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetSpecialistName_ReturnValue_1;          // 0x0F24(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0F30(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F31[0x3];                                      // 0x0F31(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x0F34(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x0F38(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F39[0x7];                                      // 0x0F39(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACAGameState*                           CallFunc_GetGameState_ReturnValue_3;               // 0x0F40(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCATeamID                              CallFunc_GetTeamID_ReturnValue_5;                  // 0x0F48(0x0004)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasTeamWiped_ReturnValue;                 // 0x0F4C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F4D[0x3];                                      // 0x0F4D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCATeamID                              CallFunc_GetTeamID_ReturnValue_6;                  // 0x0F50(0x0004)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FCAAudioEventType& Event_name)> Temp_delegate_Variable_6;                          // 0x0F54(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	struct FCAAudioPlaybackInstance               CallFunc_PlayEvent_playback_instance_6;            // 0x0F68(0x0010)()
	bool                                          CallFunc_PlayEvent_play_success_6;                 // 0x0F78(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F79[0x3];                                      // 0x0F79(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EHealthState Health_state)>    K2Node_CreateDelegate_OutputDelegate_11;           // 0x0F7C(0x0014)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_Select_Default_2;                           // 0x0F90(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0F9C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_3;          // 0x0FA0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_FA1[0x3];                                      // 0x0FA1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetDialogueName_ReturnValue;              // 0x0FA4(0x000C)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0FB0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0FC0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class ACAGameState*                           CallFunc_GetGameState_ReturnValue_4;               // 0x0FD0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCATeamID                              CallFunc_GetTeamID_ReturnValue_7;                  // 0x0FD8(0x0004)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasTeamWiped_ReturnValue_1;               // 0x0FDC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_FDD[0x3];                                      // 0x0FDD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ACAPlayerController*>            CallFunc_GetPlayerControllersOnTeam_ReturnValue_1; // 0x0FE0(0x0010)(ReferenceParm)
	class ACAPlayerController*                    CallFunc_Array_Get_Item_3;                         // 0x0FF0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_5;               // 0x0FF8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x0FFC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_FFD[0x3];                                      // 0x0FFD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ACAPlayerState*                         K2Node_DynamicCast_AsCAPlayer_State_1;             // 0x1000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x1008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1009[0x3];                                     // 0x1009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetKillerTeamID_ReturnValue;              // 0x100C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue_2;            // 0x1010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Player_C_ExecuteUbergraph_BP_Player) == 0x000008, "Wrong alignment on BP_Player_C_ExecuteUbergraph_BP_Player");
static_assert(sizeof(BP_Player_C_ExecuteUbergraph_BP_Player) == 0x001018, "Wrong size on BP_Player_C_ExecuteUbergraph_BP_Player");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, EntryPoint) == 0x000000, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, Temp_delegate_Variable) == 0x000004, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, CallFunc_GetTeamID_ReturnValue) == 0x000018, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::CallFunc_GetTeamID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, CallFunc_PlayEvent_playback_instance) == 0x000020, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::CallFunc_PlayEvent_playback_instance' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, CallFunc_PlayEvent_play_success) == 0x000030, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::CallFunc_PlayEvent_play_success' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, Temp_bool_IsClosed_Variable) == 0x000031, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, Temp_bool_Has_Been_Initd_Variable) == 0x000032, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, K2Node_Event_DeltaSeconds) == 0x000034, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, K2Node_Event_PC) == 0x000038, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::K2Node_Event_PC' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, K2Node_Event_NewController) == 0x000040, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::K2Node_Event_NewController' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, K2Node_DynamicCast_AsCAPlayer_Controller) == 0x000048, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::K2Node_DynamicCast_AsCAPlayer_Controller' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, CallFunc_IsLocallyControlled_ReturnValue) == 0x000051, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, CallFunc_GetTeamID_ReturnValue_1) == 0x000054, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::CallFunc_GetTeamID_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, Temp_delegate_Variable_1) == 0x000058, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::Temp_delegate_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, Temp_int_Loop_Counter_Variable) == 0x00006C, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, Temp_delegate_Variable_2) == 0x000070, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::Temp_delegate_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, CallFunc_Add_IntInt_ReturnValue) == 0x000084, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, K2Node_CustomEvent_Int) == 0x000088, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::K2Node_CustomEvent_Int' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, K2Node_CustomEvent_SecurityPlayer) == 0x000090, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::K2Node_CustomEvent_SecurityPlayer' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, K2Node_CreateDelegate_OutputDelegate) == 0x0000A0, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue) == 0x0000B4, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, K2Node_CustomEvent_item) == 0x0000C0, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::K2Node_CustomEvent_item' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, Temp_int_Array_Index_Variable) == 0x0000C8, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, K2Node_CustomEvent_WeaponTimeBetweenShots) == 0x0000CC, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::K2Node_CustomEvent_WeaponTimeBetweenShots' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, K2Node_CustomEvent_character_1) == 0x0000D0, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::K2Node_CustomEvent_character_1' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, K2Node_CustomEvent_death_gameplay_effect_spec) == 0x0000D8, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::K2Node_CustomEvent_death_gameplay_effect_spec' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, K2Node_CustomEvent_damage_magnitude) == 0x000370, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::K2Node_CustomEvent_damage_magnitude' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, K2Node_CustomEvent_networked_hit) == 0x000378, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::K2Node_CustomEvent_networked_hit' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, K2Node_CustomEvent_killer) == 0x0003E0, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::K2Node_CustomEvent_killer' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, CallFunc_RequestAndReportDebugHeal_ReturnValue) == 0x0003E8, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::CallFunc_RequestAndReportDebugHeal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, CallFunc_GetTeamID_ReturnValue_2) == 0x0003EC, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::CallFunc_GetTeamID_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, K2Node_DynamicCast_AsCACharacter_Main_Player) == 0x0003F0, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::K2Node_DynamicCast_AsCACharacter_Main_Player' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, K2Node_DynamicCast_bSuccess_1) == 0x0003F8, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, K2Node_CustomEvent_ability) == 0x0003F9, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::K2Node_CustomEvent_ability' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, K2Node_CustomEvent_starting) == 0x0003FA, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::K2Node_CustomEvent_starting' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, Temp_delegate_Variable_3) == 0x0003FC, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::Temp_delegate_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, CallFunc_PlayEvent_playback_instance_1) == 0x000410, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::CallFunc_PlayEvent_playback_instance_1' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, CallFunc_PlayEvent_play_success_1) == 0x000420, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::CallFunc_PlayEvent_play_success_1' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000421, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, Temp_bool_Has_Been_Initd_Variable_1) == 0x000422, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::Temp_bool_Has_Been_Initd_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, CallFunc_IsFirstPerson_ReturnValue) == 0x000423, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::CallFunc_IsFirstPerson_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, CallFunc_IsFirstPerson_ReturnValue_1) == 0x000424, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::CallFunc_IsFirstPerson_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, CallFunc_IsDedicatedServer_ReturnValue) == 0x000425, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, CallFunc_IsDedicatedServer_ReturnValue_1) == 0x000426, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::CallFunc_IsDedicatedServer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, K2Node_CustomEvent_percentage) == 0x000428, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::K2Node_CustomEvent_percentage' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, K2Node_ComponentBoundEvent_hit) == 0x000430, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::K2Node_ComponentBoundEvent_hit' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, Temp_int_Array_Index_Variable_1) == 0x000498, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00049C, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x00049D, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, CallFunc_PlayEvent_playback_instance_2) == 0x0004A0, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::CallFunc_PlayEvent_playback_instance_2' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, CallFunc_PlayEvent_play_success_2) == 0x0004B0, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::CallFunc_PlayEvent_play_success_2' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, CallFunc_PlayEvent_playback_instance_3) == 0x0004B8, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::CallFunc_PlayEvent_playback_instance_3' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, CallFunc_PlayEvent_play_success_3) == 0x0004C8, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::CallFunc_PlayEvent_play_success_3' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, Temp_int_Loop_Counter_Variable_1) == 0x0004CC, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, CallFunc_Add_IntInt_ReturnValue_1) == 0x0004D0, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, K2Node_Event_teleport_duration_1) == 0x0004D4, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::K2Node_Event_teleport_duration_1' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, K2Node_Event_teleport_duration) == 0x0004D8, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::K2Node_Event_teleport_duration' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, K2Node_ComponentBoundEvent_Tag_1) == 0x0004DC, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::K2Node_ComponentBoundEvent_Tag_1' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, K2Node_ComponentBoundEvent_Tag) == 0x0004E8, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::K2Node_ComponentBoundEvent_Tag' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, Temp_bool_IsClosed_Variable_1) == 0x0004F4, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::Temp_bool_IsClosed_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, Temp_delegate_Variable_4) == 0x0004F8, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::Temp_delegate_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, CallFunc_PlayEvent_playback_instance_4) == 0x000510, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::CallFunc_PlayEvent_playback_instance_4' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, CallFunc_PlayEvent_play_success_4) == 0x000520, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::CallFunc_PlayEvent_play_success_4' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, K2Node_Event_networked_hit) == 0x000528, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::K2Node_Event_networked_hit' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, K2Node_Event_hit_instigator) == 0x000590, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::K2Node_Event_hit_instigator' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, CallFunc_GetWeaponClass_self_CastInput) == 0x000598, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::CallFunc_GetWeaponClass_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, CallFunc_GetWeaponClass_ReturnValue) == 0x0005A8, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::CallFunc_GetWeaponClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, CallFunc_GetWeaponClass_self_CastInput_1) == 0x0005B0, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::CallFunc_GetWeaponClass_self_CastInput_1' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, CallFunc_GetWeaponClass_ReturnValue_1) == 0x0005C0, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::CallFunc_GetWeaponClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, K2Node_SwitchEnum_CmpSuccess) == 0x0005C1, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, K2Node_SwitchEnum_CmpSuccess_1) == 0x0005C2, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, Temp_int_Loop_Counter_Variable_2) == 0x0005C4, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, CallFunc_Set_Remove_ReturnValue) == 0x0005C8, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::CallFunc_Set_Remove_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, CallFunc_Add_IntInt_ReturnValue_2) == 0x0005CC, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, K2Node_CustomEvent_state_change) == 0x0005D0, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::K2Node_CustomEvent_state_change' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, Temp_bool_True_if_break_was_hit_Variable) == 0x0005D1, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, CallFunc_Player_Taken_Damage_SFX_Has_an_impact_SFX_event_fired) == 0x0005D2, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::CallFunc_Player_Taken_Damage_SFX_Has_an_impact_SFX_event_fired' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, CallFunc_Not_PreBool_ReturnValue) == 0x0005D3, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, CallFunc_BooleanAND_ReturnValue) == 0x0005D4, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, CallFunc_BooleanAND_ReturnValue_1) == 0x0005D5, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, CallFunc_HasAuthority_ReturnValue) == 0x0005D6, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, CallFunc_HasGameplayTag_ReturnValue) == 0x0005D7, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::CallFunc_HasGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, K2Node_CreateDelegate_OutputDelegate_1) == 0x0005D8, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, CallFunc_Not_PreBool_ReturnValue_1) == 0x0005EC, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, CallFunc_IsLocallyControlled_ReturnValue_1) == 0x0005ED, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::CallFunc_IsLocallyControlled_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, CallFunc_IsLocallyControlled_ReturnValue_2) == 0x0005EE, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::CallFunc_IsLocallyControlled_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, K2Node_CreateDelegate_OutputDelegate_2) == 0x0005F0, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, K2Node_CustomEvent_health_state) == 0x000604, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::K2Node_CustomEvent_health_state' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, K2Node_ComponentBoundEvent_Character_1) == 0x000608, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::K2Node_ComponentBoundEvent_Character_1' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, K2Node_ComponentBoundEvent_PrevMovementMetaMode) == 0x000610, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::K2Node_ComponentBoundEvent_PrevMovementMetaMode' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, K2Node_ComponentBoundEvent_MovementMetaMode) == 0x000611, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::K2Node_ComponentBoundEvent_MovementMetaMode' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, K2Node_ComponentBoundEvent_Character) == 0x000618, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::K2Node_ComponentBoundEvent_Character' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, K2Node_ComponentBoundEvent_PrevMovementMode) == 0x000620, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::K2Node_ComponentBoundEvent_PrevMovementMode' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, K2Node_ComponentBoundEvent_MovementMode) == 0x000621, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::K2Node_ComponentBoundEvent_MovementMode' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, CallFunc_HasAuthority_ReturnValue_1) == 0x000622, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, Temp_bool_Has_Been_Initd_Variable_2) == 0x000623, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::Temp_bool_Has_Been_Initd_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, CallFunc_GetCurrentRemainingHealthSegments_ReturnValue) == 0x000624, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::CallFunc_GetCurrentRemainingHealthSegments_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, CallFunc_GetCurrentRemainingHealthSegments_ReturnValue_1) == 0x000628, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::CallFunc_GetCurrentRemainingHealthSegments_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, CallFunc_Greater_IntInt_ReturnValue) == 0x00062C, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00062D, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, CallFunc_BooleanAND_ReturnValue_2) == 0x00062E, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, Temp_int_Array_Index_Variable_2) == 0x000630, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, Temp_int_Loop_Counter_Variable_3) == 0x000634, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, Temp_int_Array_Index_Variable_3) == 0x000638, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, CallFunc_Add_IntInt_ReturnValue_3) == 0x00063C, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, Temp_bool_Variable) == 0x000640, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, Temp_bool_IsClosed_Variable_2) == 0x000641, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::Temp_bool_IsClosed_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, K2Node_ComponentBoundEvent_killing_effect_spec) == 0x000648, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::K2Node_ComponentBoundEvent_killing_effect_spec' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, K2Node_ComponentBoundEvent_delta_value) == 0x0008E0, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::K2Node_ComponentBoundEvent_delta_value' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, CallFunc_IsLocallyControlled_ReturnValue_3) == 0x0008E4, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::CallFunc_IsLocallyControlled_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, Temp_name_Variable) == 0x0008E8, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, CallFunc_GetAssociatedPlayerController_ReturnValue) == 0x0008F8, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::CallFunc_GetAssociatedPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, CallFunc_IsValid_ReturnValue) == 0x000900, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, K2Node_CreateDelegate_OutputDelegate_3) == 0x000904, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, Temp_name_Variable_1) == 0x000918, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, Temp_name_Variable_2) == 0x000924, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::Temp_name_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, CallFunc_HasAuthority_ReturnValue_2) == 0x000930, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::CallFunc_HasAuthority_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, K2Node_CustomEvent_new_state) == 0x000931, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::K2Node_CustomEvent_new_state' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, CallFunc_MakeEffectContext_ReturnValue) == 0x000938, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::CallFunc_MakeEffectContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, CallFunc_RemoveActiveGameplayEffect_ReturnValue) == 0x000950, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::CallFunc_RemoveActiveGameplayEffect_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue_1) == 0x000954, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, Temp_name_Variable_3) == 0x00095C, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::Temp_name_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, Temp_name_Variable_4) == 0x000968, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::Temp_name_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, Temp_name_Variable_5) == 0x000974, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::Temp_name_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, CallFunc_IsBeingViewed_ReturnValue) == 0x000980, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::CallFunc_IsBeingViewed_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, CallFunc_IsBeingViewed_ReturnValue_1) == 0x000981, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::CallFunc_IsBeingViewed_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, CallFunc_IsBeingViewed_ReturnValue_2) == 0x000982, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::CallFunc_IsBeingViewed_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, CallFunc_IsBeingViewed_ReturnValue_3) == 0x000983, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::CallFunc_IsBeingViewed_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, Temp_name_Variable_6) == 0x000984, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::Temp_name_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, K2Node_ComponentBoundEvent_damage_effect_info) == 0x000990, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::K2Node_ComponentBoundEvent_damage_effect_info' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, Temp_name_Variable_7) == 0x000C88, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::Temp_name_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, CallFunc_Not_PreBool_ReturnValue_2) == 0x000C94, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, CallFunc_BooleanAND_ReturnValue_3) == 0x000C95, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, CallFunc_GetInstigatorFromEffectSpec_ReturnValue) == 0x000C98, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::CallFunc_GetInstigatorFromEffectSpec_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, CallFunc_Player_RivalHitReceived_Dialogue_Cooldown) == 0x000CA0, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::CallFunc_Player_RivalHitReceived_Dialogue_Cooldown' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, Temp_name_Variable_8) == 0x000CA4, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::Temp_name_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, K2Node_CustomEvent_character) == 0x000CB0, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::K2Node_CustomEvent_character' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, CallFunc_HasGameplayTag_ReturnValue_1) == 0x000CB8, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::CallFunc_HasGameplayTag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, CallFunc_GetTeamID_ReturnValue_3) == 0x000CBC, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::CallFunc_GetTeamID_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, K2Node_DynamicCast_AsCACharacter_Main_Player_1) == 0x000CC0, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::K2Node_DynamicCast_AsCACharacter_Main_Player_1' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, K2Node_DynamicCast_bSuccess_2) == 0x000CC8, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000CC9, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, K2Node_DynamicCast_AsCACharacter_NPC) == 0x000CD0, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::K2Node_DynamicCast_AsCACharacter_NPC' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, K2Node_DynamicCast_bSuccess_3) == 0x000CD8, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, Temp_name_Variable_9) == 0x000CDC, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::Temp_name_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, CallFunc_GetNPCType_ReturnValue) == 0x000CE8, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::CallFunc_GetNPCType_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, K2Node_CreateDelegate_OutputDelegate_4) == 0x000CEC, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, Temp_name_Variable_10) == 0x000D00, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::Temp_name_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, Temp_name_Variable_11) == 0x000D0C, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::Temp_name_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, K2Node_CustomEvent_new_area_state) == 0x000D18, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::K2Node_CustomEvent_new_area_state' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, Temp_bool_Has_Been_Initd_Variable_3) == 0x000D19, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::Temp_bool_Has_Been_Initd_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, K2Node_CustomEvent_value) == 0x000D1A, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::K2Node_CustomEvent_value' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, K2Node_InputActionEvent_Key) == 0x000D20, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::K2Node_InputActionEvent_Key' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, Temp_name_Variable_12) == 0x000D40, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::Temp_name_Variable_12' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, CallFunc_GetGameState_ReturnValue) == 0x000D50, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, CallFunc_GetAllTeams_teams) == 0x000D58, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::CallFunc_GetAllTeams_teams' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, CallFunc_Array_Get_Item) == 0x000D68, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, CallFunc_Array_Length_ReturnValue) == 0x000D6C, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, CallFunc_Less_IntInt_ReturnValue) == 0x000D70, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, CallFunc_NotEqual_IntInt_ReturnValue_1) == 0x000D71, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::CallFunc_NotEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000D72, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, Temp_byte_Variable) == 0x000D73, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, K2Node_Select_Default) == 0x000D74, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, CallFunc_GetGameState_ReturnValue_1) == 0x000D80, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::CallFunc_GetGameState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, CallFunc_GetGameState_ReturnValue_2) == 0x000D88, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::CallFunc_GetGameState_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, CallFunc_GetTeamData_ReturnValue) == 0x000D90, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::CallFunc_GetTeamData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, CallFunc_GetTeamData_ReturnValue_1) == 0x000DB8, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::CallFunc_GetTeamData_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000DE0, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, CallFunc_Array_Contains_ReturnValue) == 0x000DE1, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, CallFunc_Array_AddUnique_ReturnValue) == 0x000DE4, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, CallFunc_Not_PreBool_ReturnValue_3) == 0x000DE8, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, CallFunc_Array_AddUnique_ReturnValue_1) == 0x000DEC, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::CallFunc_Array_AddUnique_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, Temp_bool_Variable_1) == 0x000DF0, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, CallFunc_Array_Contains_ReturnValue_1) == 0x000DF1, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::CallFunc_Array_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, CallFunc_Not_PreBool_ReturnValue_4) == 0x000DF2, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, K2Node_CreateDelegate_OutputDelegate_5) == 0x000DF4, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000E08, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, CallFunc_Array_Length_ReturnValue_1) == 0x000E10, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, CallFunc_Greater_IntInt_ReturnValue_2) == 0x000E14, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::CallFunc_Greater_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, Temp_bool_IsClosed_Variable_3) == 0x000E15, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::Temp_bool_IsClosed_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, K2Node_CreateDelegate_OutputDelegate_6) == 0x000E18, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, K2Node_CreateDelegate_OutputDelegate_7) == 0x000E2C, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, CallFunc_K2_SetTimerDelegate_ReturnValue_1) == 0x000E40, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::CallFunc_K2_SetTimerDelegate_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, CallFunc_Array_Get_Item_1) == 0x000E48, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, CallFunc_Array_Length_ReturnValue_2) == 0x000E54, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, CallFunc_GetTagName_ReturnValue) == 0x000E58, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::CallFunc_GetTagName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, CallFunc_Less_IntInt_ReturnValue_1) == 0x000E64, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, CallFunc_ActorHasTag_ReturnValue) == 0x000E65, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::CallFunc_ActorHasTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, CallFunc_BooleanAND_ReturnValue_4) == 0x000E66, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, CallFunc_HasAuthority_ReturnValue_3) == 0x000E67, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::CallFunc_HasAuthority_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, K2Node_CreateDelegate_OutputDelegate_8) == 0x000E68, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, Temp_delegate_Variable_5) == 0x000E7C, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::Temp_delegate_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, CallFunc_K2_SetTimerDelegate_ReturnValue_2) == 0x000E90, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::CallFunc_K2_SetTimerDelegate_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, CallFunc_PlayEvent_playback_instance_5) == 0x000E98, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::CallFunc_PlayEvent_playback_instance_5' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, CallFunc_PlayEvent_play_success_5) == 0x000EA8, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::CallFunc_PlayEvent_play_success_5' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, K2Node_CreateDelegate_OutputDelegate_9) == 0x000EAC, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::K2Node_CreateDelegate_OutputDelegate_9' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, K2Node_Select_Default_1) == 0x000EC0, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, K2Node_CreateDelegate_OutputDelegate_10) == 0x000ECC, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::K2Node_CreateDelegate_OutputDelegate_10' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, CallFunc_HasAuthority_ReturnValue_4) == 0x000EE0, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::CallFunc_HasAuthority_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, CallFunc_GetSpecialistName_ReturnValue) == 0x000EE4, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::CallFunc_GetSpecialistName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, Temp_int_Variable) == 0x000EF0, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, CallFunc_GetTeamID_ReturnValue_4) == 0x000EF4, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::CallFunc_GetTeamID_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, CallFunc_GetPlayerControllersOnTeam_ReturnValue) == 0x000EF8, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::CallFunc_GetPlayerControllersOnTeam_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, CallFunc_Array_Get_Item_2) == 0x000F08, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, CallFunc_Array_Length_ReturnValue_3) == 0x000F10, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, CallFunc_Less_IntInt_ReturnValue_2) == 0x000F14, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, K2Node_DynamicCast_AsCAPlayer_State) == 0x000F18, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::K2Node_DynamicCast_AsCAPlayer_State' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, K2Node_DynamicCast_bSuccess_4) == 0x000F20, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, CallFunc_GetSpecialistName_ReturnValue_1) == 0x000F24, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::CallFunc_GetSpecialistName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000F30, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, CallFunc_Array_Length_ReturnValue_4) == 0x000F34, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x000F38, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, CallFunc_GetGameState_ReturnValue_3) == 0x000F40, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::CallFunc_GetGameState_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, CallFunc_GetTeamID_ReturnValue_5) == 0x000F48, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::CallFunc_GetTeamID_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, CallFunc_HasTeamWiped_ReturnValue) == 0x000F4C, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::CallFunc_HasTeamWiped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, CallFunc_GetTeamID_ReturnValue_6) == 0x000F50, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::CallFunc_GetTeamID_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, Temp_delegate_Variable_6) == 0x000F54, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::Temp_delegate_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, CallFunc_PlayEvent_playback_instance_6) == 0x000F68, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::CallFunc_PlayEvent_playback_instance_6' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, CallFunc_PlayEvent_play_success_6) == 0x000F78, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::CallFunc_PlayEvent_play_success_6' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, K2Node_CreateDelegate_OutputDelegate_11) == 0x000F7C, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::K2Node_CreateDelegate_OutputDelegate_11' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, K2Node_Select_Default_2) == 0x000F90, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, CallFunc_Add_IntInt_ReturnValue_4) == 0x000F9C, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, CallFunc_EqualEqual_IntInt_ReturnValue_3) == 0x000FA0, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::CallFunc_EqualEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, CallFunc_GetDialogueName_ReturnValue) == 0x000FA4, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::CallFunc_GetDialogueName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, CallFunc_Conv_NameToString_ReturnValue) == 0x000FB0, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000FC0, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, CallFunc_GetGameState_ReturnValue_4) == 0x000FD0, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::CallFunc_GetGameState_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, CallFunc_GetTeamID_ReturnValue_7) == 0x000FD8, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::CallFunc_GetTeamID_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, CallFunc_HasTeamWiped_ReturnValue_1) == 0x000FDC, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::CallFunc_HasTeamWiped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, CallFunc_GetPlayerControllersOnTeam_ReturnValue_1) == 0x000FE0, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::CallFunc_GetPlayerControllersOnTeam_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, CallFunc_Array_Get_Item_3) == 0x000FF0, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, CallFunc_Array_Length_ReturnValue_5) == 0x000FF8, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::CallFunc_Array_Length_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, CallFunc_Less_IntInt_ReturnValue_3) == 0x000FFC, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, K2Node_DynamicCast_AsCAPlayer_State_1) == 0x001000, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::K2Node_DynamicCast_AsCAPlayer_State_1' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, K2Node_DynamicCast_bSuccess_5) == 0x001008, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, CallFunc_GetKillerTeamID_ReturnValue) == 0x00100C, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::CallFunc_GetKillerTeamID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ExecuteUbergraph_BP_Player, CallFunc_Array_AddUnique_ReturnValue_2) == 0x001010, "Member 'BP_Player_C_ExecuteUbergraph_BP_Player::CallFunc_Array_AddUnique_ReturnValue_2' has a wrong offset!");

// Function BP_Player.BP_Player_C.OnShowAreaStateCheckbox
// 0x0001 (0x0001 - 0x0000)
struct BP_Player_C_OnShowAreaStateCheckbox final
{
public:
	bool                                          Value;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Player_C_OnShowAreaStateCheckbox) == 0x000001, "Wrong alignment on BP_Player_C_OnShowAreaStateCheckbox");
static_assert(sizeof(BP_Player_C_OnShowAreaStateCheckbox) == 0x000001, "Wrong size on BP_Player_C_OnShowAreaStateCheckbox");
static_assert(offsetof(BP_Player_C_OnShowAreaStateCheckbox, Value) == 0x000000, "Member 'BP_Player_C_OnShowAreaStateCheckbox::Value' has a wrong offset!");

// Function BP_Player.BP_Player_C.OnSecurityAreaStatechanged
// 0x0001 (0x0001 - 0x0000)
struct BP_Player_C_OnSecurityAreaStatechanged final
{
public:
	ECASecurityAreaState                          New_area_state;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Player_C_OnSecurityAreaStatechanged) == 0x000001, "Wrong alignment on BP_Player_C_OnSecurityAreaStatechanged");
static_assert(sizeof(BP_Player_C_OnSecurityAreaStatechanged) == 0x000001, "Wrong size on BP_Player_C_OnSecurityAreaStatechanged");
static_assert(offsetof(BP_Player_C_OnSecurityAreaStatechanged, New_area_state) == 0x000000, "Member 'BP_Player_C_OnSecurityAreaStatechanged::New_area_state' has a wrong offset!");

// Function BP_Player.BP_Player_C.onKillEnemy
// 0x0008 (0x0008 - 0x0000)
struct BP_Player_C_OnKillEnemy final
{
public:
	const class ACACharacter*                     Character_0;                                       // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Player_C_OnKillEnemy) == 0x000008, "Wrong alignment on BP_Player_C_OnKillEnemy");
static_assert(sizeof(BP_Player_C_OnKillEnemy) == 0x000008, "Wrong size on BP_Player_C_OnKillEnemy");
static_assert(offsetof(BP_Player_C_OnKillEnemy, Character_0) == 0x000000, "Member 'BP_Player_C_OnKillEnemy::Character_0' has a wrong offset!");

// Function BP_Player.BP_Player_C.BndEvt__BP_Player_m_ability_system_component_K2Node_ComponentBoundEvent_7_OnHitReceived__DelegateSignature
// 0x02F8 (0x02F8 - 0x0000)
struct BP_Player_C_BndEvt__BP_Player_m_ability_system_component_K2Node_ComponentBoundEvent_7_OnHitReceived__DelegateSignature final
{
public:
	struct FCADamageEffectInfo                    Damage_effect_info;                                // 0x0000(0x02F8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_Player_C_BndEvt__BP_Player_m_ability_system_component_K2Node_ComponentBoundEvent_7_OnHitReceived__DelegateSignature) == 0x000008, "Wrong alignment on BP_Player_C_BndEvt__BP_Player_m_ability_system_component_K2Node_ComponentBoundEvent_7_OnHitReceived__DelegateSignature");
static_assert(sizeof(BP_Player_C_BndEvt__BP_Player_m_ability_system_component_K2Node_ComponentBoundEvent_7_OnHitReceived__DelegateSignature) == 0x0002F8, "Wrong size on BP_Player_C_BndEvt__BP_Player_m_ability_system_component_K2Node_ComponentBoundEvent_7_OnHitReceived__DelegateSignature");
static_assert(offsetof(BP_Player_C_BndEvt__BP_Player_m_ability_system_component_K2Node_ComponentBoundEvent_7_OnHitReceived__DelegateSignature, Damage_effect_info) == 0x000000, "Member 'BP_Player_C_BndEvt__BP_Player_m_ability_system_component_K2Node_ComponentBoundEvent_7_OnHitReceived__DelegateSignature::Damage_effect_info' has a wrong offset!");

// Function BP_Player.BP_Player_C.GravityStateChanged
// 0x0001 (0x0001 - 0x0000)
struct BP_Player_C_GravityStateChanged final
{
public:
	bool                                          New_state;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Player_C_GravityStateChanged) == 0x000001, "Wrong alignment on BP_Player_C_GravityStateChanged");
static_assert(sizeof(BP_Player_C_GravityStateChanged) == 0x000001, "Wrong size on BP_Player_C_GravityStateChanged");
static_assert(offsetof(BP_Player_C_GravityStateChanged, New_state) == 0x000000, "Member 'BP_Player_C_GravityStateChanged::New_state' has a wrong offset!");

// Function BP_Player.BP_Player_C.BndEvt__BP_Player_m_ability_system_component_K2Node_ComponentBoundEvent_10_OnZeroHealth__DelegateSignature
// 0x02A0 (0x02A0 - 0x0000)
struct BP_Player_C_BndEvt__BP_Player_m_ability_system_component_K2Node_ComponentBoundEvent_10_OnZeroHealth__DelegateSignature final
{
public:
	struct FGameplayEffectSpec                    Killing_effect_spec;                               // 0x0000(0x0298)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	float                                         Delta_value;                                       // 0x0298(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Player_C_BndEvt__BP_Player_m_ability_system_component_K2Node_ComponentBoundEvent_10_OnZeroHealth__DelegateSignature) == 0x000008, "Wrong alignment on BP_Player_C_BndEvt__BP_Player_m_ability_system_component_K2Node_ComponentBoundEvent_10_OnZeroHealth__DelegateSignature");
static_assert(sizeof(BP_Player_C_BndEvt__BP_Player_m_ability_system_component_K2Node_ComponentBoundEvent_10_OnZeroHealth__DelegateSignature) == 0x0002A0, "Wrong size on BP_Player_C_BndEvt__BP_Player_m_ability_system_component_K2Node_ComponentBoundEvent_10_OnZeroHealth__DelegateSignature");
static_assert(offsetof(BP_Player_C_BndEvt__BP_Player_m_ability_system_component_K2Node_ComponentBoundEvent_10_OnZeroHealth__DelegateSignature, Killing_effect_spec) == 0x000000, "Member 'BP_Player_C_BndEvt__BP_Player_m_ability_system_component_K2Node_ComponentBoundEvent_10_OnZeroHealth__DelegateSignature::Killing_effect_spec' has a wrong offset!");
static_assert(offsetof(BP_Player_C_BndEvt__BP_Player_m_ability_system_component_K2Node_ComponentBoundEvent_10_OnZeroHealth__DelegateSignature, Delta_value) == 0x000298, "Member 'BP_Player_C_BndEvt__BP_Player_m_ability_system_component_K2Node_ComponentBoundEvent_10_OnZeroHealth__DelegateSignature::Delta_value' has a wrong offset!");

// Function BP_Player.BP_Player_C.BndEvt__BP_Player_CharacterMovement_K2Node_ComponentBoundEvent_9_PlayerMovementModeChangedSignature__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct BP_Player_C_BndEvt__BP_Player_CharacterMovement_K2Node_ComponentBoundEvent_9_PlayerMovementModeChangedSignature__DelegateSignature final
{
public:
	class ACharacter*                             Character_0;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECAPlayerMovementMode                         PrevMovementMode;                                  // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECAPlayerMovementMode                         MovementMode;                                      // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Player_C_BndEvt__BP_Player_CharacterMovement_K2Node_ComponentBoundEvent_9_PlayerMovementModeChangedSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_Player_C_BndEvt__BP_Player_CharacterMovement_K2Node_ComponentBoundEvent_9_PlayerMovementModeChangedSignature__DelegateSignature");
static_assert(sizeof(BP_Player_C_BndEvt__BP_Player_CharacterMovement_K2Node_ComponentBoundEvent_9_PlayerMovementModeChangedSignature__DelegateSignature) == 0x000010, "Wrong size on BP_Player_C_BndEvt__BP_Player_CharacterMovement_K2Node_ComponentBoundEvent_9_PlayerMovementModeChangedSignature__DelegateSignature");
static_assert(offsetof(BP_Player_C_BndEvt__BP_Player_CharacterMovement_K2Node_ComponentBoundEvent_9_PlayerMovementModeChangedSignature__DelegateSignature, Character_0) == 0x000000, "Member 'BP_Player_C_BndEvt__BP_Player_CharacterMovement_K2Node_ComponentBoundEvent_9_PlayerMovementModeChangedSignature__DelegateSignature::Character_0' has a wrong offset!");
static_assert(offsetof(BP_Player_C_BndEvt__BP_Player_CharacterMovement_K2Node_ComponentBoundEvent_9_PlayerMovementModeChangedSignature__DelegateSignature, PrevMovementMode) == 0x000008, "Member 'BP_Player_C_BndEvt__BP_Player_CharacterMovement_K2Node_ComponentBoundEvent_9_PlayerMovementModeChangedSignature__DelegateSignature::PrevMovementMode' has a wrong offset!");
static_assert(offsetof(BP_Player_C_BndEvt__BP_Player_CharacterMovement_K2Node_ComponentBoundEvent_9_PlayerMovementModeChangedSignature__DelegateSignature, MovementMode) == 0x000009, "Member 'BP_Player_C_BndEvt__BP_Player_CharacterMovement_K2Node_ComponentBoundEvent_9_PlayerMovementModeChangedSignature__DelegateSignature::MovementMode' has a wrong offset!");

// Function BP_Player.BP_Player_C.BndEvt__BP_Player_CharacterMovement_K2Node_ComponentBoundEvent_5_PlayerMovementMetaModeChangedSignature__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct BP_Player_C_BndEvt__BP_Player_CharacterMovement_K2Node_ComponentBoundEvent_5_PlayerMovementMetaModeChangedSignature__DelegateSignature final
{
public:
	class ACharacter*                             Character_0;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECAPlayerMovementMetaMode                     PrevMovementMetaMode;                              // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECAPlayerMovementMetaMode                     MovementMetaMode;                                  // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Player_C_BndEvt__BP_Player_CharacterMovement_K2Node_ComponentBoundEvent_5_PlayerMovementMetaModeChangedSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_Player_C_BndEvt__BP_Player_CharacterMovement_K2Node_ComponentBoundEvent_5_PlayerMovementMetaModeChangedSignature__DelegateSignature");
static_assert(sizeof(BP_Player_C_BndEvt__BP_Player_CharacterMovement_K2Node_ComponentBoundEvent_5_PlayerMovementMetaModeChangedSignature__DelegateSignature) == 0x000010, "Wrong size on BP_Player_C_BndEvt__BP_Player_CharacterMovement_K2Node_ComponentBoundEvent_5_PlayerMovementMetaModeChangedSignature__DelegateSignature");
static_assert(offsetof(BP_Player_C_BndEvt__BP_Player_CharacterMovement_K2Node_ComponentBoundEvent_5_PlayerMovementMetaModeChangedSignature__DelegateSignature, Character_0) == 0x000000, "Member 'BP_Player_C_BndEvt__BP_Player_CharacterMovement_K2Node_ComponentBoundEvent_5_PlayerMovementMetaModeChangedSignature__DelegateSignature::Character_0' has a wrong offset!");
static_assert(offsetof(BP_Player_C_BndEvt__BP_Player_CharacterMovement_K2Node_ComponentBoundEvent_5_PlayerMovementMetaModeChangedSignature__DelegateSignature, PrevMovementMetaMode) == 0x000008, "Member 'BP_Player_C_BndEvt__BP_Player_CharacterMovement_K2Node_ComponentBoundEvent_5_PlayerMovementMetaModeChangedSignature__DelegateSignature::PrevMovementMetaMode' has a wrong offset!");
static_assert(offsetof(BP_Player_C_BndEvt__BP_Player_CharacterMovement_K2Node_ComponentBoundEvent_5_PlayerMovementMetaModeChangedSignature__DelegateSignature, MovementMetaMode) == 0x000009, "Member 'BP_Player_C_BndEvt__BP_Player_CharacterMovement_K2Node_ComponentBoundEvent_5_PlayerMovementMetaModeChangedSignature__DelegateSignature::MovementMetaMode' has a wrong offset!");

// Function BP_Player.BP_Player_C.OnPlayerHealthStateChanged
// 0x0001 (0x0001 - 0x0000)
struct BP_Player_C_OnPlayerHealthStateChanged final
{
public:
	EHealthState                                  Health_state;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Player_C_OnPlayerHealthStateChanged) == 0x000001, "Wrong alignment on BP_Player_C_OnPlayerHealthStateChanged");
static_assert(sizeof(BP_Player_C_OnPlayerHealthStateChanged) == 0x000001, "Wrong size on BP_Player_C_OnPlayerHealthStateChanged");
static_assert(offsetof(BP_Player_C_OnPlayerHealthStateChanged, Health_state) == 0x000000, "Member 'BP_Player_C_OnPlayerHealthStateChanged::Health_state' has a wrong offset!");

// Function BP_Player.BP_Player_C.GravhookStateChangeEvent
// 0x0001 (0x0001 - 0x0000)
struct BP_Player_C_GravhookStateChangeEvent final
{
public:
	ECAGravHookStateChange                        State_change;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Player_C_GravhookStateChangeEvent) == 0x000001, "Wrong alignment on BP_Player_C_GravhookStateChangeEvent");
static_assert(sizeof(BP_Player_C_GravhookStateChangeEvent) == 0x000001, "Wrong size on BP_Player_C_GravhookStateChangeEvent");
static_assert(offsetof(BP_Player_C_GravhookStateChangeEvent, State_change) == 0x000000, "Member 'BP_Player_C_GravhookStateChangeEvent::State_change' has a wrong offset!");

// Function BP_Player.BP_Player_C.EndConstantHitAudio
// 0x0008 (0x0008 - 0x0000)
struct BP_Player_C_EndConstantHitAudio final
{
public:
	const class ACAEquipmentBase*                 Hit_instigator;                                    // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Player_C_EndConstantHitAudio) == 0x000008, "Wrong alignment on BP_Player_C_EndConstantHitAudio");
static_assert(sizeof(BP_Player_C_EndConstantHitAudio) == 0x000008, "Wrong size on BP_Player_C_EndConstantHitAudio");
static_assert(offsetof(BP_Player_C_EndConstantHitAudio, Hit_instigator) == 0x000000, "Member 'BP_Player_C_EndConstantHitAudio::Hit_instigator' has a wrong offset!");

// Function BP_Player.BP_Player_C.StartConstantHitAudio
// 0x0068 (0x0068 - 0x0000)
struct BP_Player_C_StartConstantHitAudio final
{
public:
	struct FNetworkedHit                          Networked_hit;                                     // 0x0000(0x0068)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(BP_Player_C_StartConstantHitAudio) == 0x000008, "Wrong alignment on BP_Player_C_StartConstantHitAudio");
static_assert(sizeof(BP_Player_C_StartConstantHitAudio) == 0x000068, "Wrong size on BP_Player_C_StartConstantHitAudio");
static_assert(offsetof(BP_Player_C_StartConstantHitAudio, Networked_hit) == 0x000000, "Member 'BP_Player_C_StartConstantHitAudio::Networked_hit' has a wrong offset!");

// Function BP_Player.BP_Player_C.BndEvt__GravityWarning_K2Node_ComponentBoundEvent_15_GameplayTagChanged__DelegateSignature
// 0x000C (0x000C - 0x0000)
struct BP_Player_C_BndEvt__GravityWarning_K2Node_ComponentBoundEvent_15_GameplayTagChanged__DelegateSignature final
{
public:
	struct FGameplayTag                           Tag;                                               // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Player_C_BndEvt__GravityWarning_K2Node_ComponentBoundEvent_15_GameplayTagChanged__DelegateSignature) == 0x000004, "Wrong alignment on BP_Player_C_BndEvt__GravityWarning_K2Node_ComponentBoundEvent_15_GameplayTagChanged__DelegateSignature");
static_assert(sizeof(BP_Player_C_BndEvt__GravityWarning_K2Node_ComponentBoundEvent_15_GameplayTagChanged__DelegateSignature) == 0x00000C, "Wrong size on BP_Player_C_BndEvt__GravityWarning_K2Node_ComponentBoundEvent_15_GameplayTagChanged__DelegateSignature");
static_assert(offsetof(BP_Player_C_BndEvt__GravityWarning_K2Node_ComponentBoundEvent_15_GameplayTagChanged__DelegateSignature, Tag) == 0x000000, "Member 'BP_Player_C_BndEvt__GravityWarning_K2Node_ComponentBoundEvent_15_GameplayTagChanged__DelegateSignature::Tag' has a wrong offset!");

// Function BP_Player.BP_Player_C.BndEvt__GravityWarning_K2Node_ComponentBoundEvent_14_GameplayTagChanged__DelegateSignature
// 0x000C (0x000C - 0x0000)
struct BP_Player_C_BndEvt__GravityWarning_K2Node_ComponentBoundEvent_14_GameplayTagChanged__DelegateSignature final
{
public:
	struct FGameplayTag                           Tag;                                               // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Player_C_BndEvt__GravityWarning_K2Node_ComponentBoundEvent_14_GameplayTagChanged__DelegateSignature) == 0x000004, "Wrong alignment on BP_Player_C_BndEvt__GravityWarning_K2Node_ComponentBoundEvent_14_GameplayTagChanged__DelegateSignature");
static_assert(sizeof(BP_Player_C_BndEvt__GravityWarning_K2Node_ComponentBoundEvent_14_GameplayTagChanged__DelegateSignature) == 0x00000C, "Wrong size on BP_Player_C_BndEvt__GravityWarning_K2Node_ComponentBoundEvent_14_GameplayTagChanged__DelegateSignature");
static_assert(offsetof(BP_Player_C_BndEvt__GravityWarning_K2Node_ComponentBoundEvent_14_GameplayTagChanged__DelegateSignature, Tag) == 0x000000, "Member 'BP_Player_C_BndEvt__GravityWarning_K2Node_ComponentBoundEvent_14_GameplayTagChanged__DelegateSignature::Tag' has a wrong offset!");

// Function BP_Player.BP_Player_C.OnTeleportOutBegin
// 0x0004 (0x0004 - 0x0000)
struct BP_Player_C_OnTeleportOutBegin final
{
public:
	float                                         Teleport_duration;                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Player_C_OnTeleportOutBegin) == 0x000004, "Wrong alignment on BP_Player_C_OnTeleportOutBegin");
static_assert(sizeof(BP_Player_C_OnTeleportOutBegin) == 0x000004, "Wrong size on BP_Player_C_OnTeleportOutBegin");
static_assert(offsetof(BP_Player_C_OnTeleportOutBegin, Teleport_duration) == 0x000000, "Member 'BP_Player_C_OnTeleportOutBegin::Teleport_duration' has a wrong offset!");

// Function BP_Player.BP_Player_C.OnTeleportInBegin
// 0x0004 (0x0004 - 0x0000)
struct BP_Player_C_OnTeleportInBegin final
{
public:
	float                                         Teleport_duration;                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Player_C_OnTeleportInBegin) == 0x000004, "Wrong alignment on BP_Player_C_OnTeleportInBegin");
static_assert(sizeof(BP_Player_C_OnTeleportInBegin) == 0x000004, "Wrong size on BP_Player_C_OnTeleportInBegin");
static_assert(offsetof(BP_Player_C_OnTeleportInBegin, Teleport_duration) == 0x000000, "Member 'BP_Player_C_OnTeleportInBegin::Teleport_duration' has a wrong offset!");

// Function BP_Player.BP_Player_C.BndEvt__m_hit_reaction_component_K2Node_ComponentBoundEvent_13_HitRecievedSignature__DelegateSignature
// 0x0068 (0x0068 - 0x0000)
struct BP_Player_C_BndEvt__m_hit_reaction_component_K2Node_ComponentBoundEvent_13_HitRecievedSignature__DelegateSignature final
{
public:
	struct FNetworkedHit                          Hit;                                               // 0x0000(0x0068)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(BP_Player_C_BndEvt__m_hit_reaction_component_K2Node_ComponentBoundEvent_13_HitRecievedSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_Player_C_BndEvt__m_hit_reaction_component_K2Node_ComponentBoundEvent_13_HitRecievedSignature__DelegateSignature");
static_assert(sizeof(BP_Player_C_BndEvt__m_hit_reaction_component_K2Node_ComponentBoundEvent_13_HitRecievedSignature__DelegateSignature) == 0x000068, "Wrong size on BP_Player_C_BndEvt__m_hit_reaction_component_K2Node_ComponentBoundEvent_13_HitRecievedSignature__DelegateSignature");
static_assert(offsetof(BP_Player_C_BndEvt__m_hit_reaction_component_K2Node_ComponentBoundEvent_13_HitRecievedSignature__DelegateSignature, Hit) == 0x000000, "Member 'BP_Player_C_BndEvt__m_hit_reaction_component_K2Node_ComponentBoundEvent_13_HitRecievedSignature__DelegateSignature::Hit' has a wrong offset!");

// Function BP_Player.BP_Player_C.FoamChanged
// 0x0004 (0x0004 - 0x0000)
struct BP_Player_C_FoamChanged final
{
public:
	float                                         Percentage;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Player_C_FoamChanged) == 0x000004, "Wrong alignment on BP_Player_C_FoamChanged");
static_assert(sizeof(BP_Player_C_FoamChanged) == 0x000004, "Wrong size on BP_Player_C_FoamChanged");
static_assert(offsetof(BP_Player_C_FoamChanged, Percentage) == 0x000000, "Member 'BP_Player_C_FoamChanged::Percentage' has a wrong offset!");

// Function BP_Player.BP_Player_C.Player_ADS
// 0x0002 (0x0002 - 0x0000)
struct BP_Player_C_Player_ADS final
{
public:
	ECAPlayerAbilityMode                          Ability;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Starting;                                          // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Player_C_Player_ADS) == 0x000001, "Wrong alignment on BP_Player_C_Player_ADS");
static_assert(sizeof(BP_Player_C_Player_ADS) == 0x000002, "Wrong size on BP_Player_C_Player_ADS");
static_assert(offsetof(BP_Player_C_Player_ADS, Ability) == 0x000000, "Member 'BP_Player_C_Player_ADS::Ability' has a wrong offset!");
static_assert(offsetof(BP_Player_C_Player_ADS, Starting) == 0x000001, "Member 'BP_Player_C_Player_ADS::Starting' has a wrong offset!");

// Function BP_Player.BP_Player_C.OnDeath
// 0x0318 (0x0318 - 0x0000)
struct BP_Player_C_OnDeath final
{
public:
	class ACACharacter*                           Character_0;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectSpec                    Death_gameplay_effect_spec;                        // 0x0008(0x0298)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	float                                         Damage_magnitude;                                  // 0x02A0(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A4[0x4];                                      // 0x02A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FNetworkedHit                          Networked_hit;                                     // 0x02A8(0x0068)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	const class AActor*                           Killer;                                            // 0x0310(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Player_C_OnDeath) == 0x000008, "Wrong alignment on BP_Player_C_OnDeath");
static_assert(sizeof(BP_Player_C_OnDeath) == 0x000318, "Wrong size on BP_Player_C_OnDeath");
static_assert(offsetof(BP_Player_C_OnDeath, Character_0) == 0x000000, "Member 'BP_Player_C_OnDeath::Character_0' has a wrong offset!");
static_assert(offsetof(BP_Player_C_OnDeath, Death_gameplay_effect_spec) == 0x000008, "Member 'BP_Player_C_OnDeath::Death_gameplay_effect_spec' has a wrong offset!");
static_assert(offsetof(BP_Player_C_OnDeath, Damage_magnitude) == 0x0002A0, "Member 'BP_Player_C_OnDeath::Damage_magnitude' has a wrong offset!");
static_assert(offsetof(BP_Player_C_OnDeath, Networked_hit) == 0x0002A8, "Member 'BP_Player_C_OnDeath::Networked_hit' has a wrong offset!");
static_assert(offsetof(BP_Player_C_OnDeath, Killer) == 0x000310, "Member 'BP_Player_C_OnDeath::Killer' has a wrong offset!");

// Function BP_Player.BP_Player_C.ProcessWeaponMovementPushback
// 0x0004 (0x0004 - 0x0000)
struct BP_Player_C_ProcessWeaponMovementPushback final
{
public:
	float                                         WeaponTimeBetweenShots;                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Player_C_ProcessWeaponMovementPushback) == 0x000004, "Wrong alignment on BP_Player_C_ProcessWeaponMovementPushback");
static_assert(sizeof(BP_Player_C_ProcessWeaponMovementPushback) == 0x000004, "Wrong size on BP_Player_C_ProcessWeaponMovementPushback");
static_assert(offsetof(BP_Player_C_ProcessWeaponMovementPushback, WeaponTimeBetweenShots) == 0x000000, "Member 'BP_Player_C_ProcessWeaponMovementPushback::WeaponTimeBetweenShots' has a wrong offset!");

// Function BP_Player.BP_Player_C.OnPickupItem
// 0x0008 (0x0008 - 0x0000)
struct BP_Player_C_OnPickupItem final
{
public:
	const class UClass*                           Item;                                              // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Player_C_OnPickupItem) == 0x000008, "Wrong alignment on BP_Player_C_OnPickupItem");
static_assert(sizeof(BP_Player_C_OnPickupItem) == 0x000008, "Wrong size on BP_Player_C_OnPickupItem");
static_assert(offsetof(BP_Player_C_OnPickupItem, Item) == 0x000000, "Member 'BP_Player_C_OnPickupItem::Item' has a wrong offset!");

// Function BP_Player.BP_Player_C.CLTUpdateSecurityAreaHUD
// 0x0018 (0x0018 - 0x0000)
struct BP_Player_C_CLTUpdateSecurityAreaHUD final
{
public:
	int32                                         Int;                                               // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         SecurityPlayer;                                    // 0x0008(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_Player_C_CLTUpdateSecurityAreaHUD) == 0x000008, "Wrong alignment on BP_Player_C_CLTUpdateSecurityAreaHUD");
static_assert(sizeof(BP_Player_C_CLTUpdateSecurityAreaHUD) == 0x000018, "Wrong size on BP_Player_C_CLTUpdateSecurityAreaHUD");
static_assert(offsetof(BP_Player_C_CLTUpdateSecurityAreaHUD, Int) == 0x000000, "Member 'BP_Player_C_CLTUpdateSecurityAreaHUD::Int' has a wrong offset!");
static_assert(offsetof(BP_Player_C_CLTUpdateSecurityAreaHUD, SecurityPlayer) == 0x000008, "Member 'BP_Player_C_CLTUpdateSecurityAreaHUD::SecurityPlayer' has a wrong offset!");

// Function BP_Player.BP_Player_C.ReceivePossessed
// 0x0008 (0x0008 - 0x0000)
struct BP_Player_C_ReceivePossessed final
{
public:
	class AController*                            NewController;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Player_C_ReceivePossessed) == 0x000008, "Wrong alignment on BP_Player_C_ReceivePossessed");
static_assert(sizeof(BP_Player_C_ReceivePossessed) == 0x000008, "Wrong size on BP_Player_C_ReceivePossessed");
static_assert(offsetof(BP_Player_C_ReceivePossessed, NewController) == 0x000000, "Member 'BP_Player_C_ReceivePossessed::NewController' has a wrong offset!");

// Function BP_Player.BP_Player_C.K2_OnBecomeViewTarget
// 0x0008 (0x0008 - 0x0000)
struct BP_Player_C_K2_OnBecomeViewTarget final
{
public:
	class APlayerController*                      PC;                                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Player_C_K2_OnBecomeViewTarget) == 0x000008, "Wrong alignment on BP_Player_C_K2_OnBecomeViewTarget");
static_assert(sizeof(BP_Player_C_K2_OnBecomeViewTarget) == 0x000008, "Wrong size on BP_Player_C_K2_OnBecomeViewTarget");
static_assert(offsetof(BP_Player_C_K2_OnBecomeViewTarget, PC) == 0x000000, "Member 'BP_Player_C_K2_OnBecomeViewTarget::PC' has a wrong offset!");

// Function BP_Player.BP_Player_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_Player_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Player_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_Player_C_ReceiveTick");
static_assert(sizeof(BP_Player_C_ReceiveTick) == 0x000004, "Wrong size on BP_Player_C_ReceiveTick");
static_assert(offsetof(BP_Player_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_Player_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_Player.BP_Player_C.InpActEvt_DebugResetHealth_K2Node_InputActionEvent_0
// 0x0020 (0x0020 - 0x0000)
struct BP_Player_C_InpActEvt_DebugResetHealth_K2Node_InputActionEvent_0 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_Player_C_InpActEvt_DebugResetHealth_K2Node_InputActionEvent_0) == 0x000008, "Wrong alignment on BP_Player_C_InpActEvt_DebugResetHealth_K2Node_InputActionEvent_0");
static_assert(sizeof(BP_Player_C_InpActEvt_DebugResetHealth_K2Node_InputActionEvent_0) == 0x000020, "Wrong size on BP_Player_C_InpActEvt_DebugResetHealth_K2Node_InputActionEvent_0");
static_assert(offsetof(BP_Player_C_InpActEvt_DebugResetHealth_K2Node_InputActionEvent_0, Key) == 0x000000, "Member 'BP_Player_C_InpActEvt_DebugResetHealth_K2Node_InputActionEvent_0::Key' has a wrong offset!");

// Function BP_Player.BP_Player_C.UserConstructionScript
// 0x0230 (0x0230 - 0x0000)
struct BP_Player_C_UserConstructionScript final
{
public:
	struct FMountingInfo                          K2Node_MakeStruct_MountingInfo;                    // 0x0000(0x0070)(NoDestructor, ContainsInstancedReference)
	struct FMountingInfo                          K2Node_MakeStruct_MountingInfo_1;                  // 0x0070(0x0070)(NoDestructor, ContainsInstancedReference)
	struct FMountingInfo                          K2Node_MakeStruct_MountingInfo_2;                  // 0x00E0(0x0070)(NoDestructor, ContainsInstancedReference)
	struct FMountingInfo                          K2Node_MakeStruct_MountingInfo_3;                  // 0x0150(0x0070)(NoDestructor, ContainsInstancedReference)
	struct FMountingInfo                          K2Node_MakeStruct_MountingInfo_4;                  // 0x01C0(0x0070)(NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_Player_C_UserConstructionScript) == 0x000010, "Wrong alignment on BP_Player_C_UserConstructionScript");
static_assert(sizeof(BP_Player_C_UserConstructionScript) == 0x000230, "Wrong size on BP_Player_C_UserConstructionScript");
static_assert(offsetof(BP_Player_C_UserConstructionScript, K2Node_MakeStruct_MountingInfo) == 0x000000, "Member 'BP_Player_C_UserConstructionScript::K2Node_MakeStruct_MountingInfo' has a wrong offset!");
static_assert(offsetof(BP_Player_C_UserConstructionScript, K2Node_MakeStruct_MountingInfo_1) == 0x000070, "Member 'BP_Player_C_UserConstructionScript::K2Node_MakeStruct_MountingInfo_1' has a wrong offset!");
static_assert(offsetof(BP_Player_C_UserConstructionScript, K2Node_MakeStruct_MountingInfo_2) == 0x0000E0, "Member 'BP_Player_C_UserConstructionScript::K2Node_MakeStruct_MountingInfo_2' has a wrong offset!");
static_assert(offsetof(BP_Player_C_UserConstructionScript, K2Node_MakeStruct_MountingInfo_3) == 0x000150, "Member 'BP_Player_C_UserConstructionScript::K2Node_MakeStruct_MountingInfo_3' has a wrong offset!");
static_assert(offsetof(BP_Player_C_UserConstructionScript, K2Node_MakeStruct_MountingInfo_4) == 0x0001C0, "Member 'BP_Player_C_UserConstructionScript::K2Node_MakeStruct_MountingInfo_4' has a wrong offset!");

// Function BP_Player.BP_Player_C.RefreshCharacterWeapon
// 0x0018 (0x0018 - 0x0000)
struct BP_Player_C_RefreshCharacterWeapon final
{
public:
	class UCALoadoutComponent*                    CallFunc_GetPlayerLoadout_ReturnValue;             // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACAEquipmentBase*                       CallFunc_GetCurrentlyHeldDevice_ReturnValue;       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Player_C_RefreshCharacterWeapon) == 0x000008, "Wrong alignment on BP_Player_C_RefreshCharacterWeapon");
static_assert(sizeof(BP_Player_C_RefreshCharacterWeapon) == 0x000018, "Wrong size on BP_Player_C_RefreshCharacterWeapon");
static_assert(offsetof(BP_Player_C_RefreshCharacterWeapon, CallFunc_GetPlayerLoadout_ReturnValue) == 0x000000, "Member 'BP_Player_C_RefreshCharacterWeapon::CallFunc_GetPlayerLoadout_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Player_C_RefreshCharacterWeapon, CallFunc_GetCurrentlyHeldDevice_ReturnValue) == 0x000008, "Member 'BP_Player_C_RefreshCharacterWeapon::CallFunc_GetCurrentlyHeldDevice_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Player_C_RefreshCharacterWeapon, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_Player_C_RefreshCharacterWeapon::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_Player.BP_Player_C.IsPlayerInZeroG
// 0x0018 (0x0018 - 0x0000)
struct BP_Player_C_IsPlayerInZeroG final
{
public:
	bool                                          IsInZeroG_0;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCACharacterMovementComponent*          K2Node_DynamicCast_AsCACharacter_Movement_Component; // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECAPlayerMovementMetaMode                     CallFunc_GetPlayerMovementMetaMode_movement_mode;  // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Player_C_IsPlayerInZeroG) == 0x000008, "Wrong alignment on BP_Player_C_IsPlayerInZeroG");
static_assert(sizeof(BP_Player_C_IsPlayerInZeroG) == 0x000018, "Wrong size on BP_Player_C_IsPlayerInZeroG");
static_assert(offsetof(BP_Player_C_IsPlayerInZeroG, IsInZeroG_0) == 0x000000, "Member 'BP_Player_C_IsPlayerInZeroG::IsInZeroG_0' has a wrong offset!");
static_assert(offsetof(BP_Player_C_IsPlayerInZeroG, K2Node_DynamicCast_AsCACharacter_Movement_Component) == 0x000008, "Member 'BP_Player_C_IsPlayerInZeroG::K2Node_DynamicCast_AsCACharacter_Movement_Component' has a wrong offset!");
static_assert(offsetof(BP_Player_C_IsPlayerInZeroG, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_Player_C_IsPlayerInZeroG::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Player_C_IsPlayerInZeroG, CallFunc_GetPlayerMovementMetaMode_movement_mode) == 0x000011, "Member 'BP_Player_C_IsPlayerInZeroG::CallFunc_GetPlayerMovementMetaMode_movement_mode' has a wrong offset!");
static_assert(offsetof(BP_Player_C_IsPlayerInZeroG, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000012, "Member 'BP_Player_C_IsPlayerInZeroG::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Player_C_IsPlayerInZeroG, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000013, "Member 'BP_Player_C_IsPlayerInZeroG::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Player_C_IsPlayerInZeroG, CallFunc_BooleanOR_ReturnValue) == 0x000014, "Member 'BP_Player_C_IsPlayerInZeroG::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_Player.BP_Player_C.IsPlayerMoving
// 0x001C (0x001C - 0x0000)
struct BP_Player_C_IsPlayerMoving final
{
public:
	bool                                          IsMoving_0;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_MakeLiteralFloat_ReturnValue;             // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x0008(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSizeSquared_ReturnValue;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Player_C_IsPlayerMoving) == 0x000004, "Wrong alignment on BP_Player_C_IsPlayerMoving");
static_assert(sizeof(BP_Player_C_IsPlayerMoving) == 0x00001C, "Wrong size on BP_Player_C_IsPlayerMoving");
static_assert(offsetof(BP_Player_C_IsPlayerMoving, IsMoving_0) == 0x000000, "Member 'BP_Player_C_IsPlayerMoving::IsMoving_0' has a wrong offset!");
static_assert(offsetof(BP_Player_C_IsPlayerMoving, CallFunc_MakeLiteralFloat_ReturnValue) == 0x000004, "Member 'BP_Player_C_IsPlayerMoving::CallFunc_MakeLiteralFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Player_C_IsPlayerMoving, CallFunc_GetVelocity_ReturnValue) == 0x000008, "Member 'BP_Player_C_IsPlayerMoving::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Player_C_IsPlayerMoving, CallFunc_VSizeSquared_ReturnValue) == 0x000014, "Member 'BP_Player_C_IsPlayerMoving::CallFunc_VSizeSquared_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Player_C_IsPlayerMoving, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000018, "Member 'BP_Player_C_IsPlayerMoving::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_Player.BP_Player_C.UpdateTeamOutline
// 0x0068 (0x0068 - 0x0000)
struct BP_Player_C_UpdateTeamOutline final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EOutlineColours                               Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EOutlineColours                               Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EOutlineColours                               K2Node_Select_Default;                             // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCATeamID                              CallFunc_GetTeamID_ReturnValue;                    // 0x0008(0x0004)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FCAAudioEventType& Event_name)> Temp_delegate_Variable;                            // 0x0018(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCAAudioPlaybackInstance               CallFunc_PlayEvent_playback_instance;              // 0x0038(0x0010)()
	bool                                          CallFunc_PlayEvent_play_success;                   // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACACharacter_MainPlayer*                K2Node_DynamicCast_AsCACharacter_Main_Player;      // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LineOfSightTo_ReturnValue;                // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAimingDownSights_ReturnValue;           // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x005B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FCATeamID                              CallFunc_GetTeamID_ReturnValue_1;                  // 0x005C(0x0004)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_TeamIDTeamID_ReturnValue;      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0063(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Player_C_UpdateTeamOutline) == 0x000008, "Wrong alignment on BP_Player_C_UpdateTeamOutline");
static_assert(sizeof(BP_Player_C_UpdateTeamOutline) == 0x000068, "Wrong size on BP_Player_C_UpdateTeamOutline");
static_assert(offsetof(BP_Player_C_UpdateTeamOutline, Temp_bool_Variable) == 0x000000, "Member 'BP_Player_C_UpdateTeamOutline::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_Player_C_UpdateTeamOutline, Temp_byte_Variable) == 0x000001, "Member 'BP_Player_C_UpdateTeamOutline::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_Player_C_UpdateTeamOutline, Temp_byte_Variable_1) == 0x000002, "Member 'BP_Player_C_UpdateTeamOutline::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Player_C_UpdateTeamOutline, CallFunc_HasAuthority_ReturnValue) == 0x000003, "Member 'BP_Player_C_UpdateTeamOutline::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Player_C_UpdateTeamOutline, CallFunc_IsLocallyControlled_ReturnValue) == 0x000004, "Member 'BP_Player_C_UpdateTeamOutline::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Player_C_UpdateTeamOutline, K2Node_Select_Default) == 0x000005, "Member 'BP_Player_C_UpdateTeamOutline::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_Player_C_UpdateTeamOutline, CallFunc_GetTeamID_ReturnValue) == 0x000008, "Member 'BP_Player_C_UpdateTeamOutline::CallFunc_GetTeamID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Player_C_UpdateTeamOutline, CallFunc_GetPlayerController_ReturnValue) == 0x000010, "Member 'BP_Player_C_UpdateTeamOutline::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Player_C_UpdateTeamOutline, Temp_delegate_Variable) == 0x000018, "Member 'BP_Player_C_UpdateTeamOutline::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(BP_Player_C_UpdateTeamOutline, CallFunc_K2_GetPawn_ReturnValue) == 0x000030, "Member 'BP_Player_C_UpdateTeamOutline::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Player_C_UpdateTeamOutline, CallFunc_PlayEvent_playback_instance) == 0x000038, "Member 'BP_Player_C_UpdateTeamOutline::CallFunc_PlayEvent_playback_instance' has a wrong offset!");
static_assert(offsetof(BP_Player_C_UpdateTeamOutline, CallFunc_PlayEvent_play_success) == 0x000048, "Member 'BP_Player_C_UpdateTeamOutline::CallFunc_PlayEvent_play_success' has a wrong offset!");
static_assert(offsetof(BP_Player_C_UpdateTeamOutline, K2Node_DynamicCast_AsCACharacter_Main_Player) == 0x000050, "Member 'BP_Player_C_UpdateTeamOutline::K2Node_DynamicCast_AsCACharacter_Main_Player' has a wrong offset!");
static_assert(offsetof(BP_Player_C_UpdateTeamOutline, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'BP_Player_C_UpdateTeamOutline::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Player_C_UpdateTeamOutline, CallFunc_LineOfSightTo_ReturnValue) == 0x000059, "Member 'BP_Player_C_UpdateTeamOutline::CallFunc_LineOfSightTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Player_C_UpdateTeamOutline, CallFunc_IsAimingDownSights_ReturnValue) == 0x00005A, "Member 'BP_Player_C_UpdateTeamOutline::CallFunc_IsAimingDownSights_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Player_C_UpdateTeamOutline, CallFunc_Not_PreBool_ReturnValue) == 0x00005B, "Member 'BP_Player_C_UpdateTeamOutline::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Player_C_UpdateTeamOutline, CallFunc_GetTeamID_ReturnValue_1) == 0x00005C, "Member 'BP_Player_C_UpdateTeamOutline::CallFunc_GetTeamID_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Player_C_UpdateTeamOutline, CallFunc_EqualEqual_TeamIDTeamID_ReturnValue) == 0x000060, "Member 'BP_Player_C_UpdateTeamOutline::CallFunc_EqualEqual_TeamIDTeamID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Player_C_UpdateTeamOutline, CallFunc_BooleanAND_ReturnValue) == 0x000061, "Member 'BP_Player_C_UpdateTeamOutline::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Player_C_UpdateTeamOutline, CallFunc_BooleanAND_ReturnValue_1) == 0x000062, "Member 'BP_Player_C_UpdateTeamOutline::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Player_C_UpdateTeamOutline, CallFunc_BooleanOR_ReturnValue) == 0x000063, "Member 'BP_Player_C_UpdateTeamOutline::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Player_C_UpdateTeamOutline, CallFunc_BooleanOR_ReturnValue_1) == 0x000064, "Member 'BP_Player_C_UpdateTeamOutline::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");

// Function BP_Player.BP_Player_C.SetRenderOutline
// 0x000C (0x000C - 0x0000)
struct BP_Player_C_SetRenderOutline final
{
public:
	bool                                          Enable;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         OverrideIndex;                                     // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EOutlineColours                               Colour;                                            // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Player_C_SetRenderOutline) == 0x000004, "Wrong alignment on BP_Player_C_SetRenderOutline");
static_assert(sizeof(BP_Player_C_SetRenderOutline) == 0x00000C, "Wrong size on BP_Player_C_SetRenderOutline");
static_assert(offsetof(BP_Player_C_SetRenderOutline, Enable) == 0x000000, "Member 'BP_Player_C_SetRenderOutline::Enable' has a wrong offset!");
static_assert(offsetof(BP_Player_C_SetRenderOutline, OverrideIndex) == 0x000004, "Member 'BP_Player_C_SetRenderOutline::OverrideIndex' has a wrong offset!");
static_assert(offsetof(BP_Player_C_SetRenderOutline, Colour) == 0x000008, "Member 'BP_Player_C_SetRenderOutline::Colour' has a wrong offset!");

// Function BP_Player.BP_Player_C.ProcessHealthHUD
// 0x0098 (0x0098 - 0x0000)
struct BP_Player_C_ProcessHealthHUD final
{
public:
	EHealthState                                  CallFunc_GetHealthState_ReturnValue;               // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACAPlayerController*                    K2Node_DynamicCast_AsCAPlayer_Controller;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetViewportSize_SizeX;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetViewportSize_SizeY;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetFloatAttributeFromAbilitySystemComponent_bSuccessfullyFoundAttribute; // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatAttributeFromAbilitySystemComponent_ReturnValue; // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHUD*                                   CallFunc_GetHUD_ReturnValue;                       // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABPUI_HUD_InGame_C*                     K2Node_DynamicCast_AsBPUI_HUD_in_Game;             // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x005C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCAHUD_Debug_TextLine*                  CallFunc_DisplayText_debug_text_line;              // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCAHUD_Debug_TextLine*                  CallFunc_DisplayText_debug_text_line_1;            // 0x0080(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_2;               // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCAHUD_Debug_TextLine*                  CallFunc_DisplayText_debug_text_line_2;            // 0x0090(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Player_C_ProcessHealthHUD) == 0x000008, "Wrong alignment on BP_Player_C_ProcessHealthHUD");
static_assert(sizeof(BP_Player_C_ProcessHealthHUD) == 0x000098, "Wrong size on BP_Player_C_ProcessHealthHUD");
static_assert(offsetof(BP_Player_C_ProcessHealthHUD, CallFunc_GetHealthState_ReturnValue) == 0x000000, "Member 'BP_Player_C_ProcessHealthHUD::CallFunc_GetHealthState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ProcessHealthHUD, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000001, "Member 'BP_Player_C_ProcessHealthHUD::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ProcessHealthHUD, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000002, "Member 'BP_Player_C_ProcessHealthHUD::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ProcessHealthHUD, CallFunc_IsLocallyControlled_ReturnValue) == 0x000003, "Member 'BP_Player_C_ProcessHealthHUD::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ProcessHealthHUD, CallFunc_GetController_ReturnValue) == 0x000008, "Member 'BP_Player_C_ProcessHealthHUD::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ProcessHealthHUD, K2Node_DynamicCast_AsCAPlayer_Controller) == 0x000010, "Member 'BP_Player_C_ProcessHealthHUD::K2Node_DynamicCast_AsCAPlayer_Controller' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ProcessHealthHUD, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_Player_C_ProcessHealthHUD::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ProcessHealthHUD, CallFunc_GetViewportSize_SizeX) == 0x00001C, "Member 'BP_Player_C_ProcessHealthHUD::CallFunc_GetViewportSize_SizeX' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ProcessHealthHUD, CallFunc_GetViewportSize_SizeY) == 0x000020, "Member 'BP_Player_C_ProcessHealthHUD::CallFunc_GetViewportSize_SizeY' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ProcessHealthHUD, CallFunc_GetFloatAttributeFromAbilitySystemComponent_bSuccessfullyFoundAttribute) == 0x000024, "Member 'BP_Player_C_ProcessHealthHUD::CallFunc_GetFloatAttributeFromAbilitySystemComponent_bSuccessfullyFoundAttribute' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ProcessHealthHUD, CallFunc_GetFloatAttributeFromAbilitySystemComponent_ReturnValue) == 0x000028, "Member 'BP_Player_C_ProcessHealthHUD::CallFunc_GetFloatAttributeFromAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ProcessHealthHUD, CallFunc_Conv_IntToFloat_ReturnValue) == 0x00002C, "Member 'BP_Player_C_ProcessHealthHUD::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ProcessHealthHUD, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000030, "Member 'BP_Player_C_ProcessHealthHUD::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ProcessHealthHUD, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000034, "Member 'BP_Player_C_ProcessHealthHUD::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ProcessHealthHUD, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000038, "Member 'BP_Player_C_ProcessHealthHUD::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ProcessHealthHUD, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x00003C, "Member 'BP_Player_C_ProcessHealthHUD::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ProcessHealthHUD, CallFunc_GetHUD_ReturnValue) == 0x000040, "Member 'BP_Player_C_ProcessHealthHUD::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ProcessHealthHUD, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000048, "Member 'BP_Player_C_ProcessHealthHUD::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ProcessHealthHUD, K2Node_DynamicCast_AsBPUI_HUD_in_Game) == 0x000050, "Member 'BP_Player_C_ProcessHealthHUD::K2Node_DynamicCast_AsBPUI_HUD_in_Game' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ProcessHealthHUD, K2Node_DynamicCast_bSuccess_1) == 0x000058, "Member 'BP_Player_C_ProcessHealthHUD::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ProcessHealthHUD, CallFunc_MakeVector2D_ReturnValue) == 0x00005C, "Member 'BP_Player_C_ProcessHealthHUD::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ProcessHealthHUD, CallFunc_DisplayText_debug_text_line) == 0x000068, "Member 'BP_Player_C_ProcessHealthHUD::CallFunc_DisplayText_debug_text_line' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ProcessHealthHUD, CallFunc_MakeVector2D_ReturnValue_1) == 0x000070, "Member 'BP_Player_C_ProcessHealthHUD::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ProcessHealthHUD, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x000078, "Member 'BP_Player_C_ProcessHealthHUD::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ProcessHealthHUD, CallFunc_DisplayText_debug_text_line_1) == 0x000080, "Member 'BP_Player_C_ProcessHealthHUD::CallFunc_DisplayText_debug_text_line_1' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ProcessHealthHUD, CallFunc_MakeVector2D_ReturnValue_2) == 0x000088, "Member 'BP_Player_C_ProcessHealthHUD::CallFunc_MakeVector2D_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ProcessHealthHUD, CallFunc_DisplayText_debug_text_line_2) == 0x000090, "Member 'BP_Player_C_ProcessHealthHUD::CallFunc_DisplayText_debug_text_line_2' has a wrong offset!");

// Function BP_Player.BP_Player_C.GetHUD
// 0x0038 (0x0038 - 0x0000)
struct BP_Player_C_GetHUD final
{
public:
	class ABPUI_HUD_InGame_C*                     AsBPUI_HUD_in_Game;                                // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACAPlayerController*                    K2Node_DynamicCast_AsCAPlayer_Controller;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUD*                                   CallFunc_GetHUD_ReturnValue;                       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABPUI_HUD_InGame_C*                     K2Node_DynamicCast_AsBPUI_HUD_in_Game;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Player_C_GetHUD) == 0x000008, "Wrong alignment on BP_Player_C_GetHUD");
static_assert(sizeof(BP_Player_C_GetHUD) == 0x000038, "Wrong size on BP_Player_C_GetHUD");
static_assert(offsetof(BP_Player_C_GetHUD, AsBPUI_HUD_in_Game) == 0x000000, "Member 'BP_Player_C_GetHUD::AsBPUI_HUD_in_Game' has a wrong offset!");
static_assert(offsetof(BP_Player_C_GetHUD, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'BP_Player_C_GetHUD::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Player_C_GetHUD, K2Node_DynamicCast_AsCAPlayer_Controller) == 0x000010, "Member 'BP_Player_C_GetHUD::K2Node_DynamicCast_AsCAPlayer_Controller' has a wrong offset!");
static_assert(offsetof(BP_Player_C_GetHUD, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_Player_C_GetHUD::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Player_C_GetHUD, CallFunc_GetHUD_ReturnValue) == 0x000020, "Member 'BP_Player_C_GetHUD::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Player_C_GetHUD, K2Node_DynamicCast_AsBPUI_HUD_in_Game) == 0x000028, "Member 'BP_Player_C_GetHUD::K2Node_DynamicCast_AsBPUI_HUD_in_Game' has a wrong offset!");
static_assert(offsetof(BP_Player_C_GetHUD, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'BP_Player_C_GetHUD::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function BP_Player.BP_Player_C.ProcessProximityPlayerSensor
// 0x00B0 (0x00B0 - 0x0000)
struct BP_Player_C_ProcessProximityPlayerSensor final
{
public:
	int32                                         Quantity;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Array;                                             // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FText                                   ProximityText;                                     // 0x0018(0x0018)(Edit, BlueprintVisible)
	bool                                          EnemyFound;                                        // 0x0030(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0038(0x0018)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_1;                              // 0x0058(0x0018)()
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckActorAlligence_ReturnValue;          // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_82[0x2];                                       // 0x0082(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_92[0x6];                                       // 0x0092(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x0098(0x0018)()
};
static_assert(alignof(BP_Player_C_ProcessProximityPlayerSensor) == 0x000008, "Wrong alignment on BP_Player_C_ProcessProximityPlayerSensor");
static_assert(sizeof(BP_Player_C_ProcessProximityPlayerSensor) == 0x0000B0, "Wrong size on BP_Player_C_ProcessProximityPlayerSensor");
static_assert(offsetof(BP_Player_C_ProcessProximityPlayerSensor, Quantity) == 0x000000, "Member 'BP_Player_C_ProcessProximityPlayerSensor::Quantity' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ProcessProximityPlayerSensor, Array) == 0x000008, "Member 'BP_Player_C_ProcessProximityPlayerSensor::Array' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ProcessProximityPlayerSensor, ProximityText) == 0x000018, "Member 'BP_Player_C_ProcessProximityPlayerSensor::ProximityText' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ProcessProximityPlayerSensor, EnemyFound) == 0x000030, "Member 'BP_Player_C_ProcessProximityPlayerSensor::EnemyFound' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ProcessProximityPlayerSensor, Temp_text_Variable) == 0x000038, "Member 'BP_Player_C_ProcessProximityPlayerSensor::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ProcessProximityPlayerSensor, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'BP_Player_C_ProcessProximityPlayerSensor::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ProcessProximityPlayerSensor, CallFunc_Greater_IntInt_ReturnValue) == 0x000054, "Member 'BP_Player_C_ProcessProximityPlayerSensor::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ProcessProximityPlayerSensor, Temp_text_Variable_1) == 0x000058, "Member 'BP_Player_C_ProcessProximityPlayerSensor::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ProcessProximityPlayerSensor, Temp_bool_True_if_break_was_hit_Variable) == 0x000070, "Member 'BP_Player_C_ProcessProximityPlayerSensor::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ProcessProximityPlayerSensor, Temp_int_Array_Index_Variable) == 0x000074, "Member 'BP_Player_C_ProcessProximityPlayerSensor::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ProcessProximityPlayerSensor, CallFunc_Array_Get_Item) == 0x000078, "Member 'BP_Player_C_ProcessProximityPlayerSensor::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ProcessProximityPlayerSensor, CallFunc_CheckActorAlligence_ReturnValue) == 0x000080, "Member 'BP_Player_C_ProcessProximityPlayerSensor::CallFunc_CheckActorAlligence_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ProcessProximityPlayerSensor, CallFunc_Not_PreBool_ReturnValue) == 0x000081, "Member 'BP_Player_C_ProcessProximityPlayerSensor::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ProcessProximityPlayerSensor, Temp_int_Loop_Counter_Variable) == 0x000084, "Member 'BP_Player_C_ProcessProximityPlayerSensor::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ProcessProximityPlayerSensor, CallFunc_Less_IntInt_ReturnValue) == 0x000088, "Member 'BP_Player_C_ProcessProximityPlayerSensor::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ProcessProximityPlayerSensor, CallFunc_Add_IntInt_ReturnValue) == 0x00008C, "Member 'BP_Player_C_ProcessProximityPlayerSensor::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ProcessProximityPlayerSensor, CallFunc_BooleanAND_ReturnValue) == 0x000090, "Member 'BP_Player_C_ProcessProximityPlayerSensor::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ProcessProximityPlayerSensor, Temp_bool_Variable) == 0x000091, "Member 'BP_Player_C_ProcessProximityPlayerSensor::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ProcessProximityPlayerSensor, K2Node_Select_Default) == 0x000098, "Member 'BP_Player_C_ProcessProximityPlayerSensor::K2Node_Select_Default' has a wrong offset!");

// Function BP_Player.BP_Player_C.CheckActorAlligence
// 0x0018 (0x0018 - 0x0000)
struct BP_Player_C_CheckActorAlligence final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCATeamID                              CallFunc_GetTeamID_ReturnValue;                    // 0x000C(0x0004)(NoDestructor, HasGetValueTypeHash)
	struct FCATeamID                              CallFunc_GetTeamID_ReturnValue_1;                  // 0x0010(0x0004)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_TeamIDTeamID_ReturnValue;      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Player_C_CheckActorAlligence) == 0x000008, "Wrong alignment on BP_Player_C_CheckActorAlligence");
static_assert(sizeof(BP_Player_C_CheckActorAlligence) == 0x000018, "Wrong size on BP_Player_C_CheckActorAlligence");
static_assert(offsetof(BP_Player_C_CheckActorAlligence, Actor) == 0x000000, "Member 'BP_Player_C_CheckActorAlligence::Actor' has a wrong offset!");
static_assert(offsetof(BP_Player_C_CheckActorAlligence, ReturnValue) == 0x000008, "Member 'BP_Player_C_CheckActorAlligence::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Player_C_CheckActorAlligence, CallFunc_GetTeamID_ReturnValue) == 0x00000C, "Member 'BP_Player_C_CheckActorAlligence::CallFunc_GetTeamID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Player_C_CheckActorAlligence, CallFunc_GetTeamID_ReturnValue_1) == 0x000010, "Member 'BP_Player_C_CheckActorAlligence::CallFunc_GetTeamID_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Player_C_CheckActorAlligence, CallFunc_EqualEqual_TeamIDTeamID_ReturnValue) == 0x000014, "Member 'BP_Player_C_CheckActorAlligence::CallFunc_EqualEqual_TeamIDTeamID_ReturnValue' has a wrong offset!");

// Function BP_Player.BP_Player_C.ShowSecurityAreaState
// 0x0050 (0x0050 - 0x0000)
struct BP_Player_C_ShowSecurityAreaState final
{
public:
	ECASecurityAreaState                          Area_state;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABPUI_HUD_InGame_C*                     CallFunc_GetHUD_AsBPUI_HUD_in_Game;                // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetViewportSize_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCAHUD_Debug_TextLine*                  CallFunc_DisplayText_debug_text_line;              // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Player_C_ShowSecurityAreaState) == 0x000008, "Wrong alignment on BP_Player_C_ShowSecurityAreaState");
static_assert(sizeof(BP_Player_C_ShowSecurityAreaState) == 0x000050, "Wrong size on BP_Player_C_ShowSecurityAreaState");
static_assert(offsetof(BP_Player_C_ShowSecurityAreaState, Area_state) == 0x000000, "Member 'BP_Player_C_ShowSecurityAreaState::Area_state' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ShowSecurityAreaState, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000008, "Member 'BP_Player_C_ShowSecurityAreaState::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ShowSecurityAreaState, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_Player_C_ShowSecurityAreaState::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ShowSecurityAreaState, CallFunc_GetHUD_AsBPUI_HUD_in_Game) == 0x000020, "Member 'BP_Player_C_ShowSecurityAreaState::CallFunc_GetHUD_AsBPUI_HUD_in_Game' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ShowSecurityAreaState, CallFunc_GetViewportSize_ReturnValue) == 0x000028, "Member 'BP_Player_C_ShowSecurityAreaState::CallFunc_GetViewportSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ShowSecurityAreaState, CallFunc_BreakVector2D_X) == 0x000030, "Member 'BP_Player_C_ShowSecurityAreaState::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ShowSecurityAreaState, CallFunc_BreakVector2D_Y) == 0x000034, "Member 'BP_Player_C_ShowSecurityAreaState::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ShowSecurityAreaState, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000038, "Member 'BP_Player_C_ShowSecurityAreaState::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ShowSecurityAreaState, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x00003C, "Member 'BP_Player_C_ShowSecurityAreaState::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ShowSecurityAreaState, CallFunc_MakeVector2D_ReturnValue) == 0x000040, "Member 'BP_Player_C_ShowSecurityAreaState::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ShowSecurityAreaState, CallFunc_DisplayText_debug_text_line) == 0x000048, "Member 'BP_Player_C_ShowSecurityAreaState::CallFunc_DisplayText_debug_text_line' has a wrong offset!");

// Function BP_Player.BP_Player_C.IsPlayerInZeroGFlying
// 0x0018 (0x0018 - 0x0000)
struct BP_Player_C_IsPlayerInZeroGFlying final
{
public:
	bool                                          IsInZeroGFlying;                                   // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCACharacterMovementComponent*          K2Node_DynamicCast_AsCACharacter_Movement_Component; // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECAPlayerMovementMode                         CallFunc_GetPlayerMovementMode_movement_mode;      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Player_C_IsPlayerInZeroGFlying) == 0x000008, "Wrong alignment on BP_Player_C_IsPlayerInZeroGFlying");
static_assert(sizeof(BP_Player_C_IsPlayerInZeroGFlying) == 0x000018, "Wrong size on BP_Player_C_IsPlayerInZeroGFlying");
static_assert(offsetof(BP_Player_C_IsPlayerInZeroGFlying, IsInZeroGFlying) == 0x000000, "Member 'BP_Player_C_IsPlayerInZeroGFlying::IsInZeroGFlying' has a wrong offset!");
static_assert(offsetof(BP_Player_C_IsPlayerInZeroGFlying, K2Node_DynamicCast_AsCACharacter_Movement_Component) == 0x000008, "Member 'BP_Player_C_IsPlayerInZeroGFlying::K2Node_DynamicCast_AsCACharacter_Movement_Component' has a wrong offset!");
static_assert(offsetof(BP_Player_C_IsPlayerInZeroGFlying, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_Player_C_IsPlayerInZeroGFlying::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Player_C_IsPlayerInZeroGFlying, CallFunc_GetPlayerMovementMode_movement_mode) == 0x000011, "Member 'BP_Player_C_IsPlayerInZeroGFlying::CallFunc_GetPlayerMovementMode_movement_mode' has a wrong offset!");
static_assert(offsetof(BP_Player_C_IsPlayerInZeroGFlying, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000012, "Member 'BP_Player_C_IsPlayerInZeroGFlying::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_Player.BP_Player_C.IsPlayerGrabbingObjective
// 0x0018 (0x0018 - 0x0000)
struct BP_Player_C_IsPlayerGrabbingObjective final
{
public:
	bool                                          Is_grabbing;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EHealthState                                  CallFunc_GetHealthState_ReturnValue;               // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UCALoadoutComponent*                    CallFunc_GetPlayerLoadout_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EFLoadoutState                                CallFunc_GetCurrentLoadoutState_ReturnValue;       // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Player_C_IsPlayerGrabbingObjective) == 0x000008, "Wrong alignment on BP_Player_C_IsPlayerGrabbingObjective");
static_assert(sizeof(BP_Player_C_IsPlayerGrabbingObjective) == 0x000018, "Wrong size on BP_Player_C_IsPlayerGrabbingObjective");
static_assert(offsetof(BP_Player_C_IsPlayerGrabbingObjective, Is_grabbing) == 0x000000, "Member 'BP_Player_C_IsPlayerGrabbingObjective::Is_grabbing' has a wrong offset!");
static_assert(offsetof(BP_Player_C_IsPlayerGrabbingObjective, CallFunc_GetHealthState_ReturnValue) == 0x000001, "Member 'BP_Player_C_IsPlayerGrabbingObjective::CallFunc_GetHealthState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Player_C_IsPlayerGrabbingObjective, CallFunc_GetPlayerLoadout_ReturnValue) == 0x000008, "Member 'BP_Player_C_IsPlayerGrabbingObjective::CallFunc_GetPlayerLoadout_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Player_C_IsPlayerGrabbingObjective, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000010, "Member 'BP_Player_C_IsPlayerGrabbingObjective::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Player_C_IsPlayerGrabbingObjective, CallFunc_GetCurrentLoadoutState_ReturnValue) == 0x000011, "Member 'BP_Player_C_IsPlayerGrabbingObjective::CallFunc_GetCurrentLoadoutState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Player_C_IsPlayerGrabbingObjective, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000012, "Member 'BP_Player_C_IsPlayerGrabbingObjective::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Player_C_IsPlayerGrabbingObjective, CallFunc_BooleanAND_ReturnValue) == 0x000013, "Member 'BP_Player_C_IsPlayerGrabbingObjective::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_Player.BP_Player_C.ProcessOnArmourBreak
// 0x0020 (0x0020 - 0x0000)
struct BP_Player_C_ProcessOnArmourBreak final
{
public:
	bool                                          CallFunc_IsBeingViewed_ReturnValue;                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_ArmourBreak_C*                      CallFunc_SpawnCAAttachedEffect_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Player_C_ProcessOnArmourBreak) == 0x000008, "Wrong alignment on BP_Player_C_ProcessOnArmourBreak");
static_assert(sizeof(BP_Player_C_ProcessOnArmourBreak) == 0x000020, "Wrong size on BP_Player_C_ProcessOnArmourBreak");
static_assert(offsetof(BP_Player_C_ProcessOnArmourBreak, CallFunc_IsBeingViewed_ReturnValue) == 0x000000, "Member 'BP_Player_C_ProcessOnArmourBreak::CallFunc_IsBeingViewed_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ProcessOnArmourBreak, CallFunc_IsDedicatedServer_ReturnValue) == 0x000001, "Member 'BP_Player_C_ProcessOnArmourBreak::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ProcessOnArmourBreak, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000008, "Member 'BP_Player_C_ProcessOnArmourBreak::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ProcessOnArmourBreak, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_Player_C_ProcessOnArmourBreak::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ProcessOnArmourBreak, CallFunc_SpawnCAAttachedEffect_ReturnValue) == 0x000018, "Member 'BP_Player_C_ProcessOnArmourBreak::CallFunc_SpawnCAAttachedEffect_ReturnValue' has a wrong offset!");

// Function BP_Player.BP_Player_C.Update Zero G Status
// 0x0030 (0x0030 - 0x0000)
struct BP_Player_C_Update_Zero_G_Status final
{
public:
	bool                                          CallFunc_IsInZeroGArea_ReturnValue;                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsInZeroGArea_ReturnValue_1;              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3[0x1];                                        // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScaledCapsuleHalfHeight_ReturnValue;   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInZeroGravity_ReturnValue;              // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Player_C_Update_Zero_G_Status) == 0x000004, "Wrong alignment on BP_Player_C_Update_Zero_G_Status");
static_assert(sizeof(BP_Player_C_Update_Zero_G_Status) == 0x000030, "Wrong size on BP_Player_C_Update_Zero_G_Status");
static_assert(offsetof(BP_Player_C_Update_Zero_G_Status, CallFunc_IsInZeroGArea_ReturnValue) == 0x000000, "Member 'BP_Player_C_Update_Zero_G_Status::CallFunc_IsInZeroGArea_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Player_C_Update_Zero_G_Status, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'BP_Player_C_Update_Zero_G_Status::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Player_C_Update_Zero_G_Status, CallFunc_IsInZeroGArea_ReturnValue_1) == 0x000002, "Member 'BP_Player_C_Update_Zero_G_Status::CallFunc_IsInZeroGArea_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Player_C_Update_Zero_G_Status, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000004, "Member 'BP_Player_C_Update_Zero_G_Status::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Player_C_Update_Zero_G_Status, CallFunc_GetScaledCapsuleHalfHeight_ReturnValue) == 0x000010, "Member 'BP_Player_C_Update_Zero_G_Status::CallFunc_GetScaledCapsuleHalfHeight_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Player_C_Update_Zero_G_Status, CallFunc_MakeVector_ReturnValue) == 0x000014, "Member 'BP_Player_C_Update_Zero_G_Status::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Player_C_Update_Zero_G_Status, CallFunc_Add_VectorVector_ReturnValue) == 0x000020, "Member 'BP_Player_C_Update_Zero_G_Status::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Player_C_Update_Zero_G_Status, CallFunc_IsInZeroGravity_ReturnValue) == 0x00002C, "Member 'BP_Player_C_Update_Zero_G_Status::CallFunc_IsInZeroGravity_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Player_C_Update_Zero_G_Status, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x00002D, "Member 'BP_Player_C_Update_Zero_G_Status::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function BP_Player.BP_Player_C.GravityHookPlaceholderVisualHelper
// 0x01B0 (0x01B0 - 0x0000)
struct BP_Player_C_GravityHookPlaceholderVisualHelper final
{
public:
	class ACACharacter_MainPlayer*                CallFunc_GetLocalPlayerCharacter_ReturnValue;      // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetZeroGGravHookCoolDown_CoolDownTimeRemaining; // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetZeroGGravHookCoolDown_MaxCooldownTime; // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const struct FCAAudioEventType& Event_name)> Temp_delegate_Variable;                            // 0x0018(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCAAudioPlaybackInstance               CallFunc_PlayEvent_playback_instance;              // 0x0030(0x0010)()
	bool                                          CallFunc_PlayEvent_play_success;                   // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0050(0x0010)(ConstParm, ReferenceParm)
	class UNiagaraComponent*                      CallFunc_SpawnCANiagaraSystemAttached_ReturnValue; // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0084(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0090(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x009C(0x0090)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x012D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x012E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12F[0x1];                                      // 0x012F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0138(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0144(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0150(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x015C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0178(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0180(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0198(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x01A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Player_C_GravityHookPlaceholderVisualHelper) == 0x000008, "Wrong alignment on BP_Player_C_GravityHookPlaceholderVisualHelper");
static_assert(sizeof(BP_Player_C_GravityHookPlaceholderVisualHelper) == 0x0001B0, "Wrong size on BP_Player_C_GravityHookPlaceholderVisualHelper");
static_assert(offsetof(BP_Player_C_GravityHookPlaceholderVisualHelper, CallFunc_GetLocalPlayerCharacter_ReturnValue) == 0x000000, "Member 'BP_Player_C_GravityHookPlaceholderVisualHelper::CallFunc_GetLocalPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Player_C_GravityHookPlaceholderVisualHelper, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_Player_C_GravityHookPlaceholderVisualHelper::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Player_C_GravityHookPlaceholderVisualHelper, CallFunc_GetZeroGGravHookCoolDown_CoolDownTimeRemaining) == 0x00000C, "Member 'BP_Player_C_GravityHookPlaceholderVisualHelper::CallFunc_GetZeroGGravHookCoolDown_CoolDownTimeRemaining' has a wrong offset!");
static_assert(offsetof(BP_Player_C_GravityHookPlaceholderVisualHelper, CallFunc_GetZeroGGravHookCoolDown_MaxCooldownTime) == 0x000010, "Member 'BP_Player_C_GravityHookPlaceholderVisualHelper::CallFunc_GetZeroGGravHookCoolDown_MaxCooldownTime' has a wrong offset!");
static_assert(offsetof(BP_Player_C_GravityHookPlaceholderVisualHelper, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000014, "Member 'BP_Player_C_GravityHookPlaceholderVisualHelper::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Player_C_GravityHookPlaceholderVisualHelper, Temp_delegate_Variable) == 0x000018, "Member 'BP_Player_C_GravityHookPlaceholderVisualHelper::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(BP_Player_C_GravityHookPlaceholderVisualHelper, CallFunc_PlayEvent_playback_instance) == 0x000030, "Member 'BP_Player_C_GravityHookPlaceholderVisualHelper::CallFunc_PlayEvent_playback_instance' has a wrong offset!");
static_assert(offsetof(BP_Player_C_GravityHookPlaceholderVisualHelper, CallFunc_PlayEvent_play_success) == 0x000040, "Member 'BP_Player_C_GravityHookPlaceholderVisualHelper::CallFunc_PlayEvent_play_success' has a wrong offset!");
static_assert(offsetof(BP_Player_C_GravityHookPlaceholderVisualHelper, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000048, "Member 'BP_Player_C_GravityHookPlaceholderVisualHelper::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Player_C_GravityHookPlaceholderVisualHelper, Temp_object_Variable) == 0x000050, "Member 'BP_Player_C_GravityHookPlaceholderVisualHelper::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_Player_C_GravityHookPlaceholderVisualHelper, CallFunc_SpawnCANiagaraSystemAttached_ReturnValue) == 0x000060, "Member 'BP_Player_C_GravityHookPlaceholderVisualHelper::CallFunc_SpawnCANiagaraSystemAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Player_C_GravityHookPlaceholderVisualHelper, CallFunc_IsValid_ReturnValue_1) == 0x000068, "Member 'BP_Player_C_GravityHookPlaceholderVisualHelper::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Player_C_GravityHookPlaceholderVisualHelper, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x00006C, "Member 'BP_Player_C_GravityHookPlaceholderVisualHelper::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Player_C_GravityHookPlaceholderVisualHelper, CallFunc_GetForwardVector_ReturnValue) == 0x000078, "Member 'BP_Player_C_GravityHookPlaceholderVisualHelper::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Player_C_GravityHookPlaceholderVisualHelper, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000084, "Member 'BP_Player_C_GravityHookPlaceholderVisualHelper::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Player_C_GravityHookPlaceholderVisualHelper, CallFunc_Add_VectorVector_ReturnValue) == 0x000090, "Member 'BP_Player_C_GravityHookPlaceholderVisualHelper::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Player_C_GravityHookPlaceholderVisualHelper, CallFunc_LineTraceSingle_OutHit) == 0x00009C, "Member 'BP_Player_C_GravityHookPlaceholderVisualHelper::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BP_Player_C_GravityHookPlaceholderVisualHelper, CallFunc_LineTraceSingle_ReturnValue) == 0x00012C, "Member 'BP_Player_C_GravityHookPlaceholderVisualHelper::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Player_C_GravityHookPlaceholderVisualHelper, CallFunc_BreakHitResult_bBlockingHit) == 0x00012D, "Member 'BP_Player_C_GravityHookPlaceholderVisualHelper::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_Player_C_GravityHookPlaceholderVisualHelper, CallFunc_BreakHitResult_bInitialOverlap) == 0x00012E, "Member 'BP_Player_C_GravityHookPlaceholderVisualHelper::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_Player_C_GravityHookPlaceholderVisualHelper, CallFunc_BreakHitResult_Time) == 0x000130, "Member 'BP_Player_C_GravityHookPlaceholderVisualHelper::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_Player_C_GravityHookPlaceholderVisualHelper, CallFunc_BreakHitResult_Distance) == 0x000134, "Member 'BP_Player_C_GravityHookPlaceholderVisualHelper::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_Player_C_GravityHookPlaceholderVisualHelper, CallFunc_BreakHitResult_Location) == 0x000138, "Member 'BP_Player_C_GravityHookPlaceholderVisualHelper::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_Player_C_GravityHookPlaceholderVisualHelper, CallFunc_BreakHitResult_ImpactPoint) == 0x000144, "Member 'BP_Player_C_GravityHookPlaceholderVisualHelper::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_Player_C_GravityHookPlaceholderVisualHelper, CallFunc_BreakHitResult_Normal) == 0x000150, "Member 'BP_Player_C_GravityHookPlaceholderVisualHelper::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_Player_C_GravityHookPlaceholderVisualHelper, CallFunc_BreakHitResult_ImpactNormal) == 0x00015C, "Member 'BP_Player_C_GravityHookPlaceholderVisualHelper::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_Player_C_GravityHookPlaceholderVisualHelper, CallFunc_BreakHitResult_PhysMat) == 0x000168, "Member 'BP_Player_C_GravityHookPlaceholderVisualHelper::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_Player_C_GravityHookPlaceholderVisualHelper, CallFunc_BreakHitResult_HitActor) == 0x000170, "Member 'BP_Player_C_GravityHookPlaceholderVisualHelper::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_Player_C_GravityHookPlaceholderVisualHelper, CallFunc_BreakHitResult_HitComponent) == 0x000178, "Member 'BP_Player_C_GravityHookPlaceholderVisualHelper::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_Player_C_GravityHookPlaceholderVisualHelper, CallFunc_BreakHitResult_HitBoneName) == 0x000180, "Member 'BP_Player_C_GravityHookPlaceholderVisualHelper::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_Player_C_GravityHookPlaceholderVisualHelper, CallFunc_BreakHitResult_HitItem) == 0x00018C, "Member 'BP_Player_C_GravityHookPlaceholderVisualHelper::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_Player_C_GravityHookPlaceholderVisualHelper, CallFunc_BreakHitResult_ElementIndex) == 0x000190, "Member 'BP_Player_C_GravityHookPlaceholderVisualHelper::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_Player_C_GravityHookPlaceholderVisualHelper, CallFunc_BreakHitResult_FaceIndex) == 0x000194, "Member 'BP_Player_C_GravityHookPlaceholderVisualHelper::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_Player_C_GravityHookPlaceholderVisualHelper, CallFunc_BreakHitResult_TraceStart) == 0x000198, "Member 'BP_Player_C_GravityHookPlaceholderVisualHelper::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_Player_C_GravityHookPlaceholderVisualHelper, CallFunc_BreakHitResult_TraceEnd) == 0x0001A4, "Member 'BP_Player_C_GravityHookPlaceholderVisualHelper::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");

// Function BP_Player.BP_Player_C.Gravhook State Change
// 0x0210 (0x0210 - 0x0000)
struct BP_Player_C_Gravhook_State_Change final
{
public:
	ECAGravHookStateChange                        GravhookState;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                GravhookHitLocation;                               // 0x0004(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FCAAudioEventType& Event_name)> Temp_delegate_Variable;                            // 0x0020(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraComponent*                      CallFunc_SpawnCANiagaraSystemAttached_ReturnValue; // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCAAudioPlaybackInstance               CallFunc_PlayEvent_playback_instance;              // 0x0040(0x0010)()
	bool                                          CallFunc_PlayEvent_play_success;                   // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue_1;        // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACACharacter_MainPlayer*                CallFunc_GetLocalPlayerCharacter_ReturnValue;      // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_SpawnCANiagaraSystemAttached_ReturnValue_1; // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72[0x2];                                       // 0x0072(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetZeroGGravHookCoolDown_CoolDownTimeRemaining; // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetZeroGGravHookCoolDown_MaxCooldownTime; // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0080(0x0010)(ConstParm, ReferenceParm)
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue_2;        // 0x0090(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FCAAudioEventType& Event_name)> Temp_delegate_Variable_1;                          // 0x0098(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraComponent*                      CallFunc_SpawnCANiagaraSystemAttached_ReturnValue_2; // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCAAudioPlaybackInstance               CallFunc_PlayEvent_playback_instance_1;            // 0x00B8(0x0010)()
	bool                                          CallFunc_PlayEvent_play_success_1;                 // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CA[0x2];                                       // 0x00CA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x00CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x00D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x00E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x00FC(0x0090)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x018C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x018D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x018E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_18F[0x1];                                      // 0x018F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0198(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x01A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x01B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x01BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x01D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x01E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x01F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x01F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0204(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Player_C_Gravhook_State_Change) == 0x000008, "Wrong alignment on BP_Player_C_Gravhook_State_Change");
static_assert(sizeof(BP_Player_C_Gravhook_State_Change) == 0x000210, "Wrong size on BP_Player_C_Gravhook_State_Change");
static_assert(offsetof(BP_Player_C_Gravhook_State_Change, GravhookState) == 0x000000, "Member 'BP_Player_C_Gravhook_State_Change::GravhookState' has a wrong offset!");
static_assert(offsetof(BP_Player_C_Gravhook_State_Change, GravhookHitLocation) == 0x000004, "Member 'BP_Player_C_Gravhook_State_Change::GravhookHitLocation' has a wrong offset!");
static_assert(offsetof(BP_Player_C_Gravhook_State_Change, K2Node_SwitchEnum_CmpSuccess) == 0x000010, "Member 'BP_Player_C_Gravhook_State_Change::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_Player_C_Gravhook_State_Change, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000018, "Member 'BP_Player_C_Gravhook_State_Change::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Player_C_Gravhook_State_Change, Temp_delegate_Variable) == 0x000020, "Member 'BP_Player_C_Gravhook_State_Change::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(BP_Player_C_Gravhook_State_Change, CallFunc_SpawnCANiagaraSystemAttached_ReturnValue) == 0x000038, "Member 'BP_Player_C_Gravhook_State_Change::CallFunc_SpawnCANiagaraSystemAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Player_C_Gravhook_State_Change, CallFunc_PlayEvent_playback_instance) == 0x000040, "Member 'BP_Player_C_Gravhook_State_Change::CallFunc_PlayEvent_playback_instance' has a wrong offset!");
static_assert(offsetof(BP_Player_C_Gravhook_State_Change, CallFunc_PlayEvent_play_success) == 0x000050, "Member 'BP_Player_C_Gravhook_State_Change::CallFunc_PlayEvent_play_success' has a wrong offset!");
static_assert(offsetof(BP_Player_C_Gravhook_State_Change, CallFunc_K2_GetRootComponent_ReturnValue_1) == 0x000058, "Member 'BP_Player_C_Gravhook_State_Change::CallFunc_K2_GetRootComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Player_C_Gravhook_State_Change, CallFunc_GetLocalPlayerCharacter_ReturnValue) == 0x000060, "Member 'BP_Player_C_Gravhook_State_Change::CallFunc_GetLocalPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Player_C_Gravhook_State_Change, CallFunc_SpawnCANiagaraSystemAttached_ReturnValue_1) == 0x000068, "Member 'BP_Player_C_Gravhook_State_Change::CallFunc_SpawnCANiagaraSystemAttached_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Player_C_Gravhook_State_Change, CallFunc_IsValid_ReturnValue) == 0x000070, "Member 'BP_Player_C_Gravhook_State_Change::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Player_C_Gravhook_State_Change, CallFunc_IsValid_ReturnValue_1) == 0x000071, "Member 'BP_Player_C_Gravhook_State_Change::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Player_C_Gravhook_State_Change, CallFunc_GetZeroGGravHookCoolDown_CoolDownTimeRemaining) == 0x000074, "Member 'BP_Player_C_Gravhook_State_Change::CallFunc_GetZeroGGravHookCoolDown_CoolDownTimeRemaining' has a wrong offset!");
static_assert(offsetof(BP_Player_C_Gravhook_State_Change, CallFunc_GetZeroGGravHookCoolDown_MaxCooldownTime) == 0x000078, "Member 'BP_Player_C_Gravhook_State_Change::CallFunc_GetZeroGGravHookCoolDown_MaxCooldownTime' has a wrong offset!");
static_assert(offsetof(BP_Player_C_Gravhook_State_Change, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00007C, "Member 'BP_Player_C_Gravhook_State_Change::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Player_C_Gravhook_State_Change, Temp_object_Variable) == 0x000080, "Member 'BP_Player_C_Gravhook_State_Change::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_Player_C_Gravhook_State_Change, CallFunc_K2_GetRootComponent_ReturnValue_2) == 0x000090, "Member 'BP_Player_C_Gravhook_State_Change::CallFunc_K2_GetRootComponent_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Player_C_Gravhook_State_Change, Temp_delegate_Variable_1) == 0x000098, "Member 'BP_Player_C_Gravhook_State_Change::Temp_delegate_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Player_C_Gravhook_State_Change, CallFunc_SpawnCANiagaraSystemAttached_ReturnValue_2) == 0x0000B0, "Member 'BP_Player_C_Gravhook_State_Change::CallFunc_SpawnCANiagaraSystemAttached_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Player_C_Gravhook_State_Change, CallFunc_PlayEvent_playback_instance_1) == 0x0000B8, "Member 'BP_Player_C_Gravhook_State_Change::CallFunc_PlayEvent_playback_instance_1' has a wrong offset!");
static_assert(offsetof(BP_Player_C_Gravhook_State_Change, CallFunc_PlayEvent_play_success_1) == 0x0000C8, "Member 'BP_Player_C_Gravhook_State_Change::CallFunc_PlayEvent_play_success_1' has a wrong offset!");
static_assert(offsetof(BP_Player_C_Gravhook_State_Change, CallFunc_IsValid_ReturnValue_2) == 0x0000C9, "Member 'BP_Player_C_Gravhook_State_Change::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Player_C_Gravhook_State_Change, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x0000CC, "Member 'BP_Player_C_Gravhook_State_Change::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Player_C_Gravhook_State_Change, CallFunc_GetForwardVector_ReturnValue) == 0x0000D8, "Member 'BP_Player_C_Gravhook_State_Change::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Player_C_Gravhook_State_Change, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0000E4, "Member 'BP_Player_C_Gravhook_State_Change::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Player_C_Gravhook_State_Change, CallFunc_Add_VectorVector_ReturnValue) == 0x0000F0, "Member 'BP_Player_C_Gravhook_State_Change::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Player_C_Gravhook_State_Change, CallFunc_LineTraceSingle_OutHit) == 0x0000FC, "Member 'BP_Player_C_Gravhook_State_Change::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BP_Player_C_Gravhook_State_Change, CallFunc_LineTraceSingle_ReturnValue) == 0x00018C, "Member 'BP_Player_C_Gravhook_State_Change::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Player_C_Gravhook_State_Change, CallFunc_BreakHitResult_bBlockingHit) == 0x00018D, "Member 'BP_Player_C_Gravhook_State_Change::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_Player_C_Gravhook_State_Change, CallFunc_BreakHitResult_bInitialOverlap) == 0x00018E, "Member 'BP_Player_C_Gravhook_State_Change::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_Player_C_Gravhook_State_Change, CallFunc_BreakHitResult_Time) == 0x000190, "Member 'BP_Player_C_Gravhook_State_Change::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_Player_C_Gravhook_State_Change, CallFunc_BreakHitResult_Distance) == 0x000194, "Member 'BP_Player_C_Gravhook_State_Change::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_Player_C_Gravhook_State_Change, CallFunc_BreakHitResult_Location) == 0x000198, "Member 'BP_Player_C_Gravhook_State_Change::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_Player_C_Gravhook_State_Change, CallFunc_BreakHitResult_ImpactPoint) == 0x0001A4, "Member 'BP_Player_C_Gravhook_State_Change::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_Player_C_Gravhook_State_Change, CallFunc_BreakHitResult_Normal) == 0x0001B0, "Member 'BP_Player_C_Gravhook_State_Change::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_Player_C_Gravhook_State_Change, CallFunc_BreakHitResult_ImpactNormal) == 0x0001BC, "Member 'BP_Player_C_Gravhook_State_Change::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_Player_C_Gravhook_State_Change, CallFunc_BreakHitResult_PhysMat) == 0x0001C8, "Member 'BP_Player_C_Gravhook_State_Change::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_Player_C_Gravhook_State_Change, CallFunc_BreakHitResult_HitActor) == 0x0001D0, "Member 'BP_Player_C_Gravhook_State_Change::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_Player_C_Gravhook_State_Change, CallFunc_BreakHitResult_HitComponent) == 0x0001D8, "Member 'BP_Player_C_Gravhook_State_Change::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_Player_C_Gravhook_State_Change, CallFunc_BreakHitResult_HitBoneName) == 0x0001E0, "Member 'BP_Player_C_Gravhook_State_Change::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_Player_C_Gravhook_State_Change, CallFunc_BreakHitResult_HitItem) == 0x0001EC, "Member 'BP_Player_C_Gravhook_State_Change::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_Player_C_Gravhook_State_Change, CallFunc_BreakHitResult_ElementIndex) == 0x0001F0, "Member 'BP_Player_C_Gravhook_State_Change::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_Player_C_Gravhook_State_Change, CallFunc_BreakHitResult_FaceIndex) == 0x0001F4, "Member 'BP_Player_C_Gravhook_State_Change::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_Player_C_Gravhook_State_Change, CallFunc_BreakHitResult_TraceStart) == 0x0001F8, "Member 'BP_Player_C_Gravhook_State_Change::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_Player_C_Gravhook_State_Change, CallFunc_BreakHitResult_TraceEnd) == 0x000204, "Member 'BP_Player_C_Gravhook_State_Change::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");

// Function BP_Player.BP_Player_C.ShouldCountdownActivate
// 0x0050 (0x0050 - 0x0000)
struct BP_Player_C_ShouldCountdownActivate final
{
public:
	bool                                          ShouldCountdownPlay;                               // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetCurrentLevelName_ReturnValue;          // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<class FString>                         CallFunc_GetDataTableColumnAsString_ReturnValue;   // 0x0020(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Array_Get_Item;                           // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Player_C_ShouldCountdownActivate) == 0x000008, "Wrong alignment on BP_Player_C_ShouldCountdownActivate");
static_assert(sizeof(BP_Player_C_ShouldCountdownActivate) == 0x000050, "Wrong size on BP_Player_C_ShouldCountdownActivate");
static_assert(offsetof(BP_Player_C_ShouldCountdownActivate, ShouldCountdownPlay) == 0x000000, "Member 'BP_Player_C_ShouldCountdownActivate::ShouldCountdownPlay' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ShouldCountdownActivate, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_Player_C_ShouldCountdownActivate::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ShouldCountdownActivate, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_Player_C_ShouldCountdownActivate::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ShouldCountdownActivate, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_Player_C_ShouldCountdownActivate::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ShouldCountdownActivate, CallFunc_GetCurrentLevelName_ReturnValue) == 0x000010, "Member 'BP_Player_C_ShouldCountdownActivate::CallFunc_GetCurrentLevelName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ShouldCountdownActivate, CallFunc_GetDataTableColumnAsString_ReturnValue) == 0x000020, "Member 'BP_Player_C_ShouldCountdownActivate::CallFunc_GetDataTableColumnAsString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ShouldCountdownActivate, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BP_Player_C_ShouldCountdownActivate::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ShouldCountdownActivate, CallFunc_Array_Get_Item) == 0x000038, "Member 'BP_Player_C_ShouldCountdownActivate::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ShouldCountdownActivate, CallFunc_Less_IntInt_ReturnValue) == 0x000048, "Member 'BP_Player_C_ShouldCountdownActivate::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Player_C_ShouldCountdownActivate, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000049, "Member 'BP_Player_C_ShouldCountdownActivate::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");

// Function BP_Player.BP_Player_C.SpawnFPFoamVFX
// 0x0018 (0x0018 - 0x0000)
struct BP_Player_C_SpawnFPFoamVFX final
{
public:
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBlendableInterface>   CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput; // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
};
static_assert(alignof(BP_Player_C_SpawnFPFoamVFX) == 0x000008, "Wrong alignment on BP_Player_C_SpawnFPFoamVFX");
static_assert(sizeof(BP_Player_C_SpawnFPFoamVFX) == 0x000018, "Wrong size on BP_Player_C_SpawnFPFoamVFX");
static_assert(offsetof(BP_Player_C_SpawnFPFoamVFX, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000000, "Member 'BP_Player_C_SpawnFPFoamVFX::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Player_C_SpawnFPFoamVFX, CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput) == 0x000008, "Member 'BP_Player_C_SpawnFPFoamVFX::CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput' has a wrong offset!");

// Function BP_Player.BP_Player_C.UpdateFPFoamVFX
// 0x0050 (0x0050 - 0x0000)
struct BP_Player_C_UpdateFPFoamVFX final
{
public:
	float                                         TargetFoamValue;                                   // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBlendableInterface>   CallFunc_RemoveBlendable_InBlendableObject_CastInput; // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBlendableInterface>   CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput; // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_SpawnCANiagaraSystemAttached_ReturnValue; // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Player_C_UpdateFPFoamVFX) == 0x000008, "Wrong alignment on BP_Player_C_UpdateFPFoamVFX");
static_assert(sizeof(BP_Player_C_UpdateFPFoamVFX) == 0x000050, "Wrong size on BP_Player_C_UpdateFPFoamVFX");
static_assert(offsetof(BP_Player_C_UpdateFPFoamVFX, TargetFoamValue) == 0x000000, "Member 'BP_Player_C_UpdateFPFoamVFX::TargetFoamValue' has a wrong offset!");
static_assert(offsetof(BP_Player_C_UpdateFPFoamVFX, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000004, "Member 'BP_Player_C_UpdateFPFoamVFX::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Player_C_UpdateFPFoamVFX, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000008, "Member 'BP_Player_C_UpdateFPFoamVFX::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Player_C_UpdateFPFoamVFX, CallFunc_RemoveBlendable_InBlendableObject_CastInput) == 0x000010, "Member 'BP_Player_C_UpdateFPFoamVFX::CallFunc_RemoveBlendable_InBlendableObject_CastInput' has a wrong offset!");
static_assert(offsetof(BP_Player_C_UpdateFPFoamVFX, CallFunc_FClamp_ReturnValue) == 0x000020, "Member 'BP_Player_C_UpdateFPFoamVFX::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Player_C_UpdateFPFoamVFX, CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput) == 0x000028, "Member 'BP_Player_C_UpdateFPFoamVFX::CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput' has a wrong offset!");
static_assert(offsetof(BP_Player_C_UpdateFPFoamVFX, CallFunc_Less_FloatFloat_ReturnValue) == 0x000038, "Member 'BP_Player_C_UpdateFPFoamVFX::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Player_C_UpdateFPFoamVFX, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000039, "Member 'BP_Player_C_UpdateFPFoamVFX::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Player_C_UpdateFPFoamVFX, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000040, "Member 'BP_Player_C_UpdateFPFoamVFX::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Player_C_UpdateFPFoamVFX, CallFunc_SpawnCANiagaraSystemAttached_ReturnValue) == 0x000048, "Member 'BP_Player_C_UpdateFPFoamVFX::CallFunc_SpawnCANiagaraSystemAttached_ReturnValue' has a wrong offset!");

// Function BP_Player.BP_Player_C.CollectDebugInfo
// 0x0098 (0x0098 - 0x0000)
struct BP_Player_C_CollectDebugInfo final
{
public:
	struct FCADebugTextCollector                  InCollector;                                       // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FCADebugTextCollector                  OutCollector;                                      // 0x0018(0x0018)(Parm, OutParm)
	ECANPCPolitenessCategory                      Temp_byte_Variable;                                // 0x0030(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCAPolitenessCandidateArray            CallFunc_Map_Find_Value;                           // 0x0040(0x0010)()
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCAPolitenessCandidate                 CallFunc_Array_Get_Item;                           // 0x0058(0x001C)(NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75[0x3];                                       // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue_1;             // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Player_C_CollectDebugInfo) == 0x000008, "Wrong alignment on BP_Player_C_CollectDebugInfo");
static_assert(sizeof(BP_Player_C_CollectDebugInfo) == 0x000098, "Wrong size on BP_Player_C_CollectDebugInfo");
static_assert(offsetof(BP_Player_C_CollectDebugInfo, InCollector) == 0x000000, "Member 'BP_Player_C_CollectDebugInfo::InCollector' has a wrong offset!");
static_assert(offsetof(BP_Player_C_CollectDebugInfo, OutCollector) == 0x000018, "Member 'BP_Player_C_CollectDebugInfo::OutCollector' has a wrong offset!");
static_assert(offsetof(BP_Player_C_CollectDebugInfo, Temp_byte_Variable) == 0x000030, "Member 'BP_Player_C_CollectDebugInfo::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_Player_C_CollectDebugInfo, Temp_int_Array_Index_Variable) == 0x000034, "Member 'BP_Player_C_CollectDebugInfo::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Player_C_CollectDebugInfo, Temp_int_Loop_Counter_Variable) == 0x000038, "Member 'BP_Player_C_CollectDebugInfo::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Player_C_CollectDebugInfo, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'BP_Player_C_CollectDebugInfo::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Player_C_CollectDebugInfo, CallFunc_Map_Find_Value) == 0x000040, "Member 'BP_Player_C_CollectDebugInfo::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_Player_C_CollectDebugInfo, CallFunc_Map_Find_ReturnValue) == 0x000050, "Member 'BP_Player_C_CollectDebugInfo::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Player_C_CollectDebugInfo, CallFunc_Array_Length_ReturnValue) == 0x000054, "Member 'BP_Player_C_CollectDebugInfo::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Player_C_CollectDebugInfo, CallFunc_Array_Get_Item) == 0x000058, "Member 'BP_Player_C_CollectDebugInfo::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Player_C_CollectDebugInfo, CallFunc_Less_IntInt_ReturnValue) == 0x000074, "Member 'BP_Player_C_CollectDebugInfo::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Player_C_CollectDebugInfo, CallFunc_GetDisplayName_ReturnValue) == 0x000078, "Member 'BP_Player_C_CollectDebugInfo::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Player_C_CollectDebugInfo, CallFunc_GetDisplayName_ReturnValue_1) == 0x000088, "Member 'BP_Player_C_CollectDebugInfo::CallFunc_GetDisplayName_ReturnValue_1' has a wrong offset!");

}

