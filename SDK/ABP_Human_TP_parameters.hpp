#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_Human_TP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CAAudio_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "Keaton_structs.hpp"


namespace SDK::Params
{

// Function ABP_Human_TP.ABP_Human_TP_C.ExecuteUbergraph_ABP_Human_TP
// 0x0920 (0x0920 - 0x0000)
struct ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwningActor_ReturnValue;               // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  K2Node_CustomEvent_tag_name;                       // 0x0010(0x0020)(ConstParm)
	TDelegate<void(const struct FCAAudioEventType& Event_name)> Temp_delegate_Variable;                            // 0x0030(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class ACACharacter* Character, struct FGameplayEffectSpec& Death_gameplay_effect_spec, float Damage_magnitude, struct FNetworkedHit& Networked_hit, class AActor* Killer)> K2Node_CreateDelegate_OutputDelegate;              // 0x0048(0x0014)(ZeroConstructor, NoDestructor)
	float                                         CallFunc_BreakVector_X;                            // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurveValue_ReturnValue;                // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValue_ReturnValue_1;              // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FNetworkedHit                          K2Node_CustomEvent_hit;                            // 0x0078(0x0068)(ConstParm, NoDestructor)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_1;          // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_EB[0x1];                                       // 0x00EB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValue_ReturnValue_2;              // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue_1;                       // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(ECAPlayerMovementMode PrevMovementMode, ECAPlayerMovementMode MovementMode, float Delta_pos)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0108(0x0014)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_11C[0x4];                                      // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue;              // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPawnMovementComponent*                 CallFunc_GetMovementComponent_ReturnValue;         // 0x0128(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             K2Node_CustomEvent_Character_1;                    // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECAPlayerMovementMetaMode                     K2Node_CustomEvent_PrevMovementMetaMode;           // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECAPlayerMovementMetaMode                     K2Node_CustomEvent_MovementMetaMode;               // 0x0139(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13A[0x6];                                      // 0x013A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UCACharacterMovementComponent*          K2Node_DynamicCast_AsCACharacter_Movement_Component; // 0x0140(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0149(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_14A[0x2];                                      // 0x014A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const struct FCAAudioEventType& Event_name)> Temp_delegate_Variable_1;                          // 0x014C(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_1;        // 0x0161(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0162(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0163(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetCurveValue_ReturnValue_3;              // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x016C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x016D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_16E[0x2];                                      // 0x016E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const struct FCAAudioEventType& Event_name)> Temp_delegate_Variable_2;                          // 0x0170(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	uint8                                         Pad_184[0x4];                                      // 0x0184(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCAAudioPlaybackInstance               CallFunc_PlayEvent_playback_instance;              // 0x0188(0x0010)()
	bool                                          CallFunc_PlayEvent_play_success;                   // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_199[0x7];                                      // 0x0199(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue_1;            // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x01A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_2;         // 0x01AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1AB[0x5];                                      // 0x01AB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue_2;            // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B9[0x3];                                      // 0x01B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurveValue_ReturnValue_4;              // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCAAudioPlaybackInstance               CallFunc_PlayEvent_playback_instance_1;            // 0x01C0(0x0010)()
	bool                                          CallFunc_PlayEvent_play_success_1;                 // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D1[0x3];                                      // 0x01D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValue_ReturnValue_5;              // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E1[0x3];                                      // 0x01E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue_1;                // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class ACharacter* Character, ECAPlayerMovementMetaMode PrevMovementMetaMode, ECAPlayerMovementMetaMode MovementMetaMode)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x01E8(0x0014)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_1FC[0x4];                                      // 0x01FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue_3;            // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Player_C*                           K2Node_DynamicCast_AsBP_Player;                    // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0211(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_212[0x6];                                      // 0x0212(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_GetSpecificPawnMesh_ReturnValue;          // 0x0218(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHealthState                                  CallFunc_GetHealthState_ReturnValue;               // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0221(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0222(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPhysicsStateCreated_ReturnValue;        // 0x0223(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TDelegate<void(struct FNetworkedHit& Hit)>    K2Node_CreateDelegate_OutputDelegate_3;            // 0x0224(0x0014)(ZeroConstructor, NoDestructor)
	class AActor*                                 CallFunc_GetOwningActor_ReturnValue_1;             // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(struct FGameplayTagContainer& Tag_name)> K2Node_CreateDelegate_OutputDelegate_4;            // 0x0240(0x0014)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsInAudibleRange_ReturnValue;             // 0x0254(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_WasRecentlyRendered_ReturnValue;          // 0x0255(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_256[0x2];                                      // 0x0256(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ACACharacter*                           K2Node_CustomEvent_character;                      // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectSpec                    K2Node_CustomEvent_death_gameplay_effect_spec;     // 0x0260(0x0298)(ConstParm)
	float                                         K2Node_CustomEvent_damage_magnitude;               // 0x04F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FC[0x4];                                      // 0x04FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FNetworkedHit                          K2Node_CustomEvent_networked_hit;                  // 0x0500(0x0068)(ConstParm, NoDestructor)
	const class AActor*                           K2Node_CustomEvent_killer;                         // 0x0568(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      CallFunc_GetDeathAnim_DeathAnim;                   // 0x0570(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCAAudioPlaybackInstance               CallFunc_PlayEvent_playback_instance_2;            // 0x0578(0x0010)()
	bool                                          CallFunc_PlayEvent_play_success_2;                 // 0x0588(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_589[0x7];                                      // 0x0589(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc_PlaySlotAnimationAsDynamicMontage_ReturnValue; // 0x0590(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0598(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable_1;               // 0x0599(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x059A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x059B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x059C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59D[0x3];                                      // 0x059D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue_2;                // 0x05A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_1;                     // 0x05A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A5[0x3];                                      // 0x05A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(struct FNetworkedHit& Hit)>    K2Node_CreateDelegate_OutputDelegate_5;            // 0x05A8(0x0014)(ZeroConstructor, NoDestructor)
	ECAPlayerMovementMode                         K2Node_CustomEvent_PrevMovementMode;               // 0x05BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECAPlayerMovementMode                         K2Node_CustomEvent_MovementMode;                   // 0x05BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5BE[0x2];                                      // 0x05BE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_delta_pos;                      // 0x05C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x05C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x05C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_5;        // 0x05C6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x05C7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_SelectFloat_ReturnValue_3;                // 0x05C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_6;        // 0x05CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5CD[0x3];                                      // 0x05CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FMax_ReturnValue_2;                       // 0x05D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x05D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_7;        // 0x05D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x05D6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_5;                  // 0x05D7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_SelectFloat_ReturnValue_4;                // 0x05D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_8;        // 0x05DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5DD[0x3];                                      // 0x05DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FInterpTo_ReturnValue;                    // 0x05E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_6;                  // 0x05E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5E5[0x3];                                      // 0x05E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FMin_ReturnValue;                         // 0x05E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x05EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5ED[0x3];                                      // 0x05ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FMax_ReturnValue_3;                       // 0x05F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x05F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x05F5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x05F6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5F7[0x1];                                      // 0x05F7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_2;        // 0x05F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x05FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPhysicsStateCreated_ReturnValue_1;      // 0x05FD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable_2;               // 0x05FE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5FF[0x1];                                      // 0x05FF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue_4;            // 0x0600(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0608(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_609[0x7];                                      // 0x0609(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACACharacter_MainPlayer*                K2Node_DynamicCast_AsCACharacter_Main_Player;      // 0x0610(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0618(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_9;        // 0x0619(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61A[0x2];                                      // 0x061A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue_5;                // 0x061C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0620(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FInterpTo_Constant_ReturnValue;           // 0x0624(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0628(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x062C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0630(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0634(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScaledCapsuleHalfHeight_ReturnValue;   // 0x0638(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_3;        // 0x063C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScaledCapsuleHalfHeight_ReturnValue_1; // 0x0640(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_2;             // 0x0644(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScaledCapsuleHalfHeight_ReturnValue_2; // 0x0648(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_3;             // 0x064C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0650(0x0030)(IsPlainOldData, NoDestructor)
	class USkeletalMeshComponent*                 CallFunc_GetOwningComponent_ReturnValue;           // 0x0680(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPhysicsStateCreated_ReturnValue_2;      // 0x0688(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_689[0x3];                                      // 0x0689(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurveValue_ReturnValue_6;              // 0x068C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_4;        // 0x0690(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_2;                     // 0x0694(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_695[0x3];                                      // 0x0695(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FNetworkedHit                          K2Node_CustomEvent_hit_1;                          // 0x0698(0x0068)(ConstParm, NoDestructor)
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue_5;            // 0x0700(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0708(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_709[0x7];                                      // 0x0709(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACACharacter*                           K2Node_DynamicCast_AsCACharacter;                  // 0x0710(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0718(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_719[0x7];                                      // 0x0719(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x0720(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCAAbilitySystemComponent*              K2Node_DynamicCast_AsCAAbility_System_Component;   // 0x0728(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0730(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_731[0x3];                                      // 0x0731(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaTimeX;                           // 0x0734(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_2;          // 0x0738(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable_3;                     // 0x0739(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_73A[0x2];                                      // 0x073A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_5;        // 0x073C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue_1;                       // 0x0740(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValue_ReturnValue_7;              // 0x0744(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValue_ReturnValue_8;              // 0x0748(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_1;                     // 0x074C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_2;                     // 0x0750(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_6;        // 0x0754(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_7;        // 0x0758(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue_4;                       // 0x075C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_3;                     // 0x0760(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_4;                     // 0x0764(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFirstPerson_ReturnValue;                // 0x0768(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_769[0x3];                                      // 0x0769(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPendingHealthNormalised_ReturnValue;   // 0x076C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0770(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_774[0x4];                                      // 0x0774(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue_1;  // 0x0778(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValue_ReturnValue_9;              // 0x0780(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_784[0x4];                                      // 0x0784(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput;    // 0x0788(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x0798(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_799[0x3];                                      // 0x0799(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue_6;                // 0x079C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_10;       // 0x07A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_11;       // 0x07A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_7;                  // 0x07A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7A3[0x1];                                      // 0x07A3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue_7;                // 0x07A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFirstPerson_ReturnValue_1;              // 0x07A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x07A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7AA[0x2];                                      // 0x07AA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetParam_ReturnValue;                     // 0x07AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue_5;                       // 0x07B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_5;                     // 0x07B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_8;                // 0x07B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TransformSnapshotPose_ReturnValue;        // 0x07BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7BD[0x3];                                      // 0x07BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurveValue_ReturnValue_10;             // 0x07C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_12;       // 0x07C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7C5[0x3];                                      // 0x07C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetLinkedAnimGraphInstanceByTag_ReturnValue; // 0x07C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_9;                // 0x07D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7D4[0x4];                                      // 0x07D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UABP_Human_TP_NormalG_C*                K2Node_DynamicCast_AsABP_Human_TP_Normal_G;        // 0x07D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x07E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSlotPlayingMontage_ReturnValue;         // 0x07E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E2[0x2];                                      // 0x07E2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_6;            // 0x07E4(0x0014)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x07F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x07F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_6;                 // 0x07FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_7;                 // 0x07FB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_FInterpTo_Constant_ReturnValue_1;         // 0x07FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_10;               // 0x0800(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0804(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromX_ReturnValue;                 // 0x0810(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81C[0x4];                                      // 0x081C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue;           // 0x0820(0x0030)(IsPlainOldData, NoDestructor)
	float                                         CallFunc_FInterpAsymmTo_ReturnValue;               // 0x0850(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0854(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0860(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x086C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_RotatorToVector_ReturnValue;         // 0x0878(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFeatureActive_ReturnValue;              // 0x0884(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_885[0x3];                                      // 0x0885(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_LessLess_VectorRotator_ReturnValue;       // 0x0888(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromX_ReturnValue_1;               // 0x0894(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasGameplayTag_ReturnValue;               // 0x08A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_8;                  // 0x08A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDownedLocomotionEnabled_ReturnValue;    // 0x08A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_9;                  // 0x08A3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetFaceCurveRemaining_ReturnValue;        // 0x08A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_7;            // 0x08A8(0x0014)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_8BC[0x4];                                      // 0x08BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x08C0(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_3;               // 0x08C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8C9[0x3];                                      // 0x08C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurveValue_ReturnValue_11;             // 0x08CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_8;        // 0x08D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue_6;                       // 0x08D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_1;                       // 0x08D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue_7;                       // 0x08DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_11;               // 0x08E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x08E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FInterpTo_ReturnValue_1;                  // 0x08E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue_2;            // 0x08EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue_2;                       // 0x08F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8F4[0x4];                                      // 0x08F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwningActor_ReturnValue_2;             // 0x08F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCurrentRemainingHealthSegments_ReturnValue; // 0x0900(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHealthState                                  CallFunc_GetHealthState_ReturnValue_1;             // 0x0904(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0905(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_13;       // 0x0906(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0907(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_8;                 // 0x0908(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_909[0x3];                                      // 0x0909(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurveValue_ReturnValue_12;             // 0x090C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_2;                       // 0x0910(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValue_ReturnValue_13;             // 0x0914(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_9;        // 0x0918(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP) == 0x000010, "Wrong alignment on ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP");
static_assert(sizeof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP) == 0x000920, "Wrong size on ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, EntryPoint) == 0x000000, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::EntryPoint' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_GetOwningActor_ReturnValue) == 0x000008, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_GetOwningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, K2Node_CustomEvent_tag_name) == 0x000010, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::K2Node_CustomEvent_tag_name' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, Temp_delegate_Variable) == 0x000030, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, Temp_bool_Has_Been_Initd_Variable) == 0x000044, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, K2Node_CreateDelegate_OutputDelegate) == 0x000048, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_BreakVector_X) == 0x00005C, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_BreakVector_Y) == 0x000060, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_BreakVector_Z) == 0x000064, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000068, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_GetCurveValue_ReturnValue) == 0x00006C, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_GetCurveValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000070, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_GetCurveValue_ReturnValue_1) == 0x000074, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_GetCurveValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, K2Node_CustomEvent_hit) == 0x000078, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::K2Node_CustomEvent_hit' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x0000E0, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000E4, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_IsDedicatedServer_ReturnValue) == 0x0000E8, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_IsDedicatedServer_ReturnValue_1) == 0x0000E9, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_IsDedicatedServer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_Not_PreBool_ReturnValue) == 0x0000EA, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_SelectFloat_ReturnValue) == 0x0000EC, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_FMax_ReturnValue) == 0x0000F0, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_GetCurveValue_ReturnValue_2) == 0x0000F4, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_GetCurveValue_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_FMax_ReturnValue_1) == 0x0000F8, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_FMax_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_MakeVector_ReturnValue) == 0x0000FC, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, K2Node_CreateDelegate_OutputDelegate_1) == 0x000108, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_TryGetPawnOwner_ReturnValue) == 0x000120, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_TryGetPawnOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_GetMovementComponent_ReturnValue) == 0x000128, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_GetMovementComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, K2Node_CustomEvent_Character_1) == 0x000130, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::K2Node_CustomEvent_Character_1' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, K2Node_CustomEvent_PrevMovementMetaMode) == 0x000138, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::K2Node_CustomEvent_PrevMovementMetaMode' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, K2Node_CustomEvent_MovementMetaMode) == 0x000139, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::K2Node_CustomEvent_MovementMetaMode' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, K2Node_DynamicCast_AsCACharacter_Movement_Component) == 0x000140, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::K2Node_DynamicCast_AsCACharacter_Movement_Component' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, K2Node_DynamicCast_bSuccess) == 0x000148, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000149, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, Temp_delegate_Variable_1) == 0x00014C, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::Temp_delegate_Variable_1' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000160, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_EqualEqual_NameName_ReturnValue_1) == 0x000161, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_EqualEqual_NameName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_BooleanAND_ReturnValue) == 0x000162, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_BooleanAND_ReturnValue_1) == 0x000163, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_GetCurveValue_ReturnValue_3) == 0x000164, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_GetCurveValue_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_MapRangeClamped_ReturnValue) == 0x000168, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_Not_PreBool_ReturnValue_1) == 0x00016C, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, Temp_bool_IsClosed_Variable) == 0x00016D, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, Temp_delegate_Variable_2) == 0x000170, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::Temp_delegate_Variable_2' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_PlayEvent_playback_instance) == 0x000188, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_PlayEvent_playback_instance' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_PlayEvent_play_success) == 0x000198, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_PlayEvent_play_success' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_TryGetPawnOwner_ReturnValue_1) == 0x0001A0, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_TryGetPawnOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_Less_FloatFloat_ReturnValue) == 0x0001A8, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x0001A9, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_Greater_FloatFloat_ReturnValue_2) == 0x0001AA, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_Greater_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_TryGetPawnOwner_ReturnValue_2) == 0x0001B0, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_TryGetPawnOwner_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_IsValid_ReturnValue) == 0x0001B8, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_GetCurveValue_ReturnValue_4) == 0x0001BC, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_GetCurveValue_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_PlayEvent_playback_instance_1) == 0x0001C0, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_PlayEvent_playback_instance_1' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_PlayEvent_play_success_1) == 0x0001D0, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_PlayEvent_play_success_1' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_FClamp_ReturnValue) == 0x0001D4, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_GetCurveValue_ReturnValue_5) == 0x0001D8, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_GetCurveValue_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_Lerp_ReturnValue) == 0x0001DC, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_IsValid_ReturnValue_1) == 0x0001E0, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_SelectFloat_ReturnValue_1) == 0x0001E4, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, K2Node_CreateDelegate_OutputDelegate_2) == 0x0001E8, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_TryGetPawnOwner_ReturnValue_3) == 0x000200, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_TryGetPawnOwner_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, K2Node_DynamicCast_AsBP_Player) == 0x000208, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::K2Node_DynamicCast_AsBP_Player' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, K2Node_DynamicCast_bSuccess_1) == 0x000210, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_IsValid_ReturnValue_2) == 0x000211, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_GetSpecificPawnMesh_ReturnValue) == 0x000218, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_GetSpecificPawnMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_GetHealthState_ReturnValue) == 0x000220, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_GetHealthState_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000221, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_Not_PreBool_ReturnValue_2) == 0x000222, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_IsPhysicsStateCreated_ReturnValue) == 0x000223, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_IsPhysicsStateCreated_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, K2Node_CreateDelegate_OutputDelegate_3) == 0x000224, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_GetOwningActor_ReturnValue_1) == 0x000238, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_GetOwningActor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, K2Node_CreateDelegate_OutputDelegate_4) == 0x000240, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_IsInAudibleRange_ReturnValue) == 0x000254, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_IsInAudibleRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_WasRecentlyRendered_ReturnValue) == 0x000255, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_WasRecentlyRendered_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, K2Node_CustomEvent_character) == 0x000258, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::K2Node_CustomEvent_character' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, K2Node_CustomEvent_death_gameplay_effect_spec) == 0x000260, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::K2Node_CustomEvent_death_gameplay_effect_spec' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, K2Node_CustomEvent_damage_magnitude) == 0x0004F8, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::K2Node_CustomEvent_damage_magnitude' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, K2Node_CustomEvent_networked_hit) == 0x000500, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::K2Node_CustomEvent_networked_hit' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, K2Node_CustomEvent_killer) == 0x000568, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::K2Node_CustomEvent_killer' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_GetDeathAnim_DeathAnim) == 0x000570, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_GetDeathAnim_DeathAnim' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_PlayEvent_playback_instance_2) == 0x000578, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_PlayEvent_playback_instance_2' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_PlayEvent_play_success_2) == 0x000588, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_PlayEvent_play_success_2' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_PlaySlotAnimationAsDynamicMontage_ReturnValue) == 0x000590, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_PlaySlotAnimationAsDynamicMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000598, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, Temp_bool_Has_Been_Initd_Variable_1) == 0x000599, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::Temp_bool_Has_Been_Initd_Variable_1' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_BooleanOR_ReturnValue) == 0x00059A, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_BooleanOR_ReturnValue_1) == 0x00059B, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_BooleanOR_ReturnValue_2) == 0x00059C, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_SelectFloat_ReturnValue_2) == 0x0005A0, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, Temp_bool_IsClosed_Variable_1) == 0x0005A4, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::Temp_bool_IsClosed_Variable_1' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, K2Node_CreateDelegate_OutputDelegate_5) == 0x0005A8, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, K2Node_CustomEvent_PrevMovementMode) == 0x0005BC, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::K2Node_CustomEvent_PrevMovementMode' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, K2Node_CustomEvent_MovementMode) == 0x0005BD, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::K2Node_CustomEvent_MovementMode' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, K2Node_CustomEvent_delta_pos) == 0x0005C0, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::K2Node_CustomEvent_delta_pos' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x0005C4, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x0005C5, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_EqualEqual_ByteByte_ReturnValue_5) == 0x0005C6, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_EqualEqual_ByteByte_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_BooleanOR_ReturnValue_3) == 0x0005C7, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_SelectFloat_ReturnValue_3) == 0x0005C8, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_SelectFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_EqualEqual_ByteByte_ReturnValue_6) == 0x0005CC, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_EqualEqual_ByteByte_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_FMax_ReturnValue_2) == 0x0005D0, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_FMax_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_BooleanOR_ReturnValue_4) == 0x0005D4, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_EqualEqual_ByteByte_ReturnValue_7) == 0x0005D5, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_EqualEqual_ByteByte_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_BooleanAND_ReturnValue_2) == 0x0005D6, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_BooleanOR_ReturnValue_5) == 0x0005D7, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_BooleanOR_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_SelectFloat_ReturnValue_4) == 0x0005D8, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_SelectFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_EqualEqual_ByteByte_ReturnValue_8) == 0x0005DC, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_EqualEqual_ByteByte_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_FInterpTo_ReturnValue) == 0x0005E0, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_BooleanOR_ReturnValue_6) == 0x0005E4, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_BooleanOR_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_FMin_ReturnValue) == 0x0005E8, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x0005EC, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_FMax_ReturnValue_3) == 0x0005F0, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_FMax_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x0005F4, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_BooleanAND_ReturnValue_3) == 0x0005F5, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_BooleanAND_ReturnValue_4) == 0x0005F6, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_Subtract_FloatFloat_ReturnValue_2) == 0x0005F8, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_Subtract_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_IsValid_ReturnValue_3) == 0x0005FC, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_IsPhysicsStateCreated_ReturnValue_1) == 0x0005FD, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_IsPhysicsStateCreated_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, Temp_bool_Has_Been_Initd_Variable_2) == 0x0005FE, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::Temp_bool_Has_Been_Initd_Variable_2' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_TryGetPawnOwner_ReturnValue_4) == 0x000600, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_TryGetPawnOwner_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_IsValid_ReturnValue_4) == 0x000608, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, K2Node_DynamicCast_AsCACharacter_Main_Player) == 0x000610, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::K2Node_DynamicCast_AsCACharacter_Main_Player' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, K2Node_DynamicCast_bSuccess_2) == 0x000618, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_EqualEqual_ByteByte_ReturnValue_9) == 0x000619, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_EqualEqual_ByteByte_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_SelectFloat_ReturnValue_5) == 0x00061C, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_SelectFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_Add_FloatFloat_ReturnValue) == 0x000620, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_FInterpTo_Constant_ReturnValue) == 0x000624, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_FInterpTo_Constant_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000628, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_BreakVector_X_1) == 0x00062C, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_BreakVector_Y_1) == 0x000630, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_BreakVector_Z_1) == 0x000634, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_GetScaledCapsuleHalfHeight_ReturnValue) == 0x000638, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_GetScaledCapsuleHalfHeight_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_Subtract_FloatFloat_ReturnValue_3) == 0x00063C, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_Subtract_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_GetScaledCapsuleHalfHeight_ReturnValue_1) == 0x000640, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_GetScaledCapsuleHalfHeight_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_Add_FloatFloat_ReturnValue_2) == 0x000644, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_Add_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_GetScaledCapsuleHalfHeight_ReturnValue_2) == 0x000648, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_GetScaledCapsuleHalfHeight_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_Add_FloatFloat_ReturnValue_3) == 0x00064C, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_Add_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_MakeTransform_ReturnValue) == 0x000650, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_GetOwningComponent_ReturnValue) == 0x000680, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_GetOwningComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_IsPhysicsStateCreated_ReturnValue_2) == 0x000688, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_IsPhysicsStateCreated_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_GetCurveValue_ReturnValue_6) == 0x00068C, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_GetCurveValue_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_Subtract_FloatFloat_ReturnValue_4) == 0x000690, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_Subtract_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, Temp_bool_IsClosed_Variable_2) == 0x000694, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::Temp_bool_IsClosed_Variable_2' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, K2Node_CustomEvent_hit_1) == 0x000698, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::K2Node_CustomEvent_hit_1' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_TryGetPawnOwner_ReturnValue_5) == 0x000700, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_TryGetPawnOwner_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_IsValid_ReturnValue_5) == 0x000708, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, K2Node_DynamicCast_AsCACharacter) == 0x000710, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::K2Node_DynamicCast_AsCACharacter' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, K2Node_DynamicCast_bSuccess_3) == 0x000718, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x000720, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, K2Node_DynamicCast_AsCAAbility_System_Component) == 0x000728, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::K2Node_DynamicCast_AsCAAbility_System_Component' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, K2Node_DynamicCast_bSuccess_4) == 0x000730, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, K2Node_Event_DeltaTimeX) == 0x000734, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::K2Node_Event_DeltaTimeX' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_NotEqual_ByteByte_ReturnValue_2) == 0x000738, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_NotEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, Temp_bool_IsClosed_Variable_3) == 0x000739, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::Temp_bool_IsClosed_Variable_3' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_Subtract_FloatFloat_ReturnValue_5) == 0x00073C, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_Subtract_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_FMin_ReturnValue_1) == 0x000740, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_FMin_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_GetCurveValue_ReturnValue_7) == 0x000744, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_GetCurveValue_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_GetCurveValue_ReturnValue_8) == 0x000748, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_GetCurveValue_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_FClamp_ReturnValue_1) == 0x00074C, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_FClamp_ReturnValue_2) == 0x000750, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_FClamp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_Subtract_FloatFloat_ReturnValue_6) == 0x000754, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_Subtract_FloatFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_Subtract_FloatFloat_ReturnValue_7) == 0x000758, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_Subtract_FloatFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_FMax_ReturnValue_4) == 0x00075C, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_FMax_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_FClamp_ReturnValue_3) == 0x000760, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_FClamp_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_FClamp_ReturnValue_4) == 0x000764, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_FClamp_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_IsFirstPerson_ReturnValue) == 0x000768, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_IsFirstPerson_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_GetPendingHealthNormalised_ReturnValue) == 0x00076C, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_GetPendingHealthNormalised_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000770, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_GetAbilitySystemComponent_ReturnValue_1) == 0x000778, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_GetAbilitySystemComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_GetCurveValue_ReturnValue_9) == 0x000780, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_GetCurveValue_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_HasMatchingGameplayTag_self_CastInput) == 0x000788, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_HasMatchingGameplayTag_self_CastInput' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x000798, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_SelectFloat_ReturnValue_6) == 0x00079C, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_SelectFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_EqualEqual_ByteByte_ReturnValue_10) == 0x0007A0, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_EqualEqual_ByteByte_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_EqualEqual_ByteByte_ReturnValue_11) == 0x0007A1, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_EqualEqual_ByteByte_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_BooleanOR_ReturnValue_7) == 0x0007A2, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_BooleanOR_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_SelectFloat_ReturnValue_7) == 0x0007A4, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_SelectFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_IsFirstPerson_ReturnValue_1) == 0x0007A8, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_IsFirstPerson_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, K2Node_SwitchEnum_CmpSuccess) == 0x0007A9, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_GetParam_ReturnValue) == 0x0007AC, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_GetParam_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_FMax_ReturnValue_5) == 0x0007B0, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_FMax_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_FClamp_ReturnValue_5) == 0x0007B4, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_FClamp_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_SelectFloat_ReturnValue_8) == 0x0007B8, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_SelectFloat_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_TransformSnapshotPose_ReturnValue) == 0x0007BC, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_TransformSnapshotPose_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_GetCurveValue_ReturnValue_10) == 0x0007C0, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_GetCurveValue_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_EqualEqual_ByteByte_ReturnValue_12) == 0x0007C4, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_EqualEqual_ByteByte_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_GetLinkedAnimGraphInstanceByTag_ReturnValue) == 0x0007C8, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_GetLinkedAnimGraphInstanceByTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_SelectFloat_ReturnValue_9) == 0x0007D0, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_SelectFloat_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, K2Node_DynamicCast_AsABP_Human_TP_Normal_G) == 0x0007D8, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::K2Node_DynamicCast_AsABP_Human_TP_Normal_G' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, K2Node_DynamicCast_bSuccess_5) == 0x0007E0, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_IsSlotPlayingMontage_ReturnValue) == 0x0007E1, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_IsSlotPlayingMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, K2Node_CreateDelegate_OutputDelegate_6) == 0x0007E4, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_BooleanAND_ReturnValue_5) == 0x0007F8, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_Not_PreBool_ReturnValue_3) == 0x0007F9, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_BooleanAND_ReturnValue_6) == 0x0007FA, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_BooleanAND_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_BooleanAND_ReturnValue_7) == 0x0007FB, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_BooleanAND_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_FInterpTo_Constant_ReturnValue_1) == 0x0007FC, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_FInterpTo_Constant_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_SelectFloat_ReturnValue_10) == 0x000800, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_SelectFloat_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_GetActorForwardVector_ReturnValue) == 0x000804, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_MakeRotFromX_ReturnValue) == 0x000810, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_MakeRotFromX_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_GetSocketTransform_ReturnValue) == 0x000820, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_GetSocketTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_FInterpAsymmTo_ReturnValue) == 0x000850, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_FInterpAsymmTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_BreakTransform_Location) == 0x000854, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_BreakTransform_Rotation) == 0x000860, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_BreakTransform_Scale) == 0x00086C, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_Conv_RotatorToVector_ReturnValue) == 0x000878, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_Conv_RotatorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_IsFeatureActive_ReturnValue) == 0x000884, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_IsFeatureActive_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_LessLess_VectorRotator_ReturnValue) == 0x000888, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_LessLess_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_MakeRotFromX_ReturnValue_1) == 0x000894, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_MakeRotFromX_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_HasGameplayTag_ReturnValue) == 0x0008A0, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_HasGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_BooleanOR_ReturnValue_8) == 0x0008A1, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_BooleanOR_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_IsDownedLocomotionEnabled_ReturnValue) == 0x0008A2, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_IsDownedLocomotionEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_BooleanOR_ReturnValue_9) == 0x0008A3, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_BooleanOR_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_GetFaceCurveRemaining_ReturnValue) == 0x0008A4, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_GetFaceCurveRemaining_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, K2Node_CreateDelegate_OutputDelegate_7) == 0x0008A8, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x0008C0, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, Temp_bool_Has_Been_Initd_Variable_3) == 0x0008C8, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::Temp_bool_Has_Been_Initd_Variable_3' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_GetCurveValue_ReturnValue_11) == 0x0008CC, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_GetCurveValue_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_Subtract_FloatFloat_ReturnValue_8) == 0x0008D0, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_Subtract_FloatFloat_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_FMax_ReturnValue_6) == 0x0008D4, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_FMax_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_Lerp_ReturnValue_1) == 0x0008D8, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_FMax_ReturnValue_7) == 0x0008DC, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_FMax_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_SelectFloat_ReturnValue_11) == 0x0008E0, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_SelectFloat_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_Abs_ReturnValue) == 0x0008E4, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_FInterpTo_ReturnValue_1) == 0x0008E8, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_FInterpTo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_MapRangeClamped_ReturnValue_2) == 0x0008EC, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_MapRangeClamped_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_FMin_ReturnValue_2) == 0x0008F0, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_FMin_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_GetOwningActor_ReturnValue_2) == 0x0008F8, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_GetOwningActor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_GetCurrentRemainingHealthSegments_ReturnValue) == 0x000900, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_GetCurrentRemainingHealthSegments_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_GetHealthState_ReturnValue_1) == 0x000904, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_GetHealthState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000905, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_EqualEqual_ByteByte_ReturnValue_13) == 0x000906, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_EqualEqual_ByteByte_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000907, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_BooleanAND_ReturnValue_8) == 0x000908, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_BooleanAND_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_GetCurveValue_ReturnValue_12) == 0x00090C, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_GetCurveValue_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_Lerp_ReturnValue_2) == 0x000910, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_Lerp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_GetCurveValue_ReturnValue_13) == 0x000914, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_GetCurveValue_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP, CallFunc_Subtract_FloatFloat_ReturnValue_9) == 0x000918, "Member 'ABP_Human_TP_C_ExecuteUbergraph_ABP_Human_TP::CallFunc_Subtract_FloatFloat_ReturnValue_9' has a wrong offset!");

// Function ABP_Human_TP.ABP_Human_TP_C.PostMovementModeChanged
// 0x0008 (0x0008 - 0x0000)
struct ABP_Human_TP_C_PostMovementModeChanged final
{
public:
	ECAPlayerMovementMode                         PrevMovementMode;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECAPlayerMovementMode                         MovementMode;                                      // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Delta_pos;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Human_TP_C_PostMovementModeChanged) == 0x000004, "Wrong alignment on ABP_Human_TP_C_PostMovementModeChanged");
static_assert(sizeof(ABP_Human_TP_C_PostMovementModeChanged) == 0x000008, "Wrong size on ABP_Human_TP_C_PostMovementModeChanged");
static_assert(offsetof(ABP_Human_TP_C_PostMovementModeChanged, PrevMovementMode) == 0x000000, "Member 'ABP_Human_TP_C_PostMovementModeChanged::PrevMovementMode' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_PostMovementModeChanged, MovementMode) == 0x000001, "Member 'ABP_Human_TP_C_PostMovementModeChanged::MovementMode' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_PostMovementModeChanged, Delta_pos) == 0x000004, "Member 'ABP_Human_TP_C_PostMovementModeChanged::Delta_pos' has a wrong offset!");

// Function ABP_Human_TP.ABP_Human_TP_C.OnDeath
// 0x0318 (0x0318 - 0x0000)
struct ABP_Human_TP_C_OnDeath final
{
public:
	class ACACharacter*                           Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectSpec                    Death_gameplay_effect_spec;                        // 0x0008(0x0298)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	float                                         Damage_magnitude;                                  // 0x02A0(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A4[0x4];                                      // 0x02A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FNetworkedHit                          Networked_hit;                                     // 0x02A8(0x0068)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	const class AActor*                           Killer;                                            // 0x0310(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Human_TP_C_OnDeath) == 0x000008, "Wrong alignment on ABP_Human_TP_C_OnDeath");
static_assert(sizeof(ABP_Human_TP_C_OnDeath) == 0x000318, "Wrong size on ABP_Human_TP_C_OnDeath");
static_assert(offsetof(ABP_Human_TP_C_OnDeath, Character) == 0x000000, "Member 'ABP_Human_TP_C_OnDeath::Character' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_OnDeath, Death_gameplay_effect_spec) == 0x000008, "Member 'ABP_Human_TP_C_OnDeath::Death_gameplay_effect_spec' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_OnDeath, Damage_magnitude) == 0x0002A0, "Member 'ABP_Human_TP_C_OnDeath::Damage_magnitude' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_OnDeath, Networked_hit) == 0x0002A8, "Member 'ABP_Human_TP_C_OnDeath::Networked_hit' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_OnDeath, Killer) == 0x000310, "Member 'ABP_Human_TP_C_OnDeath::Killer' has a wrong offset!");

// Function ABP_Human_TP.ABP_Human_TP_C.OnMovementMetaChanged
// 0x0010 (0x0010 - 0x0000)
struct ABP_Human_TP_C_OnMovementMetaChanged final
{
public:
	class ACharacter*                             Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECAPlayerMovementMetaMode                     PrevMovementMetaMode;                              // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECAPlayerMovementMetaMode                     MovementMetaMode;                                  // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Human_TP_C_OnMovementMetaChanged) == 0x000008, "Wrong alignment on ABP_Human_TP_C_OnMovementMetaChanged");
static_assert(sizeof(ABP_Human_TP_C_OnMovementMetaChanged) == 0x000010, "Wrong size on ABP_Human_TP_C_OnMovementMetaChanged");
static_assert(offsetof(ABP_Human_TP_C_OnMovementMetaChanged, Character) == 0x000000, "Member 'ABP_Human_TP_C_OnMovementMetaChanged::Character' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_OnMovementMetaChanged, PrevMovementMetaMode) == 0x000008, "Member 'ABP_Human_TP_C_OnMovementMetaChanged::PrevMovementMetaMode' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_OnMovementMetaChanged, MovementMetaMode) == 0x000009, "Member 'ABP_Human_TP_C_OnMovementMetaChanged::MovementMetaMode' has a wrong offset!");

// Function ABP_Human_TP.ABP_Human_TP_C.OnLocalHitReceived
// 0x0068 (0x0068 - 0x0000)
struct ABP_Human_TP_C_OnLocalHitReceived final
{
public:
	struct FNetworkedHit                          Hit;                                               // 0x0000(0x0068)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(ABP_Human_TP_C_OnLocalHitReceived) == 0x000008, "Wrong alignment on ABP_Human_TP_C_OnLocalHitReceived");
static_assert(sizeof(ABP_Human_TP_C_OnLocalHitReceived) == 0x000068, "Wrong size on ABP_Human_TP_C_OnLocalHitReceived");
static_assert(offsetof(ABP_Human_TP_C_OnLocalHitReceived, Hit) == 0x000000, "Member 'ABP_Human_TP_C_OnLocalHitReceived::Hit' has a wrong offset!");

// Function ABP_Human_TP.ABP_Human_TP_C.OnPushReceivedEvent
// 0x0020 (0x0020 - 0x0000)
struct ABP_Human_TP_C_OnPushReceivedEvent final
{
public:
	struct FGameplayTagContainer                  Tag_name;                                          // 0x0000(0x0020)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(ABP_Human_TP_C_OnPushReceivedEvent) == 0x000008, "Wrong alignment on ABP_Human_TP_C_OnPushReceivedEvent");
static_assert(sizeof(ABP_Human_TP_C_OnPushReceivedEvent) == 0x000020, "Wrong size on ABP_Human_TP_C_OnPushReceivedEvent");
static_assert(offsetof(ABP_Human_TP_C_OnPushReceivedEvent, Tag_name) == 0x000000, "Member 'ABP_Human_TP_C_OnPushReceivedEvent::Tag_name' has a wrong offset!");

// Function ABP_Human_TP.ABP_Human_TP_C.OnHitReceivedEvent
// 0x0068 (0x0068 - 0x0000)
struct ABP_Human_TP_C_OnHitReceivedEvent final
{
public:
	struct FNetworkedHit                          Hit;                                               // 0x0000(0x0068)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(ABP_Human_TP_C_OnHitReceivedEvent) == 0x000008, "Wrong alignment on ABP_Human_TP_C_OnHitReceivedEvent");
static_assert(sizeof(ABP_Human_TP_C_OnHitReceivedEvent) == 0x000068, "Wrong size on ABP_Human_TP_C_OnHitReceivedEvent");
static_assert(offsetof(ABP_Human_TP_C_OnHitReceivedEvent, Hit) == 0x000000, "Member 'ABP_Human_TP_C_OnHitReceivedEvent::Hit' has a wrong offset!");

// Function ABP_Human_TP.ABP_Human_TP_C.BlueprintUpdateAnimation
// 0x0004 (0x0004 - 0x0000)
struct ABP_Human_TP_C_BlueprintUpdateAnimation final
{
public:
	float                                         DeltaTimeX;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Human_TP_C_BlueprintUpdateAnimation) == 0x000004, "Wrong alignment on ABP_Human_TP_C_BlueprintUpdateAnimation");
static_assert(sizeof(ABP_Human_TP_C_BlueprintUpdateAnimation) == 0x000004, "Wrong size on ABP_Human_TP_C_BlueprintUpdateAnimation");
static_assert(offsetof(ABP_Human_TP_C_BlueprintUpdateAnimation, DeltaTimeX) == 0x000000, "Member 'ABP_Human_TP_C_BlueprintUpdateAnimation::DeltaTimeX' has a wrong offset!");

// Function ABP_Human_TP.ABP_Human_TP_C.OnMetaModeChanged
// 0x0010 (0x0010 - 0x0000)
struct ABP_Human_TP_C_OnMetaModeChanged final
{
public:
	class ACharacter*                             Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECAPlayerMovementMetaMode                     Prev_Movement_Meta_Mode;                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECAPlayerMovementMetaMode                     New_Movement_Meta_Mode;                            // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ABP_Human_TP_C_OnMetaModeChanged) == 0x000008, "Wrong alignment on ABP_Human_TP_C_OnMetaModeChanged");
static_assert(sizeof(ABP_Human_TP_C_OnMetaModeChanged) == 0x000010, "Wrong size on ABP_Human_TP_C_OnMetaModeChanged");
static_assert(offsetof(ABP_Human_TP_C_OnMetaModeChanged, Character) == 0x000000, "Member 'ABP_Human_TP_C_OnMetaModeChanged::Character' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_OnMetaModeChanged, Prev_Movement_Meta_Mode) == 0x000008, "Member 'ABP_Human_TP_C_OnMetaModeChanged::Prev_Movement_Meta_Mode' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_OnMetaModeChanged, New_Movement_Meta_Mode) == 0x000009, "Member 'ABP_Human_TP_C_OnMetaModeChanged::New_Movement_Meta_Mode' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_OnMetaModeChanged, K2Node_SwitchEnum_CmpSuccess) == 0x00000A, "Member 'ABP_Human_TP_C_OnMetaModeChanged::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_OnMetaModeChanged, K2Node_SwitchEnum_CmpSuccess_1) == 0x00000B, "Member 'ABP_Human_TP_C_OnMetaModeChanged::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");

// Function ABP_Human_TP.ABP_Human_TP_C.OnHitReaction
// 0x0168 (0x0168 - 0x0000)
struct ABP_Human_TP_C_OnHitReaction final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Direction;                                         // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EBodyPart                                     BodyPart_0;                                        // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACAEquipmentBase*                       Weapon;                                            // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FNetworkedHit                          Hit;                                               // 0x0028(0x0068)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FGameplayTag                           Temp_struct_Variable;                              // 0x0090(0x000C)(NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_RotatorToVector_ReturnValue;         // 0x009C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable_1;                            // 0x00A8(0x000C)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable_2;                            // 0x00B4(0x000C)(NoDestructor, HasGetValueTypeHash)
	EBodyPart                                     Temp_byte_Variable;                                // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x3];                                       // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           Temp_struct_Variable_3;                            // 0x00C4(0x000C)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable_4;                            // 0x00D0(0x000C)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable_5;                            // 0x00DC(0x000C)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable_6;                            // 0x00E8(0x000C)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable_7;                            // 0x00F4(0x000C)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable_8;                            // 0x0100(0x000C)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable_9;                            // 0x010C(0x000C)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_Select_Default;                             // 0x0118(0x000C)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_124[0x4];                                      // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwningActor_ReturnValue;               // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0130(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_LessLess_VectorRotator_ReturnValue;       // 0x013C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get4DirectionIndex_ReturnValue;           // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_Select_Default_1;                           // 0x0150(0x000C)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FindBestHitReactionIndex_ReturnValue;     // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_161[0x3];                                      // 0x0161(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Montage_Play_ReturnValue;                 // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Human_TP_C_OnHitReaction) == 0x000008, "Wrong alignment on ABP_Human_TP_C_OnHitReaction");
static_assert(sizeof(ABP_Human_TP_C_OnHitReaction) == 0x000168, "Wrong size on ABP_Human_TP_C_OnHitReaction");
static_assert(offsetof(ABP_Human_TP_C_OnHitReaction, Location) == 0x000000, "Member 'ABP_Human_TP_C_OnHitReaction::Location' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_OnHitReaction, Direction) == 0x00000C, "Member 'ABP_Human_TP_C_OnHitReaction::Direction' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_OnHitReaction, BodyPart_0) == 0x000018, "Member 'ABP_Human_TP_C_OnHitReaction::BodyPart_0' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_OnHitReaction, Weapon) == 0x000020, "Member 'ABP_Human_TP_C_OnHitReaction::Weapon' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_OnHitReaction, Hit) == 0x000028, "Member 'ABP_Human_TP_C_OnHitReaction::Hit' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_OnHitReaction, Temp_struct_Variable) == 0x000090, "Member 'ABP_Human_TP_C_OnHitReaction::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_OnHitReaction, CallFunc_Conv_RotatorToVector_ReturnValue) == 0x00009C, "Member 'ABP_Human_TP_C_OnHitReaction::CallFunc_Conv_RotatorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_OnHitReaction, Temp_struct_Variable_1) == 0x0000A8, "Member 'ABP_Human_TP_C_OnHitReaction::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_OnHitReaction, Temp_struct_Variable_2) == 0x0000B4, "Member 'ABP_Human_TP_C_OnHitReaction::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_OnHitReaction, Temp_byte_Variable) == 0x0000C0, "Member 'ABP_Human_TP_C_OnHitReaction::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_OnHitReaction, Temp_struct_Variable_3) == 0x0000C4, "Member 'ABP_Human_TP_C_OnHitReaction::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_OnHitReaction, Temp_struct_Variable_4) == 0x0000D0, "Member 'ABP_Human_TP_C_OnHitReaction::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_OnHitReaction, Temp_struct_Variable_5) == 0x0000DC, "Member 'ABP_Human_TP_C_OnHitReaction::Temp_struct_Variable_5' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_OnHitReaction, Temp_struct_Variable_6) == 0x0000E8, "Member 'ABP_Human_TP_C_OnHitReaction::Temp_struct_Variable_6' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_OnHitReaction, Temp_struct_Variable_7) == 0x0000F4, "Member 'ABP_Human_TP_C_OnHitReaction::Temp_struct_Variable_7' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_OnHitReaction, Temp_struct_Variable_8) == 0x000100, "Member 'ABP_Human_TP_C_OnHitReaction::Temp_struct_Variable_8' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_OnHitReaction, Temp_struct_Variable_9) == 0x00010C, "Member 'ABP_Human_TP_C_OnHitReaction::Temp_struct_Variable_9' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_OnHitReaction, K2Node_Select_Default) == 0x000118, "Member 'ABP_Human_TP_C_OnHitReaction::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_OnHitReaction, CallFunc_GetOwningActor_ReturnValue) == 0x000128, "Member 'ABP_Human_TP_C_OnHitReaction::CallFunc_GetOwningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_OnHitReaction, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000130, "Member 'ABP_Human_TP_C_OnHitReaction::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_OnHitReaction, CallFunc_LessLess_VectorRotator_ReturnValue) == 0x00013C, "Member 'ABP_Human_TP_C_OnHitReaction::CallFunc_LessLess_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_OnHitReaction, Temp_int_Variable) == 0x000148, "Member 'ABP_Human_TP_C_OnHitReaction::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_OnHitReaction, CallFunc_Get4DirectionIndex_ReturnValue) == 0x00014C, "Member 'ABP_Human_TP_C_OnHitReaction::CallFunc_Get4DirectionIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_OnHitReaction, K2Node_Select_Default_1) == 0x000150, "Member 'ABP_Human_TP_C_OnHitReaction::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_OnHitReaction, CallFunc_FindBestHitReactionIndex_ReturnValue) == 0x00015C, "Member 'ABP_Human_TP_C_OnHitReaction::CallFunc_FindBestHitReactionIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_OnHitReaction, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000160, "Member 'ABP_Human_TP_C_OnHitReaction::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_OnHitReaction, CallFunc_Montage_Play_ReturnValue) == 0x000164, "Member 'ABP_Human_TP_C_OnHitReaction::CallFunc_Montage_Play_ReturnValue' has a wrong offset!");

// Function ABP_Human_TP.ABP_Human_TP_C.OnPushReceived
// 0x0060 (0x0060 - 0x0000)
struct ABP_Human_TP_C_OnPushReceived final
{
public:
	struct FGameplayTagContainer                  GameplayTagContainer;                              // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm)
	TArray<struct FGameplayTag>                   CallFunc_BreakGameplayTagContainer_GameplayTags;   // 0x0020(0x0010)(ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_Array_Get_Item;                           // 0x0038(0x000C)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue;       // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue_1;     // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_46[0x2];                                       // 0x0046(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Montage_Play_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Montage_Play_ReturnValue_1;               // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Montage_Play_ReturnValue_2;               // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Human_TP_C_OnPushReceived) == 0x000008, "Wrong alignment on ABP_Human_TP_C_OnPushReceived");
static_assert(sizeof(ABP_Human_TP_C_OnPushReceived) == 0x000060, "Wrong size on ABP_Human_TP_C_OnPushReceived");
static_assert(offsetof(ABP_Human_TP_C_OnPushReceived, GameplayTagContainer) == 0x000000, "Member 'ABP_Human_TP_C_OnPushReceived::GameplayTagContainer' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_OnPushReceived, CallFunc_BreakGameplayTagContainer_GameplayTags) == 0x000020, "Member 'ABP_Human_TP_C_OnPushReceived::CallFunc_BreakGameplayTagContainer_GameplayTags' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_OnPushReceived, Temp_int_Array_Index_Variable) == 0x000030, "Member 'ABP_Human_TP_C_OnPushReceived::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_OnPushReceived, CallFunc_Array_Length_ReturnValue) == 0x000034, "Member 'ABP_Human_TP_C_OnPushReceived::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_OnPushReceived, CallFunc_Array_Get_Item) == 0x000038, "Member 'ABP_Human_TP_C_OnPushReceived::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_OnPushReceived, CallFunc_EqualEqual_GameplayTag_ReturnValue) == 0x000044, "Member 'ABP_Human_TP_C_OnPushReceived::CallFunc_EqualEqual_GameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_OnPushReceived, CallFunc_EqualEqual_GameplayTag_ReturnValue_1) == 0x000045, "Member 'ABP_Human_TP_C_OnPushReceived::CallFunc_EqualEqual_GameplayTag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_OnPushReceived, CallFunc_Montage_Play_ReturnValue) == 0x000048, "Member 'ABP_Human_TP_C_OnPushReceived::CallFunc_Montage_Play_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_OnPushReceived, CallFunc_Montage_Play_ReturnValue_1) == 0x00004C, "Member 'ABP_Human_TP_C_OnPushReceived::CallFunc_Montage_Play_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_OnPushReceived, Temp_int_Loop_Counter_Variable) == 0x000050, "Member 'ABP_Human_TP_C_OnPushReceived::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_OnPushReceived, CallFunc_Montage_Play_ReturnValue_2) == 0x000054, "Member 'ABP_Human_TP_C_OnPushReceived::CallFunc_Montage_Play_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_OnPushReceived, CallFunc_Less_IntInt_ReturnValue) == 0x000058, "Member 'ABP_Human_TP_C_OnPushReceived::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_OnPushReceived, CallFunc_Add_IntInt_ReturnValue) == 0x00005C, "Member 'ABP_Human_TP_C_OnPushReceived::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function ABP_Human_TP.ABP_Human_TP_C.GetDeathAnim
// 0x01B0 (0x01B0 - 0x0000)
struct ABP_Human_TP_C_GetDeathAnim final
{
public:
	struct FNetworkedHit                          Hit;                                               // 0x0000(0x0068)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	class UAnimSequenceBase*                      DeathAnim;                                         // 0x0068(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 DeathAnimType;                                     // 0x0070(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	TArray<class FString>                         DirNames;                                          // 0x0080(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Variable;                                 // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_RotatorToVector_ReturnValue;         // 0x0098(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_4;                               // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         K2Node_MakeArray_Array;                            // 0x00B0(0x0010)(ReferenceParm)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EBodyPart                                     Temp_byte_Variable;                                // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C2[0xE];                                       // 0x00C2(0x000E)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue;           // 0x00D0(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0100(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x010C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0118(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0130(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_LessLess_VectorRotator_ReturnValue;       // 0x013C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get4DirectionIndex_ReturnValue;           // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14C[0x4];                                      // 0x014C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequenceBase*                      K2Node_Select_Default;                             // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_5;                               // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15C[0x4];                                      // 0x015C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequenceBase*                      K2Node_Select_Default_1;                           // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      K2Node_Select_Default_2;                           // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_171[0x7];                                      // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequenceBase*                      K2Node_Select_Default_3;                           // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      K2Node_Select_Default_4;                           // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      K2Node_Select_Default_5;                           // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_6;                               // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_194[0x4];                                      // 0x0194(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequenceBase*                      K2Node_Select_Default_6;                           // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      K2Node_Select_Default_7;                           // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Human_TP_C_GetDeathAnim) == 0x000010, "Wrong alignment on ABP_Human_TP_C_GetDeathAnim");
static_assert(sizeof(ABP_Human_TP_C_GetDeathAnim) == 0x0001B0, "Wrong size on ABP_Human_TP_C_GetDeathAnim");
static_assert(offsetof(ABP_Human_TP_C_GetDeathAnim, Hit) == 0x000000, "Member 'ABP_Human_TP_C_GetDeathAnim::Hit' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_GetDeathAnim, DeathAnim) == 0x000068, "Member 'ABP_Human_TP_C_GetDeathAnim::DeathAnim' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_GetDeathAnim, DeathAnimType) == 0x000070, "Member 'ABP_Human_TP_C_GetDeathAnim::DeathAnimType' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_GetDeathAnim, DirNames) == 0x000080, "Member 'ABP_Human_TP_C_GetDeathAnim::DirNames' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_GetDeathAnim, Temp_int_Variable) == 0x000090, "Member 'ABP_Human_TP_C_GetDeathAnim::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_GetDeathAnim, Temp_int_Variable_1) == 0x000094, "Member 'ABP_Human_TP_C_GetDeathAnim::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_GetDeathAnim, CallFunc_Conv_RotatorToVector_ReturnValue) == 0x000098, "Member 'ABP_Human_TP_C_GetDeathAnim::CallFunc_Conv_RotatorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_GetDeathAnim, Temp_int_Variable_2) == 0x0000A4, "Member 'ABP_Human_TP_C_GetDeathAnim::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_GetDeathAnim, Temp_int_Variable_3) == 0x0000A8, "Member 'ABP_Human_TP_C_GetDeathAnim::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_GetDeathAnim, Temp_int_Variable_4) == 0x0000AC, "Member 'ABP_Human_TP_C_GetDeathAnim::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_GetDeathAnim, K2Node_MakeArray_Array) == 0x0000B0, "Member 'ABP_Human_TP_C_GetDeathAnim::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_GetDeathAnim, K2Node_SwitchEnum_CmpSuccess) == 0x0000C0, "Member 'ABP_Human_TP_C_GetDeathAnim::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_GetDeathAnim, Temp_byte_Variable) == 0x0000C1, "Member 'ABP_Human_TP_C_GetDeathAnim::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_GetDeathAnim, CallFunc_GetSocketTransform_ReturnValue) == 0x0000D0, "Member 'ABP_Human_TP_C_GetDeathAnim::CallFunc_GetSocketTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_GetDeathAnim, CallFunc_BreakTransform_Location) == 0x000100, "Member 'ABP_Human_TP_C_GetDeathAnim::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_GetDeathAnim, CallFunc_BreakTransform_Rotation) == 0x00010C, "Member 'ABP_Human_TP_C_GetDeathAnim::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_GetDeathAnim, CallFunc_BreakTransform_Scale) == 0x000118, "Member 'ABP_Human_TP_C_GetDeathAnim::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_GetDeathAnim, CallFunc_BreakRotator_Roll) == 0x000124, "Member 'ABP_Human_TP_C_GetDeathAnim::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_GetDeathAnim, CallFunc_BreakRotator_Pitch) == 0x000128, "Member 'ABP_Human_TP_C_GetDeathAnim::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_GetDeathAnim, CallFunc_BreakRotator_Yaw) == 0x00012C, "Member 'ABP_Human_TP_C_GetDeathAnim::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_GetDeathAnim, CallFunc_MakeRotator_ReturnValue) == 0x000130, "Member 'ABP_Human_TP_C_GetDeathAnim::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_GetDeathAnim, CallFunc_LessLess_VectorRotator_ReturnValue) == 0x00013C, "Member 'ABP_Human_TP_C_GetDeathAnim::CallFunc_LessLess_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_GetDeathAnim, CallFunc_Get4DirectionIndex_ReturnValue) == 0x000148, "Member 'ABP_Human_TP_C_GetDeathAnim::CallFunc_Get4DirectionIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_GetDeathAnim, K2Node_Select_Default) == 0x000150, "Member 'ABP_Human_TP_C_GetDeathAnim::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_GetDeathAnim, Temp_int_Variable_5) == 0x000158, "Member 'ABP_Human_TP_C_GetDeathAnim::Temp_int_Variable_5' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_GetDeathAnim, K2Node_Select_Default_1) == 0x000160, "Member 'ABP_Human_TP_C_GetDeathAnim::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_GetDeathAnim, K2Node_Select_Default_2) == 0x000168, "Member 'ABP_Human_TP_C_GetDeathAnim::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_GetDeathAnim, CallFunc_BooleanOR_ReturnValue) == 0x000170, "Member 'ABP_Human_TP_C_GetDeathAnim::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_GetDeathAnim, K2Node_Select_Default_3) == 0x000178, "Member 'ABP_Human_TP_C_GetDeathAnim::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_GetDeathAnim, K2Node_Select_Default_4) == 0x000180, "Member 'ABP_Human_TP_C_GetDeathAnim::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_GetDeathAnim, K2Node_Select_Default_5) == 0x000188, "Member 'ABP_Human_TP_C_GetDeathAnim::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_GetDeathAnim, Temp_int_Variable_6) == 0x000190, "Member 'ABP_Human_TP_C_GetDeathAnim::Temp_int_Variable_6' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_GetDeathAnim, K2Node_Select_Default_6) == 0x000198, "Member 'ABP_Human_TP_C_GetDeathAnim::K2Node_Select_Default_6' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_C_GetDeathAnim, K2Node_Select_Default_7) == 0x0001A0, "Member 'ABP_Human_TP_C_GetDeathAnim::K2Node_Select_Default_7' has a wrong offset!");

// Function ABP_Human_TP.ABP_Human_TP_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct ABP_Human_TP_C_AnimGraph final
{
public:
	struct FPoseLink                              AnimGraph_0;                                       // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABP_Human_TP_C_AnimGraph) == 0x000008, "Wrong alignment on ABP_Human_TP_C_AnimGraph");
static_assert(sizeof(ABP_Human_TP_C_AnimGraph) == 0x000010, "Wrong size on ABP_Human_TP_C_AnimGraph");
static_assert(offsetof(ABP_Human_TP_C_AnimGraph, AnimGraph_0) == 0x000000, "Member 'ABP_Human_TP_C_AnimGraph::AnimGraph_0' has a wrong offset!");

}

