#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_NPC_DroneLight

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function ABP_NPC_DroneLight.ABP_NPC_DroneLight_C.ExecuteUbergraph_ABP_NPC_DroneLight
// 0x0098 (0x0098 - 0x0000)
struct ABP_NPC_DroneLight_C_ExecuteUbergraph_ABP_NPC_DroneLight final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaTimeX;                           // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ACACharacter_NPC*                       K2Node_DynamicCast_AsCACharacter_NPC;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_GetDroneRotation_ReturnValue;             // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetTPLocation_ReturnValue;                // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_RInterpTo_Constant_ReturnValue;           // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_GetBaseAimRotation_ReturnValue;           // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_NormalizeAxis_ReturnValue;                // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Conv_RotatorToVector_ReturnValue;         // 0x0074(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0080(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x008C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_NPC_DroneLight_C_ExecuteUbergraph_ABP_NPC_DroneLight) == 0x000008, "Wrong alignment on ABP_NPC_DroneLight_C_ExecuteUbergraph_ABP_NPC_DroneLight");
static_assert(sizeof(ABP_NPC_DroneLight_C_ExecuteUbergraph_ABP_NPC_DroneLight) == 0x000098, "Wrong size on ABP_NPC_DroneLight_C_ExecuteUbergraph_ABP_NPC_DroneLight");
static_assert(offsetof(ABP_NPC_DroneLight_C_ExecuteUbergraph_ABP_NPC_DroneLight, EntryPoint) == 0x000000, "Member 'ABP_NPC_DroneLight_C_ExecuteUbergraph_ABP_NPC_DroneLight::EntryPoint' has a wrong offset!");
static_assert(offsetof(ABP_NPC_DroneLight_C_ExecuteUbergraph_ABP_NPC_DroneLight, CallFunc_TryGetPawnOwner_ReturnValue) == 0x000008, "Member 'ABP_NPC_DroneLight_C_ExecuteUbergraph_ABP_NPC_DroneLight::CallFunc_TryGetPawnOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_NPC_DroneLight_C_ExecuteUbergraph_ABP_NPC_DroneLight, K2Node_Event_DeltaTimeX) == 0x000010, "Member 'ABP_NPC_DroneLight_C_ExecuteUbergraph_ABP_NPC_DroneLight::K2Node_Event_DeltaTimeX' has a wrong offset!");
static_assert(offsetof(ABP_NPC_DroneLight_C_ExecuteUbergraph_ABP_NPC_DroneLight, CallFunc_IsValid_ReturnValue) == 0x000014, "Member 'ABP_NPC_DroneLight_C_ExecuteUbergraph_ABP_NPC_DroneLight::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_NPC_DroneLight_C_ExecuteUbergraph_ABP_NPC_DroneLight, K2Node_DynamicCast_AsCACharacter_NPC) == 0x000018, "Member 'ABP_NPC_DroneLight_C_ExecuteUbergraph_ABP_NPC_DroneLight::K2Node_DynamicCast_AsCACharacter_NPC' has a wrong offset!");
static_assert(offsetof(ABP_NPC_DroneLight_C_ExecuteUbergraph_ABP_NPC_DroneLight, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'ABP_NPC_DroneLight_C_ExecuteUbergraph_ABP_NPC_DroneLight::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ABP_NPC_DroneLight_C_ExecuteUbergraph_ABP_NPC_DroneLight, CallFunc_GetDroneRotation_ReturnValue) == 0x000024, "Member 'ABP_NPC_DroneLight_C_ExecuteUbergraph_ABP_NPC_DroneLight::CallFunc_GetDroneRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_NPC_DroneLight_C_ExecuteUbergraph_ABP_NPC_DroneLight, CallFunc_GetTPLocation_ReturnValue) == 0x000030, "Member 'ABP_NPC_DroneLight_C_ExecuteUbergraph_ABP_NPC_DroneLight::CallFunc_GetTPLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_NPC_DroneLight_C_ExecuteUbergraph_ABP_NPC_DroneLight, CallFunc_RInterpTo_Constant_ReturnValue) == 0x00003C, "Member 'ABP_NPC_DroneLight_C_ExecuteUbergraph_ABP_NPC_DroneLight::CallFunc_RInterpTo_Constant_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_NPC_DroneLight_C_ExecuteUbergraph_ABP_NPC_DroneLight, CallFunc_GetBaseAimRotation_ReturnValue) == 0x000048, "Member 'ABP_NPC_DroneLight_C_ExecuteUbergraph_ABP_NPC_DroneLight::CallFunc_GetBaseAimRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_NPC_DroneLight_C_ExecuteUbergraph_ABP_NPC_DroneLight, CallFunc_BreakRotator_Roll) == 0x000054, "Member 'ABP_NPC_DroneLight_C_ExecuteUbergraph_ABP_NPC_DroneLight::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(ABP_NPC_DroneLight_C_ExecuteUbergraph_ABP_NPC_DroneLight, CallFunc_BreakRotator_Pitch) == 0x000058, "Member 'ABP_NPC_DroneLight_C_ExecuteUbergraph_ABP_NPC_DroneLight::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(ABP_NPC_DroneLight_C_ExecuteUbergraph_ABP_NPC_DroneLight, CallFunc_BreakRotator_Yaw) == 0x00005C, "Member 'ABP_NPC_DroneLight_C_ExecuteUbergraph_ABP_NPC_DroneLight::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(ABP_NPC_DroneLight_C_ExecuteUbergraph_ABP_NPC_DroneLight, CallFunc_NormalizeAxis_ReturnValue) == 0x000060, "Member 'ABP_NPC_DroneLight_C_ExecuteUbergraph_ABP_NPC_DroneLight::CallFunc_NormalizeAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_NPC_DroneLight_C_ExecuteUbergraph_ABP_NPC_DroneLight, CallFunc_FClamp_ReturnValue) == 0x000064, "Member 'ABP_NPC_DroneLight_C_ExecuteUbergraph_ABP_NPC_DroneLight::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_NPC_DroneLight_C_ExecuteUbergraph_ABP_NPC_DroneLight, CallFunc_MakeRotator_ReturnValue) == 0x000068, "Member 'ABP_NPC_DroneLight_C_ExecuteUbergraph_ABP_NPC_DroneLight::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_NPC_DroneLight_C_ExecuteUbergraph_ABP_NPC_DroneLight, CallFunc_Conv_RotatorToVector_ReturnValue) == 0x000074, "Member 'ABP_NPC_DroneLight_C_ExecuteUbergraph_ABP_NPC_DroneLight::CallFunc_Conv_RotatorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_NPC_DroneLight_C_ExecuteUbergraph_ABP_NPC_DroneLight, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000080, "Member 'ABP_NPC_DroneLight_C_ExecuteUbergraph_ABP_NPC_DroneLight::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_NPC_DroneLight_C_ExecuteUbergraph_ABP_NPC_DroneLight, CallFunc_Add_VectorVector_ReturnValue) == 0x00008C, "Member 'ABP_NPC_DroneLight_C_ExecuteUbergraph_ABP_NPC_DroneLight::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");

// Function ABP_NPC_DroneLight.ABP_NPC_DroneLight_C.BlueprintUpdateAnimation
// 0x0004 (0x0004 - 0x0000)
struct ABP_NPC_DroneLight_C_BlueprintUpdateAnimation final
{
public:
	float                                         DeltaTimeX;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_NPC_DroneLight_C_BlueprintUpdateAnimation) == 0x000004, "Wrong alignment on ABP_NPC_DroneLight_C_BlueprintUpdateAnimation");
static_assert(sizeof(ABP_NPC_DroneLight_C_BlueprintUpdateAnimation) == 0x000004, "Wrong size on ABP_NPC_DroneLight_C_BlueprintUpdateAnimation");
static_assert(offsetof(ABP_NPC_DroneLight_C_BlueprintUpdateAnimation, DeltaTimeX) == 0x000000, "Member 'ABP_NPC_DroneLight_C_BlueprintUpdateAnimation::DeltaTimeX' has a wrong offset!");

// Function ABP_NPC_DroneLight.ABP_NPC_DroneLight_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct ABP_NPC_DroneLight_C_AnimGraph final
{
public:
	struct FPoseLink                              AnimGraph_0;                                       // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABP_NPC_DroneLight_C_AnimGraph) == 0x000008, "Wrong alignment on ABP_NPC_DroneLight_C_AnimGraph");
static_assert(sizeof(ABP_NPC_DroneLight_C_AnimGraph) == 0x000010, "Wrong size on ABP_NPC_DroneLight_C_AnimGraph");
static_assert(offsetof(ABP_NPC_DroneLight_C_AnimGraph, AnimGraph_0) == 0x000000, "Member 'ABP_NPC_DroneLight_C_AnimGraph::AnimGraph_0' has a wrong offset!");

}

