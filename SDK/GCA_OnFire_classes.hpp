#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GCA_OnFire

#include "Basic.hpp"

#include "CAAudio_structs.hpp"
#include "GameplayAbilities_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GCA_OnFire.GCA_OnFire_C
// 0x0050 (0x0310 - 0x02C0)
class AGCA_OnFire_C final : public AGameplayCueNotify_Actor
{
public:
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         NiagaraOnFireThirdPersonVFX;                       // 0x02C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PostProcess_OnFire_C*               AttachedPostProcessEffect;                         // 0x02D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      NiagaraEffectReference;                            // 0x02D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCAAudioPlaybackInstance               AudioTPFireLoop;                                   // 0x02E0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UNiagaraComponent*                      NiagaraOnFireFirstPersonVFX;                       // 0x02F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCAAudioPlaybackInstance               AudioFPFireLoop;                                   // 0x02F8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class AActor*                                 Target;                                            // 0x0308(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	bool OnRemove(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters);
	bool WhileActive(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters);
	bool OnExecute(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters);
	void On_Player_Perspective_Changed(bool Is_First_Person);
	void End_Fire_VFX(class AActor* My_Target);
	void Start_Fire_VFX(class AActor* My_Target);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GCA_OnFire_C">();
	}
	static class AGCA_OnFire_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AGCA_OnFire_C>();
	}
};
static_assert(alignof(AGCA_OnFire_C) == 0x000008, "Wrong alignment on AGCA_OnFire_C");
static_assert(sizeof(AGCA_OnFire_C) == 0x000310, "Wrong size on AGCA_OnFire_C");
static_assert(offsetof(AGCA_OnFire_C, DefaultSceneRoot) == 0x0002C0, "Member 'AGCA_OnFire_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(AGCA_OnFire_C, NiagaraOnFireThirdPersonVFX) == 0x0002C8, "Member 'AGCA_OnFire_C::NiagaraOnFireThirdPersonVFX' has a wrong offset!");
static_assert(offsetof(AGCA_OnFire_C, AttachedPostProcessEffect) == 0x0002D0, "Member 'AGCA_OnFire_C::AttachedPostProcessEffect' has a wrong offset!");
static_assert(offsetof(AGCA_OnFire_C, NiagaraEffectReference) == 0x0002D8, "Member 'AGCA_OnFire_C::NiagaraEffectReference' has a wrong offset!");
static_assert(offsetof(AGCA_OnFire_C, AudioTPFireLoop) == 0x0002E0, "Member 'AGCA_OnFire_C::AudioTPFireLoop' has a wrong offset!");
static_assert(offsetof(AGCA_OnFire_C, NiagaraOnFireFirstPersonVFX) == 0x0002F0, "Member 'AGCA_OnFire_C::NiagaraOnFireFirstPersonVFX' has a wrong offset!");
static_assert(offsetof(AGCA_OnFire_C, AudioFPFireLoop) == 0x0002F8, "Member 'AGCA_OnFire_C::AudioFPFireLoop' has a wrong offset!");
static_assert(offsetof(AGCA_OnFire_C, Target) == 0x000308, "Member 'AGCA_OnFire_C::Target' has a wrong offset!");

}

