#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CAAudioUtilities

#include "Basic.hpp"

#include "Engine_classes.hpp"
#include "Keaton_structs.hpp"
#include "AUDIO_Env_FoleySweetners_structs.hpp"
#include "PhysicsCore_structs.hpp"
#include "CAAudio_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass CAAudioUtilities.CAAudioUtilities_C
// 0x0000 (0x0030 - 0x0030)
class UCAAudioUtilities_C final : public UBlueprintFunctionLibrary
{
public:
	static void PlaySpecialistFoostepAudio(class ACACharacter_MainPlayer* Character_Main_Player, ECAPlayerMovementMode Current_Movement_Mode, class UObject* __WorldContext);
	static void ConvertSurfaceToAudio(EPhysicalSurface Surface, class UObject* __WorldContext, struct FCAAudioSwitchValueType* Switch, struct FCAAudioBankNameType* FootstepBank);
	static void Play_Jump_Landing_Audio(class ACACharacter_MainPlayer* Character_Main_Player, ECAPlayerMovementMetaMode Current_Movement_Meta_Mode, ECAPlayerMovementMode Prev_Player_Movement_Mode, float PreLandSpeed, class UObject* __WorldContext);
	static void OnMovementModeChangeSetSwitchAudio(class ACACharacter_MainPlayer* Character, ECAPlayerMovementMode PreviousMovementMode, ECAPlayerMovementMode CurrentMovementMode, class UObject* __WorldContext);
	static void PlayZeroGWallLanding(class AActor* Character, const struct FVector& Landing_World_Pos, bool IsLocallyControlled_, bool IsPredictedImpactValid, float Pre_Landing_Speed, class UObject* __WorldContext);
	static void PlayHandPlacementSurfaceLeftAudio(class ACACharacter_MainPlayer* Character, class UObject* __WorldContext);
	static void PlayHandPlacementSurfaceRightAudio(class ACACharacter_MainPlayer* Character, class UObject* __WorldContext);
	static void PlayHandPlacementSurfaceAboveAudio(class ACACharacter_MainPlayer* Character, class UObject* __WorldContext);
	static void PlayHandPlacementSurfaceFrontAudio(class ACACharacter_MainPlayer* Character, class UObject* __WorldContext);
	static void PlayHandPlacementSurfaceBehindAudio(class ACACharacter_MainPlayer* Character, class UObject* __WorldContext);
	static void PlayWallCrawlingAudio(class AActor* Character, bool IsWallCrawling, class UObject* __WorldContext);
	static void PlayNPCFootstepAudio(class AActor* NPC, bool IsNPCMagboots, class UObject* __WorldContext);
	static void GetSurfaceMaterialAudio(class ACACharacter_MainPlayer* Character, class UObject* __WorldContext);
	static void PlayDownedHandplacementAudio(class ACACharacter_MainPlayer* Character, class UObject* __WorldContext);
	static void PlayMagbootFallWallLanding(class AActor* Character, const struct FVector& Landing_World_Pos, bool IsLocallyControlled_, float Pre_Landing_Speed, class UObject* __WorldContext);
	static void PlaySlidingAndFallingAudio(class ACACharacter_MainPlayer* Character, ECAPlayerMovementMode Prev_Movement_Mode, ECAPlayerMovementMode Movement_Mode, class UObject* __WorldContext);
	static void PlayHandPlacementZeroGDownedAudio(class ACACharacter_MainPlayer* Character, class UObject* __WorldContext);
	static void ENVPropFoleySweetnerAudio(const struct FHitResult& Hit, EAUDIO_Env_FoleySweetners ENV_Sweetner_Switch, class ACACharacter* Character, class UObject* __WorldContext);
	static void GetShipsVoiceController(class UObject* Context, class UObject* __WorldContext, class ABP_ShipsVoiceController_C** ShipsVoiceController);
	static void PlayTraversalAudio(class ACACharacter_MainPlayer* Character, ECAPlayerMovementMode Previous_Movement_Mode, ECAPlayerMovementMode Current_Movement_Mode, class UObject* __WorldContext);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"CAAudioUtilities_C">();
	}
	static class UCAAudioUtilities_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCAAudioUtilities_C>();
	}
};
static_assert(alignof(UCAAudioUtilities_C) == 0x000008, "Wrong alignment on UCAAudioUtilities_C");
static_assert(sizeof(UCAAudioUtilities_C) == 0x000030, "Wrong size on UCAAudioUtilities_C");

}

