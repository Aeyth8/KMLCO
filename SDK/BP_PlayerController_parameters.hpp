#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PlayerController

#include "Basic.hpp"

#include "CAAudio_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Keaton_structs.hpp"


namespace SDK::Params
{

// Function BP_PlayerController.BP_PlayerController_C.ExecuteUbergraph_BP_PlayerController
// 0x0080 (0x0080 - 0x0000)
struct BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCAMapEntityPayload                    K2Node_MakeStruct_CAMapEntityPayload;              // 0x0008(0x0070)()
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_team_present;                         // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_mission_success_1;                    // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_mission_success;                      // 0x007B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x007D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController) == 0x000008, "Wrong alignment on BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController");
static_assert(sizeof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController) == 0x000080, "Wrong size on BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, EntryPoint) == 0x000000, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_MakeStruct_CAMapEntityPayload) == 0x000008, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_MakeStruct_CAMapEntityPayload' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_HasAuthority_ReturnValue) == 0x000078, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_Event_team_present) == 0x000079, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_Event_team_present' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_Event_mission_success_1) == 0x00007A, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_Event_mission_success_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_Event_mission_success) == 0x00007B, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_Event_mission_success' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_IsServer_ReturnValue) == 0x00007C, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_Event_EndPlayReason) == 0x00007D, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_Event_EndPlayReason' has a wrong offset!");

// Function BP_PlayerController.BP_PlayerController_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BP_PlayerController_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerController_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BP_PlayerController_C_ReceiveEndPlay");
static_assert(sizeof(BP_PlayerController_C_ReceiveEndPlay) == 0x000001, "Wrong size on BP_PlayerController_C_ReceiveEndPlay");
static_assert(offsetof(BP_PlayerController_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BP_PlayerController_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function BP_PlayerController.BP_PlayerController_C.OnMissionComplete
// 0x0001 (0x0001 - 0x0000)
struct BP_PlayerController_C_OnMissionComplete final
{
public:
	bool                                          Mission_success;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerController_C_OnMissionComplete) == 0x000001, "Wrong alignment on BP_PlayerController_C_OnMissionComplete");
static_assert(sizeof(BP_PlayerController_C_OnMissionComplete) == 0x000001, "Wrong size on BP_PlayerController_C_OnMissionComplete");
static_assert(offsetof(BP_PlayerController_C_OnMissionComplete, Mission_success) == 0x000000, "Member 'BP_PlayerController_C_OnMissionComplete::Mission_success' has a wrong offset!");

// Function BP_PlayerController.BP_PlayerController_C.OnPlayerDeath
// 0x0002 (0x0002 - 0x0000)
struct BP_PlayerController_C_OnPlayerDeath final
{
public:
	bool                                          Team_present;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Mission_success;                                   // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerController_C_OnPlayerDeath) == 0x000001, "Wrong alignment on BP_PlayerController_C_OnPlayerDeath");
static_assert(sizeof(BP_PlayerController_C_OnPlayerDeath) == 0x000002, "Wrong size on BP_PlayerController_C_OnPlayerDeath");
static_assert(offsetof(BP_PlayerController_C_OnPlayerDeath, Team_present) == 0x000000, "Member 'BP_PlayerController_C_OnPlayerDeath::Team_present' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_OnPlayerDeath, Mission_success) == 0x000001, "Member 'BP_PlayerController_C_OnPlayerDeath::Mission_success' has a wrong offset!");

// Function BP_PlayerController.BP_PlayerController_C.PlayLocalDialouge
// 0x0040 (0x0040 - 0x0000)
struct BP_PlayerController_C_PlayLocalDialouge final
{
public:
	struct FCAAudioEventType                      Event;                                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCAAudioComponent*                      Component;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Actor;                                             // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Is_streamed;                                       // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Max_queue_time;                                    // 0x001C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECAAudioDialoguePriority                      Priority;                                          // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Interrupt_equal_priority;                          // 0x0021(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x2];                                       // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const struct FCAAudioEventType& Event_name)> Temp_delegate_Variable;                            // 0x0024(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsLocalPlayerController_ReturnValue;      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerController_C_PlayLocalDialouge) == 0x000008, "Wrong alignment on BP_PlayerController_C_PlayLocalDialouge");
static_assert(sizeof(BP_PlayerController_C_PlayLocalDialouge) == 0x000040, "Wrong size on BP_PlayerController_C_PlayLocalDialouge");
static_assert(offsetof(BP_PlayerController_C_PlayLocalDialouge, Event) == 0x000000, "Member 'BP_PlayerController_C_PlayLocalDialouge::Event' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_PlayLocalDialouge, Component) == 0x000008, "Member 'BP_PlayerController_C_PlayLocalDialouge::Component' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_PlayLocalDialouge, Actor) == 0x000010, "Member 'BP_PlayerController_C_PlayLocalDialouge::Actor' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_PlayLocalDialouge, Is_streamed) == 0x000018, "Member 'BP_PlayerController_C_PlayLocalDialouge::Is_streamed' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_PlayLocalDialouge, Max_queue_time) == 0x00001C, "Member 'BP_PlayerController_C_PlayLocalDialouge::Max_queue_time' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_PlayLocalDialouge, Priority) == 0x000020, "Member 'BP_PlayerController_C_PlayLocalDialouge::Priority' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_PlayLocalDialouge, Interrupt_equal_priority) == 0x000021, "Member 'BP_PlayerController_C_PlayLocalDialouge::Interrupt_equal_priority' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_PlayLocalDialouge, Temp_delegate_Variable) == 0x000024, "Member 'BP_PlayerController_C_PlayLocalDialouge::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_PlayLocalDialouge, CallFunc_IsLocalPlayerController_ReturnValue) == 0x000038, "Member 'BP_PlayerController_C_PlayLocalDialouge::CallFunc_IsLocalPlayerController_ReturnValue' has a wrong offset!");

// Function BP_PlayerController.BP_PlayerController_C.RegisterMapEntityForTeamRevealEvent
// 0x00A0 (0x00A0 - 0x0000)
struct BP_PlayerController_C_RegisterMapEntityForTeamRevealEvent final
{
public:
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0000(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector_NetQuantize                    K2Node_MakeStruct_Vector_NetQuantize;              // 0x0018(0x000C)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCAMapEntityPayload                    K2Node_MakeStruct_CAMapEntityPayload;              // 0x0028(0x0070)()
	int32                                         CallFunc_RegisterMapEntity_ReturnValue;            // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerController_C_RegisterMapEntityForTeamRevealEvent) == 0x000008, "Wrong alignment on BP_PlayerController_C_RegisterMapEntityForTeamRevealEvent");
static_assert(sizeof(BP_PlayerController_C_RegisterMapEntityForTeamRevealEvent) == 0x0000A0, "Wrong size on BP_PlayerController_C_RegisterMapEntityForTeamRevealEvent");
static_assert(offsetof(BP_PlayerController_C_RegisterMapEntityForTeamRevealEvent, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000000, "Member 'BP_PlayerController_C_RegisterMapEntityForTeamRevealEvent::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_RegisterMapEntityForTeamRevealEvent, CallFunc_BreakVector_X) == 0x00000C, "Member 'BP_PlayerController_C_RegisterMapEntityForTeamRevealEvent::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_RegisterMapEntityForTeamRevealEvent, CallFunc_BreakVector_Y) == 0x000010, "Member 'BP_PlayerController_C_RegisterMapEntityForTeamRevealEvent::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_RegisterMapEntityForTeamRevealEvent, CallFunc_BreakVector_Z) == 0x000014, "Member 'BP_PlayerController_C_RegisterMapEntityForTeamRevealEvent::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_RegisterMapEntityForTeamRevealEvent, K2Node_MakeStruct_Vector_NetQuantize) == 0x000018, "Member 'BP_PlayerController_C_RegisterMapEntityForTeamRevealEvent::K2Node_MakeStruct_Vector_NetQuantize' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_RegisterMapEntityForTeamRevealEvent, K2Node_MakeStruct_CAMapEntityPayload) == 0x000028, "Member 'BP_PlayerController_C_RegisterMapEntityForTeamRevealEvent::K2Node_MakeStruct_CAMapEntityPayload' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_RegisterMapEntityForTeamRevealEvent, CallFunc_RegisterMapEntity_ReturnValue) == 0x000098, "Member 'BP_PlayerController_C_RegisterMapEntityForTeamRevealEvent::CallFunc_RegisterMapEntity_ReturnValue' has a wrong offset!");

}

