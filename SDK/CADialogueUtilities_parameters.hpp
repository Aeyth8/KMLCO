#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CADialogueUtilities

#include "Basic.hpp"

#include "Keaton_structs.hpp"
#include "CAAudio_structs.hpp"


namespace SDK::Params
{

// Function CADialogueUtilities.CADialogueUtilities_C.PlayerDialogueTrigger
// 0x0038 (0x0038 - 0x0000)
struct CADialogueUtilities_C_PlayerDialogueTrigger final
{
public:
	class ACACharacter_MainPlayer*                Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   TriggerName;                                       // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCADialogueQueryMakerComponent*         CallFunc_GetDialogueQueryMakerComponent_ReturnValue; // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CADialogueUtilities_C_PlayerDialogueTrigger) == 0x000008, "Wrong alignment on CADialogueUtilities_C_PlayerDialogueTrigger");
static_assert(sizeof(CADialogueUtilities_C_PlayerDialogueTrigger) == 0x000038, "Wrong size on CADialogueUtilities_C_PlayerDialogueTrigger");
static_assert(offsetof(CADialogueUtilities_C_PlayerDialogueTrigger, Player) == 0x000000, "Member 'CADialogueUtilities_C_PlayerDialogueTrigger::Player' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_PlayerDialogueTrigger, TriggerName) == 0x000008, "Member 'CADialogueUtilities_C_PlayerDialogueTrigger::TriggerName' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_PlayerDialogueTrigger, __WorldContext) == 0x000018, "Member 'CADialogueUtilities_C_PlayerDialogueTrigger::__WorldContext' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_PlayerDialogueTrigger, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'CADialogueUtilities_C_PlayerDialogueTrigger::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_PlayerDialogueTrigger, CallFunc_GetDialogueQueryMakerComponent_ReturnValue) == 0x000028, "Member 'CADialogueUtilities_C_PlayerDialogueTrigger::CallFunc_GetDialogueQueryMakerComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_PlayerDialogueTrigger, CallFunc_IsValid_ReturnValue_1) == 0x000030, "Member 'CADialogueUtilities_C_PlayerDialogueTrigger::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function CADialogueUtilities.CADialogueUtilities_C.Dialogue On Rival Gadget Destroy
// 0x00A0 (0x00A0 - 0x0000)
struct CADialogueUtilities_C_Dialogue_On_Rival_Gadget_Destroy final
{
public:
	class AActor*                                 Killing_Instigator;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCATeamID                              GadgetTeamID;                                      // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Owner;                                             // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          PlayAbilityDestroyed_;                             // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          AlwaysPlayAbilityDestroyed_;                       // 0x0019(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   AbilityDestroyedTriggerName;                       // 0x001C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AlwaysPlayAbilityDestroyed;                        // 0x0030(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCATeamID                              Gadget_Team_ID;                                    // 0x0034(0x0004)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	bool                                          PlayAbilityDestroyedDialogue_;                     // 0x0038(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   OnAbilityDestroyed;                                // 0x003C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACACharacter_MainPlayer*                GadgetOwner;                                       // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACACharacter_MainPlayer*                PlayerInstigator;                                  // 0x0050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class FName                                   OnKilledRivalGadget;                               // 0x0058(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACACharacter_MainPlayer*                K2Node_DynamicCast_AsCACharacter_Main_Player;      // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACACharacter_NPC*                       K2Node_DynamicCast_AsCACharacter_NPC;              // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACACharacter_MainPlayer*                K2Node_DynamicCast_AsCACharacter_Main_Player_1;    // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCATeamID                              CallFunc_GetTeamID_ReturnValue;                    // 0x0094(0x0004)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_TeamIDTeamID_ReturnValue;        // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_TeamIDTeamID_ReturnValue_1;      // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CADialogueUtilities_C_Dialogue_On_Rival_Gadget_Destroy) == 0x000008, "Wrong alignment on CADialogueUtilities_C_Dialogue_On_Rival_Gadget_Destroy");
static_assert(sizeof(CADialogueUtilities_C_Dialogue_On_Rival_Gadget_Destroy) == 0x0000A0, "Wrong size on CADialogueUtilities_C_Dialogue_On_Rival_Gadget_Destroy");
static_assert(offsetof(CADialogueUtilities_C_Dialogue_On_Rival_Gadget_Destroy, Killing_Instigator) == 0x000000, "Member 'CADialogueUtilities_C_Dialogue_On_Rival_Gadget_Destroy::Killing_Instigator' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Dialogue_On_Rival_Gadget_Destroy, GadgetTeamID) == 0x000008, "Member 'CADialogueUtilities_C_Dialogue_On_Rival_Gadget_Destroy::GadgetTeamID' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Dialogue_On_Rival_Gadget_Destroy, Owner) == 0x000010, "Member 'CADialogueUtilities_C_Dialogue_On_Rival_Gadget_Destroy::Owner' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Dialogue_On_Rival_Gadget_Destroy, PlayAbilityDestroyed_) == 0x000018, "Member 'CADialogueUtilities_C_Dialogue_On_Rival_Gadget_Destroy::PlayAbilityDestroyed_' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Dialogue_On_Rival_Gadget_Destroy, AlwaysPlayAbilityDestroyed_) == 0x000019, "Member 'CADialogueUtilities_C_Dialogue_On_Rival_Gadget_Destroy::AlwaysPlayAbilityDestroyed_' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Dialogue_On_Rival_Gadget_Destroy, AbilityDestroyedTriggerName) == 0x00001C, "Member 'CADialogueUtilities_C_Dialogue_On_Rival_Gadget_Destroy::AbilityDestroyedTriggerName' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Dialogue_On_Rival_Gadget_Destroy, __WorldContext) == 0x000028, "Member 'CADialogueUtilities_C_Dialogue_On_Rival_Gadget_Destroy::__WorldContext' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Dialogue_On_Rival_Gadget_Destroy, AlwaysPlayAbilityDestroyed) == 0x000030, "Member 'CADialogueUtilities_C_Dialogue_On_Rival_Gadget_Destroy::AlwaysPlayAbilityDestroyed' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Dialogue_On_Rival_Gadget_Destroy, Gadget_Team_ID) == 0x000034, "Member 'CADialogueUtilities_C_Dialogue_On_Rival_Gadget_Destroy::Gadget_Team_ID' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Dialogue_On_Rival_Gadget_Destroy, PlayAbilityDestroyedDialogue_) == 0x000038, "Member 'CADialogueUtilities_C_Dialogue_On_Rival_Gadget_Destroy::PlayAbilityDestroyedDialogue_' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Dialogue_On_Rival_Gadget_Destroy, OnAbilityDestroyed) == 0x00003C, "Member 'CADialogueUtilities_C_Dialogue_On_Rival_Gadget_Destroy::OnAbilityDestroyed' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Dialogue_On_Rival_Gadget_Destroy, GadgetOwner) == 0x000048, "Member 'CADialogueUtilities_C_Dialogue_On_Rival_Gadget_Destroy::GadgetOwner' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Dialogue_On_Rival_Gadget_Destroy, PlayerInstigator) == 0x000050, "Member 'CADialogueUtilities_C_Dialogue_On_Rival_Gadget_Destroy::PlayerInstigator' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Dialogue_On_Rival_Gadget_Destroy, OnKilledRivalGadget) == 0x000058, "Member 'CADialogueUtilities_C_Dialogue_On_Rival_Gadget_Destroy::OnKilledRivalGadget' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Dialogue_On_Rival_Gadget_Destroy, K2Node_DynamicCast_AsCACharacter_Main_Player) == 0x000068, "Member 'CADialogueUtilities_C_Dialogue_On_Rival_Gadget_Destroy::K2Node_DynamicCast_AsCACharacter_Main_Player' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Dialogue_On_Rival_Gadget_Destroy, K2Node_DynamicCast_bSuccess) == 0x000070, "Member 'CADialogueUtilities_C_Dialogue_On_Rival_Gadget_Destroy::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Dialogue_On_Rival_Gadget_Destroy, K2Node_DynamicCast_AsCACharacter_NPC) == 0x000078, "Member 'CADialogueUtilities_C_Dialogue_On_Rival_Gadget_Destroy::K2Node_DynamicCast_AsCACharacter_NPC' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Dialogue_On_Rival_Gadget_Destroy, K2Node_DynamicCast_bSuccess_1) == 0x000080, "Member 'CADialogueUtilities_C_Dialogue_On_Rival_Gadget_Destroy::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Dialogue_On_Rival_Gadget_Destroy, K2Node_DynamicCast_AsCACharacter_Main_Player_1) == 0x000088, "Member 'CADialogueUtilities_C_Dialogue_On_Rival_Gadget_Destroy::K2Node_DynamicCast_AsCACharacter_Main_Player_1' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Dialogue_On_Rival_Gadget_Destroy, K2Node_DynamicCast_bSuccess_2) == 0x000090, "Member 'CADialogueUtilities_C_Dialogue_On_Rival_Gadget_Destroy::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Dialogue_On_Rival_Gadget_Destroy, CallFunc_GetTeamID_ReturnValue) == 0x000094, "Member 'CADialogueUtilities_C_Dialogue_On_Rival_Gadget_Destroy::CallFunc_GetTeamID_ReturnValue' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Dialogue_On_Rival_Gadget_Destroy, CallFunc_IsValid_ReturnValue) == 0x000098, "Member 'CADialogueUtilities_C_Dialogue_On_Rival_Gadget_Destroy::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Dialogue_On_Rival_Gadget_Destroy, CallFunc_NotEqual_TeamIDTeamID_ReturnValue) == 0x000099, "Member 'CADialogueUtilities_C_Dialogue_On_Rival_Gadget_Destroy::CallFunc_NotEqual_TeamIDTeamID_ReturnValue' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Dialogue_On_Rival_Gadget_Destroy, CallFunc_NotEqual_TeamIDTeamID_ReturnValue_1) == 0x00009A, "Member 'CADialogueUtilities_C_Dialogue_On_Rival_Gadget_Destroy::CallFunc_NotEqual_TeamIDTeamID_ReturnValue_1' has a wrong offset!");

// Function CADialogueUtilities.CADialogueUtilities_C.DialoguePlayEffortVocalisation
// 0x0028 (0x0028 - 0x0000)
struct CADialogueUtilities_C_DialoguePlayEffortVocalisation final
{
public:
	class ACACharacter_MainPlayer*                Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCAAudioSwitchValueType                GeneralVox;                                        // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	float                                         Cooldown;                                          // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IgnoreCurrentCooldown;                             // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DefaultCooldown;                                   // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IgnoreCooldown;                                    // 0x0024(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CADialogueUtilities_C_DialoguePlayEffortVocalisation) == 0x000008, "Wrong alignment on CADialogueUtilities_C_DialoguePlayEffortVocalisation");
static_assert(sizeof(CADialogueUtilities_C_DialoguePlayEffortVocalisation) == 0x000028, "Wrong size on CADialogueUtilities_C_DialoguePlayEffortVocalisation");
static_assert(offsetof(CADialogueUtilities_C_DialoguePlayEffortVocalisation, Player) == 0x000000, "Member 'CADialogueUtilities_C_DialoguePlayEffortVocalisation::Player' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_DialoguePlayEffortVocalisation, GeneralVox) == 0x000008, "Member 'CADialogueUtilities_C_DialoguePlayEffortVocalisation::GeneralVox' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_DialoguePlayEffortVocalisation, Cooldown) == 0x00000C, "Member 'CADialogueUtilities_C_DialoguePlayEffortVocalisation::Cooldown' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_DialoguePlayEffortVocalisation, IgnoreCurrentCooldown) == 0x000010, "Member 'CADialogueUtilities_C_DialoguePlayEffortVocalisation::IgnoreCurrentCooldown' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_DialoguePlayEffortVocalisation, __WorldContext) == 0x000018, "Member 'CADialogueUtilities_C_DialoguePlayEffortVocalisation::__WorldContext' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_DialoguePlayEffortVocalisation, DefaultCooldown) == 0x000020, "Member 'CADialogueUtilities_C_DialoguePlayEffortVocalisation::DefaultCooldown' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_DialoguePlayEffortVocalisation, IgnoreCooldown) == 0x000024, "Member 'CADialogueUtilities_C_DialoguePlayEffortVocalisation::IgnoreCooldown' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_DialoguePlayEffortVocalisation, CallFunc_IsValid_ReturnValue) == 0x000025, "Member 'CADialogueUtilities_C_DialoguePlayEffortVocalisation::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function CADialogueUtilities.CADialogueUtilities_C.Play Downed Dialogue
// 0x0020 (0x0020 - 0x0000)
struct CADialogueUtilities_C_Play_Downed_Dialogue final
{
public:
	class ACACharacter_MainPlayer*                Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   OnDowned;                                          // 0x0010(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CADialogueUtilities_C_Play_Downed_Dialogue) == 0x000008, "Wrong alignment on CADialogueUtilities_C_Play_Downed_Dialogue");
static_assert(sizeof(CADialogueUtilities_C_Play_Downed_Dialogue) == 0x000020, "Wrong size on CADialogueUtilities_C_Play_Downed_Dialogue");
static_assert(offsetof(CADialogueUtilities_C_Play_Downed_Dialogue, Actor) == 0x000000, "Member 'CADialogueUtilities_C_Play_Downed_Dialogue::Actor' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Play_Downed_Dialogue, __WorldContext) == 0x000008, "Member 'CADialogueUtilities_C_Play_Downed_Dialogue::__WorldContext' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Play_Downed_Dialogue, OnDowned) == 0x000010, "Member 'CADialogueUtilities_C_Play_Downed_Dialogue::OnDowned' has a wrong offset!");

// Function CADialogueUtilities.CADialogueUtilities_C.Player Throw Grenade Dialogue
// 0x00B8 (0x00B8 - 0x0000)
struct CADialogueUtilities_C_Player_Throw_Grenade_Dialogue final
{
public:
	class AActor*                                 Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   TriggerName;                                       // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Check_Can_Affect_Allies;                           // 0x0014(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Level;                                             // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Trigger;                                           // 0x0028(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACACharacter_MainPlayer*                Player_Main_Character;                             // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACACharacter_MainPlayer*                K2Node_DynamicCast_AsCACharacter_Main_Player;      // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue_1;          // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_1;          // 0x00A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CADialogueUtilities_C_Player_Throw_Grenade_Dialogue) == 0x000008, "Wrong alignment on CADialogueUtilities_C_Player_Throw_Grenade_Dialogue");
static_assert(sizeof(CADialogueUtilities_C_Player_Throw_Grenade_Dialogue) == 0x0000B8, "Wrong size on CADialogueUtilities_C_Player_Throw_Grenade_Dialogue");
static_assert(offsetof(CADialogueUtilities_C_Player_Throw_Grenade_Dialogue, Player) == 0x000000, "Member 'CADialogueUtilities_C_Player_Throw_Grenade_Dialogue::Player' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Throw_Grenade_Dialogue, TriggerName) == 0x000008, "Member 'CADialogueUtilities_C_Player_Throw_Grenade_Dialogue::TriggerName' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Throw_Grenade_Dialogue, Check_Can_Affect_Allies) == 0x000014, "Member 'CADialogueUtilities_C_Player_Throw_Grenade_Dialogue::Check_Can_Affect_Allies' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Throw_Grenade_Dialogue, Level) == 0x000018, "Member 'CADialogueUtilities_C_Player_Throw_Grenade_Dialogue::Level' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Throw_Grenade_Dialogue, __WorldContext) == 0x000020, "Member 'CADialogueUtilities_C_Player_Throw_Grenade_Dialogue::__WorldContext' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Throw_Grenade_Dialogue, Trigger) == 0x000028, "Member 'CADialogueUtilities_C_Player_Throw_Grenade_Dialogue::Trigger' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Throw_Grenade_Dialogue, Player_Main_Character) == 0x000038, "Member 'CADialogueUtilities_C_Player_Throw_Grenade_Dialogue::Player_Main_Character' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Throw_Grenade_Dialogue, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000040, "Member 'CADialogueUtilities_C_Player_Throw_Grenade_Dialogue::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Throw_Grenade_Dialogue, CallFunc_Conv_NameToString_ReturnValue) == 0x000048, "Member 'CADialogueUtilities_C_Player_Throw_Grenade_Dialogue::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Throw_Grenade_Dialogue, CallFunc_Concat_StrStr_ReturnValue) == 0x000058, "Member 'CADialogueUtilities_C_Player_Throw_Grenade_Dialogue::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Throw_Grenade_Dialogue, CallFunc_Conv_StringToName_ReturnValue) == 0x000068, "Member 'CADialogueUtilities_C_Player_Throw_Grenade_Dialogue::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Throw_Grenade_Dialogue, K2Node_DynamicCast_AsCACharacter_Main_Player) == 0x000078, "Member 'CADialogueUtilities_C_Player_Throw_Grenade_Dialogue::K2Node_DynamicCast_AsCACharacter_Main_Player' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Throw_Grenade_Dialogue, K2Node_DynamicCast_bSuccess) == 0x000080, "Member 'CADialogueUtilities_C_Player_Throw_Grenade_Dialogue::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Throw_Grenade_Dialogue, CallFunc_Conv_NameToString_ReturnValue_1) == 0x000088, "Member 'CADialogueUtilities_C_Player_Throw_Grenade_Dialogue::CallFunc_Conv_NameToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Throw_Grenade_Dialogue, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000098, "Member 'CADialogueUtilities_C_Player_Throw_Grenade_Dialogue::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Throw_Grenade_Dialogue, CallFunc_Conv_StringToName_ReturnValue_1) == 0x0000A8, "Member 'CADialogueUtilities_C_Player_Throw_Grenade_Dialogue::CallFunc_Conv_StringToName_ReturnValue_1' has a wrong offset!");

// Function CADialogueUtilities.CADialogueUtilities_C.Player Taken Damage Vocalisation
// 0x0160 (0x0160 - 0x0000)
struct CADialogueUtilities_C_Player_Taken_Damage_Vocalisation final
{
public:
	struct FNetworkedHit                          Hit;                                               // 0x0000(0x0068)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	class AActor*                                 Hit_Actor;                                         // 0x0068(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0070(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   OnCombatDamagePlayer;                              // 0x0078(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsDowned;                                          // 0x0084(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CanPlayCurseLowHealth;                             // 0x0085(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CanPlayCurseArmour;                                // 0x0086(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_87[0x1];                                       // 0x0087(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         HighPain;                                          // 0x0088(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ExplosiveDamage;                                   // 0x008C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          HeadShotFromRival;                                 // 0x008D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Hit_by_a_Rival_;                                   // 0x008E(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8F[0x1];                                       // 0x008F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   OnInsultsPained;                                   // 0x0090(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   OnCursePained;                                     // 0x009C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HadArmour_;                                        // 0x00A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACACharacter_MainPlayer*                Character;                                         // 0x00B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACACharacter_MainPlayer*                K2Node_DynamicCast_AsCACharacter_Main_Player;      // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EHealthState                                  CallFunc_GetHealthState_ReturnValue;               // 0x00C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C3[0x1];                                       // 0x00C3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetCurrentNumberArmourSegments_ReturnValue; // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00CB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACAWeapon*                              K2Node_DynamicCast_AsCAWeapon;                     // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACACharacter*                           CallFunc_GetPawnOwner_ReturnValue;                 // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_NPC_Character_C*                    K2Node_DynamicCast_AsBP_NPC_Character;             // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_FA[0x6];                                       // 0x00FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ACADialogueNPCManager*                  CallFunc_GetDialogueNPCManager_ReturnValue;        // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanPlayCombatLine_ReturnValue;            // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BP_CanBeDialogueSpokesperson_ReturnValue; // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_10A[0x2];                                      // 0x010A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             Temp_delegate_Variable;                            // 0x010C(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	struct FCAAudioSwitchValueType                Temp_struct_Variable;                              // 0x0120(0x0004)(NoDestructor)
	struct FCAAudioSwitchValueType                Temp_struct_Variable_1;                            // 0x0124(0x0004)(NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_129[0x3];                                      // 0x0129(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCAAudioSwitchValueType                Temp_struct_Variable_2;                            // 0x012C(0x0004)(NoDestructor)
	struct FCAAudioSwitchValueType                Temp_struct_Variable_3;                            // 0x0130(0x0004)(NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0134(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_135[0x3];                                      // 0x0135(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_1;         // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_3;                              // 0x0141(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_4;                              // 0x0142(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_5;                              // 0x0143(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_RandomBoolWithWeight_ReturnValue;         // 0x0144(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_145[0x3];                                      // 0x0145(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCAAudioSwitchValueType                K2Node_Select_Default;                             // 0x0148(0x0004)(NoDestructor)
	bool                                          CallFunc_RandomBoolWithWeight_ReturnValue_1;       // 0x014C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_14D[0x3];                                      // 0x014D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCAAudioSwitchValueType                K2Node_Select_Default_1;                           // 0x0150(0x0004)(NoDestructor)
	bool                                          CallFunc_HasGameplayTag_ReturnValue;               // 0x0154(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_6;                              // 0x0155(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_7;                              // 0x0156(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EBodyPart                                     Temp_byte_Variable;                                // 0x0157(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default_2;                           // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0159(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CADialogueUtilities_C_Player_Taken_Damage_Vocalisation) == 0x000008, "Wrong alignment on CADialogueUtilities_C_Player_Taken_Damage_Vocalisation");
static_assert(sizeof(CADialogueUtilities_C_Player_Taken_Damage_Vocalisation) == 0x000160, "Wrong size on CADialogueUtilities_C_Player_Taken_Damage_Vocalisation");
static_assert(offsetof(CADialogueUtilities_C_Player_Taken_Damage_Vocalisation, Hit) == 0x000000, "Member 'CADialogueUtilities_C_Player_Taken_Damage_Vocalisation::Hit' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Taken_Damage_Vocalisation, Hit_Actor) == 0x000068, "Member 'CADialogueUtilities_C_Player_Taken_Damage_Vocalisation::Hit_Actor' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Taken_Damage_Vocalisation, __WorldContext) == 0x000070, "Member 'CADialogueUtilities_C_Player_Taken_Damage_Vocalisation::__WorldContext' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Taken_Damage_Vocalisation, OnCombatDamagePlayer) == 0x000078, "Member 'CADialogueUtilities_C_Player_Taken_Damage_Vocalisation::OnCombatDamagePlayer' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Taken_Damage_Vocalisation, IsDowned) == 0x000084, "Member 'CADialogueUtilities_C_Player_Taken_Damage_Vocalisation::IsDowned' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Taken_Damage_Vocalisation, CanPlayCurseLowHealth) == 0x000085, "Member 'CADialogueUtilities_C_Player_Taken_Damage_Vocalisation::CanPlayCurseLowHealth' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Taken_Damage_Vocalisation, CanPlayCurseArmour) == 0x000086, "Member 'CADialogueUtilities_C_Player_Taken_Damage_Vocalisation::CanPlayCurseArmour' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Taken_Damage_Vocalisation, HighPain) == 0x000088, "Member 'CADialogueUtilities_C_Player_Taken_Damage_Vocalisation::HighPain' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Taken_Damage_Vocalisation, ExplosiveDamage) == 0x00008C, "Member 'CADialogueUtilities_C_Player_Taken_Damage_Vocalisation::ExplosiveDamage' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Taken_Damage_Vocalisation, HeadShotFromRival) == 0x00008D, "Member 'CADialogueUtilities_C_Player_Taken_Damage_Vocalisation::HeadShotFromRival' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Taken_Damage_Vocalisation, Hit_by_a_Rival_) == 0x00008E, "Member 'CADialogueUtilities_C_Player_Taken_Damage_Vocalisation::Hit_by_a_Rival_' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Taken_Damage_Vocalisation, OnInsultsPained) == 0x000090, "Member 'CADialogueUtilities_C_Player_Taken_Damage_Vocalisation::OnInsultsPained' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Taken_Damage_Vocalisation, OnCursePained) == 0x00009C, "Member 'CADialogueUtilities_C_Player_Taken_Damage_Vocalisation::OnCursePained' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Taken_Damage_Vocalisation, HadArmour_) == 0x0000A8, "Member 'CADialogueUtilities_C_Player_Taken_Damage_Vocalisation::HadArmour_' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Taken_Damage_Vocalisation, Character) == 0x0000B0, "Member 'CADialogueUtilities_C_Player_Taken_Damage_Vocalisation::Character' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Taken_Damage_Vocalisation, K2Node_DynamicCast_AsCACharacter_Main_Player) == 0x0000B8, "Member 'CADialogueUtilities_C_Player_Taken_Damage_Vocalisation::K2Node_DynamicCast_AsCACharacter_Main_Player' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Taken_Damage_Vocalisation, K2Node_DynamicCast_bSuccess) == 0x0000C0, "Member 'CADialogueUtilities_C_Player_Taken_Damage_Vocalisation::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Taken_Damage_Vocalisation, CallFunc_IsValid_ReturnValue) == 0x0000C1, "Member 'CADialogueUtilities_C_Player_Taken_Damage_Vocalisation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Taken_Damage_Vocalisation, CallFunc_GetHealthState_ReturnValue) == 0x0000C2, "Member 'CADialogueUtilities_C_Player_Taken_Damage_Vocalisation::CallFunc_GetHealthState_ReturnValue' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Taken_Damage_Vocalisation, CallFunc_GetCurrentNumberArmourSegments_ReturnValue) == 0x0000C4, "Member 'CADialogueUtilities_C_Player_Taken_Damage_Vocalisation::CallFunc_GetCurrentNumberArmourSegments_ReturnValue' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Taken_Damage_Vocalisation, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x0000C8, "Member 'CADialogueUtilities_C_Player_Taken_Damage_Vocalisation::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Taken_Damage_Vocalisation, CallFunc_Greater_IntInt_ReturnValue) == 0x0000C9, "Member 'CADialogueUtilities_C_Player_Taken_Damage_Vocalisation::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Taken_Damage_Vocalisation, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000CA, "Member 'CADialogueUtilities_C_Player_Taken_Damage_Vocalisation::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Taken_Damage_Vocalisation, K2Node_SwitchEnum_CmpSuccess) == 0x0000CB, "Member 'CADialogueUtilities_C_Player_Taken_Damage_Vocalisation::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Taken_Damage_Vocalisation, K2Node_DynamicCast_AsCAWeapon) == 0x0000D0, "Member 'CADialogueUtilities_C_Player_Taken_Damage_Vocalisation::K2Node_DynamicCast_AsCAWeapon' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Taken_Damage_Vocalisation, K2Node_DynamicCast_bSuccess_1) == 0x0000D8, "Member 'CADialogueUtilities_C_Player_Taken_Damage_Vocalisation::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Taken_Damage_Vocalisation, CallFunc_GetPawnOwner_ReturnValue) == 0x0000E0, "Member 'CADialogueUtilities_C_Player_Taken_Damage_Vocalisation::CallFunc_GetPawnOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Taken_Damage_Vocalisation, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0000E8, "Member 'CADialogueUtilities_C_Player_Taken_Damage_Vocalisation::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Taken_Damage_Vocalisation, K2Node_DynamicCast_AsBP_NPC_Character) == 0x0000F0, "Member 'CADialogueUtilities_C_Player_Taken_Damage_Vocalisation::K2Node_DynamicCast_AsBP_NPC_Character' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Taken_Damage_Vocalisation, K2Node_DynamicCast_bSuccess_2) == 0x0000F8, "Member 'CADialogueUtilities_C_Player_Taken_Damage_Vocalisation::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Taken_Damage_Vocalisation, CallFunc_BooleanAND_ReturnValue) == 0x0000F9, "Member 'CADialogueUtilities_C_Player_Taken_Damage_Vocalisation::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Taken_Damage_Vocalisation, CallFunc_GetDialogueNPCManager_ReturnValue) == 0x000100, "Member 'CADialogueUtilities_C_Player_Taken_Damage_Vocalisation::CallFunc_GetDialogueNPCManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Taken_Damage_Vocalisation, CallFunc_CanPlayCombatLine_ReturnValue) == 0x000108, "Member 'CADialogueUtilities_C_Player_Taken_Damage_Vocalisation::CallFunc_CanPlayCombatLine_ReturnValue' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Taken_Damage_Vocalisation, CallFunc_BP_CanBeDialogueSpokesperson_ReturnValue) == 0x000109, "Member 'CADialogueUtilities_C_Player_Taken_Damage_Vocalisation::CallFunc_BP_CanBeDialogueSpokesperson_ReturnValue' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Taken_Damage_Vocalisation, Temp_delegate_Variable) == 0x00010C, "Member 'CADialogueUtilities_C_Player_Taken_Damage_Vocalisation::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Taken_Damage_Vocalisation, Temp_struct_Variable) == 0x000120, "Member 'CADialogueUtilities_C_Player_Taken_Damage_Vocalisation::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Taken_Damage_Vocalisation, Temp_struct_Variable_1) == 0x000124, "Member 'CADialogueUtilities_C_Player_Taken_Damage_Vocalisation::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Taken_Damage_Vocalisation, Temp_bool_Variable) == 0x000128, "Member 'CADialogueUtilities_C_Player_Taken_Damage_Vocalisation::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Taken_Damage_Vocalisation, Temp_struct_Variable_2) == 0x00012C, "Member 'CADialogueUtilities_C_Player_Taken_Damage_Vocalisation::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Taken_Damage_Vocalisation, Temp_struct_Variable_3) == 0x000130, "Member 'CADialogueUtilities_C_Player_Taken_Damage_Vocalisation::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Taken_Damage_Vocalisation, Temp_bool_Variable_1) == 0x000134, "Member 'CADialogueUtilities_C_Player_Taken_Damage_Vocalisation::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Taken_Damage_Vocalisation, CallFunc_RandomFloatInRange_ReturnValue) == 0x000138, "Member 'CADialogueUtilities_C_Player_Taken_Damage_Vocalisation::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Taken_Damage_Vocalisation, CallFunc_RandomFloatInRange_ReturnValue_1) == 0x00013C, "Member 'CADialogueUtilities_C_Player_Taken_Damage_Vocalisation::CallFunc_RandomFloatInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Taken_Damage_Vocalisation, Temp_bool_Variable_2) == 0x000140, "Member 'CADialogueUtilities_C_Player_Taken_Damage_Vocalisation::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Taken_Damage_Vocalisation, Temp_bool_Variable_3) == 0x000141, "Member 'CADialogueUtilities_C_Player_Taken_Damage_Vocalisation::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Taken_Damage_Vocalisation, Temp_bool_Variable_4) == 0x000142, "Member 'CADialogueUtilities_C_Player_Taken_Damage_Vocalisation::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Taken_Damage_Vocalisation, Temp_bool_Variable_5) == 0x000143, "Member 'CADialogueUtilities_C_Player_Taken_Damage_Vocalisation::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Taken_Damage_Vocalisation, CallFunc_RandomBoolWithWeight_ReturnValue) == 0x000144, "Member 'CADialogueUtilities_C_Player_Taken_Damage_Vocalisation::CallFunc_RandomBoolWithWeight_ReturnValue' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Taken_Damage_Vocalisation, K2Node_Select_Default) == 0x000148, "Member 'CADialogueUtilities_C_Player_Taken_Damage_Vocalisation::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Taken_Damage_Vocalisation, CallFunc_RandomBoolWithWeight_ReturnValue_1) == 0x00014C, "Member 'CADialogueUtilities_C_Player_Taken_Damage_Vocalisation::CallFunc_RandomBoolWithWeight_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Taken_Damage_Vocalisation, K2Node_Select_Default_1) == 0x000150, "Member 'CADialogueUtilities_C_Player_Taken_Damage_Vocalisation::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Taken_Damage_Vocalisation, CallFunc_HasGameplayTag_ReturnValue) == 0x000154, "Member 'CADialogueUtilities_C_Player_Taken_Damage_Vocalisation::CallFunc_HasGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Taken_Damage_Vocalisation, Temp_bool_Variable_6) == 0x000155, "Member 'CADialogueUtilities_C_Player_Taken_Damage_Vocalisation::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Taken_Damage_Vocalisation, Temp_bool_Variable_7) == 0x000156, "Member 'CADialogueUtilities_C_Player_Taken_Damage_Vocalisation::Temp_bool_Variable_7' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Taken_Damage_Vocalisation, Temp_byte_Variable) == 0x000157, "Member 'CADialogueUtilities_C_Player_Taken_Damage_Vocalisation::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Taken_Damage_Vocalisation, K2Node_Select_Default_2) == 0x000158, "Member 'CADialogueUtilities_C_Player_Taken_Damage_Vocalisation::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Taken_Damage_Vocalisation, CallFunc_BooleanAND_ReturnValue_1) == 0x000159, "Member 'CADialogueUtilities_C_Player_Taken_Damage_Vocalisation::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function CADialogueUtilities.CADialogueUtilities_C.Player Taken Damage DelayedFPVox
// 0x0100 (0x0100 - 0x0000)
struct CADialogueUtilities_C_Player_Taken_Damage_DelayedFPVox final
{
public:
	struct FNetworkedHit                          Hit;                                               // 0x0000(0x0068)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	class AActor*                                 Hit_Actor;                                         // 0x0068(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0070(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   OnCombatDamagePlayer;                              // 0x0078(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsDowned;                                          // 0x0084(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CanPlayCurseLowHealth;                             // 0x0085(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CanPlayCurseArmour;                                // 0x0086(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_87[0x1];                                       // 0x0087(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         HighPain;                                          // 0x0088(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ExplosiveDamage;                                   // 0x008C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          HeadShotFromRival;                                 // 0x008D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Hit_by_a_Rival_;                                   // 0x008E(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8F[0x1];                                       // 0x008F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   OnInsultsPained;                                   // 0x0090(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   OnCursePained;                                     // 0x009C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HadArmour_;                                        // 0x00A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACACharacter_MainPlayer*                Character;                                         // 0x00B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACACharacter_MainPlayer*                K2Node_DynamicCast_AsCACharacter_Main_Player;      // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00CB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x00CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00CE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_3;                              // 0x00CF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EHealthState                                  CallFunc_GetHealthState_ReturnValue;               // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x00D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D3[0x1];                                       // 0x00D3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetCurrentNumberArmourSegments_ReturnValue; // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D9[0x3];                                       // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCAAudioSwitchValueType                Temp_struct_Variable;                              // 0x00DC(0x0004)(NoDestructor)
	struct FCAAudioSwitchValueType                Temp_struct_Variable_1;                            // 0x00E0(0x0004)(NoDestructor)
	bool                                          Temp_bool_Variable_4;                              // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_5;                              // 0x00E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00E6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_6;                              // 0x00E7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EBodyPart                                     Temp_byte_Variable;                                // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x3];                                       // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default;                             // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECAAudioDialoguePriority                      Temp_byte_Variable_1;                              // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECAAudioDialoguePriority                      Temp_byte_Variable_2;                              // 0x00F3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_7;                              // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECAAudioDialoguePriority                      K2Node_Select_Default_1;                           // 0x00F5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RandomBoolWithWeight_ReturnValue;         // 0x00F6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F7[0x1];                                       // 0x00F7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCAAudioSwitchValueType                K2Node_Select_Default_2;                           // 0x00F8(0x0004)(NoDestructor)
	bool                                          CallFunc_HasGameplayTag_ReturnValue;               // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CADialogueUtilities_C_Player_Taken_Damage_DelayedFPVox) == 0x000008, "Wrong alignment on CADialogueUtilities_C_Player_Taken_Damage_DelayedFPVox");
static_assert(sizeof(CADialogueUtilities_C_Player_Taken_Damage_DelayedFPVox) == 0x000100, "Wrong size on CADialogueUtilities_C_Player_Taken_Damage_DelayedFPVox");
static_assert(offsetof(CADialogueUtilities_C_Player_Taken_Damage_DelayedFPVox, Hit) == 0x000000, "Member 'CADialogueUtilities_C_Player_Taken_Damage_DelayedFPVox::Hit' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Taken_Damage_DelayedFPVox, Hit_Actor) == 0x000068, "Member 'CADialogueUtilities_C_Player_Taken_Damage_DelayedFPVox::Hit_Actor' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Taken_Damage_DelayedFPVox, __WorldContext) == 0x000070, "Member 'CADialogueUtilities_C_Player_Taken_Damage_DelayedFPVox::__WorldContext' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Taken_Damage_DelayedFPVox, OnCombatDamagePlayer) == 0x000078, "Member 'CADialogueUtilities_C_Player_Taken_Damage_DelayedFPVox::OnCombatDamagePlayer' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Taken_Damage_DelayedFPVox, IsDowned) == 0x000084, "Member 'CADialogueUtilities_C_Player_Taken_Damage_DelayedFPVox::IsDowned' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Taken_Damage_DelayedFPVox, CanPlayCurseLowHealth) == 0x000085, "Member 'CADialogueUtilities_C_Player_Taken_Damage_DelayedFPVox::CanPlayCurseLowHealth' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Taken_Damage_DelayedFPVox, CanPlayCurseArmour) == 0x000086, "Member 'CADialogueUtilities_C_Player_Taken_Damage_DelayedFPVox::CanPlayCurseArmour' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Taken_Damage_DelayedFPVox, HighPain) == 0x000088, "Member 'CADialogueUtilities_C_Player_Taken_Damage_DelayedFPVox::HighPain' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Taken_Damage_DelayedFPVox, ExplosiveDamage) == 0x00008C, "Member 'CADialogueUtilities_C_Player_Taken_Damage_DelayedFPVox::ExplosiveDamage' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Taken_Damage_DelayedFPVox, HeadShotFromRival) == 0x00008D, "Member 'CADialogueUtilities_C_Player_Taken_Damage_DelayedFPVox::HeadShotFromRival' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Taken_Damage_DelayedFPVox, Hit_by_a_Rival_) == 0x00008E, "Member 'CADialogueUtilities_C_Player_Taken_Damage_DelayedFPVox::Hit_by_a_Rival_' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Taken_Damage_DelayedFPVox, OnInsultsPained) == 0x000090, "Member 'CADialogueUtilities_C_Player_Taken_Damage_DelayedFPVox::OnInsultsPained' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Taken_Damage_DelayedFPVox, OnCursePained) == 0x00009C, "Member 'CADialogueUtilities_C_Player_Taken_Damage_DelayedFPVox::OnCursePained' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Taken_Damage_DelayedFPVox, HadArmour_) == 0x0000A8, "Member 'CADialogueUtilities_C_Player_Taken_Damage_DelayedFPVox::HadArmour_' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Taken_Damage_DelayedFPVox, Character) == 0x0000B0, "Member 'CADialogueUtilities_C_Player_Taken_Damage_DelayedFPVox::Character' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Taken_Damage_DelayedFPVox, Temp_bool_Variable) == 0x0000B8, "Member 'CADialogueUtilities_C_Player_Taken_Damage_DelayedFPVox::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Taken_Damage_DelayedFPVox, K2Node_DynamicCast_AsCACharacter_Main_Player) == 0x0000C0, "Member 'CADialogueUtilities_C_Player_Taken_Damage_DelayedFPVox::K2Node_DynamicCast_AsCACharacter_Main_Player' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Taken_Damage_DelayedFPVox, K2Node_DynamicCast_bSuccess) == 0x0000C8, "Member 'CADialogueUtilities_C_Player_Taken_Damage_DelayedFPVox::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Taken_Damage_DelayedFPVox, Temp_bool_Variable_1) == 0x0000C9, "Member 'CADialogueUtilities_C_Player_Taken_Damage_DelayedFPVox::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Taken_Damage_DelayedFPVox, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000CA, "Member 'CADialogueUtilities_C_Player_Taken_Damage_DelayedFPVox::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Taken_Damage_DelayedFPVox, K2Node_SwitchEnum_CmpSuccess) == 0x0000CB, "Member 'CADialogueUtilities_C_Player_Taken_Damage_DelayedFPVox::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Taken_Damage_DelayedFPVox, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0000CC, "Member 'CADialogueUtilities_C_Player_Taken_Damage_DelayedFPVox::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Taken_Damage_DelayedFPVox, Temp_bool_Variable_2) == 0x0000CD, "Member 'CADialogueUtilities_C_Player_Taken_Damage_DelayedFPVox::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Taken_Damage_DelayedFPVox, CallFunc_BooleanAND_ReturnValue) == 0x0000CE, "Member 'CADialogueUtilities_C_Player_Taken_Damage_DelayedFPVox::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Taken_Damage_DelayedFPVox, Temp_bool_Variable_3) == 0x0000CF, "Member 'CADialogueUtilities_C_Player_Taken_Damage_DelayedFPVox::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Taken_Damage_DelayedFPVox, CallFunc_IsValid_ReturnValue) == 0x0000D0, "Member 'CADialogueUtilities_C_Player_Taken_Damage_DelayedFPVox::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Taken_Damage_DelayedFPVox, CallFunc_GetHealthState_ReturnValue) == 0x0000D1, "Member 'CADialogueUtilities_C_Player_Taken_Damage_DelayedFPVox::CallFunc_GetHealthState_ReturnValue' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Taken_Damage_DelayedFPVox, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x0000D2, "Member 'CADialogueUtilities_C_Player_Taken_Damage_DelayedFPVox::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Taken_Damage_DelayedFPVox, CallFunc_GetCurrentNumberArmourSegments_ReturnValue) == 0x0000D4, "Member 'CADialogueUtilities_C_Player_Taken_Damage_DelayedFPVox::CallFunc_GetCurrentNumberArmourSegments_ReturnValue' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Taken_Damage_DelayedFPVox, CallFunc_Greater_IntInt_ReturnValue) == 0x0000D8, "Member 'CADialogueUtilities_C_Player_Taken_Damage_DelayedFPVox::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Taken_Damage_DelayedFPVox, Temp_struct_Variable) == 0x0000DC, "Member 'CADialogueUtilities_C_Player_Taken_Damage_DelayedFPVox::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Taken_Damage_DelayedFPVox, Temp_struct_Variable_1) == 0x0000E0, "Member 'CADialogueUtilities_C_Player_Taken_Damage_DelayedFPVox::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Taken_Damage_DelayedFPVox, Temp_bool_Variable_4) == 0x0000E4, "Member 'CADialogueUtilities_C_Player_Taken_Damage_DelayedFPVox::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Taken_Damage_DelayedFPVox, Temp_bool_Variable_5) == 0x0000E5, "Member 'CADialogueUtilities_C_Player_Taken_Damage_DelayedFPVox::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Taken_Damage_DelayedFPVox, CallFunc_BooleanOR_ReturnValue) == 0x0000E6, "Member 'CADialogueUtilities_C_Player_Taken_Damage_DelayedFPVox::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Taken_Damage_DelayedFPVox, Temp_bool_Variable_6) == 0x0000E7, "Member 'CADialogueUtilities_C_Player_Taken_Damage_DelayedFPVox::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Taken_Damage_DelayedFPVox, Temp_byte_Variable) == 0x0000E8, "Member 'CADialogueUtilities_C_Player_Taken_Damage_DelayedFPVox::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Taken_Damage_DelayedFPVox, CallFunc_RandomFloatInRange_ReturnValue) == 0x0000EC, "Member 'CADialogueUtilities_C_Player_Taken_Damage_DelayedFPVox::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Taken_Damage_DelayedFPVox, K2Node_Select_Default) == 0x0000F0, "Member 'CADialogueUtilities_C_Player_Taken_Damage_DelayedFPVox::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Taken_Damage_DelayedFPVox, Temp_byte_Variable_1) == 0x0000F1, "Member 'CADialogueUtilities_C_Player_Taken_Damage_DelayedFPVox::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Taken_Damage_DelayedFPVox, CallFunc_BooleanAND_ReturnValue_1) == 0x0000F2, "Member 'CADialogueUtilities_C_Player_Taken_Damage_DelayedFPVox::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Taken_Damage_DelayedFPVox, Temp_byte_Variable_2) == 0x0000F3, "Member 'CADialogueUtilities_C_Player_Taken_Damage_DelayedFPVox::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Taken_Damage_DelayedFPVox, Temp_bool_Variable_7) == 0x0000F4, "Member 'CADialogueUtilities_C_Player_Taken_Damage_DelayedFPVox::Temp_bool_Variable_7' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Taken_Damage_DelayedFPVox, K2Node_Select_Default_1) == 0x0000F5, "Member 'CADialogueUtilities_C_Player_Taken_Damage_DelayedFPVox::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Taken_Damage_DelayedFPVox, CallFunc_RandomBoolWithWeight_ReturnValue) == 0x0000F6, "Member 'CADialogueUtilities_C_Player_Taken_Damage_DelayedFPVox::CallFunc_RandomBoolWithWeight_ReturnValue' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Taken_Damage_DelayedFPVox, K2Node_Select_Default_2) == 0x0000F8, "Member 'CADialogueUtilities_C_Player_Taken_Damage_DelayedFPVox::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Taken_Damage_DelayedFPVox, CallFunc_HasGameplayTag_ReturnValue) == 0x0000FC, "Member 'CADialogueUtilities_C_Player_Taken_Damage_DelayedFPVox::CallFunc_HasGameplayTag_ReturnValue' has a wrong offset!");

// Function CADialogueUtilities.CADialogueUtilities_C.Player Taken Damage Curses
// 0x0100 (0x0100 - 0x0000)
struct CADialogueUtilities_C_Player_Taken_Damage_Curses final
{
public:
	struct FNetworkedHit                          Hit;                                               // 0x0000(0x0068)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	class AActor*                                 Hit_Actor;                                         // 0x0068(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0070(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Hit_by_a_Rival_;                                   // 0x0078(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsDowned;                                          // 0x0079(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CanPlayCurseArmour;                                // 0x007A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7B[0x1];                                       // 0x007B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   OnInsultsPained;                                   // 0x007C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   OnCursePained;                                     // 0x0088(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HadArmour_;                                        // 0x0094(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_95[0x3];                                       // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ACACharacter_MainPlayer*                Character;                                         // 0x0098(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACACharacter_MainPlayer*                K2Node_DynamicCast_AsCACharacter_Main_Player;      // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AA[0x6];                                       // 0x00AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ACAWeapon*                              K2Node_DynamicCast_AsCAWeapon;                     // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACACharacter*                           CallFunc_GetPawnOwner_ReturnValue;                 // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C9[0x3];                                       // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCATeamID                              CallFunc_GetTeamID_ReturnValue;                    // 0x00CC(0x0004)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECAGender                                     CallFunc_GetTeamGenderFromID_ReturnValue;          // 0x00D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECAGender                                     Temp_byte_Variable;                                // 0x00D3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x00D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECAGender                                     K2Node_Select_Default;                             // 0x00D6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D7[0x1];                                       // 0x00D7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Select_Default_1;                           // 0x00D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EHealthState                                  CallFunc_GetHealthState_ReturnValue;               // 0x00E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x00E6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E7[0x1];                                       // 0x00E7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetCurrentNumberArmourSegments_ReturnValue; // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_ED[0x3];                                       // 0x00ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UCADialogueQueryMakerComponent*         CallFunc_GetDialogueQueryMakerComponent_ReturnValue; // 0x00F0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CADialogueUtilities_C_Player_Taken_Damage_Curses) == 0x000008, "Wrong alignment on CADialogueUtilities_C_Player_Taken_Damage_Curses");
static_assert(sizeof(CADialogueUtilities_C_Player_Taken_Damage_Curses) == 0x000100, "Wrong size on CADialogueUtilities_C_Player_Taken_Damage_Curses");
static_assert(offsetof(CADialogueUtilities_C_Player_Taken_Damage_Curses, Hit) == 0x000000, "Member 'CADialogueUtilities_C_Player_Taken_Damage_Curses::Hit' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Taken_Damage_Curses, Hit_Actor) == 0x000068, "Member 'CADialogueUtilities_C_Player_Taken_Damage_Curses::Hit_Actor' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Taken_Damage_Curses, __WorldContext) == 0x000070, "Member 'CADialogueUtilities_C_Player_Taken_Damage_Curses::__WorldContext' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Taken_Damage_Curses, Hit_by_a_Rival_) == 0x000078, "Member 'CADialogueUtilities_C_Player_Taken_Damage_Curses::Hit_by_a_Rival_' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Taken_Damage_Curses, IsDowned) == 0x000079, "Member 'CADialogueUtilities_C_Player_Taken_Damage_Curses::IsDowned' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Taken_Damage_Curses, CanPlayCurseArmour) == 0x00007A, "Member 'CADialogueUtilities_C_Player_Taken_Damage_Curses::CanPlayCurseArmour' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Taken_Damage_Curses, OnInsultsPained) == 0x00007C, "Member 'CADialogueUtilities_C_Player_Taken_Damage_Curses::OnInsultsPained' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Taken_Damage_Curses, OnCursePained) == 0x000088, "Member 'CADialogueUtilities_C_Player_Taken_Damage_Curses::OnCursePained' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Taken_Damage_Curses, HadArmour_) == 0x000094, "Member 'CADialogueUtilities_C_Player_Taken_Damage_Curses::HadArmour_' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Taken_Damage_Curses, Character) == 0x000098, "Member 'CADialogueUtilities_C_Player_Taken_Damage_Curses::Character' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Taken_Damage_Curses, K2Node_DynamicCast_AsCACharacter_Main_Player) == 0x0000A0, "Member 'CADialogueUtilities_C_Player_Taken_Damage_Curses::K2Node_DynamicCast_AsCACharacter_Main_Player' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Taken_Damage_Curses, K2Node_DynamicCast_bSuccess) == 0x0000A8, "Member 'CADialogueUtilities_C_Player_Taken_Damage_Curses::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Taken_Damage_Curses, K2Node_SwitchEnum_CmpSuccess) == 0x0000A9, "Member 'CADialogueUtilities_C_Player_Taken_Damage_Curses::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Taken_Damage_Curses, K2Node_DynamicCast_AsCAWeapon) == 0x0000B0, "Member 'CADialogueUtilities_C_Player_Taken_Damage_Curses::K2Node_DynamicCast_AsCAWeapon' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Taken_Damage_Curses, K2Node_DynamicCast_bSuccess_1) == 0x0000B8, "Member 'CADialogueUtilities_C_Player_Taken_Damage_Curses::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Taken_Damage_Curses, CallFunc_GetPawnOwner_ReturnValue) == 0x0000C0, "Member 'CADialogueUtilities_C_Player_Taken_Damage_Curses::CallFunc_GetPawnOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Taken_Damage_Curses, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0000C8, "Member 'CADialogueUtilities_C_Player_Taken_Damage_Curses::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Taken_Damage_Curses, CallFunc_GetTeamID_ReturnValue) == 0x0000CC, "Member 'CADialogueUtilities_C_Player_Taken_Damage_Curses::CallFunc_GetTeamID_ReturnValue' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Taken_Damage_Curses, CallFunc_BooleanAND_ReturnValue) == 0x0000D0, "Member 'CADialogueUtilities_C_Player_Taken_Damage_Curses::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Taken_Damage_Curses, CallFunc_NotEqual_IntInt_ReturnValue) == 0x0000D1, "Member 'CADialogueUtilities_C_Player_Taken_Damage_Curses::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Taken_Damage_Curses, CallFunc_GetTeamGenderFromID_ReturnValue) == 0x0000D2, "Member 'CADialogueUtilities_C_Player_Taken_Damage_Curses::CallFunc_GetTeamGenderFromID_ReturnValue' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Taken_Damage_Curses, Temp_byte_Variable) == 0x0000D3, "Member 'CADialogueUtilities_C_Player_Taken_Damage_Curses::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Taken_Damage_Curses, Temp_bool_Variable) == 0x0000D4, "Member 'CADialogueUtilities_C_Player_Taken_Damage_Curses::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Taken_Damage_Curses, Temp_bool_Variable_1) == 0x0000D5, "Member 'CADialogueUtilities_C_Player_Taken_Damage_Curses::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Taken_Damage_Curses, K2Node_Select_Default) == 0x0000D6, "Member 'CADialogueUtilities_C_Player_Taken_Damage_Curses::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Taken_Damage_Curses, K2Node_Select_Default_1) == 0x0000D8, "Member 'CADialogueUtilities_C_Player_Taken_Damage_Curses::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Taken_Damage_Curses, CallFunc_IsValid_ReturnValue) == 0x0000E4, "Member 'CADialogueUtilities_C_Player_Taken_Damage_Curses::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Taken_Damage_Curses, CallFunc_GetHealthState_ReturnValue) == 0x0000E5, "Member 'CADialogueUtilities_C_Player_Taken_Damage_Curses::CallFunc_GetHealthState_ReturnValue' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Taken_Damage_Curses, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x0000E6, "Member 'CADialogueUtilities_C_Player_Taken_Damage_Curses::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Taken_Damage_Curses, CallFunc_GetCurrentNumberArmourSegments_ReturnValue) == 0x0000E8, "Member 'CADialogueUtilities_C_Player_Taken_Damage_Curses::CallFunc_GetCurrentNumberArmourSegments_ReturnValue' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Taken_Damage_Curses, CallFunc_Greater_IntInt_ReturnValue) == 0x0000EC, "Member 'CADialogueUtilities_C_Player_Taken_Damage_Curses::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Taken_Damage_Curses, CallFunc_GetDialogueQueryMakerComponent_ReturnValue) == 0x0000F0, "Member 'CADialogueUtilities_C_Player_Taken_Damage_Curses::CallFunc_GetDialogueQueryMakerComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Taken_Damage_Curses, CallFunc_IsValid_ReturnValue_1) == 0x0000F8, "Member 'CADialogueUtilities_C_Player_Taken_Damage_Curses::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function CADialogueUtilities.CADialogueUtilities_C.Player Ammo Low Dialogue
// 0x0030 (0x0030 - 0x0000)
struct CADialogueUtilities_C_Player_Ammo_Low_Dialogue final
{
public:
	class AActor*                                 Owner;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   OnLowAmmo;                                         // 0x0010(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACACharacter_MainPlayer*                K2Node_DynamicCast_AsCACharacter_Main_Player;      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CADialogueUtilities_C_Player_Ammo_Low_Dialogue) == 0x000008, "Wrong alignment on CADialogueUtilities_C_Player_Ammo_Low_Dialogue");
static_assert(sizeof(CADialogueUtilities_C_Player_Ammo_Low_Dialogue) == 0x000030, "Wrong size on CADialogueUtilities_C_Player_Ammo_Low_Dialogue");
static_assert(offsetof(CADialogueUtilities_C_Player_Ammo_Low_Dialogue, Owner) == 0x000000, "Member 'CADialogueUtilities_C_Player_Ammo_Low_Dialogue::Owner' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Ammo_Low_Dialogue, __WorldContext) == 0x000008, "Member 'CADialogueUtilities_C_Player_Ammo_Low_Dialogue::__WorldContext' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Ammo_Low_Dialogue, OnLowAmmo) == 0x000010, "Member 'CADialogueUtilities_C_Player_Ammo_Low_Dialogue::OnLowAmmo' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Ammo_Low_Dialogue, K2Node_DynamicCast_AsCACharacter_Main_Player) == 0x000020, "Member 'CADialogueUtilities_C_Player_Ammo_Low_Dialogue::K2Node_DynamicCast_AsCACharacter_Main_Player' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_Ammo_Low_Dialogue, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'CADialogueUtilities_C_Player_Ammo_Low_Dialogue::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function CADialogueUtilities.CADialogueUtilities_C.Player onDownedTarget Dialogue
// 0x0050 (0x0050 - 0x0000)
struct CADialogueUtilities_C_Player_onDownedTarget_Dialogue final
{
public:
	class AActor*                                 Instigator;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACACharacter_MainPlayer*                DownedPlayer;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   OnDownedTarget;                                    // 0x0018(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCATeamID                              CallFunc_GetTeamID_ReturnValue;                    // 0x0024(0x0004)(NoDestructor, HasGetValueTypeHash)
	class ACACharacter_MainPlayer*                K2Node_DynamicCast_AsCACharacter_Main_Player;      // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FCATeamID                              CallFunc_GetTeamID_ReturnValue_1;                  // 0x0048(0x0004)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_TeamIDTeamID_ReturnValue;        // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CADialogueUtilities_C_Player_onDownedTarget_Dialogue) == 0x000008, "Wrong alignment on CADialogueUtilities_C_Player_onDownedTarget_Dialogue");
static_assert(sizeof(CADialogueUtilities_C_Player_onDownedTarget_Dialogue) == 0x000050, "Wrong size on CADialogueUtilities_C_Player_onDownedTarget_Dialogue");
static_assert(offsetof(CADialogueUtilities_C_Player_onDownedTarget_Dialogue, Instigator) == 0x000000, "Member 'CADialogueUtilities_C_Player_onDownedTarget_Dialogue::Instigator' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_onDownedTarget_Dialogue, DownedPlayer) == 0x000008, "Member 'CADialogueUtilities_C_Player_onDownedTarget_Dialogue::DownedPlayer' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_onDownedTarget_Dialogue, __WorldContext) == 0x000010, "Member 'CADialogueUtilities_C_Player_onDownedTarget_Dialogue::__WorldContext' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_onDownedTarget_Dialogue, OnDownedTarget) == 0x000018, "Member 'CADialogueUtilities_C_Player_onDownedTarget_Dialogue::OnDownedTarget' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_onDownedTarget_Dialogue, CallFunc_GetTeamID_ReturnValue) == 0x000024, "Member 'CADialogueUtilities_C_Player_onDownedTarget_Dialogue::CallFunc_GetTeamID_ReturnValue' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_onDownedTarget_Dialogue, K2Node_DynamicCast_AsCACharacter_Main_Player) == 0x000028, "Member 'CADialogueUtilities_C_Player_onDownedTarget_Dialogue::K2Node_DynamicCast_AsCACharacter_Main_Player' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_onDownedTarget_Dialogue, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'CADialogueUtilities_C_Player_onDownedTarget_Dialogue::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_onDownedTarget_Dialogue, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000038, "Member 'CADialogueUtilities_C_Player_onDownedTarget_Dialogue::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_onDownedTarget_Dialogue, CallFunc_GetTeamID_ReturnValue_1) == 0x000048, "Member 'CADialogueUtilities_C_Player_onDownedTarget_Dialogue::CallFunc_GetTeamID_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_onDownedTarget_Dialogue, CallFunc_NotEqual_TeamIDTeamID_ReturnValue) == 0x00004C, "Member 'CADialogueUtilities_C_Player_onDownedTarget_Dialogue::CallFunc_NotEqual_TeamIDTeamID_ReturnValue' has a wrong offset!");

// Function CADialogueUtilities.CADialogueUtilities_C.Player RivalHitReceived Dialogue
// 0x0058 (0x0058 - 0x0000)
struct CADialogueUtilities_C_Player_RivalHitReceived_Dialogue final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Instigator;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Cooldown;                                          // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DialogueCooldown;                                  // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   OnRivalHitReceived;                                // 0x0020(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACACharacter_MainPlayer*                K2Node_DynamicCast_AsCACharacter_Main_Player;      // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCATeamID                              CallFunc_GetTeamID_ReturnValue;                    // 0x003C(0x0004)(NoDestructor, HasGetValueTypeHash)
	class ACACharacter_MainPlayer*                K2Node_DynamicCast_AsCACharacter_Main_Player_1;    // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCATeamID                              CallFunc_GetTeamID_ReturnValue_1;                  // 0x004C(0x0004)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_TeamIDTeamID_ReturnValue;        // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CADialogueUtilities_C_Player_RivalHitReceived_Dialogue) == 0x000008, "Wrong alignment on CADialogueUtilities_C_Player_RivalHitReceived_Dialogue");
static_assert(sizeof(CADialogueUtilities_C_Player_RivalHitReceived_Dialogue) == 0x000058, "Wrong size on CADialogueUtilities_C_Player_RivalHitReceived_Dialogue");
static_assert(offsetof(CADialogueUtilities_C_Player_RivalHitReceived_Dialogue, Actor) == 0x000000, "Member 'CADialogueUtilities_C_Player_RivalHitReceived_Dialogue::Actor' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_RivalHitReceived_Dialogue, Instigator) == 0x000008, "Member 'CADialogueUtilities_C_Player_RivalHitReceived_Dialogue::Instigator' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_RivalHitReceived_Dialogue, __WorldContext) == 0x000010, "Member 'CADialogueUtilities_C_Player_RivalHitReceived_Dialogue::__WorldContext' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_RivalHitReceived_Dialogue, Cooldown) == 0x000018, "Member 'CADialogueUtilities_C_Player_RivalHitReceived_Dialogue::Cooldown' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_RivalHitReceived_Dialogue, DialogueCooldown) == 0x00001C, "Member 'CADialogueUtilities_C_Player_RivalHitReceived_Dialogue::DialogueCooldown' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_RivalHitReceived_Dialogue, OnRivalHitReceived) == 0x000020, "Member 'CADialogueUtilities_C_Player_RivalHitReceived_Dialogue::OnRivalHitReceived' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_RivalHitReceived_Dialogue, K2Node_DynamicCast_AsCACharacter_Main_Player) == 0x000030, "Member 'CADialogueUtilities_C_Player_RivalHitReceived_Dialogue::K2Node_DynamicCast_AsCACharacter_Main_Player' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_RivalHitReceived_Dialogue, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'CADialogueUtilities_C_Player_RivalHitReceived_Dialogue::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_RivalHitReceived_Dialogue, CallFunc_GetTeamID_ReturnValue) == 0x00003C, "Member 'CADialogueUtilities_C_Player_RivalHitReceived_Dialogue::CallFunc_GetTeamID_ReturnValue' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_RivalHitReceived_Dialogue, K2Node_DynamicCast_AsCACharacter_Main_Player_1) == 0x000040, "Member 'CADialogueUtilities_C_Player_RivalHitReceived_Dialogue::K2Node_DynamicCast_AsCACharacter_Main_Player_1' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_RivalHitReceived_Dialogue, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'CADialogueUtilities_C_Player_RivalHitReceived_Dialogue::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_RivalHitReceived_Dialogue, CallFunc_GetTeamID_ReturnValue_1) == 0x00004C, "Member 'CADialogueUtilities_C_Player_RivalHitReceived_Dialogue::CallFunc_GetTeamID_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CADialogueUtilities_C_Player_RivalHitReceived_Dialogue, CallFunc_NotEqual_TeamIDTeamID_ReturnValue) == 0x000050, "Member 'CADialogueUtilities_C_Player_RivalHitReceived_Dialogue::CallFunc_NotEqual_TeamIDTeamID_ReturnValue' has a wrong offset!");

}

