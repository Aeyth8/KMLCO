#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Player

#include "Basic.hpp"

#include "BP_Player_classes.hpp"
#include "BP_Player_parameters.hpp"


namespace SDK
{

// Function BP_Player.BP_Player_C.OnTeleport__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   TeleportDuration                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    In                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_Player_C::OnTeleport__DelegateSignature(float TeleportDuration, bool In)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Player_C", "OnTeleport__DelegateSignature");

	Params::BP_Player_C_OnTeleport__DelegateSignature Parms{};

	Parms.TeleportDuration = TeleportDuration;
	Parms.In = In;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Player.BP_Player_C.ExecuteUbergraph_BP_Player
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Player_C::ExecuteUbergraph_BP_Player(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Player_C", "ExecuteUbergraph_BP_Player");

	Params::BP_Player_C_ExecuteUbergraph_BP_Player Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Player.BP_Player_C.RivalTeamWipedByPlayer
// (BlueprintCallable, BlueprintEvent)

void ABP_Player_C::RivalTeamWipedByPlayer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Player_C", "RivalTeamWipedByPlayer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Player.BP_Player_C.RivalTeamWipedByNonPlayer
// (BlueprintCallable, BlueprintEvent)

void ABP_Player_C::RivalTeamWipedByNonPlayer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Player_C", "RivalTeamWipedByNonPlayer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Player.BP_Player_C.CheckTeamWiped
// (BlueprintCallable, BlueprintEvent)

void ABP_Player_C::CheckTeamWiped()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Player_C", "CheckTeamWiped");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Player.BP_Player_C.OnCheckTick
// (BlueprintCallable, BlueprintEvent)

void ABP_Player_C::OnCheckTick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Player_C", "OnCheckTick");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Player.BP_Player_C.OnShowAreaStateCheckbox
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_Player_C::OnShowAreaStateCheckbox(bool Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Player_C", "OnShowAreaStateCheckbox");

	Params::BP_Player_C_OnShowAreaStateCheckbox Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Player.BP_Player_C.OnSecurityAreaStatechanged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// ECASecurityAreaState                    New_area_state                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Player_C::OnSecurityAreaStatechanged(ECASecurityAreaState New_area_state)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Player_C", "OnSecurityAreaStatechanged");

	Params::BP_Player_C_OnSecurityAreaStatechanged Parms{};

	Parms.New_area_state = New_area_state;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Player.BP_Player_C.onKillEnemy
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ACACharacter*                     Character_0                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Player_C::OnKillEnemy(const class ACACharacter* Character_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Player_C", "onKillEnemy");

	Params::BP_Player_C_OnKillEnemy Parms{};

	Parms.Character_0 = Character_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Player.BP_Player_C.OnDeathTPVOAbort
// (BlueprintCallable, BlueprintEvent)

void ABP_Player_C::OnDeathTPVOAbort()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Player_C", "OnDeathTPVOAbort");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Player.BP_Player_C.DialogueCooldown
// (BlueprintCallable, BlueprintEvent)

void ABP_Player_C::DialogueCooldown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Player_C", "DialogueCooldown");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Player.BP_Player_C.BndEvt__BP_Player_m_ability_system_component_K2Node_ComponentBoundEvent_7_OnHitReceived__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// struct FCADamageEffectInfo              Damage_effect_info                                     (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ABP_Player_C::BndEvt__BP_Player_m_ability_system_component_K2Node_ComponentBoundEvent_7_OnHitReceived__DelegateSignature(const struct FCADamageEffectInfo& Damage_effect_info)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Player_C", "BndEvt__BP_Player_m_ability_system_component_K2Node_ComponentBoundEvent_7_OnHitReceived__DelegateSignature");

	Params::BP_Player_C_BndEvt__BP_Player_m_ability_system_component_K2Node_ComponentBoundEvent_7_OnHitReceived__DelegateSignature Parms{};

	Parms.Damage_effect_info = std::move(Damage_effect_info);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Player.BP_Player_C.GravityStateChanged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    New_state                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_Player_C::GravityStateChanged(bool New_state)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Player_C", "GravityStateChanged");

	Params::BP_Player_C_GravityStateChanged Parms{};

	Parms.New_state = New_state;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Player.BP_Player_C.OnPlayerControllerReplicated
// (Event, Public, BlueprintEvent)

void ABP_Player_C::OnPlayerControllerReplicated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Player_C", "OnPlayerControllerReplicated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Player.BP_Player_C.BndEvt__BP_Player_m_ability_system_component_K2Node_ComponentBoundEvent_10_OnZeroHealth__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// struct FGameplayEffectSpec              Killing_effect_spec                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// float                                   Delta_value                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Player_C::BndEvt__BP_Player_m_ability_system_component_K2Node_ComponentBoundEvent_10_OnZeroHealth__DelegateSignature(const struct FGameplayEffectSpec& Killing_effect_spec, float Delta_value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Player_C", "BndEvt__BP_Player_m_ability_system_component_K2Node_ComponentBoundEvent_10_OnZeroHealth__DelegateSignature");

	Params::BP_Player_C_BndEvt__BP_Player_m_ability_system_component_K2Node_ComponentBoundEvent_10_OnZeroHealth__DelegateSignature Parms{};

	Parms.Killing_effect_spec = std::move(Killing_effect_spec);
	Parms.Delta_value = Delta_value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Player.BP_Player_C.Requesst_Heal
// (BlueprintCallable, BlueprintEvent)

void ABP_Player_C::Requesst_Heal()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Player_C", "Requesst_Heal");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Player.BP_Player_C.OnEndExecutionAsExecutioner
// (Event, Public, BlueprintEvent)

void ABP_Player_C::OnEndExecutionAsExecutioner()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Player_C", "OnEndExecutionAsExecutioner");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Player.BP_Player_C.OnBeginExecutionAsExecutioner
// (Event, Public, BlueprintEvent)

void ABP_Player_C::OnBeginExecutionAsExecutioner()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Player_C", "OnBeginExecutionAsExecutioner");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Player.BP_Player_C.BndEvt__BP_Player_CharacterMovement_K2Node_ComponentBoundEvent_9_PlayerMovementModeChangedSignature__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class ACharacter*                       Character_0                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ECAPlayerMovementMode                   PrevMovementMode                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ECAPlayerMovementMode                   MovementMode                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Player_C::BndEvt__BP_Player_CharacterMovement_K2Node_ComponentBoundEvent_9_PlayerMovementModeChangedSignature__DelegateSignature(class ACharacter* Character_0, ECAPlayerMovementMode PrevMovementMode, ECAPlayerMovementMode MovementMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Player_C", "BndEvt__BP_Player_CharacterMovement_K2Node_ComponentBoundEvent_9_PlayerMovementModeChangedSignature__DelegateSignature");

	Params::BP_Player_C_BndEvt__BP_Player_CharacterMovement_K2Node_ComponentBoundEvent_9_PlayerMovementModeChangedSignature__DelegateSignature Parms{};

	Parms.Character_0 = Character_0;
	Parms.PrevMovementMode = PrevMovementMode;
	Parms.MovementMode = MovementMode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Player.BP_Player_C.BndEvt__BP_Player_CharacterMovement_K2Node_ComponentBoundEvent_5_PlayerMovementMetaModeChangedSignature__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class ACharacter*                       Character_0                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ECAPlayerMovementMetaMode               PrevMovementMetaMode                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ECAPlayerMovementMetaMode               MovementMetaMode                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Player_C::BndEvt__BP_Player_CharacterMovement_K2Node_ComponentBoundEvent_5_PlayerMovementMetaModeChangedSignature__DelegateSignature(class ACharacter* Character_0, ECAPlayerMovementMetaMode PrevMovementMetaMode, ECAPlayerMovementMetaMode MovementMetaMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Player_C", "BndEvt__BP_Player_CharacterMovement_K2Node_ComponentBoundEvent_5_PlayerMovementMetaModeChangedSignature__DelegateSignature");

	Params::BP_Player_C_BndEvt__BP_Player_CharacterMovement_K2Node_ComponentBoundEvent_5_PlayerMovementMetaModeChangedSignature__DelegateSignature Parms{};

	Parms.Character_0 = Character_0;
	Parms.PrevMovementMetaMode = PrevMovementMetaMode;
	Parms.MovementMetaMode = MovementMetaMode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Player.BP_Player_C.OnPlayerHealthStateChanged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EHealthState                            Health_state                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Player_C::OnPlayerHealthStateChanged(EHealthState Health_state)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Player_C", "OnPlayerHealthStateChanged");

	Params::BP_Player_C_OnPlayerHealthStateChanged Parms{};

	Parms.Health_state = Health_state;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Player.BP_Player_C.GravhookStateChangeEvent
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// ECAGravHookStateChange                  State_change                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Player_C::GravhookStateChangeEvent(ECAGravHookStateChange State_change)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Player_C", "GravhookStateChangeEvent");

	Params::BP_Player_C_GravhookStateChangeEvent Parms{};

	Parms.State_change = State_change;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Player.BP_Player_C.EndConstantHitAudio
// (Event, Public, BlueprintEvent)
// Parameters:
// class ACAEquipmentBase*                 Hit_instigator                                         (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Player_C::EndConstantHitAudio(const class ACAEquipmentBase* Hit_instigator)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Player_C", "EndConstantHitAudio");

	Params::BP_Player_C_EndConstantHitAudio Parms{};

	Parms.Hit_instigator = Hit_instigator;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Player.BP_Player_C.StartConstantHitAudio
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FNetworkedHit                    Networked_hit                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void ABP_Player_C::StartConstantHitAudio(const struct FNetworkedHit& Networked_hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Player_C", "StartConstantHitAudio");

	Params::BP_Player_C_StartConstantHitAudio Parms{};

	Parms.Networked_hit = std::move(Networked_hit);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Player.BP_Player_C.BndEvt__PlayerStateMachine_K2Node_ComponentBoundEvent_2_EventDowned__DelegateSignature
// (BlueprintEvent)

void ABP_Player_C::BndEvt__PlayerStateMachine_K2Node_ComponentBoundEvent_2_EventDowned__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Player_C", "BndEvt__PlayerStateMachine_K2Node_ComponentBoundEvent_2_EventDowned__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Player.BP_Player_C.BndEvt__PlayerStateMachine_K2Node_ComponentBoundEvent_1_EventRevive__DelegateSignature
// (BlueprintEvent)

void ABP_Player_C::BndEvt__PlayerStateMachine_K2Node_ComponentBoundEvent_1_EventRevive__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Player_C", "BndEvt__PlayerStateMachine_K2Node_ComponentBoundEvent_1_EventRevive__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Player.BP_Player_C.GravHookRangeFailedEvent
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)

void ABP_Player_C::GravHookRangeFailedEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Player_C", "GravHookRangeFailedEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Player.BP_Player_C.BndEvt__GravityWarning_K2Node_ComponentBoundEvent_15_GameplayTagChanged__DelegateSignature
// (BlueprintEvent)
// Parameters:
// struct FGameplayTag                     Tag                                                    (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void ABP_Player_C::BndEvt__GravityWarning_K2Node_ComponentBoundEvent_15_GameplayTagChanged__DelegateSignature(const struct FGameplayTag& Tag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Player_C", "BndEvt__GravityWarning_K2Node_ComponentBoundEvent_15_GameplayTagChanged__DelegateSignature");

	Params::BP_Player_C_BndEvt__GravityWarning_K2Node_ComponentBoundEvent_15_GameplayTagChanged__DelegateSignature Parms{};

	Parms.Tag = std::move(Tag);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Player.BP_Player_C.BndEvt__GravityWarning_K2Node_ComponentBoundEvent_14_GameplayTagChanged__DelegateSignature
// (BlueprintEvent)
// Parameters:
// struct FGameplayTag                     Tag                                                    (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void ABP_Player_C::BndEvt__GravityWarning_K2Node_ComponentBoundEvent_14_GameplayTagChanged__DelegateSignature(const struct FGameplayTag& Tag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Player_C", "BndEvt__GravityWarning_K2Node_ComponentBoundEvent_14_GameplayTagChanged__DelegateSignature");

	Params::BP_Player_C_BndEvt__GravityWarning_K2Node_ComponentBoundEvent_14_GameplayTagChanged__DelegateSignature Parms{};

	Parms.Tag = std::move(Tag);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Player.BP_Player_C.OnTeleportOutBegin
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Teleport_duration                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Player_C::OnTeleportOutBegin(float Teleport_duration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Player_C", "OnTeleportOutBegin");

	Params::BP_Player_C_OnTeleportOutBegin Parms{};

	Parms.Teleport_duration = Teleport_duration;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Player.BP_Player_C.OnTeleportInBegin
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Teleport_duration                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Player_C::OnTeleportInBegin(float Teleport_duration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Player_C", "OnTeleportInBegin");

	Params::BP_Player_C_OnTeleportInBegin Parms{};

	Parms.Teleport_duration = Teleport_duration;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Player.BP_Player_C.OnArmourBreak
// (Event, Public, BlueprintEvent)

void ABP_Player_C::OnArmourBreak()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Player_C", "OnArmourBreak");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Player.BP_Player_C.BndEvt__m_hit_reaction_component_K2Node_ComponentBoundEvent_13_HitRecievedSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// struct FNetworkedHit                    Hit                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void ABP_Player_C::BndEvt__m_hit_reaction_component_K2Node_ComponentBoundEvent_13_HitRecievedSignature__DelegateSignature(const struct FNetworkedHit& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Player_C", "BndEvt__m_hit_reaction_component_K2Node_ComponentBoundEvent_13_HitRecievedSignature__DelegateSignature");

	Params::BP_Player_C_BndEvt__m_hit_reaction_component_K2Node_ComponentBoundEvent_13_HitRecievedSignature__DelegateSignature Parms{};

	Parms.Hit = std::move(Hit);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Player.BP_Player_C.FoamChanged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Percentage                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Player_C::FoamChanged(float Percentage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Player_C", "FoamChanged");

	Params::BP_Player_C_FoamChanged Parms{};

	Parms.Percentage = Percentage;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Player.BP_Player_C.OnPlayerStateInitialised
// (Event, Public, BlueprintEvent)

void ABP_Player_C::OnPlayerStateInitialised()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Player_C", "OnPlayerStateInitialised");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Player.BP_Player_C.Player_ADS
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// ECAPlayerAbilityMode                    Ability                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Starting                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_Player_C::Player_ADS(ECAPlayerAbilityMode Ability, bool Starting)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Player_C", "Player_ADS");

	Params::BP_Player_C_Player_ADS Parms{};

	Parms.Ability = Ability;
	Parms.Starting = Starting;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Player.BP_Player_C.OnDeath
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ACACharacter*                     Character_0                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayEffectSpec              Death_gameplay_effect_spec                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// float                                   Damage_magnitude                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FNetworkedHit                    Networked_hit                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
// class AActor*                           Killer                                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Player_C::OnDeath(class ACACharacter* Character_0, const struct FGameplayEffectSpec& Death_gameplay_effect_spec, float Damage_magnitude, const struct FNetworkedHit& Networked_hit, const class AActor* Killer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Player_C", "OnDeath");

	Params::BP_Player_C_OnDeath Parms{};

	Parms.Character_0 = Character_0;
	Parms.Death_gameplay_effect_spec = std::move(Death_gameplay_effect_spec);
	Parms.Damage_magnitude = Damage_magnitude;
	Parms.Networked_hit = std::move(Networked_hit);
	Parms.Killer = Killer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Player.BP_Player_C.ProcessWeaponMovementPushback
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   WeaponTimeBetweenShots                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Player_C::ProcessWeaponMovementPushback(float WeaponTimeBetweenShots)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Player_C", "ProcessWeaponMovementPushback");

	Params::BP_Player_C_ProcessWeaponMovementPushback Parms{};

	Parms.WeaponTimeBetweenShots = WeaponTimeBetweenShots;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Player.BP_Player_C.OnPickupItem
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           Item                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Player_C::OnPickupItem(const class UClass*& Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Player_C", "OnPickupItem");

	Params::BP_Player_C_OnPickupItem Parms{};

	Parms.Item = Item;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Player.BP_Player_C.EndEmoteDontShoot
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_Player_C::EndEmoteDontShoot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Player_C", "EndEmoteDontShoot");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Player.BP_Player_C.StartEmoteDontShoot
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_Player_C::StartEmoteDontShoot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Player_C", "StartEmoteDontShoot");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Player.BP_Player_C.DebugResetHealth
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void ABP_Player_C::DebugResetHealth()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Player_C", "DebugResetHealth");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Player.BP_Player_C.CLTUpdateSecurityAreaHUD
// (Net, HasOutParams, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Int                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class AActor*>                   SecurityPlayer                                         (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ABP_Player_C::CLTUpdateSecurityAreaHUD(int32 Int, const TArray<class AActor*>& SecurityPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Player_C", "CLTUpdateSecurityAreaHUD");

	Params::BP_Player_C_CLTUpdateSecurityAreaHUD Parms{};

	Parms.Int = Int;
	Parms.SecurityPlayer = std::move(SecurityPlayer);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Player.BP_Player_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_Player_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Player_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Player.BP_Player_C.ReceivePossessed
// (Event, Public, BlueprintEvent)
// Parameters:
// class AController*                      NewController                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Player_C::ReceivePossessed(class AController* NewController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Player_C", "ReceivePossessed");

	Params::BP_Player_C_ReceivePossessed Parms{};

	Parms.NewController = NewController;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Player.BP_Player_C.K2_OnBecomeViewTarget
// (Event, Public, BlueprintEvent)
// Parameters:
// class APlayerController*                PC                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Player_C::K2_OnBecomeViewTarget(class APlayerController* PC)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Player_C", "K2_OnBecomeViewTarget");

	Params::BP_Player_C_K2_OnBecomeViewTarget Parms{};

	Parms.PC = PC;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Player.BP_Player_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Player_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Player_C", "ReceiveTick");

	Params::BP_Player_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Player.BP_Player_C.InpActEvt_DebugResetHealth_K2Node_InputActionEvent_0
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_Player_C::InpActEvt_DebugResetHealth_K2Node_InputActionEvent_0(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Player_C", "InpActEvt_DebugResetHealth_K2Node_InputActionEvent_0");

	Params::BP_Player_C_InpActEvt_DebugResetHealth_K2Node_InputActionEvent_0 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Player.BP_Player_C.UserConstructionScript
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_Player_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Player_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Player.BP_Player_C.RefreshCharacterWeapon
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Player_C::RefreshCharacterWeapon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Player_C", "RefreshCharacterWeapon");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Player.BP_Player_C.IsPlayerInZeroG
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsInZeroG_0                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_Player_C::IsPlayerInZeroG(bool* IsInZeroG_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Player_C", "IsPlayerInZeroG");

	Params::BP_Player_C_IsPlayerInZeroG Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsInZeroG_0 != nullptr)
		*IsInZeroG_0 = Parms.IsInZeroG_0;
}


// Function BP_Player.BP_Player_C.SetupInteractorComponent
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Player_C::SetupInteractorComponent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Player_C", "SetupInteractorComponent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Player.BP_Player_C.IsPlayerMoving
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsMoving_0                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_Player_C::IsPlayerMoving(bool* IsMoving_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Player_C", "IsPlayerMoving");

	Params::BP_Player_C_IsPlayerMoving Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsMoving_0 != nullptr)
		*IsMoving_0 = Parms.IsMoving_0;
}


// Function BP_Player.BP_Player_C.UpdateTeamOutline
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_Player_C::UpdateTeamOutline()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Player_C", "UpdateTeamOutline");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Player.BP_Player_C.SetRenderOutline
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Enable                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   OverrideIndex                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EOutlineColours                         Colour                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Player_C::SetRenderOutline(bool Enable, int32 OverrideIndex, EOutlineColours Colour)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Player_C", "SetRenderOutline");

	Params::BP_Player_C_SetRenderOutline Parms{};

	Parms.Enable = Enable;
	Parms.OverrideIndex = OverrideIndex;
	Parms.Colour = Colour;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Player.BP_Player_C.ProcessHealthHUD
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Player_C::ProcessHealthHUD()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Player_C", "ProcessHealthHUD");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Player.BP_Player_C.GetHUD
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class ABPUI_HUD_InGame_C*               AsBPUI_HUD_in_Game                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Player_C::GetHUD(class ABPUI_HUD_InGame_C** AsBPUI_HUD_in_Game)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Player_C", "GetHUD");

	Params::BP_Player_C_GetHUD Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AsBPUI_HUD_in_Game != nullptr)
		*AsBPUI_HUD_in_Game = Parms.AsBPUI_HUD_in_Game;
}


// Function BP_Player.BP_Player_C.ProcessProximityPlayerSensor
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Quantity                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class AActor*>                   Array                                                  (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ABP_Player_C::ProcessProximityPlayerSensor(int32 Quantity, TArray<class AActor*>& Array)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Player_C", "ProcessProximityPlayerSensor");

	Params::BP_Player_C_ProcessProximityPlayerSensor Parms{};

	Parms.Quantity = Quantity;
	Parms.Array = std::move(Array);

	UObject::ProcessEvent(Func, &Parms);

	Array = std::move(Parms.Array);
}


// Function BP_Player.BP_Player_C.CheckActorAlligence
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_Player_C::CheckActorAlligence(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Player_C", "CheckActorAlligence");

	Params::BP_Player_C_CheckActorAlligence Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_Player.BP_Player_C.ShowSecurityAreaState
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ECASecurityAreaState                    Area_state                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Player_C::ShowSecurityAreaState(ECASecurityAreaState Area_state)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Player_C", "ShowSecurityAreaState");

	Params::BP_Player_C_ShowSecurityAreaState Parms{};

	Parms.Area_state = Area_state;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Player.BP_Player_C.IsPlayerInZeroGFlying
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsInZeroGFlying                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_Player_C::IsPlayerInZeroGFlying(bool* IsInZeroGFlying)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Player_C", "IsPlayerInZeroGFlying");

	Params::BP_Player_C_IsPlayerInZeroGFlying Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsInZeroGFlying != nullptr)
		*IsInZeroGFlying = Parms.IsInZeroGFlying;
}


// Function BP_Player.BP_Player_C.IsPlayerGrabbingObjective
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Is_grabbing                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_Player_C::IsPlayerGrabbingObjective(bool* Is_grabbing)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Player_C", "IsPlayerGrabbingObjective");

	Params::BP_Player_C_IsPlayerGrabbingObjective Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Is_grabbing != nullptr)
		*Is_grabbing = Parms.Is_grabbing;
}


// Function BP_Player.BP_Player_C.ProcessOnArmourBreak
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Player_C::ProcessOnArmourBreak()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Player_C", "ProcessOnArmourBreak");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Player.BP_Player_C.Update Zero G Status
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Player_C::Update_Zero_G_Status()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Player_C", "Update Zero G Status");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Player.BP_Player_C.ProcessLowHealthAudioEvent
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Player_C::ProcessLowHealthAudioEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Player_C", "ProcessLowHealthAudioEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Player.BP_Player_C.GravityHookPlaceholderVisualHelper
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_Player_C::GravityHookPlaceholderVisualHelper()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Player_C", "GravityHookPlaceholderVisualHelper");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Player.BP_Player_C.UpdateCampStatus
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Player_C::UpdateCampStatus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Player_C", "UpdateCampStatus");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Player.BP_Player_C.Gravhook State Change
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// ECAGravHookStateChange                  GravhookState                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Player_C::Gravhook_State_Change(ECAGravHookStateChange GravhookState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Player_C", "Gravhook State Change");

	Params::BP_Player_C_Gravhook_State_Change Parms{};

	Parms.GravhookState = GravhookState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Player.BP_Player_C.ShouldCountdownActivate
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ShouldCountdownPlay                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_Player_C::ShouldCountdownActivate(bool* ShouldCountdownPlay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Player_C", "ShouldCountdownActivate");

	Params::BP_Player_C_ShouldCountdownActivate Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ShouldCountdownPlay != nullptr)
		*ShouldCountdownPlay = Parms.ShouldCountdownPlay;
}


// Function BP_Player.BP_Player_C.SpawnFPFoamVFX
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Player_C::SpawnFPFoamVFX()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Player_C", "SpawnFPFoamVFX");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Player.BP_Player_C.UpdateFPFoamVFX
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   TargetFoamValue                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Player_C::UpdateFPFoamVFX(float TargetFoamValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Player_C", "UpdateFPFoamVFX");

	Params::BP_Player_C_UpdateFPFoamVFX Parms{};

	Parms.TargetFoamValue = TargetFoamValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Player.BP_Player_C.CollectDebugInfo
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FCADebugTextCollector            InCollector                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FCADebugTextCollector            OutCollector                                           (Parm, OutParm)

void ABP_Player_C::CollectDebugInfo(const struct FCADebugTextCollector& InCollector, struct FCADebugTextCollector* OutCollector) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Player_C", "CollectDebugInfo");

	Params::BP_Player_C_CollectDebugInfo Parms{};

	Parms.InCollector = std::move(InCollector);

	UObject::ProcessEvent(Func, &Parms);

	if (OutCollector != nullptr)
		*OutCollector = std::move(Parms.OutCollector);
}

}

