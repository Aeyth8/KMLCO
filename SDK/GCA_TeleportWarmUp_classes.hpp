#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GCA_TeleportWarmUp

#include "Basic.hpp"

#include "GameplayAbilities_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GCA_TeleportWarmUp.GCA_TeleportWarmUp_C
// 0x0028 (0x02E8 - 0x02C0)
class AGCA_TeleportWarmUp_C final : public AGameplayCueNotify_Actor
{
public:
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         Niagara_TP;                                        // 0x02C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      NiagaraEffectReference;                            // 0x02D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      Niagara_FP;                                        // 0x02D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACACharacter*                           Character;                                         // 0x02E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	bool OnRemove(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters);
	bool WhileActive(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GCA_TeleportWarmUp_C">();
	}
	static class AGCA_TeleportWarmUp_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AGCA_TeleportWarmUp_C>();
	}
};
static_assert(alignof(AGCA_TeleportWarmUp_C) == 0x000008, "Wrong alignment on AGCA_TeleportWarmUp_C");
static_assert(sizeof(AGCA_TeleportWarmUp_C) == 0x0002E8, "Wrong size on AGCA_TeleportWarmUp_C");
static_assert(offsetof(AGCA_TeleportWarmUp_C, DefaultSceneRoot) == 0x0002C0, "Member 'AGCA_TeleportWarmUp_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(AGCA_TeleportWarmUp_C, Niagara_TP) == 0x0002C8, "Member 'AGCA_TeleportWarmUp_C::Niagara_TP' has a wrong offset!");
static_assert(offsetof(AGCA_TeleportWarmUp_C, NiagaraEffectReference) == 0x0002D0, "Member 'AGCA_TeleportWarmUp_C::NiagaraEffectReference' has a wrong offset!");
static_assert(offsetof(AGCA_TeleportWarmUp_C, Niagara_FP) == 0x0002D8, "Member 'AGCA_TeleportWarmUp_C::Niagara_FP' has a wrong offset!");
static_assert(offsetof(AGCA_TeleportWarmUp_C, Character) == 0x0002E0, "Member 'AGCA_TeleportWarmUp_C::Character' has a wrong offset!");

}

