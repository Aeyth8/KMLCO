#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AB_Elite_CombatJump

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "CAGameDatabase_structs.hpp"
#include "Keaton_classes.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass AB_Elite_CombatJump.AB_Elite_CombatJump_C
// 0x00B0 (0x0540 - 0x0490)
class UAB_Elite_CombatJump_C final : public UCAGameplayAbility_NPC
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0490(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAnimMontage*                           Takeoff_Large;                                     // 0x0498(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Takeoff_Medium;                                    // 0x04A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Takeoff_Small;                                     // 0x04A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector>                        Jump_Vectors;                                      // 0x04B0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FName                                   OnCombatEvasiveElite;                              // 0x04C0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Destination_Location;                              // 0x04CC(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Arc_Param;                                         // 0x04D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Vertical_Movement_Height;                          // 0x04DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACACharacter_NPC*                       Owner_NPC;                                         // 0x04E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            JumpGEHandle;                                      // 0x04E8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Jump_Anim_Montage;                                 // 0x04F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCADataTableRowHandle                  JumpTimeSmall;                                     // 0x04F8(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FCADataTableRowHandle                  JumpTimeMedium;                                    // 0x0510(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FCADataTableRowHandle                  JumpTimeHigh;                                      // 0x0528(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)

public:
	void ExecuteUbergraph_AB_Elite_CombatJump(int32 EntryPoint);
	void K2_ActivateAbilityFromEvent(const struct FGameplayEventData& EventData);
	void K2_OnEndAbility(bool bWasCancelled);
	void OnCompleted_38984AF3431CDF1191CEAE8A380C00F9();
	void OnBlendOut_38984AF3431CDF1191CEAE8A380C00F9();
	void OnInterrupted_38984AF3431CDF1191CEAE8A380C00F9();
	void OnCancelled_38984AF3431CDF1191CEAE8A380C00F9();
	void OnSkipped_38984AF3431CDF1191CEAE8A380C00F9();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"AB_Elite_CombatJump_C">();
	}
	static class UAB_Elite_CombatJump_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAB_Elite_CombatJump_C>();
	}
};
static_assert(alignof(UAB_Elite_CombatJump_C) == 0x000008, "Wrong alignment on UAB_Elite_CombatJump_C");
static_assert(sizeof(UAB_Elite_CombatJump_C) == 0x000540, "Wrong size on UAB_Elite_CombatJump_C");
static_assert(offsetof(UAB_Elite_CombatJump_C, UberGraphFrame) == 0x000490, "Member 'UAB_Elite_CombatJump_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UAB_Elite_CombatJump_C, Takeoff_Large) == 0x000498, "Member 'UAB_Elite_CombatJump_C::Takeoff_Large' has a wrong offset!");
static_assert(offsetof(UAB_Elite_CombatJump_C, Takeoff_Medium) == 0x0004A0, "Member 'UAB_Elite_CombatJump_C::Takeoff_Medium' has a wrong offset!");
static_assert(offsetof(UAB_Elite_CombatJump_C, Takeoff_Small) == 0x0004A8, "Member 'UAB_Elite_CombatJump_C::Takeoff_Small' has a wrong offset!");
static_assert(offsetof(UAB_Elite_CombatJump_C, Jump_Vectors) == 0x0004B0, "Member 'UAB_Elite_CombatJump_C::Jump_Vectors' has a wrong offset!");
static_assert(offsetof(UAB_Elite_CombatJump_C, OnCombatEvasiveElite) == 0x0004C0, "Member 'UAB_Elite_CombatJump_C::OnCombatEvasiveElite' has a wrong offset!");
static_assert(offsetof(UAB_Elite_CombatJump_C, Destination_Location) == 0x0004CC, "Member 'UAB_Elite_CombatJump_C::Destination_Location' has a wrong offset!");
static_assert(offsetof(UAB_Elite_CombatJump_C, Arc_Param) == 0x0004D8, "Member 'UAB_Elite_CombatJump_C::Arc_Param' has a wrong offset!");
static_assert(offsetof(UAB_Elite_CombatJump_C, Vertical_Movement_Height) == 0x0004DC, "Member 'UAB_Elite_CombatJump_C::Vertical_Movement_Height' has a wrong offset!");
static_assert(offsetof(UAB_Elite_CombatJump_C, Owner_NPC) == 0x0004E0, "Member 'UAB_Elite_CombatJump_C::Owner_NPC' has a wrong offset!");
static_assert(offsetof(UAB_Elite_CombatJump_C, JumpGEHandle) == 0x0004E8, "Member 'UAB_Elite_CombatJump_C::JumpGEHandle' has a wrong offset!");
static_assert(offsetof(UAB_Elite_CombatJump_C, Jump_Anim_Montage) == 0x0004F0, "Member 'UAB_Elite_CombatJump_C::Jump_Anim_Montage' has a wrong offset!");
static_assert(offsetof(UAB_Elite_CombatJump_C, JumpTimeSmall) == 0x0004F8, "Member 'UAB_Elite_CombatJump_C::JumpTimeSmall' has a wrong offset!");
static_assert(offsetof(UAB_Elite_CombatJump_C, JumpTimeMedium) == 0x000510, "Member 'UAB_Elite_CombatJump_C::JumpTimeMedium' has a wrong offset!");
static_assert(offsetof(UAB_Elite_CombatJump_C, JumpTimeHigh) == 0x000528, "Member 'UAB_Elite_CombatJump_C::JumpTimeHigh' has a wrong offset!");

}

