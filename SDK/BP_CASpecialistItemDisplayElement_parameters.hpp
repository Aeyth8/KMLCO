#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CASpecialistItemDisplayElement

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_CASpecialistItemDisplayElement.BP_CASpecialistItemDisplayElement_C.ExecuteUbergraph_BP_CASpecialistItemDisplayElement
// 0x0098 (0x0098 - 0x0000)
struct BP_CASpecialistItemDisplayElement_C_ExecuteUbergraph_BP_CASpecialistItemDisplayElement final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_is_equipped;                          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_isSelected;                     // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              K2Node_CustomEvent_SoftTexture_1;                  // 0x0010(0x0030)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              K2Node_CustomEvent_SoftTexture;                    // 0x0048(0x0030)(HasGetValueTypeHash)
	const class UCAServicesDataItem*              K2Node_Event_services_data;                        // 0x0078(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_is_pending;                           // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCASpecialistDataItem*                  K2Node_DynamicCast_AsCASpecialist_Data_Item;       // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_is_focused;                           // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CASpecialistItemDisplayElement_C_ExecuteUbergraph_BP_CASpecialistItemDisplayElement) == 0x000008, "Wrong alignment on BP_CASpecialistItemDisplayElement_C_ExecuteUbergraph_BP_CASpecialistItemDisplayElement");
static_assert(sizeof(BP_CASpecialistItemDisplayElement_C_ExecuteUbergraph_BP_CASpecialistItemDisplayElement) == 0x000098, "Wrong size on BP_CASpecialistItemDisplayElement_C_ExecuteUbergraph_BP_CASpecialistItemDisplayElement");
static_assert(offsetof(BP_CASpecialistItemDisplayElement_C_ExecuteUbergraph_BP_CASpecialistItemDisplayElement, EntryPoint) == 0x000000, "Member 'BP_CASpecialistItemDisplayElement_C_ExecuteUbergraph_BP_CASpecialistItemDisplayElement::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_CASpecialistItemDisplayElement_C_ExecuteUbergraph_BP_CASpecialistItemDisplayElement, K2Node_Event_is_equipped) == 0x000004, "Member 'BP_CASpecialistItemDisplayElement_C_ExecuteUbergraph_BP_CASpecialistItemDisplayElement::K2Node_Event_is_equipped' has a wrong offset!");
static_assert(offsetof(BP_CASpecialistItemDisplayElement_C_ExecuteUbergraph_BP_CASpecialistItemDisplayElement, K2Node_CustomEvent_isSelected) == 0x000005, "Member 'BP_CASpecialistItemDisplayElement_C_ExecuteUbergraph_BP_CASpecialistItemDisplayElement::K2Node_CustomEvent_isSelected' has a wrong offset!");
static_assert(offsetof(BP_CASpecialistItemDisplayElement_C_ExecuteUbergraph_BP_CASpecialistItemDisplayElement, CallFunc_PlayAnimation_ReturnValue) == 0x000008, "Member 'BP_CASpecialistItemDisplayElement_C_ExecuteUbergraph_BP_CASpecialistItemDisplayElement::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CASpecialistItemDisplayElement_C_ExecuteUbergraph_BP_CASpecialistItemDisplayElement, K2Node_CustomEvent_SoftTexture_1) == 0x000010, "Member 'BP_CASpecialistItemDisplayElement_C_ExecuteUbergraph_BP_CASpecialistItemDisplayElement::K2Node_CustomEvent_SoftTexture_1' has a wrong offset!");
static_assert(offsetof(BP_CASpecialistItemDisplayElement_C_ExecuteUbergraph_BP_CASpecialistItemDisplayElement, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000040, "Member 'BP_CASpecialistItemDisplayElement_C_ExecuteUbergraph_BP_CASpecialistItemDisplayElement::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CASpecialistItemDisplayElement_C_ExecuteUbergraph_BP_CASpecialistItemDisplayElement, K2Node_CustomEvent_SoftTexture) == 0x000048, "Member 'BP_CASpecialistItemDisplayElement_C_ExecuteUbergraph_BP_CASpecialistItemDisplayElement::K2Node_CustomEvent_SoftTexture' has a wrong offset!");
static_assert(offsetof(BP_CASpecialistItemDisplayElement_C_ExecuteUbergraph_BP_CASpecialistItemDisplayElement, K2Node_Event_services_data) == 0x000078, "Member 'BP_CASpecialistItemDisplayElement_C_ExecuteUbergraph_BP_CASpecialistItemDisplayElement::K2Node_Event_services_data' has a wrong offset!");
static_assert(offsetof(BP_CASpecialistItemDisplayElement_C_ExecuteUbergraph_BP_CASpecialistItemDisplayElement, K2Node_Event_is_pending) == 0x000080, "Member 'BP_CASpecialistItemDisplayElement_C_ExecuteUbergraph_BP_CASpecialistItemDisplayElement::K2Node_Event_is_pending' has a wrong offset!");
static_assert(offsetof(BP_CASpecialistItemDisplayElement_C_ExecuteUbergraph_BP_CASpecialistItemDisplayElement, K2Node_DynamicCast_AsCASpecialist_Data_Item) == 0x000088, "Member 'BP_CASpecialistItemDisplayElement_C_ExecuteUbergraph_BP_CASpecialistItemDisplayElement::K2Node_DynamicCast_AsCASpecialist_Data_Item' has a wrong offset!");
static_assert(offsetof(BP_CASpecialistItemDisplayElement_C_ExecuteUbergraph_BP_CASpecialistItemDisplayElement, K2Node_DynamicCast_bSuccess) == 0x000090, "Member 'BP_CASpecialistItemDisplayElement_C_ExecuteUbergraph_BP_CASpecialistItemDisplayElement::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_CASpecialistItemDisplayElement_C_ExecuteUbergraph_BP_CASpecialistItemDisplayElement, K2Node_Event_is_focused) == 0x000091, "Member 'BP_CASpecialistItemDisplayElement_C_ExecuteUbergraph_BP_CASpecialistItemDisplayElement::K2Node_Event_is_focused' has a wrong offset!");

// Function BP_CASpecialistItemDisplayElement.BP_CASpecialistItemDisplayElement_C.SetEquippedState
// 0x0001 (0x0001 - 0x0000)
struct BP_CASpecialistItemDisplayElement_C_SetEquippedState final
{
public:
	bool                                          Is_equipped;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CASpecialistItemDisplayElement_C_SetEquippedState) == 0x000001, "Wrong alignment on BP_CASpecialistItemDisplayElement_C_SetEquippedState");
static_assert(sizeof(BP_CASpecialistItemDisplayElement_C_SetEquippedState) == 0x000001, "Wrong size on BP_CASpecialistItemDisplayElement_C_SetEquippedState");
static_assert(offsetof(BP_CASpecialistItemDisplayElement_C_SetEquippedState, Is_equipped) == 0x000000, "Member 'BP_CASpecialistItemDisplayElement_C_SetEquippedState::Is_equipped' has a wrong offset!");

// Function BP_CASpecialistItemDisplayElement.BP_CASpecialistItemDisplayElement_C.SetFocusedState
// 0x0001 (0x0001 - 0x0000)
struct BP_CASpecialistItemDisplayElement_C_SetFocusedState final
{
public:
	bool                                          Is_focused;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CASpecialistItemDisplayElement_C_SetFocusedState) == 0x000001, "Wrong alignment on BP_CASpecialistItemDisplayElement_C_SetFocusedState");
static_assert(sizeof(BP_CASpecialistItemDisplayElement_C_SetFocusedState) == 0x000001, "Wrong size on BP_CASpecialistItemDisplayElement_C_SetFocusedState");
static_assert(offsetof(BP_CASpecialistItemDisplayElement_C_SetFocusedState, Is_focused) == 0x000000, "Member 'BP_CASpecialistItemDisplayElement_C_SetFocusedState::Is_focused' has a wrong offset!");

// Function BP_CASpecialistItemDisplayElement.BP_CASpecialistItemDisplayElement_C.SetConfirmedState
// 0x0001 (0x0001 - 0x0000)
struct BP_CASpecialistItemDisplayElement_C_SetConfirmedState final
{
public:
	bool                                          Is_pending;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CASpecialistItemDisplayElement_C_SetConfirmedState) == 0x000001, "Wrong alignment on BP_CASpecialistItemDisplayElement_C_SetConfirmedState");
static_assert(sizeof(BP_CASpecialistItemDisplayElement_C_SetConfirmedState) == 0x000001, "Wrong size on BP_CASpecialistItemDisplayElement_C_SetConfirmedState");
static_assert(offsetof(BP_CASpecialistItemDisplayElement_C_SetConfirmedState, Is_pending) == 0x000000, "Member 'BP_CASpecialistItemDisplayElement_C_SetConfirmedState::Is_pending' has a wrong offset!");

// Function BP_CASpecialistItemDisplayElement.BP_CASpecialistItemDisplayElement_C.SetDisplay
// 0x0008 (0x0008 - 0x0000)
struct BP_CASpecialistItemDisplayElement_C_SetDisplay final
{
public:
	const class UCAServicesDataItem*              Services_data;                                     // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CASpecialistItemDisplayElement_C_SetDisplay) == 0x000008, "Wrong alignment on BP_CASpecialistItemDisplayElement_C_SetDisplay");
static_assert(sizeof(BP_CASpecialistItemDisplayElement_C_SetDisplay) == 0x000008, "Wrong size on BP_CASpecialistItemDisplayElement_C_SetDisplay");
static_assert(offsetof(BP_CASpecialistItemDisplayElement_C_SetDisplay, Services_data) == 0x000000, "Member 'BP_CASpecialistItemDisplayElement_C_SetDisplay::Services_data' has a wrong offset!");

// Function BP_CASpecialistItemDisplayElement.BP_CASpecialistItemDisplayElement_C.SetIcon
// 0x0030 (0x0030 - 0x0000)
struct BP_CASpecialistItemDisplayElement_C_SetIcon final
{
public:
	TSoftObjectPtr<class UTexture2D>              SoftTexture;                                       // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_CASpecialistItemDisplayElement_C_SetIcon) == 0x000008, "Wrong alignment on BP_CASpecialistItemDisplayElement_C_SetIcon");
static_assert(sizeof(BP_CASpecialistItemDisplayElement_C_SetIcon) == 0x000030, "Wrong size on BP_CASpecialistItemDisplayElement_C_SetIcon");
static_assert(offsetof(BP_CASpecialistItemDisplayElement_C_SetIcon, SoftTexture) == 0x000000, "Member 'BP_CASpecialistItemDisplayElement_C_SetIcon::SoftTexture' has a wrong offset!");

// Function BP_CASpecialistItemDisplayElement.BP_CASpecialistItemDisplayElement_C.SetPortrait
// 0x0030 (0x0030 - 0x0000)
struct BP_CASpecialistItemDisplayElement_C_SetPortrait final
{
public:
	TSoftObjectPtr<class UTexture2D>              SoftTexture;                                       // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_CASpecialistItemDisplayElement_C_SetPortrait) == 0x000008, "Wrong alignment on BP_CASpecialistItemDisplayElement_C_SetPortrait");
static_assert(sizeof(BP_CASpecialistItemDisplayElement_C_SetPortrait) == 0x000030, "Wrong size on BP_CASpecialistItemDisplayElement_C_SetPortrait");
static_assert(offsetof(BP_CASpecialistItemDisplayElement_C_SetPortrait, SoftTexture) == 0x000000, "Member 'BP_CASpecialistItemDisplayElement_C_SetPortrait::SoftTexture' has a wrong offset!");

// Function BP_CASpecialistItemDisplayElement.BP_CASpecialistItemDisplayElement_C.PlaySelectedAnim
// 0x0001 (0x0001 - 0x0000)
struct BP_CASpecialistItemDisplayElement_C_PlaySelectedAnim final
{
public:
	bool                                          IsSelected;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CASpecialistItemDisplayElement_C_PlaySelectedAnim) == 0x000001, "Wrong alignment on BP_CASpecialistItemDisplayElement_C_PlaySelectedAnim");
static_assert(sizeof(BP_CASpecialistItemDisplayElement_C_PlaySelectedAnim) == 0x000001, "Wrong size on BP_CASpecialistItemDisplayElement_C_PlaySelectedAnim");
static_assert(offsetof(BP_CASpecialistItemDisplayElement_C_PlaySelectedAnim, IsSelected) == 0x000000, "Member 'BP_CASpecialistItemDisplayElement_C_PlaySelectedAnim::IsSelected' has a wrong offset!");

}

