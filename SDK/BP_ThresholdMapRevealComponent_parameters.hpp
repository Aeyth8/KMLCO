#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ThresholdMapRevealComponent

#include "Basic.hpp"

#include "Keaton_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "BPS_MapRevealData_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_ThresholdMapRevealComponent.BP_ThresholdMapRevealComponent_C.ExecuteUbergraph_BP_ThresholdMapRevealComponent
// 0x0080 (0x0080 - 0x0000)
struct BP_ThresholdMapRevealComponent_C_ExecuteUbergraph_BP_ThresholdMapRevealComponent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FCATeamID>                      CallFunc_Get_Threshold_Teams_ThresholdTeamArray;   // 0x0008(0x0010)(ReferenceParm)
	TArray<struct FCATeamID>                      CallFunc_Get_Threshold_Teams_NonThresholdTeamArray; // 0x0018(0x0010)(ReferenceParm)
	TDelegate<void(struct FTeamData& Team_data)>  K2Node_CreateDelegate_OutputDelegate;              // 0x0028(0x0014)(ZeroConstructor, NoDestructor)
	struct FTeamData                              K2Node_CustomEvent_team_data;                      // 0x003C(0x0030)(ConstParm, NoDestructor)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACAGameState*                           CallFunc_GetGameState_ReturnValue;                 // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ThresholdMapRevealComponent_C_ExecuteUbergraph_BP_ThresholdMapRevealComponent) == 0x000008, "Wrong alignment on BP_ThresholdMapRevealComponent_C_ExecuteUbergraph_BP_ThresholdMapRevealComponent");
static_assert(sizeof(BP_ThresholdMapRevealComponent_C_ExecuteUbergraph_BP_ThresholdMapRevealComponent) == 0x000080, "Wrong size on BP_ThresholdMapRevealComponent_C_ExecuteUbergraph_BP_ThresholdMapRevealComponent");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_ExecuteUbergraph_BP_ThresholdMapRevealComponent, EntryPoint) == 0x000000, "Member 'BP_ThresholdMapRevealComponent_C_ExecuteUbergraph_BP_ThresholdMapRevealComponent::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_ExecuteUbergraph_BP_ThresholdMapRevealComponent, CallFunc_Get_Threshold_Teams_ThresholdTeamArray) == 0x000008, "Member 'BP_ThresholdMapRevealComponent_C_ExecuteUbergraph_BP_ThresholdMapRevealComponent::CallFunc_Get_Threshold_Teams_ThresholdTeamArray' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_ExecuteUbergraph_BP_ThresholdMapRevealComponent, CallFunc_Get_Threshold_Teams_NonThresholdTeamArray) == 0x000018, "Member 'BP_ThresholdMapRevealComponent_C_ExecuteUbergraph_BP_ThresholdMapRevealComponent::CallFunc_Get_Threshold_Teams_NonThresholdTeamArray' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_ExecuteUbergraph_BP_ThresholdMapRevealComponent, K2Node_CreateDelegate_OutputDelegate) == 0x000028, "Member 'BP_ThresholdMapRevealComponent_C_ExecuteUbergraph_BP_ThresholdMapRevealComponent::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_ExecuteUbergraph_BP_ThresholdMapRevealComponent, K2Node_CustomEvent_team_data) == 0x00003C, "Member 'BP_ThresholdMapRevealComponent_C_ExecuteUbergraph_BP_ThresholdMapRevealComponent::K2Node_CustomEvent_team_data' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_ExecuteUbergraph_BP_ThresholdMapRevealComponent, K2Node_Event_DeltaSeconds) == 0x00006C, "Member 'BP_ThresholdMapRevealComponent_C_ExecuteUbergraph_BP_ThresholdMapRevealComponent::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_ExecuteUbergraph_BP_ThresholdMapRevealComponent, CallFunc_GetGameState_ReturnValue) == 0x000070, "Member 'BP_ThresholdMapRevealComponent_C_ExecuteUbergraph_BP_ThresholdMapRevealComponent::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_ExecuteUbergraph_BP_ThresholdMapRevealComponent, CallFunc_Add_FloatFloat_ReturnValue) == 0x000078, "Member 'BP_ThresholdMapRevealComponent_C_ExecuteUbergraph_BP_ThresholdMapRevealComponent::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_ExecuteUbergraph_BP_ThresholdMapRevealComponent, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x00007C, "Member 'BP_ThresholdMapRevealComponent_C_ExecuteUbergraph_BP_ThresholdMapRevealComponent::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_ThresholdMapRevealComponent.BP_ThresholdMapRevealComponent_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_ThresholdMapRevealComponent_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ThresholdMapRevealComponent_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_ThresholdMapRevealComponent_C_ReceiveTick");
static_assert(sizeof(BP_ThresholdMapRevealComponent_C_ReceiveTick) == 0x000004, "Wrong size on BP_ThresholdMapRevealComponent_C_ReceiveTick");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_ThresholdMapRevealComponent_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_ThresholdMapRevealComponent.BP_ThresholdMapRevealComponent_C.LootUpdated
// 0x0030 (0x0030 - 0x0000)
struct BP_ThresholdMapRevealComponent_C_LootUpdated final
{
public:
	struct FTeamData                              Team_data;                                         // 0x0000(0x0030)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(BP_ThresholdMapRevealComponent_C_LootUpdated) == 0x000004, "Wrong alignment on BP_ThresholdMapRevealComponent_C_LootUpdated");
static_assert(sizeof(BP_ThresholdMapRevealComponent_C_LootUpdated) == 0x000030, "Wrong size on BP_ThresholdMapRevealComponent_C_LootUpdated");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_LootUpdated, Team_data) == 0x000000, "Member 'BP_ThresholdMapRevealComponent_C_LootUpdated::Team_data' has a wrong offset!");

// Function BP_ThresholdMapRevealComponent.BP_ThresholdMapRevealComponent_C.GetPlayerLocationOffset
// 0x0040 (0x0040 - 0x0000)
struct BP_ThresholdMapRevealComponent_C_GetPlayerLocationOffset final
{
public:
	class AActor*                                 ActortoLocate;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OffsetX;                                           // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OffsetY;                                           // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ValueX;                                            // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ValueY;                                            // 0x0014(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ValueZ;                                            // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ThresholdMapRevealComponent_C_GetPlayerLocationOffset) == 0x000008, "Wrong alignment on BP_ThresholdMapRevealComponent_C_GetPlayerLocationOffset");
static_assert(sizeof(BP_ThresholdMapRevealComponent_C_GetPlayerLocationOffset) == 0x000040, "Wrong size on BP_ThresholdMapRevealComponent_C_GetPlayerLocationOffset");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_GetPlayerLocationOffset, ActortoLocate) == 0x000000, "Member 'BP_ThresholdMapRevealComponent_C_GetPlayerLocationOffset::ActortoLocate' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_GetPlayerLocationOffset, OffsetX) == 0x000008, "Member 'BP_ThresholdMapRevealComponent_C_GetPlayerLocationOffset::OffsetX' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_GetPlayerLocationOffset, OffsetY) == 0x00000C, "Member 'BP_ThresholdMapRevealComponent_C_GetPlayerLocationOffset::OffsetY' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_GetPlayerLocationOffset, ValueX) == 0x000010, "Member 'BP_ThresholdMapRevealComponent_C_GetPlayerLocationOffset::ValueX' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_GetPlayerLocationOffset, ValueY) == 0x000014, "Member 'BP_ThresholdMapRevealComponent_C_GetPlayerLocationOffset::ValueY' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_GetPlayerLocationOffset, ValueZ) == 0x000018, "Member 'BP_ThresholdMapRevealComponent_C_GetPlayerLocationOffset::ValueZ' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_GetPlayerLocationOffset, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00001C, "Member 'BP_ThresholdMapRevealComponent_C_GetPlayerLocationOffset::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_GetPlayerLocationOffset, CallFunc_BreakVector_X) == 0x000028, "Member 'BP_ThresholdMapRevealComponent_C_GetPlayerLocationOffset::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_GetPlayerLocationOffset, CallFunc_BreakVector_Y) == 0x00002C, "Member 'BP_ThresholdMapRevealComponent_C_GetPlayerLocationOffset::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_GetPlayerLocationOffset, CallFunc_BreakVector_Z) == 0x000030, "Member 'BP_ThresholdMapRevealComponent_C_GetPlayerLocationOffset::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_GetPlayerLocationOffset, CallFunc_Add_FloatFloat_ReturnValue) == 0x000034, "Member 'BP_ThresholdMapRevealComponent_C_GetPlayerLocationOffset::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_GetPlayerLocationOffset, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000038, "Member 'BP_ThresholdMapRevealComponent_C_GetPlayerLocationOffset::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");

// Function BP_ThresholdMapRevealComponent.BP_ThresholdMapRevealComponent_C.Unregister Map Icon
// 0x0070 (0x0070 - 0x0000)
struct BP_ThresholdMapRevealComponent_C_Unregister_Map_Icon final
{
public:
	class ACAPlayerState*                         PlayerStateToUnregister;                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         IndexToRemove;                                     // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCATeamID>                      CallFunc_Map_Keys_Keys;                            // 0x0020(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCATeamID                              CallFunc_Array_Get_Item;                           // 0x0034(0x0004)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Map_Remove_ReturnValue;                   // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B[0x5];                                       // 0x003B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBPS_MapRevealData                     CallFunc_Map_Find_Value;                           // 0x0040(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ThresholdMapRevealComponent_C_Unregister_Map_Icon) == 0x000008, "Wrong alignment on BP_ThresholdMapRevealComponent_C_Unregister_Map_Icon");
static_assert(sizeof(BP_ThresholdMapRevealComponent_C_Unregister_Map_Icon) == 0x000070, "Wrong size on BP_ThresholdMapRevealComponent_C_Unregister_Map_Icon");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_Unregister_Map_Icon, PlayerStateToUnregister) == 0x000000, "Member 'BP_ThresholdMapRevealComponent_C_Unregister_Map_Icon::PlayerStateToUnregister' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_Unregister_Map_Icon, IndexToRemove) == 0x000008, "Member 'BP_ThresholdMapRevealComponent_C_Unregister_Map_Icon::IndexToRemove' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_Unregister_Map_Icon, Temp_bool_True_if_break_was_hit_Variable) == 0x00000C, "Member 'BP_ThresholdMapRevealComponent_C_Unregister_Map_Icon::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_Unregister_Map_Icon, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_ThresholdMapRevealComponent_C_Unregister_Map_Icon::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_Unregister_Map_Icon, CallFunc_Not_PreBool_ReturnValue) == 0x000014, "Member 'BP_ThresholdMapRevealComponent_C_Unregister_Map_Icon::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_Unregister_Map_Icon, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'BP_ThresholdMapRevealComponent_C_Unregister_Map_Icon::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_Unregister_Map_Icon, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'BP_ThresholdMapRevealComponent_C_Unregister_Map_Icon::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_Unregister_Map_Icon, CallFunc_Map_Keys_Keys) == 0x000020, "Member 'BP_ThresholdMapRevealComponent_C_Unregister_Map_Icon::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_Unregister_Map_Icon, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BP_ThresholdMapRevealComponent_C_Unregister_Map_Icon::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_Unregister_Map_Icon, CallFunc_Array_Get_Item) == 0x000034, "Member 'BP_ThresholdMapRevealComponent_C_Unregister_Map_Icon::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_Unregister_Map_Icon, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'BP_ThresholdMapRevealComponent_C_Unregister_Map_Icon::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_Unregister_Map_Icon, CallFunc_Map_Remove_ReturnValue) == 0x000039, "Member 'BP_ThresholdMapRevealComponent_C_Unregister_Map_Icon::CallFunc_Map_Remove_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_Unregister_Map_Icon, CallFunc_BooleanAND_ReturnValue) == 0x00003A, "Member 'BP_ThresholdMapRevealComponent_C_Unregister_Map_Icon::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_Unregister_Map_Icon, CallFunc_Map_Find_Value) == 0x000040, "Member 'BP_ThresholdMapRevealComponent_C_Unregister_Map_Icon::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_Unregister_Map_Icon, CallFunc_Map_Find_ReturnValue) == 0x000068, "Member 'BP_ThresholdMapRevealComponent_C_Unregister_Map_Icon::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_Unregister_Map_Icon, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000069, "Member 'BP_ThresholdMapRevealComponent_C_Unregister_Map_Icon::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function BP_ThresholdMapRevealComponent.BP_ThresholdMapRevealComponent_C.RegisterMapIcon
// 0x01F8 (0x01F8 - 0x0000)
struct BP_ThresholdMapRevealComponent_C_RegisterMapIcon final
{
public:
	TArray<class ACAPlayerState*>                 PlayerStates;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<struct FCATeamID>                      TeamsToNotify;                                     // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<struct FCATeamID>                      LocalTeamsToNotify;                                // 0x0020(0x0010)(Edit, BlueprintVisible)
	class ACAPlayerState*                         LocalPlayerState;                                  // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MapEntityID;                                       // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCAMapEntityPayload                    Payload;                                           // 0x0040(0x0070)(Edit, BlueprintVisible)
	struct FVector2D                              Offset;                                            // 0x00B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x3];                                       // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CD[0x3];                                       // 0x00CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D5[0x3];                                       // 0x00D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACAPlayerState*                         CallFunc_Array_Get_Item;                           // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCATeamID                              CallFunc_GetTeamID_ReturnValue;                    // 0x00EC(0x0004)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F5[0x3];                                       // 0x00F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Max_ReturnValue;                          // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCATeamID                              CallFunc_GetTeamID_ReturnValue_1;                  // 0x00FC(0x0004)(NoDestructor, HasGetValueTypeHash)
	struct FCATeamID                              CallFunc_GetTeamID_ReturnValue_2;                  // 0x0100(0x0004)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_104[0x4];                                      // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACAPlayerState*                         CallFunc_Array_Get_Item_1;                         // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0114(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_115[0x3];                                      // 0x0115(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBPS_MapRevealData                     K2Node_MakeStruct_BPS_MapRevealData;               // 0x0118(0x0028)(HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14C[0x4];                                      // 0x014C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayerLocationOffset_ValueX;           // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayerLocationOffset_ValueY;           // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayerLocationOffset_ValueZ;           // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector_NetQuantize                    K2Node_MakeStruct_Vector_NetQuantize;              // 0x0168(0x000C)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0174(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_175[0x3];                                      // 0x0175(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCAMapEntityPayload                    K2Node_MakeStruct_CAMapEntityPayload;              // 0x0178(0x0070)()
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RegisterMapEntity_ReturnValue;            // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ThresholdMapRevealComponent_C_RegisterMapIcon) == 0x000008, "Wrong alignment on BP_ThresholdMapRevealComponent_C_RegisterMapIcon");
static_assert(sizeof(BP_ThresholdMapRevealComponent_C_RegisterMapIcon) == 0x0001F8, "Wrong size on BP_ThresholdMapRevealComponent_C_RegisterMapIcon");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_RegisterMapIcon, PlayerStates) == 0x000000, "Member 'BP_ThresholdMapRevealComponent_C_RegisterMapIcon::PlayerStates' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_RegisterMapIcon, TeamsToNotify) == 0x000010, "Member 'BP_ThresholdMapRevealComponent_C_RegisterMapIcon::TeamsToNotify' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_RegisterMapIcon, LocalTeamsToNotify) == 0x000020, "Member 'BP_ThresholdMapRevealComponent_C_RegisterMapIcon::LocalTeamsToNotify' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_RegisterMapIcon, LocalPlayerState) == 0x000030, "Member 'BP_ThresholdMapRevealComponent_C_RegisterMapIcon::LocalPlayerState' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_RegisterMapIcon, MapEntityID) == 0x000038, "Member 'BP_ThresholdMapRevealComponent_C_RegisterMapIcon::MapEntityID' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_RegisterMapIcon, Payload) == 0x000040, "Member 'BP_ThresholdMapRevealComponent_C_RegisterMapIcon::Payload' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_RegisterMapIcon, Offset) == 0x0000B0, "Member 'BP_ThresholdMapRevealComponent_C_RegisterMapIcon::Offset' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_RegisterMapIcon, CallFunc_IsValid_ReturnValue) == 0x0000B8, "Member 'BP_ThresholdMapRevealComponent_C_RegisterMapIcon::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_RegisterMapIcon, CallFunc_Array_Length_ReturnValue) == 0x0000BC, "Member 'BP_ThresholdMapRevealComponent_C_RegisterMapIcon::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_RegisterMapIcon, CallFunc_Greater_IntInt_ReturnValue) == 0x0000C0, "Member 'BP_ThresholdMapRevealComponent_C_RegisterMapIcon::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_RegisterMapIcon, CallFunc_Array_Length_ReturnValue_1) == 0x0000C4, "Member 'BP_ThresholdMapRevealComponent_C_RegisterMapIcon::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_RegisterMapIcon, Temp_int_Array_Index_Variable) == 0x0000C8, "Member 'BP_ThresholdMapRevealComponent_C_RegisterMapIcon::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_RegisterMapIcon, CallFunc_Greater_IntInt_ReturnValue_1) == 0x0000CC, "Member 'BP_ThresholdMapRevealComponent_C_RegisterMapIcon::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_RegisterMapIcon, Temp_int_Loop_Counter_Variable) == 0x0000D0, "Member 'BP_ThresholdMapRevealComponent_C_RegisterMapIcon::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_RegisterMapIcon, CallFunc_BooleanAND_ReturnValue) == 0x0000D4, "Member 'BP_ThresholdMapRevealComponent_C_RegisterMapIcon::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_RegisterMapIcon, CallFunc_Add_IntInt_ReturnValue) == 0x0000D8, "Member 'BP_ThresholdMapRevealComponent_C_RegisterMapIcon::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_RegisterMapIcon, Temp_int_Array_Index_Variable_1) == 0x0000DC, "Member 'BP_ThresholdMapRevealComponent_C_RegisterMapIcon::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_RegisterMapIcon, CallFunc_Array_Get_Item) == 0x0000E0, "Member 'BP_ThresholdMapRevealComponent_C_RegisterMapIcon::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_RegisterMapIcon, CallFunc_Array_Length_ReturnValue_2) == 0x0000E8, "Member 'BP_ThresholdMapRevealComponent_C_RegisterMapIcon::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_RegisterMapIcon, CallFunc_GetTeamID_ReturnValue) == 0x0000EC, "Member 'BP_ThresholdMapRevealComponent_C_RegisterMapIcon::CallFunc_GetTeamID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_RegisterMapIcon, CallFunc_Subtract_IntInt_ReturnValue) == 0x0000F0, "Member 'BP_ThresholdMapRevealComponent_C_RegisterMapIcon::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_RegisterMapIcon, CallFunc_Array_RemoveItem_ReturnValue) == 0x0000F4, "Member 'BP_ThresholdMapRevealComponent_C_RegisterMapIcon::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_RegisterMapIcon, CallFunc_Max_ReturnValue) == 0x0000F8, "Member 'BP_ThresholdMapRevealComponent_C_RegisterMapIcon::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_RegisterMapIcon, CallFunc_GetTeamID_ReturnValue_1) == 0x0000FC, "Member 'BP_ThresholdMapRevealComponent_C_RegisterMapIcon::CallFunc_GetTeamID_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_RegisterMapIcon, CallFunc_GetTeamID_ReturnValue_2) == 0x000100, "Member 'BP_ThresholdMapRevealComponent_C_RegisterMapIcon::CallFunc_GetTeamID_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_RegisterMapIcon, CallFunc_Array_Get_Item_1) == 0x000108, "Member 'BP_ThresholdMapRevealComponent_C_RegisterMapIcon::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_RegisterMapIcon, CallFunc_Array_Length_ReturnValue_3) == 0x000110, "Member 'BP_ThresholdMapRevealComponent_C_RegisterMapIcon::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_RegisterMapIcon, CallFunc_Less_IntInt_ReturnValue) == 0x000114, "Member 'BP_ThresholdMapRevealComponent_C_RegisterMapIcon::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_RegisterMapIcon, K2Node_MakeStruct_BPS_MapRevealData) == 0x000118, "Member 'BP_ThresholdMapRevealComponent_C_RegisterMapIcon::K2Node_MakeStruct_BPS_MapRevealData' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_RegisterMapIcon, CallFunc_BreakVector2D_X) == 0x000140, "Member 'BP_ThresholdMapRevealComponent_C_RegisterMapIcon::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_RegisterMapIcon, CallFunc_BreakVector2D_Y) == 0x000144, "Member 'BP_ThresholdMapRevealComponent_C_RegisterMapIcon::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_RegisterMapIcon, Temp_int_Loop_Counter_Variable_1) == 0x000148, "Member 'BP_ThresholdMapRevealComponent_C_RegisterMapIcon::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_RegisterMapIcon, CallFunc_GetOwner_ReturnValue) == 0x000150, "Member 'BP_ThresholdMapRevealComponent_C_RegisterMapIcon::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_RegisterMapIcon, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000158, "Member 'BP_ThresholdMapRevealComponent_C_RegisterMapIcon::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_RegisterMapIcon, CallFunc_GetPlayerLocationOffset_ValueX) == 0x00015C, "Member 'BP_ThresholdMapRevealComponent_C_RegisterMapIcon::CallFunc_GetPlayerLocationOffset_ValueX' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_RegisterMapIcon, CallFunc_GetPlayerLocationOffset_ValueY) == 0x000160, "Member 'BP_ThresholdMapRevealComponent_C_RegisterMapIcon::CallFunc_GetPlayerLocationOffset_ValueY' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_RegisterMapIcon, CallFunc_GetPlayerLocationOffset_ValueZ) == 0x000164, "Member 'BP_ThresholdMapRevealComponent_C_RegisterMapIcon::CallFunc_GetPlayerLocationOffset_ValueZ' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_RegisterMapIcon, K2Node_MakeStruct_Vector_NetQuantize) == 0x000168, "Member 'BP_ThresholdMapRevealComponent_C_RegisterMapIcon::K2Node_MakeStruct_Vector_NetQuantize' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_RegisterMapIcon, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000174, "Member 'BP_ThresholdMapRevealComponent_C_RegisterMapIcon::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_RegisterMapIcon, K2Node_MakeStruct_CAMapEntityPayload) == 0x000178, "Member 'BP_ThresholdMapRevealComponent_C_RegisterMapIcon::K2Node_MakeStruct_CAMapEntityPayload' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_RegisterMapIcon, CallFunc_RandomFloatInRange_ReturnValue) == 0x0001E8, "Member 'BP_ThresholdMapRevealComponent_C_RegisterMapIcon::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_RegisterMapIcon, CallFunc_RegisterMapEntity_ReturnValue) == 0x0001EC, "Member 'BP_ThresholdMapRevealComponent_C_RegisterMapIcon::CallFunc_RegisterMapEntity_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_RegisterMapIcon, CallFunc_MakeVector2D_ReturnValue) == 0x0001F0, "Member 'BP_ThresholdMapRevealComponent_C_RegisterMapIcon::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");

// Function BP_ThresholdMapRevealComponent.BP_ThresholdMapRevealComponent_C.UpdateMapIcons
// 0x01F0 (0x01F0 - 0x0000)
struct BP_ThresholdMapRevealComponent_C_UpdateMapIcons final
{
public:
	TArray<struct FCATeamID>                      TeamsToNotify;                                     // 0x0000(0x0010)(Edit, BlueprintVisible)
	struct FBPS_MapRevealData                     CashedMapRevealData;                               // 0x0010(0x0028)(Edit, BlueprintVisible, HasGetValueTypeHash)
	struct FCAMapEntityPayload                    MapEntityPayload;                                  // 0x0038(0x0070)(Edit, BlueprintVisible)
	TArray<struct FCATeamID>                      NonThresholdTeams;                                 // 0x00A8(0x0010)(Edit, BlueprintVisible)
	TArray<struct FCATeamID>                      ThresholdTeams;                                    // 0x00B8(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCATeamID                              CallFunc_GetTeamID_ReturnValue;                    // 0x00D4(0x0004)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FCATeamID>                      CallFunc_Get_Threshold_Teams_ThresholdTeamArray;   // 0x00F0(0x0010)(ReferenceParm)
	TArray<struct FCATeamID>                      CallFunc_Get_Threshold_Teams_NonThresholdTeamArray; // 0x0100(0x0010)(ReferenceParm)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FBPS_MapRevealData>             CallFunc_Map_Values_Values;                        // 0x0118(0x0010)(ReferenceParm)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBPS_MapRevealData                     CallFunc_Array_Get_Item;                           // 0x0130(0x0028)(HasGetValueTypeHash)
	float                                         CallFunc_GetPlayerLocationOffset_ValueX;           // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayerLocationOffset_ValueY;           // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayerLocationOffset_ValueZ;           // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector_NetQuantize                    K2Node_MakeStruct_Vector_NetQuantize;              // 0x0164(0x000C)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_174[0x4];                                      // 0x0174(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCAMapEntityPayload                    K2Node_MakeStruct_CAMapEntityPayload;              // 0x0178(0x0070)()
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ThresholdMapRevealComponent_C_UpdateMapIcons) == 0x000008, "Wrong alignment on BP_ThresholdMapRevealComponent_C_UpdateMapIcons");
static_assert(sizeof(BP_ThresholdMapRevealComponent_C_UpdateMapIcons) == 0x0001F0, "Wrong size on BP_ThresholdMapRevealComponent_C_UpdateMapIcons");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_UpdateMapIcons, TeamsToNotify) == 0x000000, "Member 'BP_ThresholdMapRevealComponent_C_UpdateMapIcons::TeamsToNotify' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_UpdateMapIcons, CashedMapRevealData) == 0x000010, "Member 'BP_ThresholdMapRevealComponent_C_UpdateMapIcons::CashedMapRevealData' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_UpdateMapIcons, MapEntityPayload) == 0x000038, "Member 'BP_ThresholdMapRevealComponent_C_UpdateMapIcons::MapEntityPayload' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_UpdateMapIcons, NonThresholdTeams) == 0x0000A8, "Member 'BP_ThresholdMapRevealComponent_C_UpdateMapIcons::NonThresholdTeams' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_UpdateMapIcons, ThresholdTeams) == 0x0000B8, "Member 'BP_ThresholdMapRevealComponent_C_UpdateMapIcons::ThresholdTeams' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_UpdateMapIcons, Temp_int_Loop_Counter_Variable) == 0x0000C8, "Member 'BP_ThresholdMapRevealComponent_C_UpdateMapIcons::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_UpdateMapIcons, CallFunc_Add_IntInt_ReturnValue) == 0x0000CC, "Member 'BP_ThresholdMapRevealComponent_C_UpdateMapIcons::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_UpdateMapIcons, Temp_int_Array_Index_Variable) == 0x0000D0, "Member 'BP_ThresholdMapRevealComponent_C_UpdateMapIcons::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_UpdateMapIcons, CallFunc_GetTeamID_ReturnValue) == 0x0000D4, "Member 'BP_ThresholdMapRevealComponent_C_UpdateMapIcons::CallFunc_GetTeamID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_UpdateMapIcons, CallFunc_IsValid_ReturnValue) == 0x0000D8, "Member 'BP_ThresholdMapRevealComponent_C_UpdateMapIcons::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_UpdateMapIcons, CallFunc_K2_GetPawn_ReturnValue) == 0x0000E0, "Member 'BP_ThresholdMapRevealComponent_C_UpdateMapIcons::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_UpdateMapIcons, CallFunc_IsValid_ReturnValue_1) == 0x0000E8, "Member 'BP_ThresholdMapRevealComponent_C_UpdateMapIcons::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_UpdateMapIcons, CallFunc_Get_Threshold_Teams_ThresholdTeamArray) == 0x0000F0, "Member 'BP_ThresholdMapRevealComponent_C_UpdateMapIcons::CallFunc_Get_Threshold_Teams_ThresholdTeamArray' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_UpdateMapIcons, CallFunc_Get_Threshold_Teams_NonThresholdTeamArray) == 0x000100, "Member 'BP_ThresholdMapRevealComponent_C_UpdateMapIcons::CallFunc_Get_Threshold_Teams_NonThresholdTeamArray' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_UpdateMapIcons, CallFunc_MakeVector2D_ReturnValue) == 0x000110, "Member 'BP_ThresholdMapRevealComponent_C_UpdateMapIcons::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_UpdateMapIcons, CallFunc_Map_Values_Values) == 0x000118, "Member 'BP_ThresholdMapRevealComponent_C_UpdateMapIcons::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_UpdateMapIcons, CallFunc_BreakVector2D_X) == 0x000128, "Member 'BP_ThresholdMapRevealComponent_C_UpdateMapIcons::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_UpdateMapIcons, CallFunc_BreakVector2D_Y) == 0x00012C, "Member 'BP_ThresholdMapRevealComponent_C_UpdateMapIcons::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_UpdateMapIcons, CallFunc_Array_Get_Item) == 0x000130, "Member 'BP_ThresholdMapRevealComponent_C_UpdateMapIcons::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_UpdateMapIcons, CallFunc_GetPlayerLocationOffset_ValueX) == 0x000158, "Member 'BP_ThresholdMapRevealComponent_C_UpdateMapIcons::CallFunc_GetPlayerLocationOffset_ValueX' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_UpdateMapIcons, CallFunc_GetPlayerLocationOffset_ValueY) == 0x00015C, "Member 'BP_ThresholdMapRevealComponent_C_UpdateMapIcons::CallFunc_GetPlayerLocationOffset_ValueY' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_UpdateMapIcons, CallFunc_GetPlayerLocationOffset_ValueZ) == 0x000160, "Member 'BP_ThresholdMapRevealComponent_C_UpdateMapIcons::CallFunc_GetPlayerLocationOffset_ValueZ' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_UpdateMapIcons, K2Node_MakeStruct_Vector_NetQuantize) == 0x000164, "Member 'BP_ThresholdMapRevealComponent_C_UpdateMapIcons::K2Node_MakeStruct_Vector_NetQuantize' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_UpdateMapIcons, CallFunc_Array_Length_ReturnValue) == 0x000170, "Member 'BP_ThresholdMapRevealComponent_C_UpdateMapIcons::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_UpdateMapIcons, K2Node_MakeStruct_CAMapEntityPayload) == 0x000178, "Member 'BP_ThresholdMapRevealComponent_C_UpdateMapIcons::K2Node_MakeStruct_CAMapEntityPayload' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_UpdateMapIcons, CallFunc_Less_IntInt_ReturnValue) == 0x0001E8, "Member 'BP_ThresholdMapRevealComponent_C_UpdateMapIcons::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_ThresholdMapRevealComponent.BP_ThresholdMapRevealComponent_C.GetAllTeamsExceptPlayerStateTeam
// 0x0040 (0x0040 - 0x0000)
struct BP_ThresholdMapRevealComponent_C_GetAllTeamsExceptPlayerStateTeam final
{
public:
	class ACAPlayerState*                         PlayerState;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCATeamID>                      TeamsIdArray;                                      // 0x0008(0x0010)(Parm, OutParm)
	TArray<struct FCATeamID>                      TeamsToNotify;                                     // 0x0018(0x0010)(Edit, BlueprintVisible)
	struct FCATeamID                              CallFunc_GetTeamID_ReturnValue;                    // 0x0028(0x0004)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FCATeamID>                      CallFunc_GetAllTeams_ReturnValue;                  // 0x0030(0x0010)(ReferenceParm)
};
static_assert(alignof(BP_ThresholdMapRevealComponent_C_GetAllTeamsExceptPlayerStateTeam) == 0x000008, "Wrong alignment on BP_ThresholdMapRevealComponent_C_GetAllTeamsExceptPlayerStateTeam");
static_assert(sizeof(BP_ThresholdMapRevealComponent_C_GetAllTeamsExceptPlayerStateTeam) == 0x000040, "Wrong size on BP_ThresholdMapRevealComponent_C_GetAllTeamsExceptPlayerStateTeam");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_GetAllTeamsExceptPlayerStateTeam, PlayerState) == 0x000000, "Member 'BP_ThresholdMapRevealComponent_C_GetAllTeamsExceptPlayerStateTeam::PlayerState' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_GetAllTeamsExceptPlayerStateTeam, TeamsIdArray) == 0x000008, "Member 'BP_ThresholdMapRevealComponent_C_GetAllTeamsExceptPlayerStateTeam::TeamsIdArray' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_GetAllTeamsExceptPlayerStateTeam, TeamsToNotify) == 0x000018, "Member 'BP_ThresholdMapRevealComponent_C_GetAllTeamsExceptPlayerStateTeam::TeamsToNotify' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_GetAllTeamsExceptPlayerStateTeam, CallFunc_GetTeamID_ReturnValue) == 0x000028, "Member 'BP_ThresholdMapRevealComponent_C_GetAllTeamsExceptPlayerStateTeam::CallFunc_GetTeamID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_GetAllTeamsExceptPlayerStateTeam, CallFunc_Array_RemoveItem_ReturnValue) == 0x00002C, "Member 'BP_ThresholdMapRevealComponent_C_GetAllTeamsExceptPlayerStateTeam::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_GetAllTeamsExceptPlayerStateTeam, CallFunc_GetAllTeams_ReturnValue) == 0x000030, "Member 'BP_ThresholdMapRevealComponent_C_GetAllTeamsExceptPlayerStateTeam::CallFunc_GetAllTeams_ReturnValue' has a wrong offset!");

// Function BP_ThresholdMapRevealComponent.BP_ThresholdMapRevealComponent_C.OnLootUpdated
// 0x0168 (0x0168 - 0x0000)
struct BP_ThresholdMapRevealComponent_C_OnLootUpdated final
{
public:
	struct FTeamData                              TeamData;                                          // 0x0000(0x0030)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	class ACAPlayerState*                         MVPPlayerState;                                    // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACAPlayerState*                         CallFunc_GetMVPForTeam_ReturnValue;                // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ACAPlayerState*>                 K2Node_MakeArray_Array;                            // 0x0050(0x0010)(ReferenceParm)
	TArray<struct FCATeamID>                      CallFunc_GetAllTeamsExceptPlayerStateTeam_TeamsIdArray; // 0x0060(0x0010)(ReferenceParm)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACAGameState*                           CallFunc_GetGameState_ReturnValue;                 // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FTeamMember>                    CallFunc_GetTeamMembers_members;                   // 0x0080(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTeamMember                            CallFunc_Array_Get_Item;                           // 0x0098(0x00C8)()
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ThresholdMapRevealComponent_C_OnLootUpdated) == 0x000008, "Wrong alignment on BP_ThresholdMapRevealComponent_C_OnLootUpdated");
static_assert(sizeof(BP_ThresholdMapRevealComponent_C_OnLootUpdated) == 0x000168, "Wrong size on BP_ThresholdMapRevealComponent_C_OnLootUpdated");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_OnLootUpdated, TeamData) == 0x000000, "Member 'BP_ThresholdMapRevealComponent_C_OnLootUpdated::TeamData' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_OnLootUpdated, MVPPlayerState) == 0x000030, "Member 'BP_ThresholdMapRevealComponent_C_OnLootUpdated::MVPPlayerState' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_OnLootUpdated, Temp_int_Array_Index_Variable) == 0x000038, "Member 'BP_ThresholdMapRevealComponent_C_OnLootUpdated::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_OnLootUpdated, CallFunc_GetMVPForTeam_ReturnValue) == 0x000040, "Member 'BP_ThresholdMapRevealComponent_C_OnLootUpdated::CallFunc_GetMVPForTeam_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_OnLootUpdated, Temp_int_Loop_Counter_Variable) == 0x000048, "Member 'BP_ThresholdMapRevealComponent_C_OnLootUpdated::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_OnLootUpdated, CallFunc_Add_IntInt_ReturnValue) == 0x00004C, "Member 'BP_ThresholdMapRevealComponent_C_OnLootUpdated::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_OnLootUpdated, K2Node_MakeArray_Array) == 0x000050, "Member 'BP_ThresholdMapRevealComponent_C_OnLootUpdated::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_OnLootUpdated, CallFunc_GetAllTeamsExceptPlayerStateTeam_TeamsIdArray) == 0x000060, "Member 'BP_ThresholdMapRevealComponent_C_OnLootUpdated::CallFunc_GetAllTeamsExceptPlayerStateTeam_TeamsIdArray' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_OnLootUpdated, K2Node_SwitchEnum_CmpSuccess) == 0x000070, "Member 'BP_ThresholdMapRevealComponent_C_OnLootUpdated::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_OnLootUpdated, CallFunc_GetGameState_ReturnValue) == 0x000078, "Member 'BP_ThresholdMapRevealComponent_C_OnLootUpdated::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_OnLootUpdated, CallFunc_GetTeamMembers_members) == 0x000080, "Member 'BP_ThresholdMapRevealComponent_C_OnLootUpdated::CallFunc_GetTeamMembers_members' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_OnLootUpdated, CallFunc_Array_Length_ReturnValue) == 0x000090, "Member 'BP_ThresholdMapRevealComponent_C_OnLootUpdated::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_OnLootUpdated, CallFunc_Array_Get_Item) == 0x000098, "Member 'BP_ThresholdMapRevealComponent_C_OnLootUpdated::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_OnLootUpdated, CallFunc_Less_IntInt_ReturnValue) == 0x000160, "Member 'BP_ThresholdMapRevealComponent_C_OnLootUpdated::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_ThresholdMapRevealComponent.BP_ThresholdMapRevealComponent_C.GetMVPSafe
// 0x0128 (0x0128 - 0x0000)
struct BP_ThresholdMapRevealComponent_C_GetMVPSafe final
{
public:
	struct FCATeamID                              Team_id;                                           // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACAPlayerState*                         ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACAPlayerState*                         TempPlayerState;                                   // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LowestPlayerId;                                    // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACAPlayerState*                         CallFunc_GetMVPForTeam_ReturnValue;                // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsKilled_ReturnValue;                     // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F[0x1];                                       // 0x002F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACAGameState*                           CallFunc_GetGameState_ReturnValue;                 // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FTeamMember>                    CallFunc_GetAllTeamMembers_ReturnValue;            // 0x0040(0x0010)(ConstParm, ReferenceParm)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTeamMember                            CallFunc_Array_Get_Item;                           // 0x0058(0x00C8)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0124(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x0125(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_TeamIDTeamID_ReturnValue;      // 0x0126(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ThresholdMapRevealComponent_C_GetMVPSafe) == 0x000008, "Wrong alignment on BP_ThresholdMapRevealComponent_C_GetMVPSafe");
static_assert(sizeof(BP_ThresholdMapRevealComponent_C_GetMVPSafe) == 0x000128, "Wrong size on BP_ThresholdMapRevealComponent_C_GetMVPSafe");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_GetMVPSafe, Team_id) == 0x000000, "Member 'BP_ThresholdMapRevealComponent_C_GetMVPSafe::Team_id' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_GetMVPSafe, ReturnValue) == 0x000008, "Member 'BP_ThresholdMapRevealComponent_C_GetMVPSafe::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_GetMVPSafe, TempPlayerState) == 0x000010, "Member 'BP_ThresholdMapRevealComponent_C_GetMVPSafe::TempPlayerState' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_GetMVPSafe, LowestPlayerId) == 0x000018, "Member 'BP_ThresholdMapRevealComponent_C_GetMVPSafe::LowestPlayerId' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_GetMVPSafe, CallFunc_GetMVPForTeam_ReturnValue) == 0x000020, "Member 'BP_ThresholdMapRevealComponent_C_GetMVPSafe::CallFunc_GetMVPForTeam_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_GetMVPSafe, Temp_int_Array_Index_Variable) == 0x000028, "Member 'BP_ThresholdMapRevealComponent_C_GetMVPSafe::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_GetMVPSafe, CallFunc_IsValid_ReturnValue) == 0x00002C, "Member 'BP_ThresholdMapRevealComponent_C_GetMVPSafe::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_GetMVPSafe, CallFunc_IsKilled_ReturnValue) == 0x00002D, "Member 'BP_ThresholdMapRevealComponent_C_GetMVPSafe::CallFunc_IsKilled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_GetMVPSafe, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00002E, "Member 'BP_ThresholdMapRevealComponent_C_GetMVPSafe::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_GetMVPSafe, Temp_int_Loop_Counter_Variable) == 0x000030, "Member 'BP_ThresholdMapRevealComponent_C_GetMVPSafe::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_GetMVPSafe, CallFunc_GetGameState_ReturnValue) == 0x000038, "Member 'BP_ThresholdMapRevealComponent_C_GetMVPSafe::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_GetMVPSafe, CallFunc_GetAllTeamMembers_ReturnValue) == 0x000040, "Member 'BP_ThresholdMapRevealComponent_C_GetMVPSafe::CallFunc_GetAllTeamMembers_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_GetMVPSafe, CallFunc_Add_IntInt_ReturnValue) == 0x000050, "Member 'BP_ThresholdMapRevealComponent_C_GetMVPSafe::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_GetMVPSafe, CallFunc_Array_Get_Item) == 0x000058, "Member 'BP_ThresholdMapRevealComponent_C_GetMVPSafe::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_GetMVPSafe, CallFunc_Array_Length_ReturnValue) == 0x000120, "Member 'BP_ThresholdMapRevealComponent_C_GetMVPSafe::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_GetMVPSafe, CallFunc_Less_IntInt_ReturnValue) == 0x000124, "Member 'BP_ThresholdMapRevealComponent_C_GetMVPSafe::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_GetMVPSafe, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x000125, "Member 'BP_ThresholdMapRevealComponent_C_GetMVPSafe::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_GetMVPSafe, CallFunc_EqualEqual_TeamIDTeamID_ReturnValue) == 0x000126, "Member 'BP_ThresholdMapRevealComponent_C_GetMVPSafe::CallFunc_EqualEqual_TeamIDTeamID_ReturnValue' has a wrong offset!");

// Function BP_ThresholdMapRevealComponent.BP_ThresholdMapRevealComponent_C.CheckForThresholdRevealPlayerUpdate
// 0x0228 (0x0228 - 0x0000)
struct BP_ThresholdMapRevealComponent_C_CheckForThresholdRevealPlayerUpdate final
{
public:
	TArray<struct FCATeamID>                      TeamsToNotify;                                     // 0x0000(0x0010)(Edit, BlueprintVisible)
	struct FBPS_MapRevealData                     CashedMapRevealData;                               // 0x0010(0x0028)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TArray<struct FCATeamID>                      ArrayOfTeamsToRemoveFromDisplayedTeamsMap;         // 0x0038(0x0010)(Edit, BlueprintVisible)
	TArray<struct FCATeamID>                      NonThresholdTeamsArray;                            // 0x0048(0x0010)(Edit, BlueprintVisible)
	TArray<struct FCATeamID>                      ThresholdTeamsArray;                               // 0x0058(0x0010)(Edit, BlueprintVisible)
	class ACAPlayerState*                         CashedMVPPlayerState;                              // 0x0068(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCATeamID                              CashedTeamId;                                      // 0x0070(0x0004)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCATeamID>                      CallFunc_Get_Threshold_Teams_ThresholdTeamArray;   // 0x0090(0x0010)(ReferenceParm)
	TArray<struct FCATeamID>                      CallFunc_Get_Threshold_Teams_NonThresholdTeamArray; // 0x00A0(0x0010)(ReferenceParm)
	class ACAGameState*                           CallFunc_GetGameState_ReturnValue;                 // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCATeamID>                      CallFunc_GetAllTeams_teams;                        // 0x00B8(0x0010)(ReferenceParm)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBPS_MapRevealData                     K2Node_MakeStruct_BPS_MapRevealData;               // 0x00D0(0x0028)(HasGetValueTypeHash)
	class ACAPlayerState*                         CallFunc_GetMVPSafe_ReturnValue;                   // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ACAPlayerState*>                 K2Node_MakeArray_Array;                            // 0x0100(0x0010)(ReferenceParm)
	bool                                          CallFunc_AreArraysTheSame_AreTheSame;              // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_112[0x6];                                      // 0x0112(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ACAPlayerState*>                 K2Node_MakeArray_Array_1;                          // 0x0118(0x0010)(ReferenceParm)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_129[0x7];                                      // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBPS_MapRevealData                     CallFunc_Map_Find_Value;                           // 0x0130(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_159[0x3];                                      // 0x0159(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCATeamID                              CallFunc_Array_Get_Item;                           // 0x015C(0x0004)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Remove_ReturnValue;                   // 0x0164(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_165[0x3];                                      // 0x0165(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBPS_MapRevealData                     CallFunc_Map_Find_Value_1;                         // 0x0168(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_191[0x7];                                      // 0x0191(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACAGameState*                           CallFunc_GetGameState_ReturnValue_1;               // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCATeamID>                      CallFunc_Map_Keys_Keys;                            // 0x01A0(0x0010)(ReferenceParm)
	struct FCATeamID                              CallFunc_Array_Get_Item_1;                         // 0x01B0(0x0004)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasTeamReachedThreshold_ReturnValue;      // 0x01BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1BE[0x2];                                      // 0x01BE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ACAPlayerState*                         CallFunc_GetMVPSafe_ReturnValue_1;                 // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ACAPlayerState*>                 K2Node_MakeArray_Array_2;                          // 0x01C8(0x0010)(ReferenceParm)
	struct FCATeamID                              CallFunc_Array_Get_Item_2;                         // 0x01D8(0x0004)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACAGameState*                           CallFunc_GetGameState_ReturnValue_2;               // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAnyTeamEverReachedThreshold_ReturnValue; // 0x01E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1EA[0x2];                                      // 0x01EA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F1[0x3];                                      // 0x01F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x01F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBPS_MapRevealData                     CallFunc_Map_Find_Value_2;                         // 0x01F8(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_2;                   // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ThresholdMapRevealComponent_C_CheckForThresholdRevealPlayerUpdate) == 0x000008, "Wrong alignment on BP_ThresholdMapRevealComponent_C_CheckForThresholdRevealPlayerUpdate");
static_assert(sizeof(BP_ThresholdMapRevealComponent_C_CheckForThresholdRevealPlayerUpdate) == 0x000228, "Wrong size on BP_ThresholdMapRevealComponent_C_CheckForThresholdRevealPlayerUpdate");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_CheckForThresholdRevealPlayerUpdate, TeamsToNotify) == 0x000000, "Member 'BP_ThresholdMapRevealComponent_C_CheckForThresholdRevealPlayerUpdate::TeamsToNotify' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_CheckForThresholdRevealPlayerUpdate, CashedMapRevealData) == 0x000010, "Member 'BP_ThresholdMapRevealComponent_C_CheckForThresholdRevealPlayerUpdate::CashedMapRevealData' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_CheckForThresholdRevealPlayerUpdate, ArrayOfTeamsToRemoveFromDisplayedTeamsMap) == 0x000038, "Member 'BP_ThresholdMapRevealComponent_C_CheckForThresholdRevealPlayerUpdate::ArrayOfTeamsToRemoveFromDisplayedTeamsMap' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_CheckForThresholdRevealPlayerUpdate, NonThresholdTeamsArray) == 0x000048, "Member 'BP_ThresholdMapRevealComponent_C_CheckForThresholdRevealPlayerUpdate::NonThresholdTeamsArray' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_CheckForThresholdRevealPlayerUpdate, ThresholdTeamsArray) == 0x000058, "Member 'BP_ThresholdMapRevealComponent_C_CheckForThresholdRevealPlayerUpdate::ThresholdTeamsArray' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_CheckForThresholdRevealPlayerUpdate, CashedMVPPlayerState) == 0x000068, "Member 'BP_ThresholdMapRevealComponent_C_CheckForThresholdRevealPlayerUpdate::CashedMVPPlayerState' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_CheckForThresholdRevealPlayerUpdate, CashedTeamId) == 0x000070, "Member 'BP_ThresholdMapRevealComponent_C_CheckForThresholdRevealPlayerUpdate::CashedTeamId' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_CheckForThresholdRevealPlayerUpdate, Temp_int_Array_Index_Variable) == 0x000074, "Member 'BP_ThresholdMapRevealComponent_C_CheckForThresholdRevealPlayerUpdate::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_CheckForThresholdRevealPlayerUpdate, Temp_int_Loop_Counter_Variable) == 0x000078, "Member 'BP_ThresholdMapRevealComponent_C_CheckForThresholdRevealPlayerUpdate::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_CheckForThresholdRevealPlayerUpdate, Temp_int_Loop_Counter_Variable_1) == 0x00007C, "Member 'BP_ThresholdMapRevealComponent_C_CheckForThresholdRevealPlayerUpdate::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_CheckForThresholdRevealPlayerUpdate, CallFunc_Add_IntInt_ReturnValue) == 0x000080, "Member 'BP_ThresholdMapRevealComponent_C_CheckForThresholdRevealPlayerUpdate::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_CheckForThresholdRevealPlayerUpdate, CallFunc_Add_IntInt_ReturnValue_1) == 0x000084, "Member 'BP_ThresholdMapRevealComponent_C_CheckForThresholdRevealPlayerUpdate::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_CheckForThresholdRevealPlayerUpdate, Temp_int_Array_Index_Variable_1) == 0x000088, "Member 'BP_ThresholdMapRevealComponent_C_CheckForThresholdRevealPlayerUpdate::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_CheckForThresholdRevealPlayerUpdate, Temp_int_Array_Index_Variable_2) == 0x00008C, "Member 'BP_ThresholdMapRevealComponent_C_CheckForThresholdRevealPlayerUpdate::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_CheckForThresholdRevealPlayerUpdate, CallFunc_Get_Threshold_Teams_ThresholdTeamArray) == 0x000090, "Member 'BP_ThresholdMapRevealComponent_C_CheckForThresholdRevealPlayerUpdate::CallFunc_Get_Threshold_Teams_ThresholdTeamArray' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_CheckForThresholdRevealPlayerUpdate, CallFunc_Get_Threshold_Teams_NonThresholdTeamArray) == 0x0000A0, "Member 'BP_ThresholdMapRevealComponent_C_CheckForThresholdRevealPlayerUpdate::CallFunc_Get_Threshold_Teams_NonThresholdTeamArray' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_CheckForThresholdRevealPlayerUpdate, CallFunc_GetGameState_ReturnValue) == 0x0000B0, "Member 'BP_ThresholdMapRevealComponent_C_CheckForThresholdRevealPlayerUpdate::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_CheckForThresholdRevealPlayerUpdate, CallFunc_GetAllTeams_teams) == 0x0000B8, "Member 'BP_ThresholdMapRevealComponent_C_CheckForThresholdRevealPlayerUpdate::CallFunc_GetAllTeams_teams' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_CheckForThresholdRevealPlayerUpdate, K2Node_SwitchEnum_CmpSuccess) == 0x0000C8, "Member 'BP_ThresholdMapRevealComponent_C_CheckForThresholdRevealPlayerUpdate::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_CheckForThresholdRevealPlayerUpdate, K2Node_MakeStruct_BPS_MapRevealData) == 0x0000D0, "Member 'BP_ThresholdMapRevealComponent_C_CheckForThresholdRevealPlayerUpdate::K2Node_MakeStruct_BPS_MapRevealData' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_CheckForThresholdRevealPlayerUpdate, CallFunc_GetMVPSafe_ReturnValue) == 0x0000F8, "Member 'BP_ThresholdMapRevealComponent_C_CheckForThresholdRevealPlayerUpdate::CallFunc_GetMVPSafe_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_CheckForThresholdRevealPlayerUpdate, K2Node_MakeArray_Array) == 0x000100, "Member 'BP_ThresholdMapRevealComponent_C_CheckForThresholdRevealPlayerUpdate::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_CheckForThresholdRevealPlayerUpdate, CallFunc_AreArraysTheSame_AreTheSame) == 0x000110, "Member 'BP_ThresholdMapRevealComponent_C_CheckForThresholdRevealPlayerUpdate::CallFunc_AreArraysTheSame_AreTheSame' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_CheckForThresholdRevealPlayerUpdate, CallFunc_IsValid_ReturnValue) == 0x000111, "Member 'BP_ThresholdMapRevealComponent_C_CheckForThresholdRevealPlayerUpdate::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_CheckForThresholdRevealPlayerUpdate, K2Node_MakeArray_Array_1) == 0x000118, "Member 'BP_ThresholdMapRevealComponent_C_CheckForThresholdRevealPlayerUpdate::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_CheckForThresholdRevealPlayerUpdate, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000128, "Member 'BP_ThresholdMapRevealComponent_C_CheckForThresholdRevealPlayerUpdate::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_CheckForThresholdRevealPlayerUpdate, CallFunc_Map_Find_Value) == 0x000130, "Member 'BP_ThresholdMapRevealComponent_C_CheckForThresholdRevealPlayerUpdate::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_CheckForThresholdRevealPlayerUpdate, CallFunc_Map_Find_ReturnValue) == 0x000158, "Member 'BP_ThresholdMapRevealComponent_C_CheckForThresholdRevealPlayerUpdate::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_CheckForThresholdRevealPlayerUpdate, CallFunc_Array_Get_Item) == 0x00015C, "Member 'BP_ThresholdMapRevealComponent_C_CheckForThresholdRevealPlayerUpdate::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_CheckForThresholdRevealPlayerUpdate, CallFunc_Array_Length_ReturnValue) == 0x000160, "Member 'BP_ThresholdMapRevealComponent_C_CheckForThresholdRevealPlayerUpdate::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_CheckForThresholdRevealPlayerUpdate, CallFunc_Map_Remove_ReturnValue) == 0x000164, "Member 'BP_ThresholdMapRevealComponent_C_CheckForThresholdRevealPlayerUpdate::CallFunc_Map_Remove_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_CheckForThresholdRevealPlayerUpdate, CallFunc_Map_Find_Value_1) == 0x000168, "Member 'BP_ThresholdMapRevealComponent_C_CheckForThresholdRevealPlayerUpdate::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_CheckForThresholdRevealPlayerUpdate, CallFunc_Map_Find_ReturnValue_1) == 0x000190, "Member 'BP_ThresholdMapRevealComponent_C_CheckForThresholdRevealPlayerUpdate::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_CheckForThresholdRevealPlayerUpdate, CallFunc_GetGameState_ReturnValue_1) == 0x000198, "Member 'BP_ThresholdMapRevealComponent_C_CheckForThresholdRevealPlayerUpdate::CallFunc_GetGameState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_CheckForThresholdRevealPlayerUpdate, CallFunc_Map_Keys_Keys) == 0x0001A0, "Member 'BP_ThresholdMapRevealComponent_C_CheckForThresholdRevealPlayerUpdate::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_CheckForThresholdRevealPlayerUpdate, CallFunc_Array_Get_Item_1) == 0x0001B0, "Member 'BP_ThresholdMapRevealComponent_C_CheckForThresholdRevealPlayerUpdate::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_CheckForThresholdRevealPlayerUpdate, CallFunc_Array_Length_ReturnValue_1) == 0x0001B4, "Member 'BP_ThresholdMapRevealComponent_C_CheckForThresholdRevealPlayerUpdate::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_CheckForThresholdRevealPlayerUpdate, CallFunc_Array_AddUnique_ReturnValue) == 0x0001B8, "Member 'BP_ThresholdMapRevealComponent_C_CheckForThresholdRevealPlayerUpdate::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_CheckForThresholdRevealPlayerUpdate, CallFunc_Less_IntInt_ReturnValue) == 0x0001BC, "Member 'BP_ThresholdMapRevealComponent_C_CheckForThresholdRevealPlayerUpdate::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_CheckForThresholdRevealPlayerUpdate, CallFunc_HasTeamReachedThreshold_ReturnValue) == 0x0001BD, "Member 'BP_ThresholdMapRevealComponent_C_CheckForThresholdRevealPlayerUpdate::CallFunc_HasTeamReachedThreshold_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_CheckForThresholdRevealPlayerUpdate, CallFunc_GetMVPSafe_ReturnValue_1) == 0x0001C0, "Member 'BP_ThresholdMapRevealComponent_C_CheckForThresholdRevealPlayerUpdate::CallFunc_GetMVPSafe_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_CheckForThresholdRevealPlayerUpdate, K2Node_MakeArray_Array_2) == 0x0001C8, "Member 'BP_ThresholdMapRevealComponent_C_CheckForThresholdRevealPlayerUpdate::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_CheckForThresholdRevealPlayerUpdate, CallFunc_Array_Get_Item_2) == 0x0001D8, "Member 'BP_ThresholdMapRevealComponent_C_CheckForThresholdRevealPlayerUpdate::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_CheckForThresholdRevealPlayerUpdate, CallFunc_Array_Length_ReturnValue_2) == 0x0001DC, "Member 'BP_ThresholdMapRevealComponent_C_CheckForThresholdRevealPlayerUpdate::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_CheckForThresholdRevealPlayerUpdate, CallFunc_GetGameState_ReturnValue_2) == 0x0001E0, "Member 'BP_ThresholdMapRevealComponent_C_CheckForThresholdRevealPlayerUpdate::CallFunc_GetGameState_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_CheckForThresholdRevealPlayerUpdate, CallFunc_Less_IntInt_ReturnValue_1) == 0x0001E8, "Member 'BP_ThresholdMapRevealComponent_C_CheckForThresholdRevealPlayerUpdate::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_CheckForThresholdRevealPlayerUpdate, CallFunc_HasAnyTeamEverReachedThreshold_ReturnValue) == 0x0001E9, "Member 'BP_ThresholdMapRevealComponent_C_CheckForThresholdRevealPlayerUpdate::CallFunc_HasAnyTeamEverReachedThreshold_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_CheckForThresholdRevealPlayerUpdate, Temp_int_Loop_Counter_Variable_2) == 0x0001EC, "Member 'BP_ThresholdMapRevealComponent_C_CheckForThresholdRevealPlayerUpdate::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_CheckForThresholdRevealPlayerUpdate, CallFunc_Less_IntInt_ReturnValue_2) == 0x0001F0, "Member 'BP_ThresholdMapRevealComponent_C_CheckForThresholdRevealPlayerUpdate::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_CheckForThresholdRevealPlayerUpdate, CallFunc_Add_IntInt_ReturnValue_2) == 0x0001F4, "Member 'BP_ThresholdMapRevealComponent_C_CheckForThresholdRevealPlayerUpdate::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_CheckForThresholdRevealPlayerUpdate, CallFunc_Map_Find_Value_2) == 0x0001F8, "Member 'BP_ThresholdMapRevealComponent_C_CheckForThresholdRevealPlayerUpdate::CallFunc_Map_Find_Value_2' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_CheckForThresholdRevealPlayerUpdate, CallFunc_Map_Find_ReturnValue_2) == 0x000220, "Member 'BP_ThresholdMapRevealComponent_C_CheckForThresholdRevealPlayerUpdate::CallFunc_Map_Find_ReturnValue_2' has a wrong offset!");

// Function BP_ThresholdMapRevealComponent.BP_ThresholdMapRevealComponent_C.GetTeamsToNotify
// 0x0060 (0x0060 - 0x0000)
struct BP_ThresholdMapRevealComponent_C_GetTeamsToNotify final
{
public:
	class ACAPlayerState*                         PlayerState;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCATeamID>                      TeamsIdArray;                                      // 0x0008(0x0010)(Parm, OutParm)
	TArray<struct FCATeamID>                      TeamsToNotify;                                     // 0x0018(0x0010)(Edit, BlueprintVisible)
	struct FCATeamID                              CallFunc_GetTeamID_ReturnValue;                    // 0x0028(0x0004)(NoDestructor, HasGetValueTypeHash)
	struct FCATeamID                              CallFunc_GetTeamID_ReturnValue_1;                  // 0x002C(0x0004)(NoDestructor, HasGetValueTypeHash)
	TArray<struct FCATeamID>                      K2Node_MakeArray_Array;                            // 0x0030(0x0010)(ReferenceParm)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FCATeamID>                      CallFunc_GetAllTeams_ReturnValue;                  // 0x0048(0x0010)(ReferenceParm)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ThresholdMapRevealComponent_C_GetTeamsToNotify) == 0x000008, "Wrong alignment on BP_ThresholdMapRevealComponent_C_GetTeamsToNotify");
static_assert(sizeof(BP_ThresholdMapRevealComponent_C_GetTeamsToNotify) == 0x000060, "Wrong size on BP_ThresholdMapRevealComponent_C_GetTeamsToNotify");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_GetTeamsToNotify, PlayerState) == 0x000000, "Member 'BP_ThresholdMapRevealComponent_C_GetTeamsToNotify::PlayerState' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_GetTeamsToNotify, TeamsIdArray) == 0x000008, "Member 'BP_ThresholdMapRevealComponent_C_GetTeamsToNotify::TeamsIdArray' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_GetTeamsToNotify, TeamsToNotify) == 0x000018, "Member 'BP_ThresholdMapRevealComponent_C_GetTeamsToNotify::TeamsToNotify' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_GetTeamsToNotify, CallFunc_GetTeamID_ReturnValue) == 0x000028, "Member 'BP_ThresholdMapRevealComponent_C_GetTeamsToNotify::CallFunc_GetTeamID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_GetTeamsToNotify, CallFunc_GetTeamID_ReturnValue_1) == 0x00002C, "Member 'BP_ThresholdMapRevealComponent_C_GetTeamsToNotify::CallFunc_GetTeamID_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_GetTeamsToNotify, K2Node_MakeArray_Array) == 0x000030, "Member 'BP_ThresholdMapRevealComponent_C_GetTeamsToNotify::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_GetTeamsToNotify, CallFunc_Array_RemoveItem_ReturnValue) == 0x000040, "Member 'BP_ThresholdMapRevealComponent_C_GetTeamsToNotify::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_GetTeamsToNotify, CallFunc_GetAllTeams_ReturnValue) == 0x000048, "Member 'BP_ThresholdMapRevealComponent_C_GetTeamsToNotify::CallFunc_GetAllTeams_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_GetTeamsToNotify, K2Node_SwitchEnum_CmpSuccess) == 0x000058, "Member 'BP_ThresholdMapRevealComponent_C_GetTeamsToNotify::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_ThresholdMapRevealComponent.BP_ThresholdMapRevealComponent_C.Get Threshold Teams
// 0x0088 (0x0088 - 0x0000)
struct BP_ThresholdMapRevealComponent_C_Get_Threshold_Teams final
{
public:
	TArray<struct FCATeamID>                      ThresholdTeamArray;                                // 0x0000(0x0010)(Parm, OutParm)
	TArray<struct FCATeamID>                      NonThresholdTeamArray;                             // 0x0010(0x0010)(Parm, OutParm)
	TArray<struct FCATeamID>                      LocalNonThresholdTeamArray;                        // 0x0020(0x0010)(Edit, BlueprintVisible)
	TArray<struct FCATeamID>                      LocalThresholdTeamArray;                           // 0x0030(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACAGameState*                           CallFunc_GetGameState_ReturnValue;                 // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACAGameState*                           CallFunc_GetGameState_ReturnValue_1;               // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCATeamID>                      CallFunc_GetAllTeams_teams;                        // 0x0060(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCATeamID                              CallFunc_Array_Get_Item;                           // 0x0074(0x0004)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue_1;            // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasTeamReachedThreshold_ReturnValue;      // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ThresholdMapRevealComponent_C_Get_Threshold_Teams) == 0x000008, "Wrong alignment on BP_ThresholdMapRevealComponent_C_Get_Threshold_Teams");
static_assert(sizeof(BP_ThresholdMapRevealComponent_C_Get_Threshold_Teams) == 0x000088, "Wrong size on BP_ThresholdMapRevealComponent_C_Get_Threshold_Teams");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_Get_Threshold_Teams, ThresholdTeamArray) == 0x000000, "Member 'BP_ThresholdMapRevealComponent_C_Get_Threshold_Teams::ThresholdTeamArray' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_Get_Threshold_Teams, NonThresholdTeamArray) == 0x000010, "Member 'BP_ThresholdMapRevealComponent_C_Get_Threshold_Teams::NonThresholdTeamArray' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_Get_Threshold_Teams, LocalNonThresholdTeamArray) == 0x000020, "Member 'BP_ThresholdMapRevealComponent_C_Get_Threshold_Teams::LocalNonThresholdTeamArray' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_Get_Threshold_Teams, LocalThresholdTeamArray) == 0x000030, "Member 'BP_ThresholdMapRevealComponent_C_Get_Threshold_Teams::LocalThresholdTeamArray' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_Get_Threshold_Teams, Temp_int_Array_Index_Variable) == 0x000040, "Member 'BP_ThresholdMapRevealComponent_C_Get_Threshold_Teams::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_Get_Threshold_Teams, Temp_int_Loop_Counter_Variable) == 0x000044, "Member 'BP_ThresholdMapRevealComponent_C_Get_Threshold_Teams::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_Get_Threshold_Teams, CallFunc_Add_IntInt_ReturnValue) == 0x000048, "Member 'BP_ThresholdMapRevealComponent_C_Get_Threshold_Teams::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_Get_Threshold_Teams, CallFunc_GetGameState_ReturnValue) == 0x000050, "Member 'BP_ThresholdMapRevealComponent_C_Get_Threshold_Teams::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_Get_Threshold_Teams, CallFunc_GetGameState_ReturnValue_1) == 0x000058, "Member 'BP_ThresholdMapRevealComponent_C_Get_Threshold_Teams::CallFunc_GetGameState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_Get_Threshold_Teams, CallFunc_GetAllTeams_teams) == 0x000060, "Member 'BP_ThresholdMapRevealComponent_C_Get_Threshold_Teams::CallFunc_GetAllTeams_teams' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_Get_Threshold_Teams, CallFunc_Array_Length_ReturnValue) == 0x000070, "Member 'BP_ThresholdMapRevealComponent_C_Get_Threshold_Teams::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_Get_Threshold_Teams, CallFunc_Array_Get_Item) == 0x000074, "Member 'BP_ThresholdMapRevealComponent_C_Get_Threshold_Teams::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_Get_Threshold_Teams, CallFunc_Less_IntInt_ReturnValue) == 0x000078, "Member 'BP_ThresholdMapRevealComponent_C_Get_Threshold_Teams::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_Get_Threshold_Teams, CallFunc_Array_AddUnique_ReturnValue) == 0x00007C, "Member 'BP_ThresholdMapRevealComponent_C_Get_Threshold_Teams::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_Get_Threshold_Teams, CallFunc_Array_AddUnique_ReturnValue_1) == 0x000080, "Member 'BP_ThresholdMapRevealComponent_C_Get_Threshold_Teams::CallFunc_Array_AddUnique_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_Get_Threshold_Teams, CallFunc_HasTeamReachedThreshold_ReturnValue) == 0x000084, "Member 'BP_ThresholdMapRevealComponent_C_Get_Threshold_Teams::CallFunc_HasTeamReachedThreshold_ReturnValue' has a wrong offset!");

// Function BP_ThresholdMapRevealComponent.BP_ThresholdMapRevealComponent_C.GetPlayerStatesFromTeamMembers
// 0x0118 (0x0118 - 0x0000)
struct BP_ThresholdMapRevealComponent_C_GetPlayerStatesFromTeamMembers final
{
public:
	TArray<struct FTeamMember>                    TeamMemberArray;                                   // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<class ACAPlayerState*>                 PlayerStatesArray;                                 // 0x0010(0x0010)(Parm, OutParm)
	TArray<class ACAPlayerState*>                 PlayerStateArray;                                  // 0x0020(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTeamMember                            CallFunc_Array_Get_Item;                           // 0x0040(0x00C8)()
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_109[0x3];                                      // 0x0109(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ThresholdMapRevealComponent_C_GetPlayerStatesFromTeamMembers) == 0x000008, "Wrong alignment on BP_ThresholdMapRevealComponent_C_GetPlayerStatesFromTeamMembers");
static_assert(sizeof(BP_ThresholdMapRevealComponent_C_GetPlayerStatesFromTeamMembers) == 0x000118, "Wrong size on BP_ThresholdMapRevealComponent_C_GetPlayerStatesFromTeamMembers");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_GetPlayerStatesFromTeamMembers, TeamMemberArray) == 0x000000, "Member 'BP_ThresholdMapRevealComponent_C_GetPlayerStatesFromTeamMembers::TeamMemberArray' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_GetPlayerStatesFromTeamMembers, PlayerStatesArray) == 0x000010, "Member 'BP_ThresholdMapRevealComponent_C_GetPlayerStatesFromTeamMembers::PlayerStatesArray' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_GetPlayerStatesFromTeamMembers, PlayerStateArray) == 0x000020, "Member 'BP_ThresholdMapRevealComponent_C_GetPlayerStatesFromTeamMembers::PlayerStateArray' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_GetPlayerStatesFromTeamMembers, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BP_ThresholdMapRevealComponent_C_GetPlayerStatesFromTeamMembers::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_GetPlayerStatesFromTeamMembers, Temp_int_Array_Index_Variable) == 0x000034, "Member 'BP_ThresholdMapRevealComponent_C_GetPlayerStatesFromTeamMembers::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_GetPlayerStatesFromTeamMembers, Temp_int_Loop_Counter_Variable) == 0x000038, "Member 'BP_ThresholdMapRevealComponent_C_GetPlayerStatesFromTeamMembers::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_GetPlayerStatesFromTeamMembers, CallFunc_Array_Get_Item) == 0x000040, "Member 'BP_ThresholdMapRevealComponent_C_GetPlayerStatesFromTeamMembers::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_GetPlayerStatesFromTeamMembers, CallFunc_Less_IntInt_ReturnValue) == 0x000108, "Member 'BP_ThresholdMapRevealComponent_C_GetPlayerStatesFromTeamMembers::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_GetPlayerStatesFromTeamMembers, CallFunc_Add_IntInt_ReturnValue) == 0x00010C, "Member 'BP_ThresholdMapRevealComponent_C_GetPlayerStatesFromTeamMembers::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_GetPlayerStatesFromTeamMembers, CallFunc_Array_AddUnique_ReturnValue) == 0x000110, "Member 'BP_ThresholdMapRevealComponent_C_GetPlayerStatesFromTeamMembers::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");

// Function BP_ThresholdMapRevealComponent.BP_ThresholdMapRevealComponent_C.AreArraysTheSame
// 0x0050 (0x0050 - 0x0000)
struct BP_ThresholdMapRevealComponent_C_AreArraysTheSame final
{
public:
	TArray<struct FCATeamID>                      ArrayA;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<struct FCATeamID>                      ArrayB;                                            // 0x0010(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          AreTheSame;                                        // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          HasChanged;                                        // 0x0021(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x2];                                       // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCATeamID                              CallFunc_Array_Get_Item;                           // 0x0030(0x0004)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42[0x2];                                       // 0x0042(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ThresholdMapRevealComponent_C_AreArraysTheSame) == 0x000008, "Wrong alignment on BP_ThresholdMapRevealComponent_C_AreArraysTheSame");
static_assert(sizeof(BP_ThresholdMapRevealComponent_C_AreArraysTheSame) == 0x000050, "Wrong size on BP_ThresholdMapRevealComponent_C_AreArraysTheSame");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_AreArraysTheSame, ArrayA) == 0x000000, "Member 'BP_ThresholdMapRevealComponent_C_AreArraysTheSame::ArrayA' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_AreArraysTheSame, ArrayB) == 0x000010, "Member 'BP_ThresholdMapRevealComponent_C_AreArraysTheSame::ArrayB' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_AreArraysTheSame, AreTheSame) == 0x000020, "Member 'BP_ThresholdMapRevealComponent_C_AreArraysTheSame::AreTheSame' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_AreArraysTheSame, HasChanged) == 0x000021, "Member 'BP_ThresholdMapRevealComponent_C_AreArraysTheSame::HasChanged' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_AreArraysTheSame, Temp_int_Array_Index_Variable) == 0x000024, "Member 'BP_ThresholdMapRevealComponent_C_AreArraysTheSame::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_AreArraysTheSame, Temp_int_Loop_Counter_Variable) == 0x000028, "Member 'BP_ThresholdMapRevealComponent_C_AreArraysTheSame::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_AreArraysTheSame, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'BP_ThresholdMapRevealComponent_C_AreArraysTheSame::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_AreArraysTheSame, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_ThresholdMapRevealComponent_C_AreArraysTheSame::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_AreArraysTheSame, CallFunc_Array_Length_ReturnValue) == 0x000034, "Member 'BP_ThresholdMapRevealComponent_C_AreArraysTheSame::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_AreArraysTheSame, CallFunc_Array_Find_ReturnValue) == 0x000038, "Member 'BP_ThresholdMapRevealComponent_C_AreArraysTheSame::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_AreArraysTheSame, CallFunc_Array_Length_ReturnValue_1) == 0x00003C, "Member 'BP_ThresholdMapRevealComponent_C_AreArraysTheSame::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_AreArraysTheSame, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000040, "Member 'BP_ThresholdMapRevealComponent_C_AreArraysTheSame::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_AreArraysTheSame, CallFunc_Less_IntInt_ReturnValue) == 0x000041, "Member 'BP_ThresholdMapRevealComponent_C_AreArraysTheSame::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_AreArraysTheSame, CallFunc_Array_Length_ReturnValue_2) == 0x000044, "Member 'BP_ThresholdMapRevealComponent_C_AreArraysTheSame::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ThresholdMapRevealComponent_C_AreArraysTheSame, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000048, "Member 'BP_ThresholdMapRevealComponent_C_AreArraysTheSame::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");

}

