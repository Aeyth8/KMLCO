#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_EliteTank_TP_01

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Keaton_structs.hpp"
#include "Keaton_classes.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_EliteTank_TP_01.ABP_EliteTank_TP_01_C
// 0x40D0 (0x44E0 - 0x0410)
class UABP_EliteTank_TP_01_C final : public UCAAnimInstance_NPC
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0410(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_3;                    // 0x0418(0x0158)()
	struct FAnimNode_RotateRootBone               AnimGraphNode_RotateRootBone_3;                    // 0x0570(0x00E0)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_6;                  // 0x0650(0x00E8)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_3;                              // 0x0738(0x00E8)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_2;                              // 0x0820(0x00E8)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive;                       // 0x0908(0x00D0)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_1;                              // 0x09D8(0x00E8)()
	struct FAnimNode_RefPose                      AnimGraphNode_IdentityPose;                        // 0x0AC0(0x0018)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_36;                 // 0x0AD8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_35;                 // 0x0B00(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_34;                 // 0x0B28(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_33;                 // 0x0B50(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_32;                 // 0x0B78(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_31;                 // 0x0BA0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_30;                 // 0x0BC8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_29;                 // 0x0BF0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_28;                 // 0x0C18(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_27;                 // 0x0C40(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_26;                 // 0x0C68(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_25;                 // 0x0C90(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_24;                 // 0x0CB8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_23;                 // 0x0CE0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_22;                 // 0x0D08(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_21;                 // 0x0D30(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_20;                 // 0x0D58(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_19;                 // 0x0D80(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_18;                 // 0x0DA8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_17;                 // 0x0DD0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_16;                 // 0x0DF8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_15;                 // 0x0E20(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_14;                 // 0x0E48(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_13;                 // 0x0E70(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_12;                 // 0x0E98(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_11;                 // 0x0EC0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_10;                 // 0x0EE8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_9;                  // 0x0F10(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_8;                  // 0x0F38(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_7;                  // 0x0F60(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_6;                  // 0x0F88(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_5;                  // 0x0FB0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x0FD8(0x0028)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_22;                      // 0x1000(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_21;                   // 0x1038(0x0080)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_6;                   // 0x10B8(0x00A0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_20;                   // 0x1158(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_21;                      // 0x11D8(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_19;                   // 0x1210(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_20;                      // 0x1290(0x0038)()
	struct FAnimNode_BlendListByInt               AnimGraphNode_BlendListByInt_2;                    // 0x12C8(0x00A0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_18;                   // 0x1368(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_17;                   // 0x13E8(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_16;                   // 0x1468(0x0080)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_5;                   // 0x14E8(0x00A0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_15;                   // 0x1588(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_19;                      // 0x1608(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_14;                   // 0x1640(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_18;                      // 0x16C0(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_13;                   // 0x16F8(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_17;                      // 0x1778(0x0038)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_5;                  // 0x17B0(0x00E8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_16;                      // 0x1898(0x0038)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_4;                  // 0x18D0(0x00E8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_15;                      // 0x19B8(0x0038)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_3;                  // 0x19F0(0x00E8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_14;                      // 0x1AD8(0x0038)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_2;                  // 0x1B10(0x00E8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_13;                      // 0x1BF8(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_12;                   // 0x1C30(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_12;                      // 0x1CB0(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_11;                   // 0x1CE8(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_11;                      // 0x1D68(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_10;                   // 0x1DA0(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_10;                      // 0x1E20(0x0038)()
	struct FAnimNode_BlendListByInt               AnimGraphNode_BlendListByInt_1;                    // 0x1E58(0x00A0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_9;                    // 0x1EF8(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_8;                    // 0x1F78(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_7;                    // 0x1FF8(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_9;                       // 0x2078(0x0038)()
	struct FAnimNode_BlendListByInt               AnimGraphNode_BlendListByInt;                      // 0x20B0(0x00A0)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator_2;                 // 0x2150(0x0050)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator_1;                 // 0x21A0(0x0050)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator;                   // 0x21F0(0x0050)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_8;                       // 0x2240(0x0038)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_5;                     // 0x2278(0x0030)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_7;                       // 0x22A8(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_6;                    // 0x22E0(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_6;                       // 0x2360(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_5;                    // 0x2398(0x0080)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_4;                   // 0x2418(0x00A0)()
	struct FAnimNode_RandomPlayer                 AnimGraphNode_RandomPlayer_1;                      // 0x24B8(0x0078)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_5;                       // 0x2530(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x2568(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_4;                       // 0x25E8(0x0038)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_4;                     // 0x2620(0x0030)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x2650(0x0038)()
	struct FAnimNode_RandomPlayer                 AnimGraphNode_RandomPlayer;                        // 0x2688(0x0078)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x2700(0x0038)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_1;                      // 0x2738(0x00B0)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x27E8(0x00E8)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_1;                  // 0x28D0(0x00E8)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_3;                   // 0x29B8(0x00A0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x2A58(0x0080)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_2;                   // 0x2AD8(0x00A0)()
	struct FAnimNode_RefPose                      AnimGraphNode_LocalRefPose;                        // 0x2B78(0x0018)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_1;                   // 0x2B90(0x00A0)()
	struct FAnimNode_RotationOffsetBlendSpace     AnimGraphNode_RotationOffsetBlendSpace;            // 0x2C30(0x0198)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_1;                        // 0x2DC8(0x0110)()
	struct FAnimNode_LegIK                        AnimGraphNode_LegIK;                               // 0x2ED8(0x0100)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_3;                     // 0x2FD8(0x0030)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone;                          // 0x3008(0x0110)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x3118(0x0020)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x3138(0x0020)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x3158(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x3180(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x31A8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x31D0(0x0028)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_1;                  // 0x31F8(0x00C0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x32B8(0x0080)()
	struct FAnimNode_RotateRootBone               AnimGraphNode_RotateRootBone_2;                    // 0x3338(0x00E0)()
	struct FAnimNode_ModifyCurve                  AnimGraphNode_ModifyCurve_1;                       // 0x3418(0x0058)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer;                    // 0x3470(0x00E8)()
	struct FAnimNode_RotateRootBone               AnimGraphNode_RotateRootBone_1;                    // 0x3558(0x00E0)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x3638(0x0038)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_2;                     // 0x3670(0x0030)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x36A0(0x0038)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x36D8(0x00B0)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_2;                    // 0x3788(0x0158)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_1;                    // 0x38E0(0x0158)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_1;                     // 0x3A38(0x0030)()
	struct FAnimNode_RotateRootBone               AnimGraphNode_RotateRootBone;                      // 0x3A68(0x00E0)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend;                    // 0x3B48(0x00C0)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x3C08(0x00A0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x3CA8(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x3D28(0x0080)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x3DA8(0x0030)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x3DD8(0x0038)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x3E10(0x0158)()
	struct FAnimNode_PoseBlendNode                AnimGraphNode_PoseBlendNode;                       // 0x3F68(0x00A0)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend;                         // 0x4008(0x00C8)()
	struct FAnimNode_ModifyCurve                  AnimGraphNode_ModifyCurve;                         // 0x40D0(0x0058)()
	struct FVector                                LocalVelocity;                                     // 0x4128(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsAware;                                           // 0x4134(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsInCombat;                                        // 0x4135(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsDead;                                            // 0x4136(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsMoving;                                          // 0x4137(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UAnimSequenceBase*                      DeathAnimation;                                    // 0x4138(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           HitReactionFireDamage;                             // 0x4140(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UAnimSequenceBase*>              HeadDeathAnims;                                    // 0x4148(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UAnimSequenceBase*>              ChestDeathAnims;                                   // 0x4158(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UAnimSequenceBase*>              GutDeathAnims;                                     // 0x4168(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UAnimSequenceBase*>              LegDeathAnims;                                     // 0x4178(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UAnimSequenceBase*>              DeathAnimsExplosion;                               // 0x4188(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UAnimSequenceBase*>              ChestDeathAnims_SG;                                // 0x4198(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRotator                               AimOffsetRotator;                                  // 0x41A8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41B4[0x4];                                     // 0x41B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalAnimationComponent*            PhysAnimComp;                                      // 0x41B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACACharacter_NPC*                       CACharacter_NPC;                                   // 0x41C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACAWeapon*                              CAWeapon;                                          // 0x41C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         _DEBUG_ForwardSpeed;                               // 0x41D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         _DEBUG_LateralSpeed;                               // 0x41D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         _DEBUG_Pitch;                                      // 0x41D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         _DEBUG_Yaw;                                        // 0x41DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsInZeroG;                                         // 0x41E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsUsingMagboots;                                   // 0x41E1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41E2[0x2];                                     // 0x41E2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         FadeTime_Audio;                                    // 0x41E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          PlayBegan;                                         // 0x41E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41E9[0x3];                                     // 0x41E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         HeadingDelta;                                      // 0x41EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LookAtLocationWorld;                               // 0x41F0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CapsuleHeading;                                    // 0x41FC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TurnRate;                                          // 0x4200(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentHeading;                                    // 0x4204(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TargetHeading;                                     // 0x4208(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AIHeading;                                         // 0x420C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               ApparentActorRotation;                             // 0x4210(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FVector                                AimLocationLocal;                                  // 0x421C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TimeDelta;                                         // 0x4228(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsOnscreenOrAudible;                               // 0x422C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsDedicatedServer;                                 // 0x422D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_422E[0x2];                                     // 0x422E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                PreLandingVelocity;                                // 0x4230(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         _DEBUG_TurnRate;                                   // 0x423C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsStunned;                                         // 0x4240(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsRagdoll;                                         // 0x4241(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4242[0x2];                                     // 0x4242(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Bone_PhysAnim;                                     // 0x4244(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StoppingThresholdSpeed;                            // 0x4250(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4254[0xC];                                     // 0x4254(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RootBoneTransform;                                 // 0x4260(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FTransform                             FeetRootTransform;                                 // 0x4290(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         SlopeHeightOffset;                                 // 0x42C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StrafeAngle;                                       // 0x42C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NeedsFacingAim;                                    // 0x42C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42C9[0x3];                                     // 0x42C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                MoveToLocationWorld;                               // 0x42CC(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DistanceToMoveTarget;                              // 0x42D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsFloating;                                        // 0x42DC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsInAir;                                           // 0x42DD(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42DE[0x2];                                     // 0x42DE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TurnDeltaAngle;                                    // 0x42E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Haste;                                             // 0x42E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TurnSourceHeading;                                 // 0x42E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TurnTargetHeading;                                 // 0x42EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          TurnIsFadingOut;                                   // 0x42F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42F1[0x3];                                     // 0x42F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         FootToTargetMin;                                   // 0x42F4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MinTurnAngle;                                      // 0x42F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          WasMovingRecently;                                 // 0x42FC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	EMovementMode                                 Movement_Mode;                                     // 0x42FD(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42FE[0x2];                                     // 0x42FE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UAnimSequenceBase*>              GutDeathAnims_SG;                                  // 0x4300(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UAnimSequenceBase*>              ChestDeathAnims_Moving;                            // 0x4310(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FVector>                        JumpHeightVectors;                                 // 0x4320(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         FloatStartTime;                                    // 0x4330(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FloatStartHeading;                                 // 0x4334(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FloatYawVelocity;                                  // 0x4338(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_433C[0x4];                                     // 0x433C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UAnimSequenceBase*>              HeadDeathAnims_ZG;                                 // 0x4340(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UAnimSequenceBase*>              ChestDeathAnims_ZG;                                // 0x4350(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UAnimSequenceBase*>              GutDeathAnims_ZG;                                  // 0x4360(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UAnimSequenceBase*>              LegDeathAnims_ZG;                                  // 0x4370(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UAnimSequenceBase*>              GutDeathAnims_Moving;                              // 0x4380(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UAnimSequenceBase*>              ChestDeathAnims_Auto;                              // 0x4390(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UAnimSequenceBase*>              GutDeathAnims_Auto;                                // 0x43A0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UAnimSequenceBase*>              ChestDeathAnims_Jumping;                           // 0x43B0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UAnimSequenceBase*>              HeadHitAnimsZG;                                    // 0x43C0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UAnimSequenceBase*>              GutHitAnimsZG;                                     // 0x43D0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UAnimSequenceBase*>              ChestHitAnimsZG;                                   // 0x43E0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UAnimSequenceBase*>              LegHitAnimsZG;                                     // 0x43F0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UAnimSequenceBase*>              HeadHitAnims;                                      // 0x4400(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UAnimSequenceBase*>              GutHitAnims;                                       // 0x4410(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UAnimSequenceBase*>              ChestHitAnims;                                     // 0x4420(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UAnimSequenceBase*>              LegHitAnims;                                       // 0x4430(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UAnimSequenceBase*>              DeathAnims_ZGMB;                                   // 0x4440(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          IsFiring;                                          // 0x4450(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4451[0x3];                                     // 0x4451(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         UseProceduralFace;                                 // 0x4454(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StoppingTriggerDistance;                           // 0x4458(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StepPhase;                                         // 0x445C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsIdle;                                            // 0x4460(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4461[0x3];                                     // 0x4461(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                DebugPos0;                                         // 0x4464(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DebugTime0;                                        // 0x4470(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           DebugColor;                                        // 0x4474(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                _DEBUG_CachedVelocity;                             // 0x4484(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                _DEBUG_Velocity;                                   // 0x4490(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_449C[0x4];                                     // 0x449C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UAnimSequenceBase*>              FireDeathAnims;                                    // 0x44A0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UAnimSequenceBase*>              DeathAnimsBBQ;                                     // 0x44B0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         DeathDirectionIndex;                               // 0x44C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               DeathDirectionRotator;                             // 0x44C4(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FRotator                               DeathAttackDirection;                              // 0x44D0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void AnimGraph(struct FPoseLink* AnimGraph_0);
	void Get_Death_Anim_Yaw_Offset(float* Yaw);
	void OnHitReaction(const struct FNetworkedHit& Hit);
	void SelectDeathAnimSequence(class ACACharacter* Character, const struct FGameplayEffectSpec& DeathGameplayEffectSpec, float DamageMagnitude, const struct FNetworkedHit& NetworkedHit);
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void BlueprintInitializeAnimation();
	void OnDeath(class ACACharacter* Character, const struct FGameplayEffectSpec& Death_gameplay_effect_spec, float Damage_magnitude, const struct FNetworkedHit& Networked_hit, const class AActor* Killer);
	void BlueprintBeginPlay();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_EliteTank_TP_01_AnimGraphNode_TransitionResult_3305A6F74253B083F0C3BB9D83C16337();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_EliteTank_TP_01_AnimGraphNode_TransitionResult_01A9200641F549014DA23D837FCC81EF();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_EliteTank_TP_01_AnimGraphNode_TransitionResult_D0C3188343C77B3CDB94C59D2D1CC66A();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_EliteTank_TP_01_AnimGraphNode_TransitionResult_F18B3C394F530AB9D0445E92DB1B9175();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_EliteTank_TP_01_AnimGraphNode_TransitionResult_59591D944D0AD766656FE6909BFC19CA();
	void OnHitRecievedEvent(const struct FNetworkedHit& Hit);
	void OnLocalHitReceivedEvent(const struct FNetworkedHit& Hit);
	void AnimNotify_EnableRagdoll();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_EliteTank_TP_01_AnimGraphNode_TransitionResult_555CDACB4C2CC3B60F93F1A0D1ED558C();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_EliteTank_TP_01_AnimGraphNode_TransitionResult_2B97C906427416D5739A2E9F5138DBEA();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_EliteTank_TP_01_AnimGraphNode_TransitionResult_569FB6D54566AEE77AFC9CB6601BDB6B();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_EliteTank_TP_01_AnimGraphNode_TransitionResult_CC5CA249432E385213D035A540E502D7();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_EliteTank_TP_01_AnimGraphNode_TransitionResult_565917A34A8E5283F222168AF871779F();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_EliteTank_TP_01_AnimGraphNode_TransitionResult_7CD3078442A3FA6E08947EA2E9510CEF();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_EliteTank_TP_01_AnimGraphNode_BlendListByInt_02F32952410B079CAA7146B3C0A1AACC();
	void AnimNotify_TurnFadeOutStarted();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_EliteTank_TP_01_AnimGraphNode_TransitionResult_68F74BBD4DC2D9B3CD1F589DBB2E520F();
	void OnPoolStateChanged(bool Is_in_pool);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_EliteTank_TP_01_AnimGraphNode_TransitionResult_A93823F94C0DC3CCE9688AB485772635();
	void OnMovementModeChanged(class ACharacter* Character, EMovementMode PrevMovementMode, uint8 PreviousCustomMode);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_EliteTank_TP_01_AnimGraphNode_TransitionResult_5FBCD3E64BA9EF4B7567D59BA4952458();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_EliteTank_TP_01_AnimGraphNode_BlendListByInt_5B9B9E0140CE14ECFC5D19BCC41DF3F8();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_EliteTank_TP_01_AnimGraphNode_TransitionResult_646C2ACA49BAE1E59A2EE99A2BBF471B();
	void AnimNotify_EnterStopping();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_EliteTank_TP_01_AnimGraphNode_BlendListByInt_FDD7E5AA48E8F869B5682D80644DF08F();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_EliteTank_TP_01_AnimGraphNode_TransitionResult_D1CE803546661BEEC6C6558AFF43B8C3();
	void AnimNotify_EnterStarting();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_EliteTank_TP_01_AnimGraphNode_ModifyCurve_AD671A5940B02696263332A2BD1B96DC();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_EliteTank_TP_01_AnimGraphNode_ModifyBone_31DD33B24453ABA22E8155AD9475C04C();
	void AnimNotify_EnterAwareMove();
	void AnimNotify_EnterAwareStarting();
	void AnimNotify_EnterAwareStopping();
	void AnimNotify_EnterAwareIdle();
	void AnimNotify_EnterTRCasualToAware();
	void AnimNotify_EnterTRAwareToCasual();
	void AnimNotify_EnterCasualMove();
	void AnimNotify_EnterCasualStarting();
	void AnimNotify_EnterCasualStopping();
	void AnimNotify_EnterCasualIdle();
	void AnimNotify_ExitAwareMove();
	void AnimNotify_ExitAwareStarting();
	void AnimNotify_ExitAwareStopping();
	void AnimNotify_ExitAwareIdle();
	void AnimNotify_ExitTRCasualToAware();
	void AnimNotify_ExitTRAwareToCasual();
	void AnimNotify_ExitCasualMove();
	void AnimNotify_ExitCasualStarting();
	void AnimNotify_ExitCasualStopping();
	void AnimNotify_ExitCasualIdle();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_EliteTank_TP_01_AnimGraphNode_ModifyBone_C1D5B3BF4E3D24251E10728CCA181DD9();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_EliteTank_TP_01_AnimGraphNode_BlendListByBool_8BD09833469A966DCBE575B4F2550F34();
	void AnimNotify_EnterJumping();
	void AnimNotify_EnterLanding();
	void AnimNotify_EnterEnterStunned();
	void AnimNotify_EnterLeavingStunned();
	void AnimNotify_EnterEnterFloating();
	void AnimNotify_EnterFall_Land();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_EliteTank_TP_01_AnimGraphNode_TransitionResult_8847FE064865E76C4E6C36900288F001();
	void AnimNotify_ExitJumping();
	void AnimNotify_ExitLanding();
	void AnimNotify_ExitEnterStunned();
	void AnimNotify_ExitLeavingStunned();
	void AnimNotify_ExitEnterFloating();
	void AnimNotify_ExitFall_Land();
	void ExecuteUbergraph_ABP_EliteTank_TP_01(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_EliteTank_TP_01_C">();
	}
	static class UABP_EliteTank_TP_01_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_EliteTank_TP_01_C>();
	}
};
static_assert(alignof(UABP_EliteTank_TP_01_C) == 0x000010, "Wrong alignment on UABP_EliteTank_TP_01_C");
static_assert(sizeof(UABP_EliteTank_TP_01_C) == 0x0044E0, "Wrong size on UABP_EliteTank_TP_01_C");
static_assert(offsetof(UABP_EliteTank_TP_01_C, UberGraphFrame) == 0x000410, "Member 'UABP_EliteTank_TP_01_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, AnimGraphNode_SaveCachedPose_3) == 0x000418, "Member 'UABP_EliteTank_TP_01_C::AnimGraphNode_SaveCachedPose_3' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, AnimGraphNode_RotateRootBone_3) == 0x000570, "Member 'UABP_EliteTank_TP_01_C::AnimGraphNode_RotateRootBone_3' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, AnimGraphNode_BlendSpacePlayer_6) == 0x000650, "Member 'UABP_EliteTank_TP_01_C::AnimGraphNode_BlendSpacePlayer_6' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, AnimGraphNode_Slot_3) == 0x000738, "Member 'UABP_EliteTank_TP_01_C::AnimGraphNode_Slot_3' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, AnimGraphNode_Slot_2) == 0x000820, "Member 'UABP_EliteTank_TP_01_C::AnimGraphNode_Slot_2' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, AnimGraphNode_ApplyAdditive) == 0x000908, "Member 'UABP_EliteTank_TP_01_C::AnimGraphNode_ApplyAdditive' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, AnimGraphNode_Slot_1) == 0x0009D8, "Member 'UABP_EliteTank_TP_01_C::AnimGraphNode_Slot_1' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, AnimGraphNode_IdentityPose) == 0x000AC0, "Member 'UABP_EliteTank_TP_01_C::AnimGraphNode_IdentityPose' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, AnimGraphNode_TransitionResult_36) == 0x000AD8, "Member 'UABP_EliteTank_TP_01_C::AnimGraphNode_TransitionResult_36' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, AnimGraphNode_TransitionResult_35) == 0x000B00, "Member 'UABP_EliteTank_TP_01_C::AnimGraphNode_TransitionResult_35' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, AnimGraphNode_TransitionResult_34) == 0x000B28, "Member 'UABP_EliteTank_TP_01_C::AnimGraphNode_TransitionResult_34' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, AnimGraphNode_TransitionResult_33) == 0x000B50, "Member 'UABP_EliteTank_TP_01_C::AnimGraphNode_TransitionResult_33' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, AnimGraphNode_TransitionResult_32) == 0x000B78, "Member 'UABP_EliteTank_TP_01_C::AnimGraphNode_TransitionResult_32' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, AnimGraphNode_TransitionResult_31) == 0x000BA0, "Member 'UABP_EliteTank_TP_01_C::AnimGraphNode_TransitionResult_31' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, AnimGraphNode_TransitionResult_30) == 0x000BC8, "Member 'UABP_EliteTank_TP_01_C::AnimGraphNode_TransitionResult_30' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, AnimGraphNode_TransitionResult_29) == 0x000BF0, "Member 'UABP_EliteTank_TP_01_C::AnimGraphNode_TransitionResult_29' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, AnimGraphNode_TransitionResult_28) == 0x000C18, "Member 'UABP_EliteTank_TP_01_C::AnimGraphNode_TransitionResult_28' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, AnimGraphNode_TransitionResult_27) == 0x000C40, "Member 'UABP_EliteTank_TP_01_C::AnimGraphNode_TransitionResult_27' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, AnimGraphNode_TransitionResult_26) == 0x000C68, "Member 'UABP_EliteTank_TP_01_C::AnimGraphNode_TransitionResult_26' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, AnimGraphNode_TransitionResult_25) == 0x000C90, "Member 'UABP_EliteTank_TP_01_C::AnimGraphNode_TransitionResult_25' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, AnimGraphNode_TransitionResult_24) == 0x000CB8, "Member 'UABP_EliteTank_TP_01_C::AnimGraphNode_TransitionResult_24' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, AnimGraphNode_TransitionResult_23) == 0x000CE0, "Member 'UABP_EliteTank_TP_01_C::AnimGraphNode_TransitionResult_23' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, AnimGraphNode_TransitionResult_22) == 0x000D08, "Member 'UABP_EliteTank_TP_01_C::AnimGraphNode_TransitionResult_22' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, AnimGraphNode_TransitionResult_21) == 0x000D30, "Member 'UABP_EliteTank_TP_01_C::AnimGraphNode_TransitionResult_21' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, AnimGraphNode_TransitionResult_20) == 0x000D58, "Member 'UABP_EliteTank_TP_01_C::AnimGraphNode_TransitionResult_20' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, AnimGraphNode_TransitionResult_19) == 0x000D80, "Member 'UABP_EliteTank_TP_01_C::AnimGraphNode_TransitionResult_19' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, AnimGraphNode_TransitionResult_18) == 0x000DA8, "Member 'UABP_EliteTank_TP_01_C::AnimGraphNode_TransitionResult_18' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, AnimGraphNode_TransitionResult_17) == 0x000DD0, "Member 'UABP_EliteTank_TP_01_C::AnimGraphNode_TransitionResult_17' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, AnimGraphNode_TransitionResult_16) == 0x000DF8, "Member 'UABP_EliteTank_TP_01_C::AnimGraphNode_TransitionResult_16' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, AnimGraphNode_TransitionResult_15) == 0x000E20, "Member 'UABP_EliteTank_TP_01_C::AnimGraphNode_TransitionResult_15' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, AnimGraphNode_TransitionResult_14) == 0x000E48, "Member 'UABP_EliteTank_TP_01_C::AnimGraphNode_TransitionResult_14' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, AnimGraphNode_TransitionResult_13) == 0x000E70, "Member 'UABP_EliteTank_TP_01_C::AnimGraphNode_TransitionResult_13' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, AnimGraphNode_TransitionResult_12) == 0x000E98, "Member 'UABP_EliteTank_TP_01_C::AnimGraphNode_TransitionResult_12' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, AnimGraphNode_TransitionResult_11) == 0x000EC0, "Member 'UABP_EliteTank_TP_01_C::AnimGraphNode_TransitionResult_11' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, AnimGraphNode_TransitionResult_10) == 0x000EE8, "Member 'UABP_EliteTank_TP_01_C::AnimGraphNode_TransitionResult_10' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, AnimGraphNode_TransitionResult_9) == 0x000F10, "Member 'UABP_EliteTank_TP_01_C::AnimGraphNode_TransitionResult_9' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, AnimGraphNode_TransitionResult_8) == 0x000F38, "Member 'UABP_EliteTank_TP_01_C::AnimGraphNode_TransitionResult_8' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, AnimGraphNode_TransitionResult_7) == 0x000F60, "Member 'UABP_EliteTank_TP_01_C::AnimGraphNode_TransitionResult_7' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, AnimGraphNode_TransitionResult_6) == 0x000F88, "Member 'UABP_EliteTank_TP_01_C::AnimGraphNode_TransitionResult_6' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, AnimGraphNode_TransitionResult_5) == 0x000FB0, "Member 'UABP_EliteTank_TP_01_C::AnimGraphNode_TransitionResult_5' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, AnimGraphNode_TransitionResult_4) == 0x000FD8, "Member 'UABP_EliteTank_TP_01_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, AnimGraphNode_StateResult_22) == 0x001000, "Member 'UABP_EliteTank_TP_01_C::AnimGraphNode_StateResult_22' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, AnimGraphNode_SequencePlayer_21) == 0x001038, "Member 'UABP_EliteTank_TP_01_C::AnimGraphNode_SequencePlayer_21' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, AnimGraphNode_BlendListByBool_6) == 0x0010B8, "Member 'UABP_EliteTank_TP_01_C::AnimGraphNode_BlendListByBool_6' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, AnimGraphNode_SequencePlayer_20) == 0x001158, "Member 'UABP_EliteTank_TP_01_C::AnimGraphNode_SequencePlayer_20' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, AnimGraphNode_StateResult_21) == 0x0011D8, "Member 'UABP_EliteTank_TP_01_C::AnimGraphNode_StateResult_21' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, AnimGraphNode_SequencePlayer_19) == 0x001210, "Member 'UABP_EliteTank_TP_01_C::AnimGraphNode_SequencePlayer_19' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, AnimGraphNode_StateResult_20) == 0x001290, "Member 'UABP_EliteTank_TP_01_C::AnimGraphNode_StateResult_20' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, AnimGraphNode_BlendListByInt_2) == 0x0012C8, "Member 'UABP_EliteTank_TP_01_C::AnimGraphNode_BlendListByInt_2' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, AnimGraphNode_SequencePlayer_18) == 0x001368, "Member 'UABP_EliteTank_TP_01_C::AnimGraphNode_SequencePlayer_18' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, AnimGraphNode_SequencePlayer_17) == 0x0013E8, "Member 'UABP_EliteTank_TP_01_C::AnimGraphNode_SequencePlayer_17' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, AnimGraphNode_SequencePlayer_16) == 0x001468, "Member 'UABP_EliteTank_TP_01_C::AnimGraphNode_SequencePlayer_16' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, AnimGraphNode_BlendListByBool_5) == 0x0014E8, "Member 'UABP_EliteTank_TP_01_C::AnimGraphNode_BlendListByBool_5' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, AnimGraphNode_SequencePlayer_15) == 0x001588, "Member 'UABP_EliteTank_TP_01_C::AnimGraphNode_SequencePlayer_15' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, AnimGraphNode_StateResult_19) == 0x001608, "Member 'UABP_EliteTank_TP_01_C::AnimGraphNode_StateResult_19' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, AnimGraphNode_SequencePlayer_14) == 0x001640, "Member 'UABP_EliteTank_TP_01_C::AnimGraphNode_SequencePlayer_14' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, AnimGraphNode_StateResult_18) == 0x0016C0, "Member 'UABP_EliteTank_TP_01_C::AnimGraphNode_StateResult_18' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, AnimGraphNode_SequencePlayer_13) == 0x0016F8, "Member 'UABP_EliteTank_TP_01_C::AnimGraphNode_SequencePlayer_13' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, AnimGraphNode_StateResult_17) == 0x001778, "Member 'UABP_EliteTank_TP_01_C::AnimGraphNode_StateResult_17' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, AnimGraphNode_BlendSpacePlayer_5) == 0x0017B0, "Member 'UABP_EliteTank_TP_01_C::AnimGraphNode_BlendSpacePlayer_5' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, AnimGraphNode_StateResult_16) == 0x001898, "Member 'UABP_EliteTank_TP_01_C::AnimGraphNode_StateResult_16' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, AnimGraphNode_BlendSpacePlayer_4) == 0x0018D0, "Member 'UABP_EliteTank_TP_01_C::AnimGraphNode_BlendSpacePlayer_4' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, AnimGraphNode_StateResult_15) == 0x0019B8, "Member 'UABP_EliteTank_TP_01_C::AnimGraphNode_StateResult_15' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, AnimGraphNode_BlendSpacePlayer_3) == 0x0019F0, "Member 'UABP_EliteTank_TP_01_C::AnimGraphNode_BlendSpacePlayer_3' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, AnimGraphNode_StateResult_14) == 0x001AD8, "Member 'UABP_EliteTank_TP_01_C::AnimGraphNode_StateResult_14' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, AnimGraphNode_BlendSpacePlayer_2) == 0x001B10, "Member 'UABP_EliteTank_TP_01_C::AnimGraphNode_BlendSpacePlayer_2' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, AnimGraphNode_StateResult_13) == 0x001BF8, "Member 'UABP_EliteTank_TP_01_C::AnimGraphNode_StateResult_13' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, AnimGraphNode_SequencePlayer_12) == 0x001C30, "Member 'UABP_EliteTank_TP_01_C::AnimGraphNode_SequencePlayer_12' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, AnimGraphNode_StateResult_12) == 0x001CB0, "Member 'UABP_EliteTank_TP_01_C::AnimGraphNode_StateResult_12' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, AnimGraphNode_SequencePlayer_11) == 0x001CE8, "Member 'UABP_EliteTank_TP_01_C::AnimGraphNode_SequencePlayer_11' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, AnimGraphNode_StateResult_11) == 0x001D68, "Member 'UABP_EliteTank_TP_01_C::AnimGraphNode_StateResult_11' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, AnimGraphNode_SequencePlayer_10) == 0x001DA0, "Member 'UABP_EliteTank_TP_01_C::AnimGraphNode_SequencePlayer_10' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, AnimGraphNode_StateResult_10) == 0x001E20, "Member 'UABP_EliteTank_TP_01_C::AnimGraphNode_StateResult_10' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, AnimGraphNode_BlendListByInt_1) == 0x001E58, "Member 'UABP_EliteTank_TP_01_C::AnimGraphNode_BlendListByInt_1' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, AnimGraphNode_SequencePlayer_9) == 0x001EF8, "Member 'UABP_EliteTank_TP_01_C::AnimGraphNode_SequencePlayer_9' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, AnimGraphNode_SequencePlayer_8) == 0x001F78, "Member 'UABP_EliteTank_TP_01_C::AnimGraphNode_SequencePlayer_8' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, AnimGraphNode_SequencePlayer_7) == 0x001FF8, "Member 'UABP_EliteTank_TP_01_C::AnimGraphNode_SequencePlayer_7' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, AnimGraphNode_StateResult_9) == 0x002078, "Member 'UABP_EliteTank_TP_01_C::AnimGraphNode_StateResult_9' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, AnimGraphNode_BlendListByInt) == 0x0020B0, "Member 'UABP_EliteTank_TP_01_C::AnimGraphNode_BlendListByInt' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, AnimGraphNode_SequenceEvaluator_2) == 0x002150, "Member 'UABP_EliteTank_TP_01_C::AnimGraphNode_SequenceEvaluator_2' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, AnimGraphNode_SequenceEvaluator_1) == 0x0021A0, "Member 'UABP_EliteTank_TP_01_C::AnimGraphNode_SequenceEvaluator_1' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, AnimGraphNode_SequenceEvaluator) == 0x0021F0, "Member 'UABP_EliteTank_TP_01_C::AnimGraphNode_SequenceEvaluator' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, AnimGraphNode_StateResult_8) == 0x002240, "Member 'UABP_EliteTank_TP_01_C::AnimGraphNode_StateResult_8' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, AnimGraphNode_UseCachedPose_5) == 0x002278, "Member 'UABP_EliteTank_TP_01_C::AnimGraphNode_UseCachedPose_5' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, AnimGraphNode_StateResult_7) == 0x0022A8, "Member 'UABP_EliteTank_TP_01_C::AnimGraphNode_StateResult_7' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, AnimGraphNode_SequencePlayer_6) == 0x0022E0, "Member 'UABP_EliteTank_TP_01_C::AnimGraphNode_SequencePlayer_6' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, AnimGraphNode_StateResult_6) == 0x002360, "Member 'UABP_EliteTank_TP_01_C::AnimGraphNode_StateResult_6' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, AnimGraphNode_SequencePlayer_5) == 0x002398, "Member 'UABP_EliteTank_TP_01_C::AnimGraphNode_SequencePlayer_5' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, AnimGraphNode_BlendListByBool_4) == 0x002418, "Member 'UABP_EliteTank_TP_01_C::AnimGraphNode_BlendListByBool_4' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, AnimGraphNode_RandomPlayer_1) == 0x0024B8, "Member 'UABP_EliteTank_TP_01_C::AnimGraphNode_RandomPlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, AnimGraphNode_StateResult_5) == 0x002530, "Member 'UABP_EliteTank_TP_01_C::AnimGraphNode_StateResult_5' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, AnimGraphNode_SequencePlayer_4) == 0x002568, "Member 'UABP_EliteTank_TP_01_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, AnimGraphNode_StateResult_4) == 0x0025E8, "Member 'UABP_EliteTank_TP_01_C::AnimGraphNode_StateResult_4' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, AnimGraphNode_UseCachedPose_4) == 0x002620, "Member 'UABP_EliteTank_TP_01_C::AnimGraphNode_UseCachedPose_4' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, AnimGraphNode_StateResult_3) == 0x002650, "Member 'UABP_EliteTank_TP_01_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, AnimGraphNode_RandomPlayer) == 0x002688, "Member 'UABP_EliteTank_TP_01_C::AnimGraphNode_RandomPlayer' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, AnimGraphNode_StateResult_2) == 0x002700, "Member 'UABP_EliteTank_TP_01_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, AnimGraphNode_StateMachine_1) == 0x002738, "Member 'UABP_EliteTank_TP_01_C::AnimGraphNode_StateMachine_1' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, AnimGraphNode_Slot) == 0x0027E8, "Member 'UABP_EliteTank_TP_01_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, AnimGraphNode_BlendSpacePlayer_1) == 0x0028D0, "Member 'UABP_EliteTank_TP_01_C::AnimGraphNode_BlendSpacePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, AnimGraphNode_BlendListByBool_3) == 0x0029B8, "Member 'UABP_EliteTank_TP_01_C::AnimGraphNode_BlendListByBool_3' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, AnimGraphNode_SequencePlayer_3) == 0x002A58, "Member 'UABP_EliteTank_TP_01_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, AnimGraphNode_BlendListByBool_2) == 0x002AD8, "Member 'UABP_EliteTank_TP_01_C::AnimGraphNode_BlendListByBool_2' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, AnimGraphNode_LocalRefPose) == 0x002B78, "Member 'UABP_EliteTank_TP_01_C::AnimGraphNode_LocalRefPose' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, AnimGraphNode_BlendListByBool_1) == 0x002B90, "Member 'UABP_EliteTank_TP_01_C::AnimGraphNode_BlendListByBool_1' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, AnimGraphNode_RotationOffsetBlendSpace) == 0x002C30, "Member 'UABP_EliteTank_TP_01_C::AnimGraphNode_RotationOffsetBlendSpace' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, AnimGraphNode_ModifyBone_1) == 0x002DC8, "Member 'UABP_EliteTank_TP_01_C::AnimGraphNode_ModifyBone_1' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, AnimGraphNode_LegIK) == 0x002ED8, "Member 'UABP_EliteTank_TP_01_C::AnimGraphNode_LegIK' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, AnimGraphNode_UseCachedPose_3) == 0x002FD8, "Member 'UABP_EliteTank_TP_01_C::AnimGraphNode_UseCachedPose_3' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, AnimGraphNode_ModifyBone) == 0x003008, "Member 'UABP_EliteTank_TP_01_C::AnimGraphNode_ModifyBone' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, AnimGraphNode_ComponentToLocalSpace) == 0x003118, "Member 'UABP_EliteTank_TP_01_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, AnimGraphNode_LocalToComponentSpace) == 0x003138, "Member 'UABP_EliteTank_TP_01_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, AnimGraphNode_TransitionResult_3) == 0x003158, "Member 'UABP_EliteTank_TP_01_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, AnimGraphNode_TransitionResult_2) == 0x003180, "Member 'UABP_EliteTank_TP_01_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, AnimGraphNode_TransitionResult_1) == 0x0031A8, "Member 'UABP_EliteTank_TP_01_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, AnimGraphNode_TransitionResult) == 0x0031D0, "Member 'UABP_EliteTank_TP_01_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, AnimGraphNode_LayeredBoneBlend_1) == 0x0031F8, "Member 'UABP_EliteTank_TP_01_C::AnimGraphNode_LayeredBoneBlend_1' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, AnimGraphNode_SequencePlayer_2) == 0x0032B8, "Member 'UABP_EliteTank_TP_01_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, AnimGraphNode_RotateRootBone_2) == 0x003338, "Member 'UABP_EliteTank_TP_01_C::AnimGraphNode_RotateRootBone_2' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, AnimGraphNode_ModifyCurve_1) == 0x003418, "Member 'UABP_EliteTank_TP_01_C::AnimGraphNode_ModifyCurve_1' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, AnimGraphNode_BlendSpacePlayer) == 0x003470, "Member 'UABP_EliteTank_TP_01_C::AnimGraphNode_BlendSpacePlayer' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, AnimGraphNode_RotateRootBone_1) == 0x003558, "Member 'UABP_EliteTank_TP_01_C::AnimGraphNode_RotateRootBone_1' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, AnimGraphNode_StateResult_1) == 0x003638, "Member 'UABP_EliteTank_TP_01_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, AnimGraphNode_UseCachedPose_2) == 0x003670, "Member 'UABP_EliteTank_TP_01_C::AnimGraphNode_UseCachedPose_2' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, AnimGraphNode_StateResult) == 0x0036A0, "Member 'UABP_EliteTank_TP_01_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, AnimGraphNode_StateMachine) == 0x0036D8, "Member 'UABP_EliteTank_TP_01_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, AnimGraphNode_SaveCachedPose_2) == 0x003788, "Member 'UABP_EliteTank_TP_01_C::AnimGraphNode_SaveCachedPose_2' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, AnimGraphNode_SaveCachedPose_1) == 0x0038E0, "Member 'UABP_EliteTank_TP_01_C::AnimGraphNode_SaveCachedPose_1' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, AnimGraphNode_UseCachedPose_1) == 0x003A38, "Member 'UABP_EliteTank_TP_01_C::AnimGraphNode_UseCachedPose_1' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, AnimGraphNode_RotateRootBone) == 0x003A68, "Member 'UABP_EliteTank_TP_01_C::AnimGraphNode_RotateRootBone' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, AnimGraphNode_LayeredBoneBlend) == 0x003B48, "Member 'UABP_EliteTank_TP_01_C::AnimGraphNode_LayeredBoneBlend' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, AnimGraphNode_BlendListByBool) == 0x003C08, "Member 'UABP_EliteTank_TP_01_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, AnimGraphNode_SequencePlayer_1) == 0x003CA8, "Member 'UABP_EliteTank_TP_01_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, AnimGraphNode_SequencePlayer) == 0x003D28, "Member 'UABP_EliteTank_TP_01_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, AnimGraphNode_UseCachedPose) == 0x003DA8, "Member 'UABP_EliteTank_TP_01_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, AnimGraphNode_Root) == 0x003DD8, "Member 'UABP_EliteTank_TP_01_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, AnimGraphNode_SaveCachedPose) == 0x003E10, "Member 'UABP_EliteTank_TP_01_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, AnimGraphNode_PoseBlendNode) == 0x003F68, "Member 'UABP_EliteTank_TP_01_C::AnimGraphNode_PoseBlendNode' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, AnimGraphNode_TwoWayBlend) == 0x004008, "Member 'UABP_EliteTank_TP_01_C::AnimGraphNode_TwoWayBlend' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, AnimGraphNode_ModifyCurve) == 0x0040D0, "Member 'UABP_EliteTank_TP_01_C::AnimGraphNode_ModifyCurve' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, LocalVelocity) == 0x004128, "Member 'UABP_EliteTank_TP_01_C::LocalVelocity' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, IsAware) == 0x004134, "Member 'UABP_EliteTank_TP_01_C::IsAware' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, IsInCombat) == 0x004135, "Member 'UABP_EliteTank_TP_01_C::IsInCombat' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, IsDead) == 0x004136, "Member 'UABP_EliteTank_TP_01_C::IsDead' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, IsMoving) == 0x004137, "Member 'UABP_EliteTank_TP_01_C::IsMoving' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, DeathAnimation) == 0x004138, "Member 'UABP_EliteTank_TP_01_C::DeathAnimation' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, HitReactionFireDamage) == 0x004140, "Member 'UABP_EliteTank_TP_01_C::HitReactionFireDamage' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, HeadDeathAnims) == 0x004148, "Member 'UABP_EliteTank_TP_01_C::HeadDeathAnims' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, ChestDeathAnims) == 0x004158, "Member 'UABP_EliteTank_TP_01_C::ChestDeathAnims' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, GutDeathAnims) == 0x004168, "Member 'UABP_EliteTank_TP_01_C::GutDeathAnims' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, LegDeathAnims) == 0x004178, "Member 'UABP_EliteTank_TP_01_C::LegDeathAnims' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, DeathAnimsExplosion) == 0x004188, "Member 'UABP_EliteTank_TP_01_C::DeathAnimsExplosion' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, ChestDeathAnims_SG) == 0x004198, "Member 'UABP_EliteTank_TP_01_C::ChestDeathAnims_SG' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, AimOffsetRotator) == 0x0041A8, "Member 'UABP_EliteTank_TP_01_C::AimOffsetRotator' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, PhysAnimComp) == 0x0041B8, "Member 'UABP_EliteTank_TP_01_C::PhysAnimComp' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, CACharacter_NPC) == 0x0041C0, "Member 'UABP_EliteTank_TP_01_C::CACharacter_NPC' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, CAWeapon) == 0x0041C8, "Member 'UABP_EliteTank_TP_01_C::CAWeapon' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, _DEBUG_ForwardSpeed) == 0x0041D0, "Member 'UABP_EliteTank_TP_01_C::_DEBUG_ForwardSpeed' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, _DEBUG_LateralSpeed) == 0x0041D4, "Member 'UABP_EliteTank_TP_01_C::_DEBUG_LateralSpeed' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, _DEBUG_Pitch) == 0x0041D8, "Member 'UABP_EliteTank_TP_01_C::_DEBUG_Pitch' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, _DEBUG_Yaw) == 0x0041DC, "Member 'UABP_EliteTank_TP_01_C::_DEBUG_Yaw' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, IsInZeroG) == 0x0041E0, "Member 'UABP_EliteTank_TP_01_C::IsInZeroG' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, IsUsingMagboots) == 0x0041E1, "Member 'UABP_EliteTank_TP_01_C::IsUsingMagboots' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, FadeTime_Audio) == 0x0041E4, "Member 'UABP_EliteTank_TP_01_C::FadeTime_Audio' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, PlayBegan) == 0x0041E8, "Member 'UABP_EliteTank_TP_01_C::PlayBegan' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, HeadingDelta) == 0x0041EC, "Member 'UABP_EliteTank_TP_01_C::HeadingDelta' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, LookAtLocationWorld) == 0x0041F0, "Member 'UABP_EliteTank_TP_01_C::LookAtLocationWorld' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, CapsuleHeading) == 0x0041FC, "Member 'UABP_EliteTank_TP_01_C::CapsuleHeading' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, TurnRate) == 0x004200, "Member 'UABP_EliteTank_TP_01_C::TurnRate' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, CurrentHeading) == 0x004204, "Member 'UABP_EliteTank_TP_01_C::CurrentHeading' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, TargetHeading) == 0x004208, "Member 'UABP_EliteTank_TP_01_C::TargetHeading' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, AIHeading) == 0x00420C, "Member 'UABP_EliteTank_TP_01_C::AIHeading' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, ApparentActorRotation) == 0x004210, "Member 'UABP_EliteTank_TP_01_C::ApparentActorRotation' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, AimLocationLocal) == 0x00421C, "Member 'UABP_EliteTank_TP_01_C::AimLocationLocal' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, TimeDelta) == 0x004228, "Member 'UABP_EliteTank_TP_01_C::TimeDelta' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, IsOnscreenOrAudible) == 0x00422C, "Member 'UABP_EliteTank_TP_01_C::IsOnscreenOrAudible' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, IsDedicatedServer) == 0x00422D, "Member 'UABP_EliteTank_TP_01_C::IsDedicatedServer' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, PreLandingVelocity) == 0x004230, "Member 'UABP_EliteTank_TP_01_C::PreLandingVelocity' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, _DEBUG_TurnRate) == 0x00423C, "Member 'UABP_EliteTank_TP_01_C::_DEBUG_TurnRate' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, IsStunned) == 0x004240, "Member 'UABP_EliteTank_TP_01_C::IsStunned' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, IsRagdoll) == 0x004241, "Member 'UABP_EliteTank_TP_01_C::IsRagdoll' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, Bone_PhysAnim) == 0x004244, "Member 'UABP_EliteTank_TP_01_C::Bone_PhysAnim' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, StoppingThresholdSpeed) == 0x004250, "Member 'UABP_EliteTank_TP_01_C::StoppingThresholdSpeed' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, RootBoneTransform) == 0x004260, "Member 'UABP_EliteTank_TP_01_C::RootBoneTransform' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, FeetRootTransform) == 0x004290, "Member 'UABP_EliteTank_TP_01_C::FeetRootTransform' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, SlopeHeightOffset) == 0x0042C0, "Member 'UABP_EliteTank_TP_01_C::SlopeHeightOffset' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, StrafeAngle) == 0x0042C4, "Member 'UABP_EliteTank_TP_01_C::StrafeAngle' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, NeedsFacingAim) == 0x0042C8, "Member 'UABP_EliteTank_TP_01_C::NeedsFacingAim' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, MoveToLocationWorld) == 0x0042CC, "Member 'UABP_EliteTank_TP_01_C::MoveToLocationWorld' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, DistanceToMoveTarget) == 0x0042D8, "Member 'UABP_EliteTank_TP_01_C::DistanceToMoveTarget' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, IsFloating) == 0x0042DC, "Member 'UABP_EliteTank_TP_01_C::IsFloating' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, IsInAir) == 0x0042DD, "Member 'UABP_EliteTank_TP_01_C::IsInAir' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, TurnDeltaAngle) == 0x0042E0, "Member 'UABP_EliteTank_TP_01_C::TurnDeltaAngle' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, Haste) == 0x0042E4, "Member 'UABP_EliteTank_TP_01_C::Haste' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, TurnSourceHeading) == 0x0042E8, "Member 'UABP_EliteTank_TP_01_C::TurnSourceHeading' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, TurnTargetHeading) == 0x0042EC, "Member 'UABP_EliteTank_TP_01_C::TurnTargetHeading' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, TurnIsFadingOut) == 0x0042F0, "Member 'UABP_EliteTank_TP_01_C::TurnIsFadingOut' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, FootToTargetMin) == 0x0042F4, "Member 'UABP_EliteTank_TP_01_C::FootToTargetMin' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, MinTurnAngle) == 0x0042F8, "Member 'UABP_EliteTank_TP_01_C::MinTurnAngle' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, WasMovingRecently) == 0x0042FC, "Member 'UABP_EliteTank_TP_01_C::WasMovingRecently' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, Movement_Mode) == 0x0042FD, "Member 'UABP_EliteTank_TP_01_C::Movement_Mode' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, GutDeathAnims_SG) == 0x004300, "Member 'UABP_EliteTank_TP_01_C::GutDeathAnims_SG' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, ChestDeathAnims_Moving) == 0x004310, "Member 'UABP_EliteTank_TP_01_C::ChestDeathAnims_Moving' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, JumpHeightVectors) == 0x004320, "Member 'UABP_EliteTank_TP_01_C::JumpHeightVectors' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, FloatStartTime) == 0x004330, "Member 'UABP_EliteTank_TP_01_C::FloatStartTime' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, FloatStartHeading) == 0x004334, "Member 'UABP_EliteTank_TP_01_C::FloatStartHeading' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, FloatYawVelocity) == 0x004338, "Member 'UABP_EliteTank_TP_01_C::FloatYawVelocity' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, HeadDeathAnims_ZG) == 0x004340, "Member 'UABP_EliteTank_TP_01_C::HeadDeathAnims_ZG' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, ChestDeathAnims_ZG) == 0x004350, "Member 'UABP_EliteTank_TP_01_C::ChestDeathAnims_ZG' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, GutDeathAnims_ZG) == 0x004360, "Member 'UABP_EliteTank_TP_01_C::GutDeathAnims_ZG' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, LegDeathAnims_ZG) == 0x004370, "Member 'UABP_EliteTank_TP_01_C::LegDeathAnims_ZG' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, GutDeathAnims_Moving) == 0x004380, "Member 'UABP_EliteTank_TP_01_C::GutDeathAnims_Moving' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, ChestDeathAnims_Auto) == 0x004390, "Member 'UABP_EliteTank_TP_01_C::ChestDeathAnims_Auto' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, GutDeathAnims_Auto) == 0x0043A0, "Member 'UABP_EliteTank_TP_01_C::GutDeathAnims_Auto' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, ChestDeathAnims_Jumping) == 0x0043B0, "Member 'UABP_EliteTank_TP_01_C::ChestDeathAnims_Jumping' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, HeadHitAnimsZG) == 0x0043C0, "Member 'UABP_EliteTank_TP_01_C::HeadHitAnimsZG' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, GutHitAnimsZG) == 0x0043D0, "Member 'UABP_EliteTank_TP_01_C::GutHitAnimsZG' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, ChestHitAnimsZG) == 0x0043E0, "Member 'UABP_EliteTank_TP_01_C::ChestHitAnimsZG' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, LegHitAnimsZG) == 0x0043F0, "Member 'UABP_EliteTank_TP_01_C::LegHitAnimsZG' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, HeadHitAnims) == 0x004400, "Member 'UABP_EliteTank_TP_01_C::HeadHitAnims' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, GutHitAnims) == 0x004410, "Member 'UABP_EliteTank_TP_01_C::GutHitAnims' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, ChestHitAnims) == 0x004420, "Member 'UABP_EliteTank_TP_01_C::ChestHitAnims' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, LegHitAnims) == 0x004430, "Member 'UABP_EliteTank_TP_01_C::LegHitAnims' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, DeathAnims_ZGMB) == 0x004440, "Member 'UABP_EliteTank_TP_01_C::DeathAnims_ZGMB' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, IsFiring) == 0x004450, "Member 'UABP_EliteTank_TP_01_C::IsFiring' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, UseProceduralFace) == 0x004454, "Member 'UABP_EliteTank_TP_01_C::UseProceduralFace' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, StoppingTriggerDistance) == 0x004458, "Member 'UABP_EliteTank_TP_01_C::StoppingTriggerDistance' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, StepPhase) == 0x00445C, "Member 'UABP_EliteTank_TP_01_C::StepPhase' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, IsIdle) == 0x004460, "Member 'UABP_EliteTank_TP_01_C::IsIdle' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, DebugPos0) == 0x004464, "Member 'UABP_EliteTank_TP_01_C::DebugPos0' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, DebugTime0) == 0x004470, "Member 'UABP_EliteTank_TP_01_C::DebugTime0' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, DebugColor) == 0x004474, "Member 'UABP_EliteTank_TP_01_C::DebugColor' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, _DEBUG_CachedVelocity) == 0x004484, "Member 'UABP_EliteTank_TP_01_C::_DEBUG_CachedVelocity' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, _DEBUG_Velocity) == 0x004490, "Member 'UABP_EliteTank_TP_01_C::_DEBUG_Velocity' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, FireDeathAnims) == 0x0044A0, "Member 'UABP_EliteTank_TP_01_C::FireDeathAnims' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, DeathAnimsBBQ) == 0x0044B0, "Member 'UABP_EliteTank_TP_01_C::DeathAnimsBBQ' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, DeathDirectionIndex) == 0x0044C0, "Member 'UABP_EliteTank_TP_01_C::DeathDirectionIndex' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, DeathDirectionRotator) == 0x0044C4, "Member 'UABP_EliteTank_TP_01_C::DeathDirectionRotator' has a wrong offset!");
static_assert(offsetof(UABP_EliteTank_TP_01_C, DeathAttackDirection) == 0x0044D0, "Member 'UABP_EliteTank_TP_01_C::DeathAttackDirection' has a wrong offset!");

}

