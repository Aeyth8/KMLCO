#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CALocalisationRuntime

#include "Basic.hpp"

#include "Engine_classes.hpp"
#include "CoreUObject_classes.hpp"


namespace SDK
{

// Class CALocalisationRuntime.CALocalisationBlueprintFunctionLibrary
// 0x0000 (0x0030 - 0x0030)
class UCALocalisationBlueprintFunctionLibrary final : public UBlueprintFunctionLibrary
{
public:
	static void MakeTextFromCAText(class UObject* WorldContextObject, const struct FCAText& Ca_text, class FText* Text);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CALocalisationBlueprintFunctionLibrary">();
	}
	static class UCALocalisationBlueprintFunctionLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCALocalisationBlueprintFunctionLibrary>();
	}
};
static_assert(alignof(UCALocalisationBlueprintFunctionLibrary) == 0x000008, "Wrong alignment on UCALocalisationBlueprintFunctionLibrary");
static_assert(sizeof(UCALocalisationBlueprintFunctionLibrary) == 0x000030, "Wrong size on UCALocalisationBlueprintFunctionLibrary");

// Class CALocalisationRuntime.CALocalisationDatabase
// 0x0080 (0x00B8 - 0x0038)
class UCALocalisationDatabase final : public UDataAsset
{
public:
	TArray<int64>                                 M_table_guid_hashes;                               // 0x0038(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FString>                         M_table_names;                                     // 0x0048(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FString>                         M_cultures_with_translations;                      // 0x0058(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_68[0x50];                                      // 0x0068(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CALocalisationDatabase">();
	}
	static class UCALocalisationDatabase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCALocalisationDatabase>();
	}
};
static_assert(alignof(UCALocalisationDatabase) == 0x000008, "Wrong alignment on UCALocalisationDatabase");
static_assert(sizeof(UCALocalisationDatabase) == 0x0000B8, "Wrong size on UCALocalisationDatabase");
static_assert(offsetof(UCALocalisationDatabase, M_table_guid_hashes) == 0x000038, "Member 'UCALocalisationDatabase::M_table_guid_hashes' has a wrong offset!");
static_assert(offsetof(UCALocalisationDatabase, M_table_names) == 0x000048, "Member 'UCALocalisationDatabase::M_table_names' has a wrong offset!");
static_assert(offsetof(UCALocalisationDatabase, M_cultures_with_translations) == 0x000058, "Member 'UCALocalisationDatabase::M_cultures_with_translations' has a wrong offset!");

// Class CALocalisationRuntime.CALocalisationSettings
// 0x0018 (0x0048 - 0x0030)
class UCALocalisationSettings final : public UObject
{
public:
	class FString                                 KeyValueStoreUrl;                                  // 0x0030(0x0010)(Edit, ZeroConstructor, Config, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          UseFakeTranslations;                               // 0x0040(0x0001)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CALocalisationSettings">();
	}
	static class UCALocalisationSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCALocalisationSettings>();
	}
};
static_assert(alignof(UCALocalisationSettings) == 0x000008, "Wrong alignment on UCALocalisationSettings");
static_assert(sizeof(UCALocalisationSettings) == 0x000048, "Wrong size on UCALocalisationSettings");
static_assert(offsetof(UCALocalisationSettings, KeyValueStoreUrl) == 0x000030, "Member 'UCALocalisationSettings::KeyValueStoreUrl' has a wrong offset!");
static_assert(offsetof(UCALocalisationSettings, UseFakeTranslations) == 0x000040, "Member 'UCALocalisationSettings::UseFakeTranslations' has a wrong offset!");

// Class CALocalisationRuntime.CALocalisationTable
// 0x0050 (0x0088 - 0x0038)
class UCALocalisationTable final : public UDataAsset
{
public:
	TMap<int64, class FText>                      M_all_text;                                        // 0x0038(0x0050)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CALocalisationTable">();
	}
	static class UCALocalisationTable* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCALocalisationTable>();
	}
};
static_assert(alignof(UCALocalisationTable) == 0x000008, "Wrong alignment on UCALocalisationTable");
static_assert(sizeof(UCALocalisationTable) == 0x000088, "Wrong size on UCALocalisationTable");
static_assert(offsetof(UCALocalisationTable, M_all_text) == 0x000038, "Member 'UCALocalisationTable::M_all_text' has a wrong offset!");

}

