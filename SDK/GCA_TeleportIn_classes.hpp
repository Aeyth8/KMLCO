#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GCA_TeleportIn

#include "Basic.hpp"

#include "CAAudio_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Keaton_structs.hpp"
#include "GameplayAbilities_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GCA_TeleportIn.GCA_TeleportIn_C
// 0x0098 (0x0358 - 0x02C0)
class AGCA_TeleportIn_C final : public AGameplayCueNotify_Actor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         CumulativeDeltaTime;                               // 0x02D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EventExampleTime;                                  // 0x02D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Debug_Colour;                                      // 0x02D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACACharacter_NPC*                       CurrentCharacter;                                  // 0x02E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HasTriggeredExample;                               // 0x02F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F1[0x7];                                      // 0x02F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCAAudioPlaybackInstance               Loop_Event;                                        // 0x02F8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UNiagaraSystem*                         NiagaraSystem;                                     // 0x0308(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TeleportationStartDelay;                           // 0x0310(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_314[0x4];                                      // 0x0314(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UNiagaraComponent>       NiagaraSystemInstance;                             // 0x0318(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, InstancedReference, HasGetValueTypeHash)
	float                                         TeleportationDurationDefault;                      // 0x0348(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TeleportStartTime;                                 // 0x034C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TeleportTimeRemaining;                             // 0x0350(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_GCA_TeleportIn(int32 EntryPoint);
	void TeleportStart();
	void TeleportEnd();
	void TeleportAudio(ECANPCType NPCType);
	bool OnRemove(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters);
	bool WhileActive(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GCA_TeleportIn_C">();
	}
	static class AGCA_TeleportIn_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AGCA_TeleportIn_C>();
	}
};
static_assert(alignof(AGCA_TeleportIn_C) == 0x000008, "Wrong alignment on AGCA_TeleportIn_C");
static_assert(sizeof(AGCA_TeleportIn_C) == 0x000358, "Wrong size on AGCA_TeleportIn_C");
static_assert(offsetof(AGCA_TeleportIn_C, UberGraphFrame) == 0x0002C0, "Member 'AGCA_TeleportIn_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AGCA_TeleportIn_C, DefaultSceneRoot) == 0x0002C8, "Member 'AGCA_TeleportIn_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(AGCA_TeleportIn_C, CumulativeDeltaTime) == 0x0002D0, "Member 'AGCA_TeleportIn_C::CumulativeDeltaTime' has a wrong offset!");
static_assert(offsetof(AGCA_TeleportIn_C, EventExampleTime) == 0x0002D4, "Member 'AGCA_TeleportIn_C::EventExampleTime' has a wrong offset!");
static_assert(offsetof(AGCA_TeleportIn_C, Debug_Colour) == 0x0002D8, "Member 'AGCA_TeleportIn_C::Debug_Colour' has a wrong offset!");
static_assert(offsetof(AGCA_TeleportIn_C, CurrentCharacter) == 0x0002E8, "Member 'AGCA_TeleportIn_C::CurrentCharacter' has a wrong offset!");
static_assert(offsetof(AGCA_TeleportIn_C, HasTriggeredExample) == 0x0002F0, "Member 'AGCA_TeleportIn_C::HasTriggeredExample' has a wrong offset!");
static_assert(offsetof(AGCA_TeleportIn_C, Loop_Event) == 0x0002F8, "Member 'AGCA_TeleportIn_C::Loop_Event' has a wrong offset!");
static_assert(offsetof(AGCA_TeleportIn_C, NiagaraSystem) == 0x000308, "Member 'AGCA_TeleportIn_C::NiagaraSystem' has a wrong offset!");
static_assert(offsetof(AGCA_TeleportIn_C, TeleportationStartDelay) == 0x000310, "Member 'AGCA_TeleportIn_C::TeleportationStartDelay' has a wrong offset!");
static_assert(offsetof(AGCA_TeleportIn_C, NiagaraSystemInstance) == 0x000318, "Member 'AGCA_TeleportIn_C::NiagaraSystemInstance' has a wrong offset!");
static_assert(offsetof(AGCA_TeleportIn_C, TeleportationDurationDefault) == 0x000348, "Member 'AGCA_TeleportIn_C::TeleportationDurationDefault' has a wrong offset!");
static_assert(offsetof(AGCA_TeleportIn_C, TeleportStartTime) == 0x00034C, "Member 'AGCA_TeleportIn_C::TeleportStartTime' has a wrong offset!");
static_assert(offsetof(AGCA_TeleportIn_C, TeleportTimeRemaining) == 0x000350, "Member 'AGCA_TeleportIn_C::TeleportTimeRemaining' has a wrong offset!");

}

