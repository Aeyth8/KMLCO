#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CAAudioUtilities

#include "Basic.hpp"

#include "Keaton_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "CAAudio_structs.hpp"
#include "AUDIO_Env_FoleySweetners_structs.hpp"
#include "PhysicsCore_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function CAAudioUtilities.CAAudioUtilities_C.PlaySpecialistFoostepAudio
// 0x0438 (0x0438 - 0x0000)
struct CAAudioUtilities_C_PlaySpecialistFoostepAudio final
{
public:
	class ACACharacter_MainPlayer*                Character_Main_Player;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECAPlayerMovementMode                         Current_Movement_Mode;                             // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Footstep_Event_Max_Distance;                       // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCAAudioStateValueType                 CASPr_CNTR_State;                                  // 0x001C(0x0004)(Edit, BlueprintVisible, NoDestructor)
	ECAPlayerMovementMode                         Player_Movement_Mode;                              // 0x0020(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCAAudioStateValueType                 VentCheck;                                         // 0x0024(0x0004)(Edit, BlueprintVisible, NoDestructor)
	struct FCAAudioEventType                      FP_Footstep_Event;                                 // 0x0028(0x0004)(Edit, BlueprintVisible, NoDestructor)
	struct FCAAudioEventType                      TP_Footstep_Event;                                 // 0x002C(0x0004)(Edit, BlueprintVisible, NoDestructor)
	struct FCAAudioEventType                      TP_Inital_Footstep_Event;                          // 0x0030(0x0004)(Edit, BlueprintVisible, NoDestructor)
	ECAPlayerMovementMetaMode                     Player_Meta_Movement_State;                        // 0x0034(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCAAudioBankNameType                   MaterialBank;                                      // 0x0038(0x0004)(Edit, BlueprintVisible, DisableEditOnTemplate, NoDestructor)
	TDelegate<void(const struct FCAAudioEventType& Event_name)> Temp_delegate_Variable;                            // 0x003C(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	struct FCAAudioPlaybackInstance               CallFunc_PlayEvent_playback_instance;              // 0x0050(0x0010)()
	bool                                          CallFunc_PlayEvent_play_success;                   // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const struct FCAAudioEventType& Event_name)> Temp_delegate_Variable_1;                          // 0x0064(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	bool                                          CallFunc_CompareHashIsEqual_ReturnValue;           // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const struct FCAAudioEventType& Event_name)> Temp_delegate_Variable_2;                          // 0x007C(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	TDelegate<void(const struct FCAAudioEventType& Event_name)> Temp_delegate_Variable_3;                          // 0x0090(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	TDelegate<void(const struct FCAAudioEventType& Event_name)> Temp_delegate_Variable_4;                          // 0x00A4(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCAAudioPlaybackInstance               CallFunc_PlayEvent_playback_instance_1;            // 0x00C0(0x0010)()
	bool                                          CallFunc_PlayEvent_play_success_1;                 // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x00D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00D3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x00D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x00D6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_5;        // 0x00D7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_FootstepSimulationEnabled_ReturnValue;    // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x00DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DB[0x1];                                       // 0x00DB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetCASPrZoneInfo_id;                      // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EZoneType                                     CallFunc_GetCASPrZoneInfo_type;                    // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E1[0x3];                                       // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCAAudioStateValueType                 CallFunc_GetCASPrZoneInfo_size;                    // 0x00E4(0x0004)(NoDestructor)
	float                                         CallFunc_GetCASPrZoneInfo_volume;                  // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCASPrZoneInfo_ReturnValue;             // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_ED[0x3];                                       // 0x00ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetCASPrZoneInfo_id_1;                    // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EZoneType                                     CallFunc_GetCASPrZoneInfo_type_1;                  // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F5[0x3];                                       // 0x00F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCAAudioStateValueType                 CallFunc_GetCASPrZoneInfo_size_1;                  // 0x00F8(0x0004)(NoDestructor)
	float                                         CallFunc_GetCASPrZoneInfo_volume_1;                // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCASPrZoneInfo_ReturnValue_1;           // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CompareHashIsEqual_ReturnValue_1;         // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_102[0x6];                                      // 0x0102(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0108(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0118(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_124[0x4];                                      // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCAAudioPlaybackInstance               CallFunc_PlayEvent_playback_instance_2;            // 0x0128(0x0010)()
	bool                                          CallFunc_PlayEvent_play_success_2;                 // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_139[0x3];                                      // 0x0139(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x013C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x0148(0x0090)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D9[0x7];                                      // 0x01D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         K2Node_MakeArray_Array_1;                          // 0x01E0(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x01F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F2[0x2];                                      // 0x01F2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x01F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x01FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0208(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0214(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0220(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22C[0x4];                                      // 0x022C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0240(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0248(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0254(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x025C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0260(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x026C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPhysicalSurface                              CallFunc_GetSurfaceType_ReturnValue;               // 0x0279(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_27A[0x2];                                      // 0x027A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x027C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x0288(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_294[0x4];                                      // 0x0294(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCAAudioPlaybackInstance               CallFunc_PlayEvent_playback_instance_3;            // 0x0298(0x0010)()
	bool                                          CallFunc_PlayEvent_play_success_3;                 // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A9[0x3];                                      // 0x02A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit_1;                 // 0x02AC(0x0090)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue_1;            // 0x033C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_1;            // 0x033D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_1;         // 0x033E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33F[0x1];                                      // 0x033F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_1;                    // 0x0340(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_1;                // 0x0344(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location_1;                // 0x0348(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_1;             // 0x0354(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_1;                  // 0x0360(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_1;            // 0x036C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_1;                 // 0x0378(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_1;                // 0x0380(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_1;            // 0x0388(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_1;             // 0x0390(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_1;                 // 0x039C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_1;            // 0x03A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_1;               // 0x03A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart_1;              // 0x03A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_1;                // 0x03B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x03C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPhysicalSurface                              CallFunc_GetSurfaceType_ReturnValue_1;             // 0x03C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsBeingViewed_ReturnValue;                // 0x03C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C3[0x5];                                      // 0x03C3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCAAudioPlaybackInstance               CallFunc_PlayEvent_playback_instance_4;            // 0x03C8(0x0010)()
	bool                                          CallFunc_PlayEvent_play_success_4;                 // 0x03D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D9[0x3];                                      // 0x03D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const struct FCAAudioEventType& Event_name)> Temp_delegate_Variable_5;                          // 0x03DC(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	TDelegate<void(const struct FCAAudioEventType& Event_name)> Temp_delegate_Variable_6;                          // 0x03F0(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	uint8                                         Pad_404[0x4];                                      // 0x0404(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCAAudioPlaybackInstance               CallFunc_PlayEvent_playback_instance_5;            // 0x0408(0x0010)()
	bool                                          CallFunc_PlayEvent_play_success_5;                 // 0x0418(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_419[0x7];                                      // 0x0419(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCAAudioPlaybackInstance               CallFunc_PlayEvent_playback_instance_6;            // 0x0420(0x0010)()
	bool                                          CallFunc_PlayEvent_play_success_6;                 // 0x0430(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CAAudioUtilities_C_PlaySpecialistFoostepAudio) == 0x000008, "Wrong alignment on CAAudioUtilities_C_PlaySpecialistFoostepAudio");
static_assert(sizeof(CAAudioUtilities_C_PlaySpecialistFoostepAudio) == 0x000438, "Wrong size on CAAudioUtilities_C_PlaySpecialistFoostepAudio");
static_assert(offsetof(CAAudioUtilities_C_PlaySpecialistFoostepAudio, Character_Main_Player) == 0x000000, "Member 'CAAudioUtilities_C_PlaySpecialistFoostepAudio::Character_Main_Player' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlaySpecialistFoostepAudio, Current_Movement_Mode) == 0x000008, "Member 'CAAudioUtilities_C_PlaySpecialistFoostepAudio::Current_Movement_Mode' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlaySpecialistFoostepAudio, __WorldContext) == 0x000010, "Member 'CAAudioUtilities_C_PlaySpecialistFoostepAudio::__WorldContext' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlaySpecialistFoostepAudio, Footstep_Event_Max_Distance) == 0x000018, "Member 'CAAudioUtilities_C_PlaySpecialistFoostepAudio::Footstep_Event_Max_Distance' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlaySpecialistFoostepAudio, CASPr_CNTR_State) == 0x00001C, "Member 'CAAudioUtilities_C_PlaySpecialistFoostepAudio::CASPr_CNTR_State' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlaySpecialistFoostepAudio, Player_Movement_Mode) == 0x000020, "Member 'CAAudioUtilities_C_PlaySpecialistFoostepAudio::Player_Movement_Mode' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlaySpecialistFoostepAudio, VentCheck) == 0x000024, "Member 'CAAudioUtilities_C_PlaySpecialistFoostepAudio::VentCheck' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlaySpecialistFoostepAudio, FP_Footstep_Event) == 0x000028, "Member 'CAAudioUtilities_C_PlaySpecialistFoostepAudio::FP_Footstep_Event' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlaySpecialistFoostepAudio, TP_Footstep_Event) == 0x00002C, "Member 'CAAudioUtilities_C_PlaySpecialistFoostepAudio::TP_Footstep_Event' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlaySpecialistFoostepAudio, TP_Inital_Footstep_Event) == 0x000030, "Member 'CAAudioUtilities_C_PlaySpecialistFoostepAudio::TP_Inital_Footstep_Event' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlaySpecialistFoostepAudio, Player_Meta_Movement_State) == 0x000034, "Member 'CAAudioUtilities_C_PlaySpecialistFoostepAudio::Player_Meta_Movement_State' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlaySpecialistFoostepAudio, MaterialBank) == 0x000038, "Member 'CAAudioUtilities_C_PlaySpecialistFoostepAudio::MaterialBank' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlaySpecialistFoostepAudio, Temp_delegate_Variable) == 0x00003C, "Member 'CAAudioUtilities_C_PlaySpecialistFoostepAudio::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlaySpecialistFoostepAudio, CallFunc_PlayEvent_playback_instance) == 0x000050, "Member 'CAAudioUtilities_C_PlaySpecialistFoostepAudio::CallFunc_PlayEvent_playback_instance' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlaySpecialistFoostepAudio, CallFunc_PlayEvent_play_success) == 0x000060, "Member 'CAAudioUtilities_C_PlaySpecialistFoostepAudio::CallFunc_PlayEvent_play_success' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlaySpecialistFoostepAudio, Temp_delegate_Variable_1) == 0x000064, "Member 'CAAudioUtilities_C_PlaySpecialistFoostepAudio::Temp_delegate_Variable_1' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlaySpecialistFoostepAudio, CallFunc_CompareHashIsEqual_ReturnValue) == 0x000078, "Member 'CAAudioUtilities_C_PlaySpecialistFoostepAudio::CallFunc_CompareHashIsEqual_ReturnValue' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlaySpecialistFoostepAudio, Temp_delegate_Variable_2) == 0x00007C, "Member 'CAAudioUtilities_C_PlaySpecialistFoostepAudio::Temp_delegate_Variable_2' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlaySpecialistFoostepAudio, Temp_delegate_Variable_3) == 0x000090, "Member 'CAAudioUtilities_C_PlaySpecialistFoostepAudio::Temp_delegate_Variable_3' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlaySpecialistFoostepAudio, Temp_delegate_Variable_4) == 0x0000A4, "Member 'CAAudioUtilities_C_PlaySpecialistFoostepAudio::Temp_delegate_Variable_4' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlaySpecialistFoostepAudio, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000B8, "Member 'CAAudioUtilities_C_PlaySpecialistFoostepAudio::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlaySpecialistFoostepAudio, CallFunc_PlayEvent_playback_instance_1) == 0x0000C0, "Member 'CAAudioUtilities_C_PlaySpecialistFoostepAudio::CallFunc_PlayEvent_playback_instance_1' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlaySpecialistFoostepAudio, CallFunc_PlayEvent_play_success_1) == 0x0000D0, "Member 'CAAudioUtilities_C_PlaySpecialistFoostepAudio::CallFunc_PlayEvent_play_success_1' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlaySpecialistFoostepAudio, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0000D1, "Member 'CAAudioUtilities_C_PlaySpecialistFoostepAudio::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlaySpecialistFoostepAudio, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x0000D2, "Member 'CAAudioUtilities_C_PlaySpecialistFoostepAudio::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlaySpecialistFoostepAudio, CallFunc_BooleanOR_ReturnValue) == 0x0000D3, "Member 'CAAudioUtilities_C_PlaySpecialistFoostepAudio::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlaySpecialistFoostepAudio, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x0000D4, "Member 'CAAudioUtilities_C_PlaySpecialistFoostepAudio::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlaySpecialistFoostepAudio, CallFunc_BooleanOR_ReturnValue_1) == 0x0000D5, "Member 'CAAudioUtilities_C_PlaySpecialistFoostepAudio::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlaySpecialistFoostepAudio, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x0000D6, "Member 'CAAudioUtilities_C_PlaySpecialistFoostepAudio::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlaySpecialistFoostepAudio, CallFunc_EqualEqual_ByteByte_ReturnValue_5) == 0x0000D7, "Member 'CAAudioUtilities_C_PlaySpecialistFoostepAudio::CallFunc_EqualEqual_ByteByte_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlaySpecialistFoostepAudio, CallFunc_FootstepSimulationEnabled_ReturnValue) == 0x0000D8, "Member 'CAAudioUtilities_C_PlaySpecialistFoostepAudio::CallFunc_FootstepSimulationEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlaySpecialistFoostepAudio, CallFunc_BooleanOR_ReturnValue_2) == 0x0000D9, "Member 'CAAudioUtilities_C_PlaySpecialistFoostepAudio::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlaySpecialistFoostepAudio, CallFunc_BooleanOR_ReturnValue_3) == 0x0000DA, "Member 'CAAudioUtilities_C_PlaySpecialistFoostepAudio::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlaySpecialistFoostepAudio, CallFunc_GetCASPrZoneInfo_id) == 0x0000DC, "Member 'CAAudioUtilities_C_PlaySpecialistFoostepAudio::CallFunc_GetCASPrZoneInfo_id' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlaySpecialistFoostepAudio, CallFunc_GetCASPrZoneInfo_type) == 0x0000E0, "Member 'CAAudioUtilities_C_PlaySpecialistFoostepAudio::CallFunc_GetCASPrZoneInfo_type' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlaySpecialistFoostepAudio, CallFunc_GetCASPrZoneInfo_size) == 0x0000E4, "Member 'CAAudioUtilities_C_PlaySpecialistFoostepAudio::CallFunc_GetCASPrZoneInfo_size' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlaySpecialistFoostepAudio, CallFunc_GetCASPrZoneInfo_volume) == 0x0000E8, "Member 'CAAudioUtilities_C_PlaySpecialistFoostepAudio::CallFunc_GetCASPrZoneInfo_volume' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlaySpecialistFoostepAudio, CallFunc_GetCASPrZoneInfo_ReturnValue) == 0x0000EC, "Member 'CAAudioUtilities_C_PlaySpecialistFoostepAudio::CallFunc_GetCASPrZoneInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlaySpecialistFoostepAudio, CallFunc_GetCASPrZoneInfo_id_1) == 0x0000F0, "Member 'CAAudioUtilities_C_PlaySpecialistFoostepAudio::CallFunc_GetCASPrZoneInfo_id_1' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlaySpecialistFoostepAudio, CallFunc_GetCASPrZoneInfo_type_1) == 0x0000F4, "Member 'CAAudioUtilities_C_PlaySpecialistFoostepAudio::CallFunc_GetCASPrZoneInfo_type_1' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlaySpecialistFoostepAudio, CallFunc_GetCASPrZoneInfo_size_1) == 0x0000F8, "Member 'CAAudioUtilities_C_PlaySpecialistFoostepAudio::CallFunc_GetCASPrZoneInfo_size_1' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlaySpecialistFoostepAudio, CallFunc_GetCASPrZoneInfo_volume_1) == 0x0000FC, "Member 'CAAudioUtilities_C_PlaySpecialistFoostepAudio::CallFunc_GetCASPrZoneInfo_volume_1' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlaySpecialistFoostepAudio, CallFunc_GetCASPrZoneInfo_ReturnValue_1) == 0x000100, "Member 'CAAudioUtilities_C_PlaySpecialistFoostepAudio::CallFunc_GetCASPrZoneInfo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlaySpecialistFoostepAudio, CallFunc_CompareHashIsEqual_ReturnValue_1) == 0x000101, "Member 'CAAudioUtilities_C_PlaySpecialistFoostepAudio::CallFunc_CompareHashIsEqual_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlaySpecialistFoostepAudio, K2Node_MakeArray_Array) == 0x000108, "Member 'CAAudioUtilities_C_PlaySpecialistFoostepAudio::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlaySpecialistFoostepAudio, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000118, "Member 'CAAudioUtilities_C_PlaySpecialistFoostepAudio::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlaySpecialistFoostepAudio, CallFunc_PlayEvent_playback_instance_2) == 0x000128, "Member 'CAAudioUtilities_C_PlaySpecialistFoostepAudio::CallFunc_PlayEvent_playback_instance_2' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlaySpecialistFoostepAudio, CallFunc_PlayEvent_play_success_2) == 0x000138, "Member 'CAAudioUtilities_C_PlaySpecialistFoostepAudio::CallFunc_PlayEvent_play_success_2' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlaySpecialistFoostepAudio, CallFunc_Subtract_VectorVector_ReturnValue) == 0x00013C, "Member 'CAAudioUtilities_C_PlaySpecialistFoostepAudio::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlaySpecialistFoostepAudio, CallFunc_LineTraceSingle_OutHit) == 0x000148, "Member 'CAAudioUtilities_C_PlaySpecialistFoostepAudio::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlaySpecialistFoostepAudio, CallFunc_LineTraceSingle_ReturnValue) == 0x0001D8, "Member 'CAAudioUtilities_C_PlaySpecialistFoostepAudio::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlaySpecialistFoostepAudio, K2Node_MakeArray_Array_1) == 0x0001E0, "Member 'CAAudioUtilities_C_PlaySpecialistFoostepAudio::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlaySpecialistFoostepAudio, CallFunc_BreakHitResult_bBlockingHit) == 0x0001F0, "Member 'CAAudioUtilities_C_PlaySpecialistFoostepAudio::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlaySpecialistFoostepAudio, CallFunc_BreakHitResult_bInitialOverlap) == 0x0001F1, "Member 'CAAudioUtilities_C_PlaySpecialistFoostepAudio::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlaySpecialistFoostepAudio, CallFunc_BreakHitResult_Time) == 0x0001F4, "Member 'CAAudioUtilities_C_PlaySpecialistFoostepAudio::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlaySpecialistFoostepAudio, CallFunc_BreakHitResult_Distance) == 0x0001F8, "Member 'CAAudioUtilities_C_PlaySpecialistFoostepAudio::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlaySpecialistFoostepAudio, CallFunc_BreakHitResult_Location) == 0x0001FC, "Member 'CAAudioUtilities_C_PlaySpecialistFoostepAudio::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlaySpecialistFoostepAudio, CallFunc_BreakHitResult_ImpactPoint) == 0x000208, "Member 'CAAudioUtilities_C_PlaySpecialistFoostepAudio::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlaySpecialistFoostepAudio, CallFunc_BreakHitResult_Normal) == 0x000214, "Member 'CAAudioUtilities_C_PlaySpecialistFoostepAudio::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlaySpecialistFoostepAudio, CallFunc_BreakHitResult_ImpactNormal) == 0x000220, "Member 'CAAudioUtilities_C_PlaySpecialistFoostepAudio::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlaySpecialistFoostepAudio, CallFunc_BreakHitResult_PhysMat) == 0x000230, "Member 'CAAudioUtilities_C_PlaySpecialistFoostepAudio::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlaySpecialistFoostepAudio, CallFunc_BreakHitResult_HitActor) == 0x000238, "Member 'CAAudioUtilities_C_PlaySpecialistFoostepAudio::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlaySpecialistFoostepAudio, CallFunc_BreakHitResult_HitComponent) == 0x000240, "Member 'CAAudioUtilities_C_PlaySpecialistFoostepAudio::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlaySpecialistFoostepAudio, CallFunc_BreakHitResult_HitBoneName) == 0x000248, "Member 'CAAudioUtilities_C_PlaySpecialistFoostepAudio::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlaySpecialistFoostepAudio, CallFunc_BreakHitResult_HitItem) == 0x000254, "Member 'CAAudioUtilities_C_PlaySpecialistFoostepAudio::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlaySpecialistFoostepAudio, CallFunc_BreakHitResult_ElementIndex) == 0x000258, "Member 'CAAudioUtilities_C_PlaySpecialistFoostepAudio::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlaySpecialistFoostepAudio, CallFunc_BreakHitResult_FaceIndex) == 0x00025C, "Member 'CAAudioUtilities_C_PlaySpecialistFoostepAudio::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlaySpecialistFoostepAudio, CallFunc_BreakHitResult_TraceStart) == 0x000260, "Member 'CAAudioUtilities_C_PlaySpecialistFoostepAudio::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlaySpecialistFoostepAudio, CallFunc_BreakHitResult_TraceEnd) == 0x00026C, "Member 'CAAudioUtilities_C_PlaySpecialistFoostepAudio::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlaySpecialistFoostepAudio, CallFunc_IsValid_ReturnValue) == 0x000278, "Member 'CAAudioUtilities_C_PlaySpecialistFoostepAudio::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlaySpecialistFoostepAudio, CallFunc_GetSurfaceType_ReturnValue) == 0x000279, "Member 'CAAudioUtilities_C_PlaySpecialistFoostepAudio::CallFunc_GetSurfaceType_ReturnValue' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlaySpecialistFoostepAudio, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x00027C, "Member 'CAAudioUtilities_C_PlaySpecialistFoostepAudio::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlaySpecialistFoostepAudio, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x000288, "Member 'CAAudioUtilities_C_PlaySpecialistFoostepAudio::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlaySpecialistFoostepAudio, CallFunc_PlayEvent_playback_instance_3) == 0x000298, "Member 'CAAudioUtilities_C_PlaySpecialistFoostepAudio::CallFunc_PlayEvent_playback_instance_3' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlaySpecialistFoostepAudio, CallFunc_PlayEvent_play_success_3) == 0x0002A8, "Member 'CAAudioUtilities_C_PlaySpecialistFoostepAudio::CallFunc_PlayEvent_play_success_3' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlaySpecialistFoostepAudio, CallFunc_LineTraceSingle_OutHit_1) == 0x0002AC, "Member 'CAAudioUtilities_C_PlaySpecialistFoostepAudio::CallFunc_LineTraceSingle_OutHit_1' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlaySpecialistFoostepAudio, CallFunc_LineTraceSingle_ReturnValue_1) == 0x00033C, "Member 'CAAudioUtilities_C_PlaySpecialistFoostepAudio::CallFunc_LineTraceSingle_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlaySpecialistFoostepAudio, CallFunc_BreakHitResult_bBlockingHit_1) == 0x00033D, "Member 'CAAudioUtilities_C_PlaySpecialistFoostepAudio::CallFunc_BreakHitResult_bBlockingHit_1' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlaySpecialistFoostepAudio, CallFunc_BreakHitResult_bInitialOverlap_1) == 0x00033E, "Member 'CAAudioUtilities_C_PlaySpecialistFoostepAudio::CallFunc_BreakHitResult_bInitialOverlap_1' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlaySpecialistFoostepAudio, CallFunc_BreakHitResult_Time_1) == 0x000340, "Member 'CAAudioUtilities_C_PlaySpecialistFoostepAudio::CallFunc_BreakHitResult_Time_1' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlaySpecialistFoostepAudio, CallFunc_BreakHitResult_Distance_1) == 0x000344, "Member 'CAAudioUtilities_C_PlaySpecialistFoostepAudio::CallFunc_BreakHitResult_Distance_1' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlaySpecialistFoostepAudio, CallFunc_BreakHitResult_Location_1) == 0x000348, "Member 'CAAudioUtilities_C_PlaySpecialistFoostepAudio::CallFunc_BreakHitResult_Location_1' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlaySpecialistFoostepAudio, CallFunc_BreakHitResult_ImpactPoint_1) == 0x000354, "Member 'CAAudioUtilities_C_PlaySpecialistFoostepAudio::CallFunc_BreakHitResult_ImpactPoint_1' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlaySpecialistFoostepAudio, CallFunc_BreakHitResult_Normal_1) == 0x000360, "Member 'CAAudioUtilities_C_PlaySpecialistFoostepAudio::CallFunc_BreakHitResult_Normal_1' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlaySpecialistFoostepAudio, CallFunc_BreakHitResult_ImpactNormal_1) == 0x00036C, "Member 'CAAudioUtilities_C_PlaySpecialistFoostepAudio::CallFunc_BreakHitResult_ImpactNormal_1' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlaySpecialistFoostepAudio, CallFunc_BreakHitResult_PhysMat_1) == 0x000378, "Member 'CAAudioUtilities_C_PlaySpecialistFoostepAudio::CallFunc_BreakHitResult_PhysMat_1' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlaySpecialistFoostepAudio, CallFunc_BreakHitResult_HitActor_1) == 0x000380, "Member 'CAAudioUtilities_C_PlaySpecialistFoostepAudio::CallFunc_BreakHitResult_HitActor_1' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlaySpecialistFoostepAudio, CallFunc_BreakHitResult_HitComponent_1) == 0x000388, "Member 'CAAudioUtilities_C_PlaySpecialistFoostepAudio::CallFunc_BreakHitResult_HitComponent_1' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlaySpecialistFoostepAudio, CallFunc_BreakHitResult_HitBoneName_1) == 0x000390, "Member 'CAAudioUtilities_C_PlaySpecialistFoostepAudio::CallFunc_BreakHitResult_HitBoneName_1' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlaySpecialistFoostepAudio, CallFunc_BreakHitResult_HitItem_1) == 0x00039C, "Member 'CAAudioUtilities_C_PlaySpecialistFoostepAudio::CallFunc_BreakHitResult_HitItem_1' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlaySpecialistFoostepAudio, CallFunc_BreakHitResult_ElementIndex_1) == 0x0003A0, "Member 'CAAudioUtilities_C_PlaySpecialistFoostepAudio::CallFunc_BreakHitResult_ElementIndex_1' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlaySpecialistFoostepAudio, CallFunc_BreakHitResult_FaceIndex_1) == 0x0003A4, "Member 'CAAudioUtilities_C_PlaySpecialistFoostepAudio::CallFunc_BreakHitResult_FaceIndex_1' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlaySpecialistFoostepAudio, CallFunc_BreakHitResult_TraceStart_1) == 0x0003A8, "Member 'CAAudioUtilities_C_PlaySpecialistFoostepAudio::CallFunc_BreakHitResult_TraceStart_1' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlaySpecialistFoostepAudio, CallFunc_BreakHitResult_TraceEnd_1) == 0x0003B4, "Member 'CAAudioUtilities_C_PlaySpecialistFoostepAudio::CallFunc_BreakHitResult_TraceEnd_1' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlaySpecialistFoostepAudio, CallFunc_IsValid_ReturnValue_1) == 0x0003C0, "Member 'CAAudioUtilities_C_PlaySpecialistFoostepAudio::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlaySpecialistFoostepAudio, CallFunc_GetSurfaceType_ReturnValue_1) == 0x0003C1, "Member 'CAAudioUtilities_C_PlaySpecialistFoostepAudio::CallFunc_GetSurfaceType_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlaySpecialistFoostepAudio, CallFunc_IsBeingViewed_ReturnValue) == 0x0003C2, "Member 'CAAudioUtilities_C_PlaySpecialistFoostepAudio::CallFunc_IsBeingViewed_ReturnValue' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlaySpecialistFoostepAudio, CallFunc_PlayEvent_playback_instance_4) == 0x0003C8, "Member 'CAAudioUtilities_C_PlaySpecialistFoostepAudio::CallFunc_PlayEvent_playback_instance_4' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlaySpecialistFoostepAudio, CallFunc_PlayEvent_play_success_4) == 0x0003D8, "Member 'CAAudioUtilities_C_PlaySpecialistFoostepAudio::CallFunc_PlayEvent_play_success_4' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlaySpecialistFoostepAudio, Temp_delegate_Variable_5) == 0x0003DC, "Member 'CAAudioUtilities_C_PlaySpecialistFoostepAudio::Temp_delegate_Variable_5' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlaySpecialistFoostepAudio, Temp_delegate_Variable_6) == 0x0003F0, "Member 'CAAudioUtilities_C_PlaySpecialistFoostepAudio::Temp_delegate_Variable_6' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlaySpecialistFoostepAudio, CallFunc_PlayEvent_playback_instance_5) == 0x000408, "Member 'CAAudioUtilities_C_PlaySpecialistFoostepAudio::CallFunc_PlayEvent_playback_instance_5' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlaySpecialistFoostepAudio, CallFunc_PlayEvent_play_success_5) == 0x000418, "Member 'CAAudioUtilities_C_PlaySpecialistFoostepAudio::CallFunc_PlayEvent_play_success_5' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlaySpecialistFoostepAudio, CallFunc_PlayEvent_playback_instance_6) == 0x000420, "Member 'CAAudioUtilities_C_PlaySpecialistFoostepAudio::CallFunc_PlayEvent_playback_instance_6' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlaySpecialistFoostepAudio, CallFunc_PlayEvent_play_success_6) == 0x000430, "Member 'CAAudioUtilities_C_PlaySpecialistFoostepAudio::CallFunc_PlayEvent_play_success_6' has a wrong offset!");

// Function CAAudioUtilities.CAAudioUtilities_C.ConvertSurfaceToAudio
// 0x0020 (0x0020 - 0x0000)
struct CAAudioUtilities_C_ConvertSurfaceToAudio final
{
public:
	EPhysicalSurface                              Surface;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCAAudioSwitchValueType                Switch;                                            // 0x0010(0x0004)(Parm, OutParm, NoDestructor)
	struct FCAAudioBankNameType                   FootstepBank;                                      // 0x0014(0x0004)(Parm, OutParm, NoDestructor)
	struct FCAAudioSwitchValueType                CallFunc_GetMaterialAudio_switch_value;            // 0x0018(0x0004)(NoDestructor)
	struct FCAAudioBankNameType                   CallFunc_GetMaterialAudio_footstep_bank_name;      // 0x001C(0x0004)(NoDestructor)
};
static_assert(alignof(CAAudioUtilities_C_ConvertSurfaceToAudio) == 0x000008, "Wrong alignment on CAAudioUtilities_C_ConvertSurfaceToAudio");
static_assert(sizeof(CAAudioUtilities_C_ConvertSurfaceToAudio) == 0x000020, "Wrong size on CAAudioUtilities_C_ConvertSurfaceToAudio");
static_assert(offsetof(CAAudioUtilities_C_ConvertSurfaceToAudio, Surface) == 0x000000, "Member 'CAAudioUtilities_C_ConvertSurfaceToAudio::Surface' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_ConvertSurfaceToAudio, __WorldContext) == 0x000008, "Member 'CAAudioUtilities_C_ConvertSurfaceToAudio::__WorldContext' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_ConvertSurfaceToAudio, Switch) == 0x000010, "Member 'CAAudioUtilities_C_ConvertSurfaceToAudio::Switch' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_ConvertSurfaceToAudio, FootstepBank) == 0x000014, "Member 'CAAudioUtilities_C_ConvertSurfaceToAudio::FootstepBank' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_ConvertSurfaceToAudio, CallFunc_GetMaterialAudio_switch_value) == 0x000018, "Member 'CAAudioUtilities_C_ConvertSurfaceToAudio::CallFunc_GetMaterialAudio_switch_value' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_ConvertSurfaceToAudio, CallFunc_GetMaterialAudio_footstep_bank_name) == 0x00001C, "Member 'CAAudioUtilities_C_ConvertSurfaceToAudio::CallFunc_GetMaterialAudio_footstep_bank_name' has a wrong offset!");

// Function CAAudioUtilities.CAAudioUtilities_C.Play Jump Landing Audio
// 0x0160 (0x0160 - 0x0000)
struct CAAudioUtilities_C_Play_Jump_Landing_Audio final
{
public:
	class ACACharacter_MainPlayer*                Character_Main_Player;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECAPlayerMovementMetaMode                     Current_Movement_Meta_Mode;                        // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECAPlayerMovementMode                         Prev_Player_Movement_Mode;                         // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         PreLandSpeed;                                      // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Jump_Landing_Footstep_Event_Max_Distance;          // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PreLand_Speed;                                     // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              FP_PhysSurfaceType;                                // 0x0020(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCAAudioEventType                      FP_Jump_Landing_SFX_Event;                         // 0x0024(0x0004)(Edit, BlueprintVisible, NoDestructor)
	EPhysicalSurface                              TP_PhysSurfaceType;                                // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCAAudioEventType                      TP_Initial_Jump_Landing_SFX_Event;                 // 0x002C(0x0004)(Edit, BlueprintVisible, NoDestructor)
	struct FCAAudioEventType                      TP_Jump_Landing_SFX_Event;                         // 0x0030(0x0004)(Edit, BlueprintVisible, NoDestructor)
	struct FHitResult                             FP_Line_By_Trace_Hit_Result;                       // 0x0034(0x0090)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	ECAPlayerMovementMetaMode                     Movement_Meta_Mode;                                // 0x00C4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C5[0x3];                                       // 0x00C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             TP_Line_By_Trace_Hit_Result;                       // 0x00C8(0x0090)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CAAudioUtilities_C_Play_Jump_Landing_Audio) == 0x000008, "Wrong alignment on CAAudioUtilities_C_Play_Jump_Landing_Audio");
static_assert(sizeof(CAAudioUtilities_C_Play_Jump_Landing_Audio) == 0x000160, "Wrong size on CAAudioUtilities_C_Play_Jump_Landing_Audio");
static_assert(offsetof(CAAudioUtilities_C_Play_Jump_Landing_Audio, Character_Main_Player) == 0x000000, "Member 'CAAudioUtilities_C_Play_Jump_Landing_Audio::Character_Main_Player' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_Play_Jump_Landing_Audio, Current_Movement_Meta_Mode) == 0x000008, "Member 'CAAudioUtilities_C_Play_Jump_Landing_Audio::Current_Movement_Meta_Mode' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_Play_Jump_Landing_Audio, Prev_Player_Movement_Mode) == 0x000009, "Member 'CAAudioUtilities_C_Play_Jump_Landing_Audio::Prev_Player_Movement_Mode' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_Play_Jump_Landing_Audio, PreLandSpeed) == 0x00000C, "Member 'CAAudioUtilities_C_Play_Jump_Landing_Audio::PreLandSpeed' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_Play_Jump_Landing_Audio, __WorldContext) == 0x000010, "Member 'CAAudioUtilities_C_Play_Jump_Landing_Audio::__WorldContext' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_Play_Jump_Landing_Audio, Jump_Landing_Footstep_Event_Max_Distance) == 0x000018, "Member 'CAAudioUtilities_C_Play_Jump_Landing_Audio::Jump_Landing_Footstep_Event_Max_Distance' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_Play_Jump_Landing_Audio, PreLand_Speed) == 0x00001C, "Member 'CAAudioUtilities_C_Play_Jump_Landing_Audio::PreLand_Speed' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_Play_Jump_Landing_Audio, FP_PhysSurfaceType) == 0x000020, "Member 'CAAudioUtilities_C_Play_Jump_Landing_Audio::FP_PhysSurfaceType' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_Play_Jump_Landing_Audio, FP_Jump_Landing_SFX_Event) == 0x000024, "Member 'CAAudioUtilities_C_Play_Jump_Landing_Audio::FP_Jump_Landing_SFX_Event' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_Play_Jump_Landing_Audio, TP_PhysSurfaceType) == 0x000028, "Member 'CAAudioUtilities_C_Play_Jump_Landing_Audio::TP_PhysSurfaceType' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_Play_Jump_Landing_Audio, TP_Initial_Jump_Landing_SFX_Event) == 0x00002C, "Member 'CAAudioUtilities_C_Play_Jump_Landing_Audio::TP_Initial_Jump_Landing_SFX_Event' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_Play_Jump_Landing_Audio, TP_Jump_Landing_SFX_Event) == 0x000030, "Member 'CAAudioUtilities_C_Play_Jump_Landing_Audio::TP_Jump_Landing_SFX_Event' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_Play_Jump_Landing_Audio, FP_Line_By_Trace_Hit_Result) == 0x000034, "Member 'CAAudioUtilities_C_Play_Jump_Landing_Audio::FP_Line_By_Trace_Hit_Result' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_Play_Jump_Landing_Audio, Movement_Meta_Mode) == 0x0000C4, "Member 'CAAudioUtilities_C_Play_Jump_Landing_Audio::Movement_Meta_Mode' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_Play_Jump_Landing_Audio, TP_Line_By_Trace_Hit_Result) == 0x0000C8, "Member 'CAAudioUtilities_C_Play_Jump_Landing_Audio::TP_Line_By_Trace_Hit_Result' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_Play_Jump_Landing_Audio, CallFunc_IsValid_ReturnValue) == 0x000158, "Member 'CAAudioUtilities_C_Play_Jump_Landing_Audio::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function CAAudioUtilities.CAAudioUtilities_C.OnMovementModeChangeSetSwitchAudio
// 0x0020 (0x0020 - 0x0000)
struct CAAudioUtilities_C_OnMovementModeChangeSetSwitchAudio final
{
public:
	class ACACharacter_MainPlayer*                Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECAPlayerMovementMode                         PreviousMovementMode;                              // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECAPlayerMovementMode                         CurrentMovementMode;                               // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CAAudioUtilities_C_OnMovementModeChangeSetSwitchAudio) == 0x000008, "Wrong alignment on CAAudioUtilities_C_OnMovementModeChangeSetSwitchAudio");
static_assert(sizeof(CAAudioUtilities_C_OnMovementModeChangeSetSwitchAudio) == 0x000020, "Wrong size on CAAudioUtilities_C_OnMovementModeChangeSetSwitchAudio");
static_assert(offsetof(CAAudioUtilities_C_OnMovementModeChangeSetSwitchAudio, Character) == 0x000000, "Member 'CAAudioUtilities_C_OnMovementModeChangeSetSwitchAudio::Character' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_OnMovementModeChangeSetSwitchAudio, PreviousMovementMode) == 0x000008, "Member 'CAAudioUtilities_C_OnMovementModeChangeSetSwitchAudio::PreviousMovementMode' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_OnMovementModeChangeSetSwitchAudio, CurrentMovementMode) == 0x000009, "Member 'CAAudioUtilities_C_OnMovementModeChangeSetSwitchAudio::CurrentMovementMode' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_OnMovementModeChangeSetSwitchAudio, __WorldContext) == 0x000010, "Member 'CAAudioUtilities_C_OnMovementModeChangeSetSwitchAudio::__WorldContext' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_OnMovementModeChangeSetSwitchAudio, K2Node_SwitchEnum_CmpSuccess) == 0x000018, "Member 'CAAudioUtilities_C_OnMovementModeChangeSetSwitchAudio::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function CAAudioUtilities.CAAudioUtilities_C.PlayZeroGWallLanding
// 0x0098 (0x0098 - 0x0000)
struct CAAudioUtilities_C_PlayZeroGWallLanding final
{
public:
	class AActor*                                 Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Landing_World_Pos;                                 // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsLocallyControlled_;                              // 0x0014(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsPredictedImpactValid;                            // 0x0015(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_16[0x2];                                       // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Pre_Landing_Speed;                                 // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PreLandingSpeed;                                   // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x002F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCAAudioSwitchValueType                Temp_struct_Variable;                              // 0x0034(0x0004)(NoDestructor)
	struct FCAAudioSwitchValueType                Temp_struct_Variable_1;                            // 0x0038(0x0004)(NoDestructor)
	TDelegate<void(const struct FCAAudioEventType& Event_name)> Temp_delegate_Variable;                            // 0x003C(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	class ACACharacter_MainPlayer*                K2Node_DynamicCast_AsCACharacter_Main_Player;      // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_3;                              // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B[0x1];                                       // 0x005B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCAAudioSwitchValueType                K2Node_Select_Default;                             // 0x005C(0x0004)(NoDestructor)
	bool                                          K2Node_Select_Default_1;                           // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCAAudioPlaybackInstance               CallFunc_PlayEvent_playback_instance;              // 0x0068(0x0010)()
	bool                                          CallFunc_PlayEvent_play_success;                   // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCAAudioPlaybackInstance               CallFunc_PlayEventInWorld_playback_instance;       // 0x0080(0x0010)()
	bool                                          CallFunc_PlayEventInWorld_play_success;            // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CAAudioUtilities_C_PlayZeroGWallLanding) == 0x000008, "Wrong alignment on CAAudioUtilities_C_PlayZeroGWallLanding");
static_assert(sizeof(CAAudioUtilities_C_PlayZeroGWallLanding) == 0x000098, "Wrong size on CAAudioUtilities_C_PlayZeroGWallLanding");
static_assert(offsetof(CAAudioUtilities_C_PlayZeroGWallLanding, Character) == 0x000000, "Member 'CAAudioUtilities_C_PlayZeroGWallLanding::Character' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayZeroGWallLanding, Landing_World_Pos) == 0x000008, "Member 'CAAudioUtilities_C_PlayZeroGWallLanding::Landing_World_Pos' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayZeroGWallLanding, IsLocallyControlled_) == 0x000014, "Member 'CAAudioUtilities_C_PlayZeroGWallLanding::IsLocallyControlled_' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayZeroGWallLanding, IsPredictedImpactValid) == 0x000015, "Member 'CAAudioUtilities_C_PlayZeroGWallLanding::IsPredictedImpactValid' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayZeroGWallLanding, Pre_Landing_Speed) == 0x000018, "Member 'CAAudioUtilities_C_PlayZeroGWallLanding::Pre_Landing_Speed' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayZeroGWallLanding, __WorldContext) == 0x000020, "Member 'CAAudioUtilities_C_PlayZeroGWallLanding::__WorldContext' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayZeroGWallLanding, PreLandingSpeed) == 0x000028, "Member 'CAAudioUtilities_C_PlayZeroGWallLanding::PreLandingSpeed' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayZeroGWallLanding, Temp_bool_Variable) == 0x00002C, "Member 'CAAudioUtilities_C_PlayZeroGWallLanding::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayZeroGWallLanding, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x00002D, "Member 'CAAudioUtilities_C_PlayZeroGWallLanding::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayZeroGWallLanding, CallFunc_BooleanAND_ReturnValue) == 0x00002E, "Member 'CAAudioUtilities_C_PlayZeroGWallLanding::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayZeroGWallLanding, Temp_bool_Variable_1) == 0x00002F, "Member 'CAAudioUtilities_C_PlayZeroGWallLanding::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayZeroGWallLanding, Temp_bool_Variable_2) == 0x000030, "Member 'CAAudioUtilities_C_PlayZeroGWallLanding::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayZeroGWallLanding, Temp_struct_Variable) == 0x000034, "Member 'CAAudioUtilities_C_PlayZeroGWallLanding::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayZeroGWallLanding, Temp_struct_Variable_1) == 0x000038, "Member 'CAAudioUtilities_C_PlayZeroGWallLanding::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayZeroGWallLanding, Temp_delegate_Variable) == 0x00003C, "Member 'CAAudioUtilities_C_PlayZeroGWallLanding::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayZeroGWallLanding, K2Node_DynamicCast_AsCACharacter_Main_Player) == 0x000050, "Member 'CAAudioUtilities_C_PlayZeroGWallLanding::K2Node_DynamicCast_AsCACharacter_Main_Player' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayZeroGWallLanding, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'CAAudioUtilities_C_PlayZeroGWallLanding::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayZeroGWallLanding, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000059, "Member 'CAAudioUtilities_C_PlayZeroGWallLanding::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayZeroGWallLanding, Temp_bool_Variable_3) == 0x00005A, "Member 'CAAudioUtilities_C_PlayZeroGWallLanding::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayZeroGWallLanding, K2Node_Select_Default) == 0x00005C, "Member 'CAAudioUtilities_C_PlayZeroGWallLanding::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayZeroGWallLanding, K2Node_Select_Default_1) == 0x000060, "Member 'CAAudioUtilities_C_PlayZeroGWallLanding::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayZeroGWallLanding, CallFunc_PlayEvent_playback_instance) == 0x000068, "Member 'CAAudioUtilities_C_PlayZeroGWallLanding::CallFunc_PlayEvent_playback_instance' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayZeroGWallLanding, CallFunc_PlayEvent_play_success) == 0x000078, "Member 'CAAudioUtilities_C_PlayZeroGWallLanding::CallFunc_PlayEvent_play_success' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayZeroGWallLanding, CallFunc_PlayEventInWorld_playback_instance) == 0x000080, "Member 'CAAudioUtilities_C_PlayZeroGWallLanding::CallFunc_PlayEventInWorld_playback_instance' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayZeroGWallLanding, CallFunc_PlayEventInWorld_play_success) == 0x000090, "Member 'CAAudioUtilities_C_PlayZeroGWallLanding::CallFunc_PlayEventInWorld_play_success' has a wrong offset!");

// Function CAAudioUtilities.CAAudioUtilities_C.PlayHandPlacementSurfaceLeftAudio
// 0x0148 (0x0148 - 0x0000)
struct CAAudioUtilities_C_PlayHandPlacementSurfaceLeftAudio final
{
public:
	class ACACharacter_MainPlayer*                Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorRightVector_ReturnValue;          // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorInt_ReturnValue;           // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0038(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x0054(0x0090)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsBeingViewed_ReturnValue;                // 0x00E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPhysicalSurface                              CallFunc_GetSurfaceType_ReturnValue;               // 0x00E6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E7[0x1];                                       // 0x00E7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCAAudioSwitchValueType                CallFunc_ConvertSurfaceToAudio_Switch;             // 0x00E8(0x0004)(NoDestructor)
	struct FCAAudioBankNameType                   CallFunc_ConvertSurfaceToAudio_FootstepBank;       // 0x00EC(0x0004)(NoDestructor)
	TDelegate<void(const struct FCAAudioEventType& Event_name)> Temp_delegate_Variable;                            // 0x00F0(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	uint8                                         Pad_104[0x4];                                      // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCAAudioPlaybackInstance               CallFunc_PlayEvent_playback_instance;              // 0x0108(0x0010)()
	bool                                          CallFunc_PlayEvent_play_success;                   // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_119[0x3];                                      // 0x0119(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const struct FCAAudioEventType& Event_name)> Temp_delegate_Variable_1;                          // 0x011C(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	struct FCAAudioPlaybackInstance               CallFunc_PlayEvent_playback_instance_1;            // 0x0130(0x0010)()
	bool                                          CallFunc_PlayEvent_play_success_1;                 // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CAAudioUtilities_C_PlayHandPlacementSurfaceLeftAudio) == 0x000008, "Wrong alignment on CAAudioUtilities_C_PlayHandPlacementSurfaceLeftAudio");
static_assert(sizeof(CAAudioUtilities_C_PlayHandPlacementSurfaceLeftAudio) == 0x000148, "Wrong size on CAAudioUtilities_C_PlayHandPlacementSurfaceLeftAudio");
static_assert(offsetof(CAAudioUtilities_C_PlayHandPlacementSurfaceLeftAudio, Character) == 0x000000, "Member 'CAAudioUtilities_C_PlayHandPlacementSurfaceLeftAudio::Character' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayHandPlacementSurfaceLeftAudio, __WorldContext) == 0x000008, "Member 'CAAudioUtilities_C_PlayHandPlacementSurfaceLeftAudio::__WorldContext' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayHandPlacementSurfaceLeftAudio, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'CAAudioUtilities_C_PlayHandPlacementSurfaceLeftAudio::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayHandPlacementSurfaceLeftAudio, CallFunc_GetActorRightVector_ReturnValue) == 0x000014, "Member 'CAAudioUtilities_C_PlayHandPlacementSurfaceLeftAudio::CallFunc_GetActorRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayHandPlacementSurfaceLeftAudio, CallFunc_Multiply_VectorInt_ReturnValue) == 0x000020, "Member 'CAAudioUtilities_C_PlayHandPlacementSurfaceLeftAudio::CallFunc_Multiply_VectorInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayHandPlacementSurfaceLeftAudio, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00002C, "Member 'CAAudioUtilities_C_PlayHandPlacementSurfaceLeftAudio::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayHandPlacementSurfaceLeftAudio, K2Node_MakeArray_Array) == 0x000038, "Member 'CAAudioUtilities_C_PlayHandPlacementSurfaceLeftAudio::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayHandPlacementSurfaceLeftAudio, CallFunc_Add_VectorVector_ReturnValue) == 0x000048, "Member 'CAAudioUtilities_C_PlayHandPlacementSurfaceLeftAudio::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayHandPlacementSurfaceLeftAudio, CallFunc_LineTraceSingle_OutHit) == 0x000054, "Member 'CAAudioUtilities_C_PlayHandPlacementSurfaceLeftAudio::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayHandPlacementSurfaceLeftAudio, CallFunc_LineTraceSingle_ReturnValue) == 0x0000E4, "Member 'CAAudioUtilities_C_PlayHandPlacementSurfaceLeftAudio::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayHandPlacementSurfaceLeftAudio, CallFunc_IsBeingViewed_ReturnValue) == 0x0000E5, "Member 'CAAudioUtilities_C_PlayHandPlacementSurfaceLeftAudio::CallFunc_IsBeingViewed_ReturnValue' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayHandPlacementSurfaceLeftAudio, CallFunc_GetSurfaceType_ReturnValue) == 0x0000E6, "Member 'CAAudioUtilities_C_PlayHandPlacementSurfaceLeftAudio::CallFunc_GetSurfaceType_ReturnValue' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayHandPlacementSurfaceLeftAudio, CallFunc_ConvertSurfaceToAudio_Switch) == 0x0000E8, "Member 'CAAudioUtilities_C_PlayHandPlacementSurfaceLeftAudio::CallFunc_ConvertSurfaceToAudio_Switch' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayHandPlacementSurfaceLeftAudio, CallFunc_ConvertSurfaceToAudio_FootstepBank) == 0x0000EC, "Member 'CAAudioUtilities_C_PlayHandPlacementSurfaceLeftAudio::CallFunc_ConvertSurfaceToAudio_FootstepBank' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayHandPlacementSurfaceLeftAudio, Temp_delegate_Variable) == 0x0000F0, "Member 'CAAudioUtilities_C_PlayHandPlacementSurfaceLeftAudio::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayHandPlacementSurfaceLeftAudio, CallFunc_PlayEvent_playback_instance) == 0x000108, "Member 'CAAudioUtilities_C_PlayHandPlacementSurfaceLeftAudio::CallFunc_PlayEvent_playback_instance' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayHandPlacementSurfaceLeftAudio, CallFunc_PlayEvent_play_success) == 0x000118, "Member 'CAAudioUtilities_C_PlayHandPlacementSurfaceLeftAudio::CallFunc_PlayEvent_play_success' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayHandPlacementSurfaceLeftAudio, Temp_delegate_Variable_1) == 0x00011C, "Member 'CAAudioUtilities_C_PlayHandPlacementSurfaceLeftAudio::Temp_delegate_Variable_1' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayHandPlacementSurfaceLeftAudio, CallFunc_PlayEvent_playback_instance_1) == 0x000130, "Member 'CAAudioUtilities_C_PlayHandPlacementSurfaceLeftAudio::CallFunc_PlayEvent_playback_instance_1' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayHandPlacementSurfaceLeftAudio, CallFunc_PlayEvent_play_success_1) == 0x000140, "Member 'CAAudioUtilities_C_PlayHandPlacementSurfaceLeftAudio::CallFunc_PlayEvent_play_success_1' has a wrong offset!");

// Function CAAudioUtilities.CAAudioUtilities_C.PlayHandPlacementSurfaceRightAudio
// 0x0150 (0x0150 - 0x0000)
struct CAAudioUtilities_C_PlayHandPlacementSurfaceRightAudio final
{
public:
	class ACACharacter_MainPlayer*                Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorRightVector_ReturnValue;          // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorInt_ReturnValue;           // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0030(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsBeingViewed_ReturnValue;                // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x005C(0x0090)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPhysicalSurface                              CallFunc_GetSurfaceType_ReturnValue;               // 0x00ED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EE[0x2];                                       // 0x00EE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCAAudioSwitchValueType                CallFunc_ConvertSurfaceToAudio_Switch;             // 0x00F0(0x0004)(NoDestructor)
	struct FCAAudioBankNameType                   CallFunc_ConvertSurfaceToAudio_FootstepBank;       // 0x00F4(0x0004)(NoDestructor)
	TDelegate<void(const struct FCAAudioEventType& Event_name)> Temp_delegate_Variable;                            // 0x00F8(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	uint8                                         Pad_10C[0x4];                                      // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCAAudioPlaybackInstance               CallFunc_PlayEvent_playback_instance;              // 0x0110(0x0010)()
	bool                                          CallFunc_PlayEvent_play_success;                   // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_121[0x3];                                      // 0x0121(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const struct FCAAudioEventType& Event_name)> Temp_delegate_Variable_1;                          // 0x0124(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	struct FCAAudioPlaybackInstance               CallFunc_PlayEvent_playback_instance_1;            // 0x0138(0x0010)()
	bool                                          CallFunc_PlayEvent_play_success_1;                 // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CAAudioUtilities_C_PlayHandPlacementSurfaceRightAudio) == 0x000008, "Wrong alignment on CAAudioUtilities_C_PlayHandPlacementSurfaceRightAudio");
static_assert(sizeof(CAAudioUtilities_C_PlayHandPlacementSurfaceRightAudio) == 0x000150, "Wrong size on CAAudioUtilities_C_PlayHandPlacementSurfaceRightAudio");
static_assert(offsetof(CAAudioUtilities_C_PlayHandPlacementSurfaceRightAudio, Character) == 0x000000, "Member 'CAAudioUtilities_C_PlayHandPlacementSurfaceRightAudio::Character' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayHandPlacementSurfaceRightAudio, __WorldContext) == 0x000008, "Member 'CAAudioUtilities_C_PlayHandPlacementSurfaceRightAudio::__WorldContext' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayHandPlacementSurfaceRightAudio, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'CAAudioUtilities_C_PlayHandPlacementSurfaceRightAudio::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayHandPlacementSurfaceRightAudio, CallFunc_GetActorRightVector_ReturnValue) == 0x000014, "Member 'CAAudioUtilities_C_PlayHandPlacementSurfaceRightAudio::CallFunc_GetActorRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayHandPlacementSurfaceRightAudio, CallFunc_Multiply_VectorInt_ReturnValue) == 0x000020, "Member 'CAAudioUtilities_C_PlayHandPlacementSurfaceRightAudio::CallFunc_Multiply_VectorInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayHandPlacementSurfaceRightAudio, K2Node_MakeArray_Array) == 0x000030, "Member 'CAAudioUtilities_C_PlayHandPlacementSurfaceRightAudio::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayHandPlacementSurfaceRightAudio, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000040, "Member 'CAAudioUtilities_C_PlayHandPlacementSurfaceRightAudio::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayHandPlacementSurfaceRightAudio, CallFunc_Add_VectorVector_ReturnValue) == 0x00004C, "Member 'CAAudioUtilities_C_PlayHandPlacementSurfaceRightAudio::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayHandPlacementSurfaceRightAudio, CallFunc_IsBeingViewed_ReturnValue) == 0x000058, "Member 'CAAudioUtilities_C_PlayHandPlacementSurfaceRightAudio::CallFunc_IsBeingViewed_ReturnValue' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayHandPlacementSurfaceRightAudio, CallFunc_LineTraceSingle_OutHit) == 0x00005C, "Member 'CAAudioUtilities_C_PlayHandPlacementSurfaceRightAudio::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayHandPlacementSurfaceRightAudio, CallFunc_LineTraceSingle_ReturnValue) == 0x0000EC, "Member 'CAAudioUtilities_C_PlayHandPlacementSurfaceRightAudio::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayHandPlacementSurfaceRightAudio, CallFunc_GetSurfaceType_ReturnValue) == 0x0000ED, "Member 'CAAudioUtilities_C_PlayHandPlacementSurfaceRightAudio::CallFunc_GetSurfaceType_ReturnValue' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayHandPlacementSurfaceRightAudio, CallFunc_ConvertSurfaceToAudio_Switch) == 0x0000F0, "Member 'CAAudioUtilities_C_PlayHandPlacementSurfaceRightAudio::CallFunc_ConvertSurfaceToAudio_Switch' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayHandPlacementSurfaceRightAudio, CallFunc_ConvertSurfaceToAudio_FootstepBank) == 0x0000F4, "Member 'CAAudioUtilities_C_PlayHandPlacementSurfaceRightAudio::CallFunc_ConvertSurfaceToAudio_FootstepBank' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayHandPlacementSurfaceRightAudio, Temp_delegate_Variable) == 0x0000F8, "Member 'CAAudioUtilities_C_PlayHandPlacementSurfaceRightAudio::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayHandPlacementSurfaceRightAudio, CallFunc_PlayEvent_playback_instance) == 0x000110, "Member 'CAAudioUtilities_C_PlayHandPlacementSurfaceRightAudio::CallFunc_PlayEvent_playback_instance' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayHandPlacementSurfaceRightAudio, CallFunc_PlayEvent_play_success) == 0x000120, "Member 'CAAudioUtilities_C_PlayHandPlacementSurfaceRightAudio::CallFunc_PlayEvent_play_success' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayHandPlacementSurfaceRightAudio, Temp_delegate_Variable_1) == 0x000124, "Member 'CAAudioUtilities_C_PlayHandPlacementSurfaceRightAudio::Temp_delegate_Variable_1' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayHandPlacementSurfaceRightAudio, CallFunc_PlayEvent_playback_instance_1) == 0x000138, "Member 'CAAudioUtilities_C_PlayHandPlacementSurfaceRightAudio::CallFunc_PlayEvent_playback_instance_1' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayHandPlacementSurfaceRightAudio, CallFunc_PlayEvent_play_success_1) == 0x000148, "Member 'CAAudioUtilities_C_PlayHandPlacementSurfaceRightAudio::CallFunc_PlayEvent_play_success_1' has a wrong offset!");

// Function CAAudioUtilities.CAAudioUtilities_C.PlayHandPlacementSurfaceAboveAudio
// 0x0150 (0x0150 - 0x0000)
struct CAAudioUtilities_C_PlayHandPlacementSurfaceAboveAudio final
{
public:
	class ACACharacter_MainPlayer*                Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorUpVector_ReturnValue;             // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorInt_ReturnValue;           // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0030(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsBeingViewed_ReturnValue;                // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x005C(0x0090)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPhysicalSurface                              CallFunc_GetSurfaceType_ReturnValue;               // 0x00ED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EE[0x2];                                       // 0x00EE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCAAudioSwitchValueType                CallFunc_ConvertSurfaceToAudio_Switch;             // 0x00F0(0x0004)(NoDestructor)
	struct FCAAudioBankNameType                   CallFunc_ConvertSurfaceToAudio_FootstepBank;       // 0x00F4(0x0004)(NoDestructor)
	TDelegate<void(const struct FCAAudioEventType& Event_name)> Temp_delegate_Variable;                            // 0x00F8(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	uint8                                         Pad_10C[0x4];                                      // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCAAudioPlaybackInstance               CallFunc_PlayEvent_playback_instance;              // 0x0110(0x0010)()
	bool                                          CallFunc_PlayEvent_play_success;                   // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_121[0x3];                                      // 0x0121(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const struct FCAAudioEventType& Event_name)> Temp_delegate_Variable_1;                          // 0x0124(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	struct FCAAudioPlaybackInstance               CallFunc_PlayEvent_playback_instance_1;            // 0x0138(0x0010)()
	bool                                          CallFunc_PlayEvent_play_success_1;                 // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CAAudioUtilities_C_PlayHandPlacementSurfaceAboveAudio) == 0x000008, "Wrong alignment on CAAudioUtilities_C_PlayHandPlacementSurfaceAboveAudio");
static_assert(sizeof(CAAudioUtilities_C_PlayHandPlacementSurfaceAboveAudio) == 0x000150, "Wrong size on CAAudioUtilities_C_PlayHandPlacementSurfaceAboveAudio");
static_assert(offsetof(CAAudioUtilities_C_PlayHandPlacementSurfaceAboveAudio, Character) == 0x000000, "Member 'CAAudioUtilities_C_PlayHandPlacementSurfaceAboveAudio::Character' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayHandPlacementSurfaceAboveAudio, __WorldContext) == 0x000008, "Member 'CAAudioUtilities_C_PlayHandPlacementSurfaceAboveAudio::__WorldContext' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayHandPlacementSurfaceAboveAudio, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'CAAudioUtilities_C_PlayHandPlacementSurfaceAboveAudio::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayHandPlacementSurfaceAboveAudio, CallFunc_GetActorUpVector_ReturnValue) == 0x000014, "Member 'CAAudioUtilities_C_PlayHandPlacementSurfaceAboveAudio::CallFunc_GetActorUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayHandPlacementSurfaceAboveAudio, CallFunc_Multiply_VectorInt_ReturnValue) == 0x000020, "Member 'CAAudioUtilities_C_PlayHandPlacementSurfaceAboveAudio::CallFunc_Multiply_VectorInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayHandPlacementSurfaceAboveAudio, K2Node_MakeArray_Array) == 0x000030, "Member 'CAAudioUtilities_C_PlayHandPlacementSurfaceAboveAudio::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayHandPlacementSurfaceAboveAudio, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000040, "Member 'CAAudioUtilities_C_PlayHandPlacementSurfaceAboveAudio::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayHandPlacementSurfaceAboveAudio, CallFunc_Add_VectorVector_ReturnValue) == 0x00004C, "Member 'CAAudioUtilities_C_PlayHandPlacementSurfaceAboveAudio::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayHandPlacementSurfaceAboveAudio, CallFunc_IsBeingViewed_ReturnValue) == 0x000058, "Member 'CAAudioUtilities_C_PlayHandPlacementSurfaceAboveAudio::CallFunc_IsBeingViewed_ReturnValue' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayHandPlacementSurfaceAboveAudio, CallFunc_LineTraceSingle_OutHit) == 0x00005C, "Member 'CAAudioUtilities_C_PlayHandPlacementSurfaceAboveAudio::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayHandPlacementSurfaceAboveAudio, CallFunc_LineTraceSingle_ReturnValue) == 0x0000EC, "Member 'CAAudioUtilities_C_PlayHandPlacementSurfaceAboveAudio::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayHandPlacementSurfaceAboveAudio, CallFunc_GetSurfaceType_ReturnValue) == 0x0000ED, "Member 'CAAudioUtilities_C_PlayHandPlacementSurfaceAboveAudio::CallFunc_GetSurfaceType_ReturnValue' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayHandPlacementSurfaceAboveAudio, CallFunc_ConvertSurfaceToAudio_Switch) == 0x0000F0, "Member 'CAAudioUtilities_C_PlayHandPlacementSurfaceAboveAudio::CallFunc_ConvertSurfaceToAudio_Switch' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayHandPlacementSurfaceAboveAudio, CallFunc_ConvertSurfaceToAudio_FootstepBank) == 0x0000F4, "Member 'CAAudioUtilities_C_PlayHandPlacementSurfaceAboveAudio::CallFunc_ConvertSurfaceToAudio_FootstepBank' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayHandPlacementSurfaceAboveAudio, Temp_delegate_Variable) == 0x0000F8, "Member 'CAAudioUtilities_C_PlayHandPlacementSurfaceAboveAudio::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayHandPlacementSurfaceAboveAudio, CallFunc_PlayEvent_playback_instance) == 0x000110, "Member 'CAAudioUtilities_C_PlayHandPlacementSurfaceAboveAudio::CallFunc_PlayEvent_playback_instance' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayHandPlacementSurfaceAboveAudio, CallFunc_PlayEvent_play_success) == 0x000120, "Member 'CAAudioUtilities_C_PlayHandPlacementSurfaceAboveAudio::CallFunc_PlayEvent_play_success' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayHandPlacementSurfaceAboveAudio, Temp_delegate_Variable_1) == 0x000124, "Member 'CAAudioUtilities_C_PlayHandPlacementSurfaceAboveAudio::Temp_delegate_Variable_1' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayHandPlacementSurfaceAboveAudio, CallFunc_PlayEvent_playback_instance_1) == 0x000138, "Member 'CAAudioUtilities_C_PlayHandPlacementSurfaceAboveAudio::CallFunc_PlayEvent_playback_instance_1' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayHandPlacementSurfaceAboveAudio, CallFunc_PlayEvent_play_success_1) == 0x000148, "Member 'CAAudioUtilities_C_PlayHandPlacementSurfaceAboveAudio::CallFunc_PlayEvent_play_success_1' has a wrong offset!");

// Function CAAudioUtilities.CAAudioUtilities_C.PlayHandPlacementSurfaceFrontAudio
// 0x0150 (0x0150 - 0x0000)
struct CAAudioUtilities_C_PlayHandPlacementSurfaceFrontAudio final
{
public:
	class ACACharacter_MainPlayer*                Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FCAAudioEventType& Event_name)> Temp_delegate_Variable;                            // 0x0010(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorInt_ReturnValue;           // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0040(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x0068(0x0090)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCAAudioPlaybackInstance               CallFunc_PlayEvent_playback_instance;              // 0x0100(0x0010)()
	bool                                          CallFunc_PlayEvent_play_success;                   // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPhysicalSurface                              CallFunc_GetSurfaceType_ReturnValue;               // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_112[0x2];                                      // 0x0112(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCAAudioSwitchValueType                CallFunc_ConvertSurfaceToAudio_Switch;             // 0x0114(0x0004)(NoDestructor)
	struct FCAAudioBankNameType                   CallFunc_ConvertSurfaceToAudio_FootstepBank;       // 0x0118(0x0004)(NoDestructor)
	bool                                          CallFunc_IsBeingViewed_ReturnValue;                // 0x011C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11D[0x3];                                      // 0x011D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const struct FCAAudioEventType& Event_name)> Temp_delegate_Variable_1;                          // 0x0120(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	uint8                                         Pad_134[0x4];                                      // 0x0134(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCAAudioPlaybackInstance               CallFunc_PlayEvent_playback_instance_1;            // 0x0138(0x0010)()
	bool                                          CallFunc_PlayEvent_play_success_1;                 // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CAAudioUtilities_C_PlayHandPlacementSurfaceFrontAudio) == 0x000008, "Wrong alignment on CAAudioUtilities_C_PlayHandPlacementSurfaceFrontAudio");
static_assert(sizeof(CAAudioUtilities_C_PlayHandPlacementSurfaceFrontAudio) == 0x000150, "Wrong size on CAAudioUtilities_C_PlayHandPlacementSurfaceFrontAudio");
static_assert(offsetof(CAAudioUtilities_C_PlayHandPlacementSurfaceFrontAudio, Character) == 0x000000, "Member 'CAAudioUtilities_C_PlayHandPlacementSurfaceFrontAudio::Character' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayHandPlacementSurfaceFrontAudio, __WorldContext) == 0x000008, "Member 'CAAudioUtilities_C_PlayHandPlacementSurfaceFrontAudio::__WorldContext' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayHandPlacementSurfaceFrontAudio, Temp_delegate_Variable) == 0x000010, "Member 'CAAudioUtilities_C_PlayHandPlacementSurfaceFrontAudio::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayHandPlacementSurfaceFrontAudio, CallFunc_IsValid_ReturnValue) == 0x000024, "Member 'CAAudioUtilities_C_PlayHandPlacementSurfaceFrontAudio::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayHandPlacementSurfaceFrontAudio, CallFunc_GetActorForwardVector_ReturnValue) == 0x000028, "Member 'CAAudioUtilities_C_PlayHandPlacementSurfaceFrontAudio::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayHandPlacementSurfaceFrontAudio, CallFunc_Multiply_VectorInt_ReturnValue) == 0x000034, "Member 'CAAudioUtilities_C_PlayHandPlacementSurfaceFrontAudio::CallFunc_Multiply_VectorInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayHandPlacementSurfaceFrontAudio, K2Node_MakeArray_Array) == 0x000040, "Member 'CAAudioUtilities_C_PlayHandPlacementSurfaceFrontAudio::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayHandPlacementSurfaceFrontAudio, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000050, "Member 'CAAudioUtilities_C_PlayHandPlacementSurfaceFrontAudio::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayHandPlacementSurfaceFrontAudio, CallFunc_Add_VectorVector_ReturnValue) == 0x00005C, "Member 'CAAudioUtilities_C_PlayHandPlacementSurfaceFrontAudio::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayHandPlacementSurfaceFrontAudio, CallFunc_LineTraceSingle_OutHit) == 0x000068, "Member 'CAAudioUtilities_C_PlayHandPlacementSurfaceFrontAudio::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayHandPlacementSurfaceFrontAudio, CallFunc_LineTraceSingle_ReturnValue) == 0x0000F8, "Member 'CAAudioUtilities_C_PlayHandPlacementSurfaceFrontAudio::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayHandPlacementSurfaceFrontAudio, CallFunc_PlayEvent_playback_instance) == 0x000100, "Member 'CAAudioUtilities_C_PlayHandPlacementSurfaceFrontAudio::CallFunc_PlayEvent_playback_instance' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayHandPlacementSurfaceFrontAudio, CallFunc_PlayEvent_play_success) == 0x000110, "Member 'CAAudioUtilities_C_PlayHandPlacementSurfaceFrontAudio::CallFunc_PlayEvent_play_success' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayHandPlacementSurfaceFrontAudio, CallFunc_GetSurfaceType_ReturnValue) == 0x000111, "Member 'CAAudioUtilities_C_PlayHandPlacementSurfaceFrontAudio::CallFunc_GetSurfaceType_ReturnValue' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayHandPlacementSurfaceFrontAudio, CallFunc_ConvertSurfaceToAudio_Switch) == 0x000114, "Member 'CAAudioUtilities_C_PlayHandPlacementSurfaceFrontAudio::CallFunc_ConvertSurfaceToAudio_Switch' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayHandPlacementSurfaceFrontAudio, CallFunc_ConvertSurfaceToAudio_FootstepBank) == 0x000118, "Member 'CAAudioUtilities_C_PlayHandPlacementSurfaceFrontAudio::CallFunc_ConvertSurfaceToAudio_FootstepBank' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayHandPlacementSurfaceFrontAudio, CallFunc_IsBeingViewed_ReturnValue) == 0x00011C, "Member 'CAAudioUtilities_C_PlayHandPlacementSurfaceFrontAudio::CallFunc_IsBeingViewed_ReturnValue' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayHandPlacementSurfaceFrontAudio, Temp_delegate_Variable_1) == 0x000120, "Member 'CAAudioUtilities_C_PlayHandPlacementSurfaceFrontAudio::Temp_delegate_Variable_1' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayHandPlacementSurfaceFrontAudio, CallFunc_PlayEvent_playback_instance_1) == 0x000138, "Member 'CAAudioUtilities_C_PlayHandPlacementSurfaceFrontAudio::CallFunc_PlayEvent_playback_instance_1' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayHandPlacementSurfaceFrontAudio, CallFunc_PlayEvent_play_success_1) == 0x000148, "Member 'CAAudioUtilities_C_PlayHandPlacementSurfaceFrontAudio::CallFunc_PlayEvent_play_success_1' has a wrong offset!");

// Function CAAudioUtilities.CAAudioUtilities_C.PlayHandPlacementSurfaceBehindAudio
// 0x0150 (0x0150 - 0x0000)
struct CAAudioUtilities_C_PlayHandPlacementSurfaceBehindAudio final
{
public:
	class ACACharacter_MainPlayer*                Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorInt_ReturnValue;           // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0030(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsBeingViewed_ReturnValue;                // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x005C(0x0090)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPhysicalSurface                              CallFunc_GetSurfaceType_ReturnValue;               // 0x00ED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EE[0x2];                                       // 0x00EE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCAAudioSwitchValueType                CallFunc_ConvertSurfaceToAudio_Switch;             // 0x00F0(0x0004)(NoDestructor)
	struct FCAAudioBankNameType                   CallFunc_ConvertSurfaceToAudio_FootstepBank;       // 0x00F4(0x0004)(NoDestructor)
	TDelegate<void(const struct FCAAudioEventType& Event_name)> Temp_delegate_Variable;                            // 0x00F8(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	uint8                                         Pad_10C[0x4];                                      // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCAAudioPlaybackInstance               CallFunc_PlayEvent_playback_instance;              // 0x0110(0x0010)()
	bool                                          CallFunc_PlayEvent_play_success;                   // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_121[0x3];                                      // 0x0121(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const struct FCAAudioEventType& Event_name)> Temp_delegate_Variable_1;                          // 0x0124(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	struct FCAAudioPlaybackInstance               CallFunc_PlayEvent_playback_instance_1;            // 0x0138(0x0010)()
	bool                                          CallFunc_PlayEvent_play_success_1;                 // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CAAudioUtilities_C_PlayHandPlacementSurfaceBehindAudio) == 0x000008, "Wrong alignment on CAAudioUtilities_C_PlayHandPlacementSurfaceBehindAudio");
static_assert(sizeof(CAAudioUtilities_C_PlayHandPlacementSurfaceBehindAudio) == 0x000150, "Wrong size on CAAudioUtilities_C_PlayHandPlacementSurfaceBehindAudio");
static_assert(offsetof(CAAudioUtilities_C_PlayHandPlacementSurfaceBehindAudio, Character) == 0x000000, "Member 'CAAudioUtilities_C_PlayHandPlacementSurfaceBehindAudio::Character' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayHandPlacementSurfaceBehindAudio, __WorldContext) == 0x000008, "Member 'CAAudioUtilities_C_PlayHandPlacementSurfaceBehindAudio::__WorldContext' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayHandPlacementSurfaceBehindAudio, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'CAAudioUtilities_C_PlayHandPlacementSurfaceBehindAudio::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayHandPlacementSurfaceBehindAudio, CallFunc_GetActorForwardVector_ReturnValue) == 0x000014, "Member 'CAAudioUtilities_C_PlayHandPlacementSurfaceBehindAudio::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayHandPlacementSurfaceBehindAudio, CallFunc_Multiply_VectorInt_ReturnValue) == 0x000020, "Member 'CAAudioUtilities_C_PlayHandPlacementSurfaceBehindAudio::CallFunc_Multiply_VectorInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayHandPlacementSurfaceBehindAudio, K2Node_MakeArray_Array) == 0x000030, "Member 'CAAudioUtilities_C_PlayHandPlacementSurfaceBehindAudio::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayHandPlacementSurfaceBehindAudio, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000040, "Member 'CAAudioUtilities_C_PlayHandPlacementSurfaceBehindAudio::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayHandPlacementSurfaceBehindAudio, CallFunc_Add_VectorVector_ReturnValue) == 0x00004C, "Member 'CAAudioUtilities_C_PlayHandPlacementSurfaceBehindAudio::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayHandPlacementSurfaceBehindAudio, CallFunc_IsBeingViewed_ReturnValue) == 0x000058, "Member 'CAAudioUtilities_C_PlayHandPlacementSurfaceBehindAudio::CallFunc_IsBeingViewed_ReturnValue' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayHandPlacementSurfaceBehindAudio, CallFunc_LineTraceSingle_OutHit) == 0x00005C, "Member 'CAAudioUtilities_C_PlayHandPlacementSurfaceBehindAudio::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayHandPlacementSurfaceBehindAudio, CallFunc_LineTraceSingle_ReturnValue) == 0x0000EC, "Member 'CAAudioUtilities_C_PlayHandPlacementSurfaceBehindAudio::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayHandPlacementSurfaceBehindAudio, CallFunc_GetSurfaceType_ReturnValue) == 0x0000ED, "Member 'CAAudioUtilities_C_PlayHandPlacementSurfaceBehindAudio::CallFunc_GetSurfaceType_ReturnValue' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayHandPlacementSurfaceBehindAudio, CallFunc_ConvertSurfaceToAudio_Switch) == 0x0000F0, "Member 'CAAudioUtilities_C_PlayHandPlacementSurfaceBehindAudio::CallFunc_ConvertSurfaceToAudio_Switch' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayHandPlacementSurfaceBehindAudio, CallFunc_ConvertSurfaceToAudio_FootstepBank) == 0x0000F4, "Member 'CAAudioUtilities_C_PlayHandPlacementSurfaceBehindAudio::CallFunc_ConvertSurfaceToAudio_FootstepBank' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayHandPlacementSurfaceBehindAudio, Temp_delegate_Variable) == 0x0000F8, "Member 'CAAudioUtilities_C_PlayHandPlacementSurfaceBehindAudio::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayHandPlacementSurfaceBehindAudio, CallFunc_PlayEvent_playback_instance) == 0x000110, "Member 'CAAudioUtilities_C_PlayHandPlacementSurfaceBehindAudio::CallFunc_PlayEvent_playback_instance' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayHandPlacementSurfaceBehindAudio, CallFunc_PlayEvent_play_success) == 0x000120, "Member 'CAAudioUtilities_C_PlayHandPlacementSurfaceBehindAudio::CallFunc_PlayEvent_play_success' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayHandPlacementSurfaceBehindAudio, Temp_delegate_Variable_1) == 0x000124, "Member 'CAAudioUtilities_C_PlayHandPlacementSurfaceBehindAudio::Temp_delegate_Variable_1' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayHandPlacementSurfaceBehindAudio, CallFunc_PlayEvent_playback_instance_1) == 0x000138, "Member 'CAAudioUtilities_C_PlayHandPlacementSurfaceBehindAudio::CallFunc_PlayEvent_playback_instance_1' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayHandPlacementSurfaceBehindAudio, CallFunc_PlayEvent_play_success_1) == 0x000148, "Member 'CAAudioUtilities_C_PlayHandPlacementSurfaceBehindAudio::CallFunc_PlayEvent_play_success_1' has a wrong offset!");

// Function CAAudioUtilities.CAAudioUtilities_C.PlayWallCrawlingAudio
// 0x0070 (0x0070 - 0x0000)
struct CAAudioUtilities_C_PlayWallCrawlingAudio final
{
public:
	class AActor*                                 Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsWallCrawling;                                    // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FCAAudioEventType& Event_name)> Temp_delegate_Variable;                            // 0x0018(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCAAudioPlaybackInstance               CallFunc_PlayEvent_playback_instance;              // 0x0030(0x0010)()
	bool                                          CallFunc_PlayEvent_play_success;                   // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const struct FCAAudioEventType& Event_name)> Temp_delegate_Variable_1;                          // 0x0044(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	struct FCAAudioPlaybackInstance               CallFunc_PlayEvent_playback_instance_1;            // 0x0058(0x0010)()
	bool                                          CallFunc_PlayEvent_play_success_1;                 // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CAAudioUtilities_C_PlayWallCrawlingAudio) == 0x000008, "Wrong alignment on CAAudioUtilities_C_PlayWallCrawlingAudio");
static_assert(sizeof(CAAudioUtilities_C_PlayWallCrawlingAudio) == 0x000070, "Wrong size on CAAudioUtilities_C_PlayWallCrawlingAudio");
static_assert(offsetof(CAAudioUtilities_C_PlayWallCrawlingAudio, Character) == 0x000000, "Member 'CAAudioUtilities_C_PlayWallCrawlingAudio::Character' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayWallCrawlingAudio, IsWallCrawling) == 0x000008, "Member 'CAAudioUtilities_C_PlayWallCrawlingAudio::IsWallCrawling' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayWallCrawlingAudio, __WorldContext) == 0x000010, "Member 'CAAudioUtilities_C_PlayWallCrawlingAudio::__WorldContext' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayWallCrawlingAudio, Temp_delegate_Variable) == 0x000018, "Member 'CAAudioUtilities_C_PlayWallCrawlingAudio::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayWallCrawlingAudio, CallFunc_PlayEvent_playback_instance) == 0x000030, "Member 'CAAudioUtilities_C_PlayWallCrawlingAudio::CallFunc_PlayEvent_playback_instance' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayWallCrawlingAudio, CallFunc_PlayEvent_play_success) == 0x000040, "Member 'CAAudioUtilities_C_PlayWallCrawlingAudio::CallFunc_PlayEvent_play_success' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayWallCrawlingAudio, Temp_delegate_Variable_1) == 0x000044, "Member 'CAAudioUtilities_C_PlayWallCrawlingAudio::Temp_delegate_Variable_1' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayWallCrawlingAudio, CallFunc_PlayEvent_playback_instance_1) == 0x000058, "Member 'CAAudioUtilities_C_PlayWallCrawlingAudio::CallFunc_PlayEvent_playback_instance_1' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayWallCrawlingAudio, CallFunc_PlayEvent_play_success_1) == 0x000068, "Member 'CAAudioUtilities_C_PlayWallCrawlingAudio::CallFunc_PlayEvent_play_success_1' has a wrong offset!");

// Function CAAudioUtilities.CAAudioUtilities_C.PlayNPCFootstepAudio
// 0x0028 (0x0028 - 0x0000)
struct CAAudioUtilities_C_PlayNPCFootstepAudio final
{
public:
	class AActor*                                 NPC;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsNPCMagboots;                                     // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCAAudioSwitchValueType                CallFunc_ConvertSurfaceToAudio_Switch;             // 0x0018(0x0004)(NoDestructor)
	struct FCAAudioBankNameType                   CallFunc_ConvertSurfaceToAudio_FootstepBank;       // 0x001C(0x0004)(NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CAAudioUtilities_C_PlayNPCFootstepAudio) == 0x000008, "Wrong alignment on CAAudioUtilities_C_PlayNPCFootstepAudio");
static_assert(sizeof(CAAudioUtilities_C_PlayNPCFootstepAudio) == 0x000028, "Wrong size on CAAudioUtilities_C_PlayNPCFootstepAudio");
static_assert(offsetof(CAAudioUtilities_C_PlayNPCFootstepAudio, NPC) == 0x000000, "Member 'CAAudioUtilities_C_PlayNPCFootstepAudio::NPC' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayNPCFootstepAudio, IsNPCMagboots) == 0x000008, "Member 'CAAudioUtilities_C_PlayNPCFootstepAudio::IsNPCMagboots' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayNPCFootstepAudio, __WorldContext) == 0x000010, "Member 'CAAudioUtilities_C_PlayNPCFootstepAudio::__WorldContext' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayNPCFootstepAudio, CallFunc_ConvertSurfaceToAudio_Switch) == 0x000018, "Member 'CAAudioUtilities_C_PlayNPCFootstepAudio::CallFunc_ConvertSurfaceToAudio_Switch' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayNPCFootstepAudio, CallFunc_ConvertSurfaceToAudio_FootstepBank) == 0x00001C, "Member 'CAAudioUtilities_C_PlayNPCFootstepAudio::CallFunc_ConvertSurfaceToAudio_FootstepBank' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayNPCFootstepAudio, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'CAAudioUtilities_C_PlayNPCFootstepAudio::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function CAAudioUtilities.CAAudioUtilities_C.GetSurfaceMaterialAudio
// 0x00E0 (0x00E0 - 0x0000)
struct CAAudioUtilities_C_GetSurfaceMaterialAudio final
{
public:
	class ACACharacter_MainPlayer*                Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0018(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x0040(0x0090)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPhysicalSurface                              CallFunc_GetSurfaceType_ReturnValue;               // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D2[0x2];                                       // 0x00D2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCAAudioSwitchValueType                CallFunc_ConvertSurfaceToAudio_Switch;             // 0x00D4(0x0004)(NoDestructor)
	struct FCAAudioBankNameType                   CallFunc_ConvertSurfaceToAudio_FootstepBank;       // 0x00D8(0x0004)(NoDestructor)
};
static_assert(alignof(CAAudioUtilities_C_GetSurfaceMaterialAudio) == 0x000008, "Wrong alignment on CAAudioUtilities_C_GetSurfaceMaterialAudio");
static_assert(sizeof(CAAudioUtilities_C_GetSurfaceMaterialAudio) == 0x0000E0, "Wrong size on CAAudioUtilities_C_GetSurfaceMaterialAudio");
static_assert(offsetof(CAAudioUtilities_C_GetSurfaceMaterialAudio, Character) == 0x000000, "Member 'CAAudioUtilities_C_GetSurfaceMaterialAudio::Character' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_GetSurfaceMaterialAudio, __WorldContext) == 0x000008, "Member 'CAAudioUtilities_C_GetSurfaceMaterialAudio::__WorldContext' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_GetSurfaceMaterialAudio, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'CAAudioUtilities_C_GetSurfaceMaterialAudio::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_GetSurfaceMaterialAudio, K2Node_MakeArray_Array) == 0x000018, "Member 'CAAudioUtilities_C_GetSurfaceMaterialAudio::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_GetSurfaceMaterialAudio, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000028, "Member 'CAAudioUtilities_C_GetSurfaceMaterialAudio::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_GetSurfaceMaterialAudio, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000034, "Member 'CAAudioUtilities_C_GetSurfaceMaterialAudio::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_GetSurfaceMaterialAudio, CallFunc_LineTraceSingle_OutHit) == 0x000040, "Member 'CAAudioUtilities_C_GetSurfaceMaterialAudio::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_GetSurfaceMaterialAudio, CallFunc_LineTraceSingle_ReturnValue) == 0x0000D0, "Member 'CAAudioUtilities_C_GetSurfaceMaterialAudio::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_GetSurfaceMaterialAudio, CallFunc_GetSurfaceType_ReturnValue) == 0x0000D1, "Member 'CAAudioUtilities_C_GetSurfaceMaterialAudio::CallFunc_GetSurfaceType_ReturnValue' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_GetSurfaceMaterialAudio, CallFunc_ConvertSurfaceToAudio_Switch) == 0x0000D4, "Member 'CAAudioUtilities_C_GetSurfaceMaterialAudio::CallFunc_ConvertSurfaceToAudio_Switch' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_GetSurfaceMaterialAudio, CallFunc_ConvertSurfaceToAudio_FootstepBank) == 0x0000D8, "Member 'CAAudioUtilities_C_GetSurfaceMaterialAudio::CallFunc_ConvertSurfaceToAudio_FootstepBank' has a wrong offset!");

// Function CAAudioUtilities.CAAudioUtilities_C.PlayDownedHandplacementAudio
// 0x0108 (0x0108 - 0x0000)
struct CAAudioUtilities_C_PlayDownedHandplacementAudio final
{
public:
	class ACACharacter_MainPlayer*                Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0018(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FCAAudioEventType& Event_name)> Temp_delegate_Variable;                            // 0x0034(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCAAudioPlaybackInstance               CallFunc_PlayEvent_playback_instance;              // 0x0058(0x0010)()
	bool                                          CallFunc_PlayEvent_play_success;                   // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x006C(0x0090)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPhysicalSurface                              CallFunc_GetSurfaceType_ReturnValue;               // 0x00FD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FE[0x2];                                       // 0x00FE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCAAudioSwitchValueType                CallFunc_ConvertSurfaceToAudio_Switch;             // 0x0100(0x0004)(NoDestructor)
	struct FCAAudioBankNameType                   CallFunc_ConvertSurfaceToAudio_FootstepBank;       // 0x0104(0x0004)(NoDestructor)
};
static_assert(alignof(CAAudioUtilities_C_PlayDownedHandplacementAudio) == 0x000008, "Wrong alignment on CAAudioUtilities_C_PlayDownedHandplacementAudio");
static_assert(sizeof(CAAudioUtilities_C_PlayDownedHandplacementAudio) == 0x000108, "Wrong size on CAAudioUtilities_C_PlayDownedHandplacementAudio");
static_assert(offsetof(CAAudioUtilities_C_PlayDownedHandplacementAudio, Character) == 0x000000, "Member 'CAAudioUtilities_C_PlayDownedHandplacementAudio::Character' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayDownedHandplacementAudio, __WorldContext) == 0x000008, "Member 'CAAudioUtilities_C_PlayDownedHandplacementAudio::__WorldContext' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayDownedHandplacementAudio, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'CAAudioUtilities_C_PlayDownedHandplacementAudio::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayDownedHandplacementAudio, K2Node_MakeArray_Array) == 0x000018, "Member 'CAAudioUtilities_C_PlayDownedHandplacementAudio::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayDownedHandplacementAudio, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000028, "Member 'CAAudioUtilities_C_PlayDownedHandplacementAudio::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayDownedHandplacementAudio, Temp_delegate_Variable) == 0x000034, "Member 'CAAudioUtilities_C_PlayDownedHandplacementAudio::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayDownedHandplacementAudio, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000048, "Member 'CAAudioUtilities_C_PlayDownedHandplacementAudio::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayDownedHandplacementAudio, CallFunc_PlayEvent_playback_instance) == 0x000058, "Member 'CAAudioUtilities_C_PlayDownedHandplacementAudio::CallFunc_PlayEvent_playback_instance' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayDownedHandplacementAudio, CallFunc_PlayEvent_play_success) == 0x000068, "Member 'CAAudioUtilities_C_PlayDownedHandplacementAudio::CallFunc_PlayEvent_play_success' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayDownedHandplacementAudio, CallFunc_LineTraceSingle_OutHit) == 0x00006C, "Member 'CAAudioUtilities_C_PlayDownedHandplacementAudio::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayDownedHandplacementAudio, CallFunc_LineTraceSingle_ReturnValue) == 0x0000FC, "Member 'CAAudioUtilities_C_PlayDownedHandplacementAudio::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayDownedHandplacementAudio, CallFunc_GetSurfaceType_ReturnValue) == 0x0000FD, "Member 'CAAudioUtilities_C_PlayDownedHandplacementAudio::CallFunc_GetSurfaceType_ReturnValue' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayDownedHandplacementAudio, CallFunc_ConvertSurfaceToAudio_Switch) == 0x000100, "Member 'CAAudioUtilities_C_PlayDownedHandplacementAudio::CallFunc_ConvertSurfaceToAudio_Switch' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayDownedHandplacementAudio, CallFunc_ConvertSurfaceToAudio_FootstepBank) == 0x000104, "Member 'CAAudioUtilities_C_PlayDownedHandplacementAudio::CallFunc_ConvertSurfaceToAudio_FootstepBank' has a wrong offset!");

// Function CAAudioUtilities.CAAudioUtilities_C.PlayMagbootFallWallLanding
// 0x0070 (0x0070 - 0x0000)
struct CAAudioUtilities_C_PlayMagbootFallWallLanding final
{
public:
	class AActor*                                 Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Landing_World_Pos;                                 // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsLocallyControlled_;                              // 0x0014(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Pre_Landing_Speed;                                 // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FCAAudioEventType& Event_name)> Temp_delegate_Variable;                            // 0x0028(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCAAudioPlaybackInstance               CallFunc_PlayEventInWorld_playback_instance;       // 0x0040(0x0010)()
	bool                                          CallFunc_PlayEventInWorld_play_success;            // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCAAudioPlaybackInstance               CallFunc_PlayEvent_playback_instance;              // 0x0058(0x0010)()
	bool                                          CallFunc_PlayEvent_play_success;                   // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CAAudioUtilities_C_PlayMagbootFallWallLanding) == 0x000008, "Wrong alignment on CAAudioUtilities_C_PlayMagbootFallWallLanding");
static_assert(sizeof(CAAudioUtilities_C_PlayMagbootFallWallLanding) == 0x000070, "Wrong size on CAAudioUtilities_C_PlayMagbootFallWallLanding");
static_assert(offsetof(CAAudioUtilities_C_PlayMagbootFallWallLanding, Character) == 0x000000, "Member 'CAAudioUtilities_C_PlayMagbootFallWallLanding::Character' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayMagbootFallWallLanding, Landing_World_Pos) == 0x000008, "Member 'CAAudioUtilities_C_PlayMagbootFallWallLanding::Landing_World_Pos' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayMagbootFallWallLanding, IsLocallyControlled_) == 0x000014, "Member 'CAAudioUtilities_C_PlayMagbootFallWallLanding::IsLocallyControlled_' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayMagbootFallWallLanding, Pre_Landing_Speed) == 0x000018, "Member 'CAAudioUtilities_C_PlayMagbootFallWallLanding::Pre_Landing_Speed' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayMagbootFallWallLanding, __WorldContext) == 0x000020, "Member 'CAAudioUtilities_C_PlayMagbootFallWallLanding::__WorldContext' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayMagbootFallWallLanding, Temp_delegate_Variable) == 0x000028, "Member 'CAAudioUtilities_C_PlayMagbootFallWallLanding::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayMagbootFallWallLanding, CallFunc_PlayEventInWorld_playback_instance) == 0x000040, "Member 'CAAudioUtilities_C_PlayMagbootFallWallLanding::CallFunc_PlayEventInWorld_playback_instance' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayMagbootFallWallLanding, CallFunc_PlayEventInWorld_play_success) == 0x000050, "Member 'CAAudioUtilities_C_PlayMagbootFallWallLanding::CallFunc_PlayEventInWorld_play_success' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayMagbootFallWallLanding, CallFunc_PlayEvent_playback_instance) == 0x000058, "Member 'CAAudioUtilities_C_PlayMagbootFallWallLanding::CallFunc_PlayEvent_playback_instance' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayMagbootFallWallLanding, CallFunc_PlayEvent_play_success) == 0x000068, "Member 'CAAudioUtilities_C_PlayMagbootFallWallLanding::CallFunc_PlayEvent_play_success' has a wrong offset!");

// Function CAAudioUtilities.CAAudioUtilities_C.PlaySlidingAndFallingAudio
// 0x0128 (0x0128 - 0x0000)
struct CAAudioUtilities_C_PlaySlidingAndFallingAudio final
{
public:
	class ACACharacter_MainPlayer*                Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECAPlayerMovementMode                         Prev_Movement_Mode;                                // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECAPlayerMovementMode                         Movement_Mode;                                     // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECAPlayerMovementMode                         PrevMovementMode;                                  // 0x0018(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsBeingViewed;                                     // 0x0019(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const struct FCAAudioEventType& Event_name)> Temp_delegate_Variable;                            // 0x001C(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	TDelegate<void(const struct FCAAudioEventType& Event_name)> Temp_delegate_Variable_1;                          // 0x0030(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	TDelegate<void(const struct FCAAudioEventType& Event_name)> Temp_delegate_Variable_2;                          // 0x0044(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	TDelegate<void(const struct FCAAudioEventType& Event_name)> Temp_delegate_Variable_3;                          // 0x0058(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const struct FCAAudioEventType& Event_name)> Temp_delegate_Variable_4;                          // 0x0070(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	TDelegate<void(const struct FCAAudioEventType& Event_name)> Temp_delegate_Variable_5;                          // 0x0084(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	struct FCAAudioPlaybackInstance               CallFunc_PlayEvent_playback_instance;              // 0x0098(0x0010)()
	bool                                          CallFunc_PlayEvent_play_success;                   // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCAAudioPlaybackInstance               CallFunc_PlayEvent_playback_instance_1;            // 0x00B0(0x0010)()
	bool                                          CallFunc_PlayEvent_play_success_1;                 // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCAAudioPlaybackInstance               CallFunc_PlayEvent_playback_instance_2;            // 0x00C8(0x0010)()
	bool                                          CallFunc_PlayEvent_play_success_2;                 // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCAAudioPlaybackInstance               CallFunc_PlayEvent_playback_instance_3;            // 0x00E0(0x0010)()
	bool                                          CallFunc_PlayEvent_play_success_3;                 // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsBeingViewed_ReturnValue;                // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x00F3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F5[0x3];                                       // 0x00F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCAAudioPlaybackInstance               CallFunc_PlayEvent_playback_instance_4;            // 0x00F8(0x0010)()
	bool                                          CallFunc_PlayEvent_play_success_4;                 // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_109[0x7];                                      // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCAAudioPlaybackInstance               CallFunc_PlayEvent_playback_instance_5;            // 0x0110(0x0010)()
	bool                                          CallFunc_PlayEvent_play_success_5;                 // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CAAudioUtilities_C_PlaySlidingAndFallingAudio) == 0x000008, "Wrong alignment on CAAudioUtilities_C_PlaySlidingAndFallingAudio");
static_assert(sizeof(CAAudioUtilities_C_PlaySlidingAndFallingAudio) == 0x000128, "Wrong size on CAAudioUtilities_C_PlaySlidingAndFallingAudio");
static_assert(offsetof(CAAudioUtilities_C_PlaySlidingAndFallingAudio, Character) == 0x000000, "Member 'CAAudioUtilities_C_PlaySlidingAndFallingAudio::Character' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlaySlidingAndFallingAudio, Prev_Movement_Mode) == 0x000008, "Member 'CAAudioUtilities_C_PlaySlidingAndFallingAudio::Prev_Movement_Mode' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlaySlidingAndFallingAudio, Movement_Mode) == 0x000009, "Member 'CAAudioUtilities_C_PlaySlidingAndFallingAudio::Movement_Mode' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlaySlidingAndFallingAudio, __WorldContext) == 0x000010, "Member 'CAAudioUtilities_C_PlaySlidingAndFallingAudio::__WorldContext' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlaySlidingAndFallingAudio, PrevMovementMode) == 0x000018, "Member 'CAAudioUtilities_C_PlaySlidingAndFallingAudio::PrevMovementMode' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlaySlidingAndFallingAudio, IsBeingViewed) == 0x000019, "Member 'CAAudioUtilities_C_PlaySlidingAndFallingAudio::IsBeingViewed' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlaySlidingAndFallingAudio, Temp_delegate_Variable) == 0x00001C, "Member 'CAAudioUtilities_C_PlaySlidingAndFallingAudio::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlaySlidingAndFallingAudio, Temp_delegate_Variable_1) == 0x000030, "Member 'CAAudioUtilities_C_PlaySlidingAndFallingAudio::Temp_delegate_Variable_1' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlaySlidingAndFallingAudio, Temp_delegate_Variable_2) == 0x000044, "Member 'CAAudioUtilities_C_PlaySlidingAndFallingAudio::Temp_delegate_Variable_2' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlaySlidingAndFallingAudio, Temp_delegate_Variable_3) == 0x000058, "Member 'CAAudioUtilities_C_PlaySlidingAndFallingAudio::Temp_delegate_Variable_3' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlaySlidingAndFallingAudio, Temp_bool_Has_Been_Initd_Variable) == 0x00006C, "Member 'CAAudioUtilities_C_PlaySlidingAndFallingAudio::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlaySlidingAndFallingAudio, Temp_delegate_Variable_4) == 0x000070, "Member 'CAAudioUtilities_C_PlaySlidingAndFallingAudio::Temp_delegate_Variable_4' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlaySlidingAndFallingAudio, Temp_delegate_Variable_5) == 0x000084, "Member 'CAAudioUtilities_C_PlaySlidingAndFallingAudio::Temp_delegate_Variable_5' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlaySlidingAndFallingAudio, CallFunc_PlayEvent_playback_instance) == 0x000098, "Member 'CAAudioUtilities_C_PlaySlidingAndFallingAudio::CallFunc_PlayEvent_playback_instance' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlaySlidingAndFallingAudio, CallFunc_PlayEvent_play_success) == 0x0000A8, "Member 'CAAudioUtilities_C_PlaySlidingAndFallingAudio::CallFunc_PlayEvent_play_success' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlaySlidingAndFallingAudio, CallFunc_PlayEvent_playback_instance_1) == 0x0000B0, "Member 'CAAudioUtilities_C_PlaySlidingAndFallingAudio::CallFunc_PlayEvent_playback_instance_1' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlaySlidingAndFallingAudio, CallFunc_PlayEvent_play_success_1) == 0x0000C0, "Member 'CAAudioUtilities_C_PlaySlidingAndFallingAudio::CallFunc_PlayEvent_play_success_1' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlaySlidingAndFallingAudio, CallFunc_PlayEvent_playback_instance_2) == 0x0000C8, "Member 'CAAudioUtilities_C_PlaySlidingAndFallingAudio::CallFunc_PlayEvent_playback_instance_2' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlaySlidingAndFallingAudio, CallFunc_PlayEvent_play_success_2) == 0x0000D8, "Member 'CAAudioUtilities_C_PlaySlidingAndFallingAudio::CallFunc_PlayEvent_play_success_2' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlaySlidingAndFallingAudio, CallFunc_PlayEvent_playback_instance_3) == 0x0000E0, "Member 'CAAudioUtilities_C_PlaySlidingAndFallingAudio::CallFunc_PlayEvent_playback_instance_3' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlaySlidingAndFallingAudio, CallFunc_PlayEvent_play_success_3) == 0x0000F0, "Member 'CAAudioUtilities_C_PlaySlidingAndFallingAudio::CallFunc_PlayEvent_play_success_3' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlaySlidingAndFallingAudio, CallFunc_IsBeingViewed_ReturnValue) == 0x0000F1, "Member 'CAAudioUtilities_C_PlaySlidingAndFallingAudio::CallFunc_IsBeingViewed_ReturnValue' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlaySlidingAndFallingAudio, K2Node_SwitchEnum_CmpSuccess) == 0x0000F2, "Member 'CAAudioUtilities_C_PlaySlidingAndFallingAudio::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlaySlidingAndFallingAudio, K2Node_SwitchEnum_CmpSuccess_1) == 0x0000F3, "Member 'CAAudioUtilities_C_PlaySlidingAndFallingAudio::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlaySlidingAndFallingAudio, Temp_bool_IsClosed_Variable) == 0x0000F4, "Member 'CAAudioUtilities_C_PlaySlidingAndFallingAudio::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlaySlidingAndFallingAudio, CallFunc_PlayEvent_playback_instance_4) == 0x0000F8, "Member 'CAAudioUtilities_C_PlaySlidingAndFallingAudio::CallFunc_PlayEvent_playback_instance_4' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlaySlidingAndFallingAudio, CallFunc_PlayEvent_play_success_4) == 0x000108, "Member 'CAAudioUtilities_C_PlaySlidingAndFallingAudio::CallFunc_PlayEvent_play_success_4' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlaySlidingAndFallingAudio, CallFunc_PlayEvent_playback_instance_5) == 0x000110, "Member 'CAAudioUtilities_C_PlaySlidingAndFallingAudio::CallFunc_PlayEvent_playback_instance_5' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlaySlidingAndFallingAudio, CallFunc_PlayEvent_play_success_5) == 0x000120, "Member 'CAAudioUtilities_C_PlaySlidingAndFallingAudio::CallFunc_PlayEvent_play_success_5' has a wrong offset!");

// Function CAAudioUtilities.CAAudioUtilities_C.PlayHandPlacementZeroGDownedAudio
// 0x0150 (0x0150 - 0x0000)
struct CAAudioUtilities_C_PlayHandPlacementZeroGDownedAudio final
{
public:
	class ACACharacter_MainPlayer*                Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FCAAudioEventType& Event_name)> Temp_delegate_Variable;                            // 0x0010(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorInt_ReturnValue;           // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0040(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x0068(0x0090)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCAAudioPlaybackInstance               CallFunc_PlayEvent_playback_instance;              // 0x0100(0x0010)()
	bool                                          CallFunc_PlayEvent_play_success;                   // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPhysicalSurface                              CallFunc_GetSurfaceType_ReturnValue;               // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_112[0x2];                                      // 0x0112(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCAAudioSwitchValueType                CallFunc_ConvertSurfaceToAudio_Switch;             // 0x0114(0x0004)(NoDestructor)
	struct FCAAudioBankNameType                   CallFunc_ConvertSurfaceToAudio_FootstepBank;       // 0x0118(0x0004)(NoDestructor)
	bool                                          CallFunc_IsBeingViewed_ReturnValue;                // 0x011C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11D[0x3];                                      // 0x011D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const struct FCAAudioEventType& Event_name)> Temp_delegate_Variable_1;                          // 0x0120(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	uint8                                         Pad_134[0x4];                                      // 0x0134(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCAAudioPlaybackInstance               CallFunc_PlayEvent_playback_instance_1;            // 0x0138(0x0010)()
	bool                                          CallFunc_PlayEvent_play_success_1;                 // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CAAudioUtilities_C_PlayHandPlacementZeroGDownedAudio) == 0x000008, "Wrong alignment on CAAudioUtilities_C_PlayHandPlacementZeroGDownedAudio");
static_assert(sizeof(CAAudioUtilities_C_PlayHandPlacementZeroGDownedAudio) == 0x000150, "Wrong size on CAAudioUtilities_C_PlayHandPlacementZeroGDownedAudio");
static_assert(offsetof(CAAudioUtilities_C_PlayHandPlacementZeroGDownedAudio, Character) == 0x000000, "Member 'CAAudioUtilities_C_PlayHandPlacementZeroGDownedAudio::Character' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayHandPlacementZeroGDownedAudio, __WorldContext) == 0x000008, "Member 'CAAudioUtilities_C_PlayHandPlacementZeroGDownedAudio::__WorldContext' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayHandPlacementZeroGDownedAudio, Temp_delegate_Variable) == 0x000010, "Member 'CAAudioUtilities_C_PlayHandPlacementZeroGDownedAudio::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayHandPlacementZeroGDownedAudio, CallFunc_IsValid_ReturnValue) == 0x000024, "Member 'CAAudioUtilities_C_PlayHandPlacementZeroGDownedAudio::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayHandPlacementZeroGDownedAudio, CallFunc_GetActorForwardVector_ReturnValue) == 0x000028, "Member 'CAAudioUtilities_C_PlayHandPlacementZeroGDownedAudio::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayHandPlacementZeroGDownedAudio, CallFunc_Multiply_VectorInt_ReturnValue) == 0x000034, "Member 'CAAudioUtilities_C_PlayHandPlacementZeroGDownedAudio::CallFunc_Multiply_VectorInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayHandPlacementZeroGDownedAudio, K2Node_MakeArray_Array) == 0x000040, "Member 'CAAudioUtilities_C_PlayHandPlacementZeroGDownedAudio::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayHandPlacementZeroGDownedAudio, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000050, "Member 'CAAudioUtilities_C_PlayHandPlacementZeroGDownedAudio::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayHandPlacementZeroGDownedAudio, CallFunc_Add_VectorVector_ReturnValue) == 0x00005C, "Member 'CAAudioUtilities_C_PlayHandPlacementZeroGDownedAudio::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayHandPlacementZeroGDownedAudio, CallFunc_LineTraceSingle_OutHit) == 0x000068, "Member 'CAAudioUtilities_C_PlayHandPlacementZeroGDownedAudio::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayHandPlacementZeroGDownedAudio, CallFunc_LineTraceSingle_ReturnValue) == 0x0000F8, "Member 'CAAudioUtilities_C_PlayHandPlacementZeroGDownedAudio::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayHandPlacementZeroGDownedAudio, CallFunc_PlayEvent_playback_instance) == 0x000100, "Member 'CAAudioUtilities_C_PlayHandPlacementZeroGDownedAudio::CallFunc_PlayEvent_playback_instance' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayHandPlacementZeroGDownedAudio, CallFunc_PlayEvent_play_success) == 0x000110, "Member 'CAAudioUtilities_C_PlayHandPlacementZeroGDownedAudio::CallFunc_PlayEvent_play_success' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayHandPlacementZeroGDownedAudio, CallFunc_GetSurfaceType_ReturnValue) == 0x000111, "Member 'CAAudioUtilities_C_PlayHandPlacementZeroGDownedAudio::CallFunc_GetSurfaceType_ReturnValue' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayHandPlacementZeroGDownedAudio, CallFunc_ConvertSurfaceToAudio_Switch) == 0x000114, "Member 'CAAudioUtilities_C_PlayHandPlacementZeroGDownedAudio::CallFunc_ConvertSurfaceToAudio_Switch' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayHandPlacementZeroGDownedAudio, CallFunc_ConvertSurfaceToAudio_FootstepBank) == 0x000118, "Member 'CAAudioUtilities_C_PlayHandPlacementZeroGDownedAudio::CallFunc_ConvertSurfaceToAudio_FootstepBank' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayHandPlacementZeroGDownedAudio, CallFunc_IsBeingViewed_ReturnValue) == 0x00011C, "Member 'CAAudioUtilities_C_PlayHandPlacementZeroGDownedAudio::CallFunc_IsBeingViewed_ReturnValue' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayHandPlacementZeroGDownedAudio, Temp_delegate_Variable_1) == 0x000120, "Member 'CAAudioUtilities_C_PlayHandPlacementZeroGDownedAudio::Temp_delegate_Variable_1' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayHandPlacementZeroGDownedAudio, CallFunc_PlayEvent_playback_instance_1) == 0x000138, "Member 'CAAudioUtilities_C_PlayHandPlacementZeroGDownedAudio::CallFunc_PlayEvent_playback_instance_1' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayHandPlacementZeroGDownedAudio, CallFunc_PlayEvent_play_success_1) == 0x000148, "Member 'CAAudioUtilities_C_PlayHandPlacementZeroGDownedAudio::CallFunc_PlayEvent_play_success_1' has a wrong offset!");

// Function CAAudioUtilities.CAAudioUtilities_C.ENVPropFoleySweetnerAudio
// 0x0258 (0x0258 - 0x0000)
struct CAAudioUtilities_C_ENVPropFoleySweetnerAudio final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x0090)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	EAUDIO_Env_FoleySweetners                     ENV_Sweetner_Switch;                               // 0x0090(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACACharacter*                           Character;                                         // 0x0098(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x00A0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCAAudioSwitchValueType                ENVSweetner_SwitchValue;                           // 0x00A8(0x0004)(Edit, BlueprintVisible, NoDestructor)
	EAUDIO_Env_FoleySweetners                     ENVSweetner_PrevMovement;                          // 0x00AC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AD[0x3];                                       // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             ENVSweetner_Hit;                                   // 0x00B0(0x0090)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FCAAudioEventType                      Temp_struct_Variable;                              // 0x0140(0x0004)(ConstParm, NoDestructor)
	struct FCAAudioEventType                      Temp_struct_Variable_1;                            // 0x0144(0x0004)(ConstParm, NoDestructor)
	struct FCAAudioEventType                      Temp_struct_Variable_2;                            // 0x0148(0x0004)(ConstParm, NoDestructor)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCAAudioEventType                      Temp_struct_Variable_3;                            // 0x0150(0x0004)(ConstParm, NoDestructor)
	struct FCAAudioEventType                      Temp_struct_Variable_4;                            // 0x0154(0x0004)(ConstParm, NoDestructor)
	struct FCAAudioEventType                      Temp_struct_Variable_5;                            // 0x0158(0x0004)(ConstParm, NoDestructor)
	EAUDIO_Env_FoleySweetners                     Temp_byte_Variable;                                // 0x015C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15D[0x3];                                      // 0x015D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCAAudioEventType                      K2Node_Select_Default;                             // 0x0164(0x0004)(ConstParm, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x016C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x016D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_16E[0x2];                                      // 0x016E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0178(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0184(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0190(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x019C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x01B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x01C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x01D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x01E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   CallFunc_GetComponentByClass_ReturnValue;          // 0x01F0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F9[0x7];                                      // 0x01F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_ExtractAllSocketsFromMeshComponent_socket_names; // 0x0200(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0210(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x021C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0220(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_231[0x3];                                      // 0x0231(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCAAudioSwitchValueType                CallFunc_StringToSwitchValue_switch_value;         // 0x0234(0x0004)(NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_239[0x7];                                      // 0x0239(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCAAudioPlaybackInstance               CallFunc_PlayEventInWorld_playback_instance;       // 0x0240(0x0010)()
	bool                                          CallFunc_PlayEventInWorld_play_success;            // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CAAudioUtilities_C_ENVPropFoleySweetnerAudio) == 0x000008, "Wrong alignment on CAAudioUtilities_C_ENVPropFoleySweetnerAudio");
static_assert(sizeof(CAAudioUtilities_C_ENVPropFoleySweetnerAudio) == 0x000258, "Wrong size on CAAudioUtilities_C_ENVPropFoleySweetnerAudio");
static_assert(offsetof(CAAudioUtilities_C_ENVPropFoleySweetnerAudio, Hit) == 0x000000, "Member 'CAAudioUtilities_C_ENVPropFoleySweetnerAudio::Hit' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_ENVPropFoleySweetnerAudio, ENV_Sweetner_Switch) == 0x000090, "Member 'CAAudioUtilities_C_ENVPropFoleySweetnerAudio::ENV_Sweetner_Switch' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_ENVPropFoleySweetnerAudio, Character) == 0x000098, "Member 'CAAudioUtilities_C_ENVPropFoleySweetnerAudio::Character' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_ENVPropFoleySweetnerAudio, __WorldContext) == 0x0000A0, "Member 'CAAudioUtilities_C_ENVPropFoleySweetnerAudio::__WorldContext' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_ENVPropFoleySweetnerAudio, ENVSweetner_SwitchValue) == 0x0000A8, "Member 'CAAudioUtilities_C_ENVPropFoleySweetnerAudio::ENVSweetner_SwitchValue' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_ENVPropFoleySweetnerAudio, ENVSweetner_PrevMovement) == 0x0000AC, "Member 'CAAudioUtilities_C_ENVPropFoleySweetnerAudio::ENVSweetner_PrevMovement' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_ENVPropFoleySweetnerAudio, ENVSweetner_Hit) == 0x0000B0, "Member 'CAAudioUtilities_C_ENVPropFoleySweetnerAudio::ENVSweetner_Hit' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_ENVPropFoleySweetnerAudio, Temp_struct_Variable) == 0x000140, "Member 'CAAudioUtilities_C_ENVPropFoleySweetnerAudio::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_ENVPropFoleySweetnerAudio, Temp_struct_Variable_1) == 0x000144, "Member 'CAAudioUtilities_C_ENVPropFoleySweetnerAudio::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_ENVPropFoleySweetnerAudio, Temp_struct_Variable_2) == 0x000148, "Member 'CAAudioUtilities_C_ENVPropFoleySweetnerAudio::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_ENVPropFoleySweetnerAudio, Temp_int_Array_Index_Variable) == 0x00014C, "Member 'CAAudioUtilities_C_ENVPropFoleySweetnerAudio::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_ENVPropFoleySweetnerAudio, Temp_struct_Variable_3) == 0x000150, "Member 'CAAudioUtilities_C_ENVPropFoleySweetnerAudio::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_ENVPropFoleySweetnerAudio, Temp_struct_Variable_4) == 0x000154, "Member 'CAAudioUtilities_C_ENVPropFoleySweetnerAudio::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_ENVPropFoleySweetnerAudio, Temp_struct_Variable_5) == 0x000158, "Member 'CAAudioUtilities_C_ENVPropFoleySweetnerAudio::Temp_struct_Variable_5' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_ENVPropFoleySweetnerAudio, Temp_byte_Variable) == 0x00015C, "Member 'CAAudioUtilities_C_ENVPropFoleySweetnerAudio::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_ENVPropFoleySweetnerAudio, Temp_int_Loop_Counter_Variable) == 0x000160, "Member 'CAAudioUtilities_C_ENVPropFoleySweetnerAudio::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_ENVPropFoleySweetnerAudio, K2Node_Select_Default) == 0x000164, "Member 'CAAudioUtilities_C_ENVPropFoleySweetnerAudio::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_ENVPropFoleySweetnerAudio, CallFunc_Add_IntInt_ReturnValue) == 0x000168, "Member 'CAAudioUtilities_C_ENVPropFoleySweetnerAudio::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_ENVPropFoleySweetnerAudio, CallFunc_BreakHitResult_bBlockingHit) == 0x00016C, "Member 'CAAudioUtilities_C_ENVPropFoleySweetnerAudio::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_ENVPropFoleySweetnerAudio, CallFunc_BreakHitResult_bInitialOverlap) == 0x00016D, "Member 'CAAudioUtilities_C_ENVPropFoleySweetnerAudio::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_ENVPropFoleySweetnerAudio, CallFunc_BreakHitResult_Time) == 0x000170, "Member 'CAAudioUtilities_C_ENVPropFoleySweetnerAudio::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_ENVPropFoleySweetnerAudio, CallFunc_BreakHitResult_Distance) == 0x000174, "Member 'CAAudioUtilities_C_ENVPropFoleySweetnerAudio::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_ENVPropFoleySweetnerAudio, CallFunc_BreakHitResult_Location) == 0x000178, "Member 'CAAudioUtilities_C_ENVPropFoleySweetnerAudio::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_ENVPropFoleySweetnerAudio, CallFunc_BreakHitResult_ImpactPoint) == 0x000184, "Member 'CAAudioUtilities_C_ENVPropFoleySweetnerAudio::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_ENVPropFoleySweetnerAudio, CallFunc_BreakHitResult_Normal) == 0x000190, "Member 'CAAudioUtilities_C_ENVPropFoleySweetnerAudio::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_ENVPropFoleySweetnerAudio, CallFunc_BreakHitResult_ImpactNormal) == 0x00019C, "Member 'CAAudioUtilities_C_ENVPropFoleySweetnerAudio::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_ENVPropFoleySweetnerAudio, CallFunc_BreakHitResult_PhysMat) == 0x0001A8, "Member 'CAAudioUtilities_C_ENVPropFoleySweetnerAudio::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_ENVPropFoleySweetnerAudio, CallFunc_BreakHitResult_HitActor) == 0x0001B0, "Member 'CAAudioUtilities_C_ENVPropFoleySweetnerAudio::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_ENVPropFoleySweetnerAudio, CallFunc_BreakHitResult_HitComponent) == 0x0001B8, "Member 'CAAudioUtilities_C_ENVPropFoleySweetnerAudio::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_ENVPropFoleySweetnerAudio, CallFunc_BreakHitResult_HitBoneName) == 0x0001C0, "Member 'CAAudioUtilities_C_ENVPropFoleySweetnerAudio::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_ENVPropFoleySweetnerAudio, CallFunc_BreakHitResult_HitItem) == 0x0001CC, "Member 'CAAudioUtilities_C_ENVPropFoleySweetnerAudio::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_ENVPropFoleySweetnerAudio, CallFunc_BreakHitResult_ElementIndex) == 0x0001D0, "Member 'CAAudioUtilities_C_ENVPropFoleySweetnerAudio::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_ENVPropFoleySweetnerAudio, CallFunc_BreakHitResult_FaceIndex) == 0x0001D4, "Member 'CAAudioUtilities_C_ENVPropFoleySweetnerAudio::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_ENVPropFoleySweetnerAudio, CallFunc_BreakHitResult_TraceStart) == 0x0001D8, "Member 'CAAudioUtilities_C_ENVPropFoleySweetnerAudio::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_ENVPropFoleySweetnerAudio, CallFunc_BreakHitResult_TraceEnd) == 0x0001E4, "Member 'CAAudioUtilities_C_ENVPropFoleySweetnerAudio::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_ENVPropFoleySweetnerAudio, CallFunc_GetComponentByClass_ReturnValue) == 0x0001F0, "Member 'CAAudioUtilities_C_ENVPropFoleySweetnerAudio::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_ENVPropFoleySweetnerAudio, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x0001F8, "Member 'CAAudioUtilities_C_ENVPropFoleySweetnerAudio::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_ENVPropFoleySweetnerAudio, CallFunc_ExtractAllSocketsFromMeshComponent_socket_names) == 0x000200, "Member 'CAAudioUtilities_C_ENVPropFoleySweetnerAudio::CallFunc_ExtractAllSocketsFromMeshComponent_socket_names' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_ENVPropFoleySweetnerAudio, CallFunc_Array_Get_Item) == 0x000210, "Member 'CAAudioUtilities_C_ENVPropFoleySweetnerAudio::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_ENVPropFoleySweetnerAudio, CallFunc_Array_Length_ReturnValue) == 0x00021C, "Member 'CAAudioUtilities_C_ENVPropFoleySweetnerAudio::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_ENVPropFoleySweetnerAudio, CallFunc_Conv_NameToString_ReturnValue) == 0x000220, "Member 'CAAudioUtilities_C_ENVPropFoleySweetnerAudio::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_ENVPropFoleySweetnerAudio, CallFunc_Less_IntInt_ReturnValue) == 0x000230, "Member 'CAAudioUtilities_C_ENVPropFoleySweetnerAudio::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_ENVPropFoleySweetnerAudio, CallFunc_StringToSwitchValue_switch_value) == 0x000234, "Member 'CAAudioUtilities_C_ENVPropFoleySweetnerAudio::CallFunc_StringToSwitchValue_switch_value' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_ENVPropFoleySweetnerAudio, CallFunc_IsValid_ReturnValue) == 0x000238, "Member 'CAAudioUtilities_C_ENVPropFoleySweetnerAudio::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_ENVPropFoleySweetnerAudio, CallFunc_PlayEventInWorld_playback_instance) == 0x000240, "Member 'CAAudioUtilities_C_ENVPropFoleySweetnerAudio::CallFunc_PlayEventInWorld_playback_instance' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_ENVPropFoleySweetnerAudio, CallFunc_PlayEventInWorld_play_success) == 0x000250, "Member 'CAAudioUtilities_C_ENVPropFoleySweetnerAudio::CallFunc_PlayEventInWorld_play_success' has a wrong offset!");

// Function CAAudioUtilities.CAAudioUtilities_C.GetShipsVoiceController
// 0x0020 (0x0020 - 0x0000)
struct CAAudioUtilities_C_GetShipsVoiceController final
{
public:
	class UObject*                                Context;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_ShipsVoiceController_C*             ShipsVoiceController;                              // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_ShipsVoiceController_C*             CallFunc_GetActorOfClass_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CAAudioUtilities_C_GetShipsVoiceController) == 0x000008, "Wrong alignment on CAAudioUtilities_C_GetShipsVoiceController");
static_assert(sizeof(CAAudioUtilities_C_GetShipsVoiceController) == 0x000020, "Wrong size on CAAudioUtilities_C_GetShipsVoiceController");
static_assert(offsetof(CAAudioUtilities_C_GetShipsVoiceController, Context) == 0x000000, "Member 'CAAudioUtilities_C_GetShipsVoiceController::Context' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_GetShipsVoiceController, __WorldContext) == 0x000008, "Member 'CAAudioUtilities_C_GetShipsVoiceController::__WorldContext' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_GetShipsVoiceController, ShipsVoiceController) == 0x000010, "Member 'CAAudioUtilities_C_GetShipsVoiceController::ShipsVoiceController' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_GetShipsVoiceController, CallFunc_GetActorOfClass_ReturnValue) == 0x000018, "Member 'CAAudioUtilities_C_GetShipsVoiceController::CallFunc_GetActorOfClass_ReturnValue' has a wrong offset!");

// Function CAAudioUtilities.CAAudioUtilities_C.PlayTraversalAudio
// 0x0478 (0x0478 - 0x0000)
struct CAAudioUtilities_C_PlayTraversalAudio final
{
public:
	class ACACharacter_MainPlayer*                Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECAPlayerMovementMode                         Previous_Movement_Mode;                            // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECAPlayerMovementMode                         Current_Movement_Mode;                             // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCAAudioEventType                      LowTraversalSurfaceTypeTP;                         // 0x0018(0x0004)(Edit, BlueprintVisible, NoDestructor)
	struct FCAAudioEventType                      LowTraversalSurfaceTypeFP;                         // 0x001C(0x0004)(Edit, BlueprintVisible, NoDestructor)
	struct FCAAudioEventType                      HighTraversalSurfaceTypeTP;                        // 0x0020(0x0004)(Edit, BlueprintVisible, NoDestructor)
	struct FCAAudioEventType                      HighTraversalSurfaceTypeFP;                        // 0x0024(0x0004)(Edit, BlueprintVisible, NoDestructor)
	bool                                          PrevJumpTraversalTraceHitSuccess;                  // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          LowTraversalTraceHitSuccess;                       // 0x0029(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          HighTraversalTraceHitSuccess;                      // 0x002A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	EPhysicalSurface                              LowTraversalSurfaceType;                           // 0x002B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              HighTraversalSurfaceType;                          // 0x002C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          WasJumping;                                        // 0x002D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E[0x2];                                       // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CharacterWorldPos;                                 // 0x0030(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E[0x2];                                       // 0x003E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_2;                    // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4E[0x2];                                       // 0x004E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCAAudioPlaybackInstance               CallFunc_PlayEventInWorld_playback_instance;       // 0x0050(0x0010)()
	bool                                          CallFunc_PlayEventInWorld_play_success;            // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_3;                    // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_4;                    // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_63[0x5];                                       // 0x0063(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCAAudioPlaybackInstance               CallFunc_PlayEventInWorld_playback_instance_1;     // 0x0068(0x0010)()
	bool                                          CallFunc_PlayEventInWorld_play_success_1;          // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCAAudioPlaybackInstance               CallFunc_PlayEventInWorld_playback_instance_2;     // 0x0080(0x0010)()
	bool                                          CallFunc_PlayEventInWorld_play_success_2;          // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const struct FCAAudioEventType& Event_name)> Temp_delegate_Variable;                            // 0x0094(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	TDelegate<void(const struct FCAAudioEventType& Event_name)> Temp_delegate_Variable_1;                          // 0x00A8(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	TDelegate<void(const struct FCAAudioEventType& Event_name)> Temp_delegate_Variable_2;                          // 0x00BC(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x00DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x00E8(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_Multiply_VectorInt_ReturnValue;           // 0x00F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0104(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCAAudioPlaybackInstance               CallFunc_PlayEventInWorld_playback_instance_3;     // 0x0110(0x0010)()
	bool                                          CallFunc_PlayEventInWorld_play_success_3;          // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_121[0x3];                                      // 0x0121(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x0124(0x0090)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x01B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B5[0x3];                                      // 0x01B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const struct FCAAudioEventType& Event_name)> Temp_delegate_Variable_3;                          // 0x01B8(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	EPhysicalSurface                              CallFunc_GetSurfaceType_ReturnValue;               // 0x01CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CD[0x3];                                      // 0x01CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const struct FCAAudioEventType& Event_name)> Temp_delegate_Variable_4;                          // 0x01D0(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	uint8                                         Pad_1E4[0x4];                                      // 0x01E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCAAudioPlaybackInstance               CallFunc_PlayEvent_playback_instance;              // 0x01E8(0x0010)()
	bool                                          CallFunc_PlayEvent_play_success;                   // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsBeingViewed_ReturnValue;                // 0x01F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1FA[0x2];                                      // 0x01FA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const struct FCAAudioEventType& Event_name)> Temp_delegate_Variable_5;                          // 0x01FC(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	struct FCAAudioPlaybackInstance               CallFunc_PlayEvent_playback_instance_1;            // 0x0210(0x0010)()
	bool                                          CallFunc_PlayEvent_play_success_1;                 // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_221[0x3];                                      // 0x0221(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x0224(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue_1;      // 0x0230(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23C[0x4];                                      // 0x023C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         K2Node_MakeArray_Array_1;                          // 0x0240(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_Multiply_VectorInt_ReturnValue_1;         // 0x0250(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_3;           // 0x025C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCAAudioPlaybackInstance               CallFunc_PlayEvent_playback_instance_2;            // 0x0268(0x0010)()
	bool                                          CallFunc_PlayEvent_play_success_2;                 // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_279[0x3];                                      // 0x0279(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit_1;                 // 0x027C(0x0090)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue_1;            // 0x030C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30D[0x3];                                      // 0x030D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCAAudioPlaybackInstance               CallFunc_PlayEvent_playback_instance_3;            // 0x0310(0x0010)()
	bool                                          CallFunc_PlayEvent_play_success_3;                 // 0x0320(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPhysicalSurface                              CallFunc_GetSurfaceType_ReturnValue_1;             // 0x0321(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsBeingViewed_ReturnValue_1;              // 0x0322(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_323[0x1];                                      // 0x0323(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const struct FCAAudioEventType& Event_name)> Temp_delegate_Variable_6;                          // 0x0324(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	struct FCAAudioPlaybackInstance               CallFunc_PlayEvent_playback_instance_4;            // 0x0338(0x0010)()
	bool                                          CallFunc_PlayEvent_play_success_4;                 // 0x0348(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_349[0x3];                                      // 0x0349(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const struct FCAAudioEventType& Event_name)> Temp_delegate_Variable_7;                          // 0x034C(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	struct FCAAudioPlaybackInstance               CallFunc_PlayEvent_playback_instance_5;            // 0x0360(0x0010)()
	bool                                          CallFunc_PlayEvent_play_success_5;                 // 0x0370(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_371[0x3];                                      // 0x0371(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_4;           // 0x0374(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue_2;      // 0x0380(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38C[0x4];                                      // 0x038C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCAAudioPlaybackInstance               CallFunc_PlayEvent_playback_instance_6;            // 0x0390(0x0010)()
	bool                                          CallFunc_PlayEvent_play_success_6;                 // 0x03A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A1[0x3];                                      // 0x03A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorInt_ReturnValue_2;         // 0x03A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_MakeArray_Array_2;                          // 0x03B0(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_5;           // 0x03C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit_2;                 // 0x03CC(0x0090)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue_2;            // 0x045C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45D[0x3];                                      // 0x045D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCAAudioPlaybackInstance               CallFunc_PlayEvent_playback_instance_7;            // 0x0460(0x0010)()
	bool                                          CallFunc_PlayEvent_play_success_7;                 // 0x0470(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPhysicalSurface                              CallFunc_GetSurfaceType_ReturnValue_2;             // 0x0471(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CAAudioUtilities_C_PlayTraversalAudio) == 0x000008, "Wrong alignment on CAAudioUtilities_C_PlayTraversalAudio");
static_assert(sizeof(CAAudioUtilities_C_PlayTraversalAudio) == 0x000478, "Wrong size on CAAudioUtilities_C_PlayTraversalAudio");
static_assert(offsetof(CAAudioUtilities_C_PlayTraversalAudio, Character) == 0x000000, "Member 'CAAudioUtilities_C_PlayTraversalAudio::Character' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayTraversalAudio, Previous_Movement_Mode) == 0x000008, "Member 'CAAudioUtilities_C_PlayTraversalAudio::Previous_Movement_Mode' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayTraversalAudio, Current_Movement_Mode) == 0x000009, "Member 'CAAudioUtilities_C_PlayTraversalAudio::Current_Movement_Mode' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayTraversalAudio, __WorldContext) == 0x000010, "Member 'CAAudioUtilities_C_PlayTraversalAudio::__WorldContext' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayTraversalAudio, LowTraversalSurfaceTypeTP) == 0x000018, "Member 'CAAudioUtilities_C_PlayTraversalAudio::LowTraversalSurfaceTypeTP' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayTraversalAudio, LowTraversalSurfaceTypeFP) == 0x00001C, "Member 'CAAudioUtilities_C_PlayTraversalAudio::LowTraversalSurfaceTypeFP' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayTraversalAudio, HighTraversalSurfaceTypeTP) == 0x000020, "Member 'CAAudioUtilities_C_PlayTraversalAudio::HighTraversalSurfaceTypeTP' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayTraversalAudio, HighTraversalSurfaceTypeFP) == 0x000024, "Member 'CAAudioUtilities_C_PlayTraversalAudio::HighTraversalSurfaceTypeFP' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayTraversalAudio, PrevJumpTraversalTraceHitSuccess) == 0x000028, "Member 'CAAudioUtilities_C_PlayTraversalAudio::PrevJumpTraversalTraceHitSuccess' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayTraversalAudio, LowTraversalTraceHitSuccess) == 0x000029, "Member 'CAAudioUtilities_C_PlayTraversalAudio::LowTraversalTraceHitSuccess' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayTraversalAudio, HighTraversalTraceHitSuccess) == 0x00002A, "Member 'CAAudioUtilities_C_PlayTraversalAudio::HighTraversalTraceHitSuccess' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayTraversalAudio, LowTraversalSurfaceType) == 0x00002B, "Member 'CAAudioUtilities_C_PlayTraversalAudio::LowTraversalSurfaceType' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayTraversalAudio, HighTraversalSurfaceType) == 0x00002C, "Member 'CAAudioUtilities_C_PlayTraversalAudio::HighTraversalSurfaceType' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayTraversalAudio, WasJumping) == 0x00002D, "Member 'CAAudioUtilities_C_PlayTraversalAudio::WasJumping' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayTraversalAudio, CharacterWorldPos) == 0x000030, "Member 'CAAudioUtilities_C_PlayTraversalAudio::CharacterWorldPos' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayTraversalAudio, K2Node_SwitchEnum_CmpSuccess) == 0x00003C, "Member 'CAAudioUtilities_C_PlayTraversalAudio::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayTraversalAudio, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00003D, "Member 'CAAudioUtilities_C_PlayTraversalAudio::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayTraversalAudio, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000040, "Member 'CAAudioUtilities_C_PlayTraversalAudio::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayTraversalAudio, K2Node_SwitchEnum_CmpSuccess_1) == 0x00004C, "Member 'CAAudioUtilities_C_PlayTraversalAudio::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayTraversalAudio, K2Node_SwitchEnum_CmpSuccess_2) == 0x00004D, "Member 'CAAudioUtilities_C_PlayTraversalAudio::K2Node_SwitchEnum_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayTraversalAudio, CallFunc_PlayEventInWorld_playback_instance) == 0x000050, "Member 'CAAudioUtilities_C_PlayTraversalAudio::CallFunc_PlayEventInWorld_playback_instance' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayTraversalAudio, CallFunc_PlayEventInWorld_play_success) == 0x000060, "Member 'CAAudioUtilities_C_PlayTraversalAudio::CallFunc_PlayEventInWorld_play_success' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayTraversalAudio, K2Node_SwitchEnum_CmpSuccess_3) == 0x000061, "Member 'CAAudioUtilities_C_PlayTraversalAudio::K2Node_SwitchEnum_CmpSuccess_3' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayTraversalAudio, K2Node_SwitchEnum_CmpSuccess_4) == 0x000062, "Member 'CAAudioUtilities_C_PlayTraversalAudio::K2Node_SwitchEnum_CmpSuccess_4' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayTraversalAudio, CallFunc_PlayEventInWorld_playback_instance_1) == 0x000068, "Member 'CAAudioUtilities_C_PlayTraversalAudio::CallFunc_PlayEventInWorld_playback_instance_1' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayTraversalAudio, CallFunc_PlayEventInWorld_play_success_1) == 0x000078, "Member 'CAAudioUtilities_C_PlayTraversalAudio::CallFunc_PlayEventInWorld_play_success_1' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayTraversalAudio, CallFunc_PlayEventInWorld_playback_instance_2) == 0x000080, "Member 'CAAudioUtilities_C_PlayTraversalAudio::CallFunc_PlayEventInWorld_playback_instance_2' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayTraversalAudio, CallFunc_PlayEventInWorld_play_success_2) == 0x000090, "Member 'CAAudioUtilities_C_PlayTraversalAudio::CallFunc_PlayEventInWorld_play_success_2' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayTraversalAudio, Temp_delegate_Variable) == 0x000094, "Member 'CAAudioUtilities_C_PlayTraversalAudio::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayTraversalAudio, Temp_delegate_Variable_1) == 0x0000A8, "Member 'CAAudioUtilities_C_PlayTraversalAudio::Temp_delegate_Variable_1' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayTraversalAudio, Temp_delegate_Variable_2) == 0x0000BC, "Member 'CAAudioUtilities_C_PlayTraversalAudio::Temp_delegate_Variable_2' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayTraversalAudio, CallFunc_Add_VectorVector_ReturnValue) == 0x0000D0, "Member 'CAAudioUtilities_C_PlayTraversalAudio::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayTraversalAudio, CallFunc_GetActorForwardVector_ReturnValue) == 0x0000DC, "Member 'CAAudioUtilities_C_PlayTraversalAudio::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayTraversalAudio, K2Node_MakeArray_Array) == 0x0000E8, "Member 'CAAudioUtilities_C_PlayTraversalAudio::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayTraversalAudio, CallFunc_Multiply_VectorInt_ReturnValue) == 0x0000F8, "Member 'CAAudioUtilities_C_PlayTraversalAudio::CallFunc_Multiply_VectorInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayTraversalAudio, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000104, "Member 'CAAudioUtilities_C_PlayTraversalAudio::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayTraversalAudio, CallFunc_PlayEventInWorld_playback_instance_3) == 0x000110, "Member 'CAAudioUtilities_C_PlayTraversalAudio::CallFunc_PlayEventInWorld_playback_instance_3' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayTraversalAudio, CallFunc_PlayEventInWorld_play_success_3) == 0x000120, "Member 'CAAudioUtilities_C_PlayTraversalAudio::CallFunc_PlayEventInWorld_play_success_3' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayTraversalAudio, CallFunc_LineTraceSingle_OutHit) == 0x000124, "Member 'CAAudioUtilities_C_PlayTraversalAudio::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayTraversalAudio, CallFunc_LineTraceSingle_ReturnValue) == 0x0001B4, "Member 'CAAudioUtilities_C_PlayTraversalAudio::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayTraversalAudio, Temp_delegate_Variable_3) == 0x0001B8, "Member 'CAAudioUtilities_C_PlayTraversalAudio::Temp_delegate_Variable_3' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayTraversalAudio, CallFunc_GetSurfaceType_ReturnValue) == 0x0001CC, "Member 'CAAudioUtilities_C_PlayTraversalAudio::CallFunc_GetSurfaceType_ReturnValue' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayTraversalAudio, Temp_delegate_Variable_4) == 0x0001D0, "Member 'CAAudioUtilities_C_PlayTraversalAudio::Temp_delegate_Variable_4' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayTraversalAudio, CallFunc_PlayEvent_playback_instance) == 0x0001E8, "Member 'CAAudioUtilities_C_PlayTraversalAudio::CallFunc_PlayEvent_playback_instance' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayTraversalAudio, CallFunc_PlayEvent_play_success) == 0x0001F8, "Member 'CAAudioUtilities_C_PlayTraversalAudio::CallFunc_PlayEvent_play_success' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayTraversalAudio, CallFunc_IsBeingViewed_ReturnValue) == 0x0001F9, "Member 'CAAudioUtilities_C_PlayTraversalAudio::CallFunc_IsBeingViewed_ReturnValue' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayTraversalAudio, Temp_delegate_Variable_5) == 0x0001FC, "Member 'CAAudioUtilities_C_PlayTraversalAudio::Temp_delegate_Variable_5' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayTraversalAudio, CallFunc_PlayEvent_playback_instance_1) == 0x000210, "Member 'CAAudioUtilities_C_PlayTraversalAudio::CallFunc_PlayEvent_playback_instance_1' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayTraversalAudio, CallFunc_PlayEvent_play_success_1) == 0x000220, "Member 'CAAudioUtilities_C_PlayTraversalAudio::CallFunc_PlayEvent_play_success_1' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayTraversalAudio, CallFunc_Add_VectorVector_ReturnValue_2) == 0x000224, "Member 'CAAudioUtilities_C_PlayTraversalAudio::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayTraversalAudio, CallFunc_GetActorForwardVector_ReturnValue_1) == 0x000230, "Member 'CAAudioUtilities_C_PlayTraversalAudio::CallFunc_GetActorForwardVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayTraversalAudio, K2Node_MakeArray_Array_1) == 0x000240, "Member 'CAAudioUtilities_C_PlayTraversalAudio::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayTraversalAudio, CallFunc_Multiply_VectorInt_ReturnValue_1) == 0x000250, "Member 'CAAudioUtilities_C_PlayTraversalAudio::CallFunc_Multiply_VectorInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayTraversalAudio, CallFunc_Add_VectorVector_ReturnValue_3) == 0x00025C, "Member 'CAAudioUtilities_C_PlayTraversalAudio::CallFunc_Add_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayTraversalAudio, CallFunc_PlayEvent_playback_instance_2) == 0x000268, "Member 'CAAudioUtilities_C_PlayTraversalAudio::CallFunc_PlayEvent_playback_instance_2' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayTraversalAudio, CallFunc_PlayEvent_play_success_2) == 0x000278, "Member 'CAAudioUtilities_C_PlayTraversalAudio::CallFunc_PlayEvent_play_success_2' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayTraversalAudio, CallFunc_LineTraceSingle_OutHit_1) == 0x00027C, "Member 'CAAudioUtilities_C_PlayTraversalAudio::CallFunc_LineTraceSingle_OutHit_1' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayTraversalAudio, CallFunc_LineTraceSingle_ReturnValue_1) == 0x00030C, "Member 'CAAudioUtilities_C_PlayTraversalAudio::CallFunc_LineTraceSingle_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayTraversalAudio, CallFunc_PlayEvent_playback_instance_3) == 0x000310, "Member 'CAAudioUtilities_C_PlayTraversalAudio::CallFunc_PlayEvent_playback_instance_3' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayTraversalAudio, CallFunc_PlayEvent_play_success_3) == 0x000320, "Member 'CAAudioUtilities_C_PlayTraversalAudio::CallFunc_PlayEvent_play_success_3' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayTraversalAudio, CallFunc_GetSurfaceType_ReturnValue_1) == 0x000321, "Member 'CAAudioUtilities_C_PlayTraversalAudio::CallFunc_GetSurfaceType_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayTraversalAudio, CallFunc_IsBeingViewed_ReturnValue_1) == 0x000322, "Member 'CAAudioUtilities_C_PlayTraversalAudio::CallFunc_IsBeingViewed_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayTraversalAudio, Temp_delegate_Variable_6) == 0x000324, "Member 'CAAudioUtilities_C_PlayTraversalAudio::Temp_delegate_Variable_6' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayTraversalAudio, CallFunc_PlayEvent_playback_instance_4) == 0x000338, "Member 'CAAudioUtilities_C_PlayTraversalAudio::CallFunc_PlayEvent_playback_instance_4' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayTraversalAudio, CallFunc_PlayEvent_play_success_4) == 0x000348, "Member 'CAAudioUtilities_C_PlayTraversalAudio::CallFunc_PlayEvent_play_success_4' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayTraversalAudio, Temp_delegate_Variable_7) == 0x00034C, "Member 'CAAudioUtilities_C_PlayTraversalAudio::Temp_delegate_Variable_7' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayTraversalAudio, CallFunc_PlayEvent_playback_instance_5) == 0x000360, "Member 'CAAudioUtilities_C_PlayTraversalAudio::CallFunc_PlayEvent_playback_instance_5' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayTraversalAudio, CallFunc_PlayEvent_play_success_5) == 0x000370, "Member 'CAAudioUtilities_C_PlayTraversalAudio::CallFunc_PlayEvent_play_success_5' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayTraversalAudio, CallFunc_Add_VectorVector_ReturnValue_4) == 0x000374, "Member 'CAAudioUtilities_C_PlayTraversalAudio::CallFunc_Add_VectorVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayTraversalAudio, CallFunc_GetActorForwardVector_ReturnValue_2) == 0x000380, "Member 'CAAudioUtilities_C_PlayTraversalAudio::CallFunc_GetActorForwardVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayTraversalAudio, CallFunc_PlayEvent_playback_instance_6) == 0x000390, "Member 'CAAudioUtilities_C_PlayTraversalAudio::CallFunc_PlayEvent_playback_instance_6' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayTraversalAudio, CallFunc_PlayEvent_play_success_6) == 0x0003A0, "Member 'CAAudioUtilities_C_PlayTraversalAudio::CallFunc_PlayEvent_play_success_6' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayTraversalAudio, CallFunc_Multiply_VectorInt_ReturnValue_2) == 0x0003A4, "Member 'CAAudioUtilities_C_PlayTraversalAudio::CallFunc_Multiply_VectorInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayTraversalAudio, K2Node_MakeArray_Array_2) == 0x0003B0, "Member 'CAAudioUtilities_C_PlayTraversalAudio::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayTraversalAudio, CallFunc_Add_VectorVector_ReturnValue_5) == 0x0003C0, "Member 'CAAudioUtilities_C_PlayTraversalAudio::CallFunc_Add_VectorVector_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayTraversalAudio, CallFunc_LineTraceSingle_OutHit_2) == 0x0003CC, "Member 'CAAudioUtilities_C_PlayTraversalAudio::CallFunc_LineTraceSingle_OutHit_2' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayTraversalAudio, CallFunc_LineTraceSingle_ReturnValue_2) == 0x00045C, "Member 'CAAudioUtilities_C_PlayTraversalAudio::CallFunc_LineTraceSingle_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayTraversalAudio, CallFunc_PlayEvent_playback_instance_7) == 0x000460, "Member 'CAAudioUtilities_C_PlayTraversalAudio::CallFunc_PlayEvent_playback_instance_7' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayTraversalAudio, CallFunc_PlayEvent_play_success_7) == 0x000470, "Member 'CAAudioUtilities_C_PlayTraversalAudio::CallFunc_PlayEvent_play_success_7' has a wrong offset!");
static_assert(offsetof(CAAudioUtilities_C_PlayTraversalAudio, CallFunc_GetSurfaceType_ReturnValue_2) == 0x000471, "Member 'CAAudioUtilities_C_PlayTraversalAudio::CallFunc_GetSurfaceType_ReturnValue_2' has a wrong offset!");

}

