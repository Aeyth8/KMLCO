#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AB_PlayerDownedAR

#include "Basic.hpp"

#include "Keaton_structs.hpp"
#include "Keaton_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass AB_PlayerDownedAR.AB_PlayerDownedAR_C
// 0x01D8 (0x05B8 - 0x03E0)
class UAB_PlayerDownedAR_C final : public UCAGameplayAbility_PlayerDownedAR
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x03E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class ACACharacter_MainPlayer*                CACharacter_Main_Player;                           // 0x03E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	TArray<struct FSkillfulKillsDownedData>       DownedAnimZG;                                      // 0x03F0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FSkillfulKillsDownedData>       GutDownedAnimZG;                                   // 0x0400(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FSkillfulKillsDownedData>       ChestDownedAnimZG;                                 // 0x0410(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FSkillfulKillsDownedData>       LegsDownedAnimZG;                                  // 0x0420(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FSkillfulKillsDownedData>       HeadDownedAnim;                                    // 0x0430(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FSkillfulKillsDownedData>       GutDownedAnim;                                     // 0x0440(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FSkillfulKillsDownedData>       ChestDownedAnim;                                   // 0x0450(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FSkillfulKillsDownedData>       LegsDownedAnim;                                    // 0x0460(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FSkillfulKillsDownedData>       GutDownedAnimMoving;                               // 0x0470(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FSkillfulKillsDownedData>       ChestDownedAnimMoving;                             // 0x0480(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FSkillfulKillsDownedData>       GutDownedAnimAuto;                                 // 0x0490(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FSkillfulKillsDownedData>       ChestDownedAnimAuto;                               // 0x04A0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FSkillfulKillsDownedData>       GutDownedAnimSG;                                   // 0x04B0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FSkillfulKillsDownedData>       ChestDownedAnimSG;                                 // 0x04C0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FSkillfulKillsDownedData>       GutDownedAnimExplosion;                            // 0x04D0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UAnimMontage*                           Fire_Downed_Anim;                                  // 0x04E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FNetworkedHit                          Downing_Hit;                                       // 0x04E8(0x0068)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	class UBP_PlayerCombatFXComponent_C*          Player_Combat_FX;                                  // 0x0550(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 DeathAnimType;                                     // 0x0558(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	TArray<class FString>                         DirNames;                                          // 0x0568(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FSkillfulKillsDownedData>       DownedAnimCrouched;                                // 0x0578(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          Completed;                                         // 0x0588(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_589[0x7];                                      // 0x0589(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSkillfulKillsDownedData>       DownedAnimFall;                                    // 0x0590(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          Cached_isCrouched;                                 // 0x05A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Cached_isInZeroG;                                  // 0x05A1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Cached_isSliding;                                  // 0x05A2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Cached_isFalling;                                  // 0x05A3(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Completed_first_part;                              // 0x05A4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A5[0x3];                                      // 0x05A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MontagePriority;                                   // 0x05A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5AC[0x4];                                      // 0x05AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCACharacterMovementComponent*          MovementComponent;                                 // 0x05B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_AB_PlayerDownedAR(int32 EntryPoint);
	void Server_Set_Downed_Hit_Information();
	void K2_ActivateAbility();
	void K2_OnEndAbility(bool bWasCancelled);
	void ProcessRecoveryTransition(class UAnimMontage* DownedTransitionMontage, class UAnimMontage* RecoveryTransitionMontage);
	void ProcessDownedTransition();
	void Client_Set_Downed_Hit_Information();
	void OnStopped_18EB3FCB4B64EAC2A94E479475C9A1D6();
	void OnCompleted_18EB3FCB4B64EAC2A94E479475C9A1D6();
	void OnBlendOut_18EB3FCB4B64EAC2A94E479475C9A1D6();
	void OnInterrupted_18EB3FCB4B64EAC2A94E479475C9A1D6();
	void OnCancelled_18EB3FCB4B64EAC2A94E479475C9A1D6();
	void OnSkipped_18EB3FCB4B64EAC2A94E479475C9A1D6();
	void OnFinish_E2FD291E45685D6F12BFB0A5FC4CED02();
	void OnFinish_8C63E55249B08797D94C9BAFECD57818();
	void OnCompleted_06341AF040F7C2790230998B7F001725();
	void OnBlendOut_06341AF040F7C2790230998B7F001725();
	void OnInterrupted_06341AF040F7C2790230998B7F001725();
	void OnCancelled_06341AF040F7C2790230998B7F001725();
	void OnSkipped_06341AF040F7C2790230998B7F001725();
	void OnSync_EF68CDDA471F01D59058E78269F66E6C();
	void GetSkillfulKillsDeathAndRecoveryAnim(class UAnimMontage** DownedMontage, class UAnimMontage** RecoveryMontage);
	void Check_Client_Downing_Hit_Valid(bool* Hit_Valid);
	void DetermineSkillfulTag(struct FGameplayTag* Skillful_Tag);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"AB_PlayerDownedAR_C">();
	}
	static class UAB_PlayerDownedAR_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAB_PlayerDownedAR_C>();
	}
};
static_assert(alignof(UAB_PlayerDownedAR_C) == 0x000008, "Wrong alignment on UAB_PlayerDownedAR_C");
static_assert(sizeof(UAB_PlayerDownedAR_C) == 0x0005B8, "Wrong size on UAB_PlayerDownedAR_C");
static_assert(offsetof(UAB_PlayerDownedAR_C, UberGraphFrame) == 0x0003E0, "Member 'UAB_PlayerDownedAR_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UAB_PlayerDownedAR_C, CACharacter_Main_Player) == 0x0003E8, "Member 'UAB_PlayerDownedAR_C::CACharacter_Main_Player' has a wrong offset!");
static_assert(offsetof(UAB_PlayerDownedAR_C, DownedAnimZG) == 0x0003F0, "Member 'UAB_PlayerDownedAR_C::DownedAnimZG' has a wrong offset!");
static_assert(offsetof(UAB_PlayerDownedAR_C, GutDownedAnimZG) == 0x000400, "Member 'UAB_PlayerDownedAR_C::GutDownedAnimZG' has a wrong offset!");
static_assert(offsetof(UAB_PlayerDownedAR_C, ChestDownedAnimZG) == 0x000410, "Member 'UAB_PlayerDownedAR_C::ChestDownedAnimZG' has a wrong offset!");
static_assert(offsetof(UAB_PlayerDownedAR_C, LegsDownedAnimZG) == 0x000420, "Member 'UAB_PlayerDownedAR_C::LegsDownedAnimZG' has a wrong offset!");
static_assert(offsetof(UAB_PlayerDownedAR_C, HeadDownedAnim) == 0x000430, "Member 'UAB_PlayerDownedAR_C::HeadDownedAnim' has a wrong offset!");
static_assert(offsetof(UAB_PlayerDownedAR_C, GutDownedAnim) == 0x000440, "Member 'UAB_PlayerDownedAR_C::GutDownedAnim' has a wrong offset!");
static_assert(offsetof(UAB_PlayerDownedAR_C, ChestDownedAnim) == 0x000450, "Member 'UAB_PlayerDownedAR_C::ChestDownedAnim' has a wrong offset!");
static_assert(offsetof(UAB_PlayerDownedAR_C, LegsDownedAnim) == 0x000460, "Member 'UAB_PlayerDownedAR_C::LegsDownedAnim' has a wrong offset!");
static_assert(offsetof(UAB_PlayerDownedAR_C, GutDownedAnimMoving) == 0x000470, "Member 'UAB_PlayerDownedAR_C::GutDownedAnimMoving' has a wrong offset!");
static_assert(offsetof(UAB_PlayerDownedAR_C, ChestDownedAnimMoving) == 0x000480, "Member 'UAB_PlayerDownedAR_C::ChestDownedAnimMoving' has a wrong offset!");
static_assert(offsetof(UAB_PlayerDownedAR_C, GutDownedAnimAuto) == 0x000490, "Member 'UAB_PlayerDownedAR_C::GutDownedAnimAuto' has a wrong offset!");
static_assert(offsetof(UAB_PlayerDownedAR_C, ChestDownedAnimAuto) == 0x0004A0, "Member 'UAB_PlayerDownedAR_C::ChestDownedAnimAuto' has a wrong offset!");
static_assert(offsetof(UAB_PlayerDownedAR_C, GutDownedAnimSG) == 0x0004B0, "Member 'UAB_PlayerDownedAR_C::GutDownedAnimSG' has a wrong offset!");
static_assert(offsetof(UAB_PlayerDownedAR_C, ChestDownedAnimSG) == 0x0004C0, "Member 'UAB_PlayerDownedAR_C::ChestDownedAnimSG' has a wrong offset!");
static_assert(offsetof(UAB_PlayerDownedAR_C, GutDownedAnimExplosion) == 0x0004D0, "Member 'UAB_PlayerDownedAR_C::GutDownedAnimExplosion' has a wrong offset!");
static_assert(offsetof(UAB_PlayerDownedAR_C, Fire_Downed_Anim) == 0x0004E0, "Member 'UAB_PlayerDownedAR_C::Fire_Downed_Anim' has a wrong offset!");
static_assert(offsetof(UAB_PlayerDownedAR_C, Downing_Hit) == 0x0004E8, "Member 'UAB_PlayerDownedAR_C::Downing_Hit' has a wrong offset!");
static_assert(offsetof(UAB_PlayerDownedAR_C, Player_Combat_FX) == 0x000550, "Member 'UAB_PlayerDownedAR_C::Player_Combat_FX' has a wrong offset!");
static_assert(offsetof(UAB_PlayerDownedAR_C, DeathAnimType) == 0x000558, "Member 'UAB_PlayerDownedAR_C::DeathAnimType' has a wrong offset!");
static_assert(offsetof(UAB_PlayerDownedAR_C, DirNames) == 0x000568, "Member 'UAB_PlayerDownedAR_C::DirNames' has a wrong offset!");
static_assert(offsetof(UAB_PlayerDownedAR_C, DownedAnimCrouched) == 0x000578, "Member 'UAB_PlayerDownedAR_C::DownedAnimCrouched' has a wrong offset!");
static_assert(offsetof(UAB_PlayerDownedAR_C, Completed) == 0x000588, "Member 'UAB_PlayerDownedAR_C::Completed' has a wrong offset!");
static_assert(offsetof(UAB_PlayerDownedAR_C, DownedAnimFall) == 0x000590, "Member 'UAB_PlayerDownedAR_C::DownedAnimFall' has a wrong offset!");
static_assert(offsetof(UAB_PlayerDownedAR_C, Cached_isCrouched) == 0x0005A0, "Member 'UAB_PlayerDownedAR_C::Cached_isCrouched' has a wrong offset!");
static_assert(offsetof(UAB_PlayerDownedAR_C, Cached_isInZeroG) == 0x0005A1, "Member 'UAB_PlayerDownedAR_C::Cached_isInZeroG' has a wrong offset!");
static_assert(offsetof(UAB_PlayerDownedAR_C, Cached_isSliding) == 0x0005A2, "Member 'UAB_PlayerDownedAR_C::Cached_isSliding' has a wrong offset!");
static_assert(offsetof(UAB_PlayerDownedAR_C, Cached_isFalling) == 0x0005A3, "Member 'UAB_PlayerDownedAR_C::Cached_isFalling' has a wrong offset!");
static_assert(offsetof(UAB_PlayerDownedAR_C, Completed_first_part) == 0x0005A4, "Member 'UAB_PlayerDownedAR_C::Completed_first_part' has a wrong offset!");
static_assert(offsetof(UAB_PlayerDownedAR_C, MontagePriority) == 0x0005A8, "Member 'UAB_PlayerDownedAR_C::MontagePriority' has a wrong offset!");
static_assert(offsetof(UAB_PlayerDownedAR_C, MovementComponent) == 0x0005B0, "Member 'UAB_PlayerDownedAR_C::MovementComponent' has a wrong offset!");

}

