#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_Human_TP_Downed

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Keaton_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function ABP_Human_TP_Downed.ABP_Human_TP_Downed_C.ExecuteUbergraph_ABP_Human_TP_Downed
// 0x0178 (0x0178 - 0x0000)
struct ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACACharacter_MainPlayer*                K2Node_DynamicCast_AsCACharacter_Main_Player;      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Vector_IsNearlyZero_ReturnValue;          // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X_1;                          // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VInterpTo_ReturnValue;                    // 0x0064(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue; // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0076(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0077(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsFeatureActive_ReturnValue;              // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x007B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x007D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsFeatureActive_ReturnValue_1;            // 0x007E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x007F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UAnimSequenceBase*                      Temp_object_Variable;                              // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue;             // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x008D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x008E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8F[0x1];                                       // 0x008F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequenceBase*                      Temp_object_Variable_1;                            // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      Temp_object_Variable_2;                            // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      Temp_object_Variable_3;                            // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaTimeX;                           // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      K2Node_Select_Default;                             // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Vector_IsNearlyZero_ReturnValue_1;        // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x3];                                       // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRelevantAnimTime_ReturnValue;          // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x00CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CB[0x1];                                       // 0x00CB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X_2;                          // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D9[0x3];                                       // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x00DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Vector_IsNearlyZero_ReturnValue_2;        // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequenceBase*                      Temp_object_Variable_4;                            // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_5;                // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_FA[0x6];                                       // 0x00FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequenceBase*                      Temp_object_Variable_5;                            // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      Temp_object_Variable_6;                            // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      Temp_object_Variable_7;                            // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11C[0x4];                                      // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequenceBase*                      Temp_object_Variable_8;                            // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      K2Node_Select_Default_1;                           // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      Temp_object_Variable_9;                            // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      Temp_object_Variable_10;                           // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_5;                  // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x0141(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x0142(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_6;                // 0x0143(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_6;                  // 0x0144(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_6;                 // 0x0145(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_146[0x2];                                      // 0x0146(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequenceBase*                      Temp_object_Variable_11;                           // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_7;                // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_151[0x3];                                      // 0x0151(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_1; // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_1;       // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_8;                // 0x0159(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_7;                  // 0x015A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_7;                 // 0x015B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_9;                // 0x015C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_8;                 // 0x015D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_9;                 // 0x015E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_8;                  // 0x015F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Variable_2;                               // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_10;                // 0x0164(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_11;                // 0x0165(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_166[0x2];                                      // 0x0166(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequenceBase*                      K2Node_Select_Default_2;                           // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRelevantAnimTimeRemainingFraction_ReturnValue; // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0174(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_12;                // 0x0175(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed) == 0x000008, "Wrong alignment on ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed");
static_assert(sizeof(ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed) == 0x000178, "Wrong size on ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed");
static_assert(offsetof(ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed, EntryPoint) == 0x000000, "Member 'ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed::EntryPoint' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed, CallFunc_Not_PreBool_ReturnValue) == 0x000004, "Member 'ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed, CallFunc_BooleanOR_ReturnValue) == 0x000005, "Member 'ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed, CallFunc_TryGetPawnOwner_ReturnValue) == 0x000008, "Member 'ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed::CallFunc_TryGetPawnOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed, K2Node_DynamicCast_AsCACharacter_Main_Player) == 0x000010, "Member 'ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed::K2Node_DynamicCast_AsCACharacter_Main_Player' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed, CallFunc_Add_VectorVector_ReturnValue) == 0x00001C, "Member 'ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed, CallFunc_BreakVector_X) == 0x000028, "Member 'ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed, CallFunc_BreakVector_Y) == 0x00002C, "Member 'ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed, CallFunc_BreakVector_Z) == 0x000030, "Member 'ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed, CallFunc_MakeVector_ReturnValue) == 0x000034, "Member 'ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed, CallFunc_Vector_IsNearlyZero_ReturnValue) == 0x000040, "Member 'ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed::CallFunc_Vector_IsNearlyZero_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed, CallFunc_BreakVector_X_1) == 0x000044, "Member 'ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed, CallFunc_BreakVector_Y_1) == 0x000048, "Member 'ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed, CallFunc_BreakVector_Z_1) == 0x00004C, "Member 'ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed, CallFunc_Not_PreBool_ReturnValue_1) == 0x000050, "Member 'ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed, CallFunc_MapRangeClamped_ReturnValue) == 0x000054, "Member 'ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed, CallFunc_MakeVector_ReturnValue_1) == 0x000058, "Member 'ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed, CallFunc_VInterpTo_ReturnValue) == 0x000064, "Member 'ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed::CallFunc_VInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue) == 0x000070, "Member 'ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000074, "Member 'ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000075, "Member 'ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000076, "Member 'ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000077, "Member 'ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x000078, "Member 'ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed, CallFunc_BooleanOR_ReturnValue_1) == 0x000079, "Member 'ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed, CallFunc_IsFeatureActive_ReturnValue) == 0x00007A, "Member 'ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed::CallFunc_IsFeatureActive_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed, CallFunc_BooleanAND_ReturnValue) == 0x00007B, "Member 'ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed, CallFunc_BooleanAND_ReturnValue_1) == 0x00007C, "Member 'ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed, CallFunc_BooleanAND_ReturnValue_2) == 0x00007D, "Member 'ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed, CallFunc_IsFeatureActive_ReturnValue_1) == 0x00007E, "Member 'ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed::CallFunc_IsFeatureActive_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed, CallFunc_Not_PreBool_ReturnValue_2) == 0x00007F, "Member 'ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed, Temp_object_Variable) == 0x000080, "Member 'ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed, CallFunc_Conv_BoolToFloat_ReturnValue) == 0x000088, "Member 'ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed::CallFunc_Conv_BoolToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed, CallFunc_BooleanOR_ReturnValue_2) == 0x00008C, "Member 'ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed, CallFunc_IsValid_ReturnValue) == 0x00008D, "Member 'ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed, CallFunc_Not_PreBool_ReturnValue_3) == 0x00008E, "Member 'ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed, Temp_object_Variable_1) == 0x000090, "Member 'ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed, Temp_object_Variable_2) == 0x000098, "Member 'ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed, Temp_object_Variable_3) == 0x0000A0, "Member 'ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed, CallFunc_BooleanOR_ReturnValue_3) == 0x0000A8, "Member 'ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed, K2Node_Event_DeltaTimeX) == 0x0000AC, "Member 'ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed::K2Node_Event_DeltaTimeX' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed, Temp_int_Variable) == 0x0000B0, "Member 'ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed, CallFunc_FMax_ReturnValue) == 0x0000B4, "Member 'ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed, K2Node_Select_Default) == 0x0000B8, "Member 'ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed, CallFunc_Vector_IsNearlyZero_ReturnValue_1) == 0x0000C0, "Member 'ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed::CallFunc_Vector_IsNearlyZero_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed, CallFunc_GetRelevantAnimTime_ReturnValue) == 0x0000C4, "Member 'ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed::CallFunc_GetRelevantAnimTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x0000C8, "Member 'ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x0000C9, "Member 'ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed, CallFunc_Not_PreBool_ReturnValue_4) == 0x0000CA, "Member 'ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed, CallFunc_BreakVector_X_2) == 0x0000CC, "Member 'ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed, CallFunc_BreakVector_Y_2) == 0x0000D0, "Member 'ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed, CallFunc_BreakVector_Z_2) == 0x0000D4, "Member 'ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed, CallFunc_BooleanOR_ReturnValue_4) == 0x0000D8, "Member 'ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed, CallFunc_MakeVector_ReturnValue_2) == 0x0000DC, "Member 'ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed, CallFunc_Vector_IsNearlyZero_ReturnValue_2) == 0x0000E8, "Member 'ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed::CallFunc_Vector_IsNearlyZero_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed, Temp_object_Variable_4) == 0x0000F0, "Member 'ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed, CallFunc_Not_PreBool_ReturnValue_5) == 0x0000F8, "Member 'ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed::CallFunc_Not_PreBool_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed, CallFunc_BooleanAND_ReturnValue_3) == 0x0000F9, "Member 'ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed, Temp_object_Variable_5) == 0x000100, "Member 'ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed, Temp_object_Variable_6) == 0x000108, "Member 'ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed::Temp_object_Variable_6' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed, Temp_object_Variable_7) == 0x000110, "Member 'ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed::Temp_object_Variable_7' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed, Temp_int_Variable_1) == 0x000118, "Member 'ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed, Temp_object_Variable_8) == 0x000120, "Member 'ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed::Temp_object_Variable_8' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed, K2Node_Select_Default_1) == 0x000128, "Member 'ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed, Temp_object_Variable_9) == 0x000130, "Member 'ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed::Temp_object_Variable_9' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed, Temp_object_Variable_10) == 0x000138, "Member 'ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed::Temp_object_Variable_10' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed, CallFunc_BooleanOR_ReturnValue_5) == 0x000140, "Member 'ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed::CallFunc_BooleanOR_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed, CallFunc_BooleanAND_ReturnValue_4) == 0x000141, "Member 'ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed, CallFunc_BooleanAND_ReturnValue_5) == 0x000142, "Member 'ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed, CallFunc_Not_PreBool_ReturnValue_6) == 0x000143, "Member 'ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed::CallFunc_Not_PreBool_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed, CallFunc_BooleanOR_ReturnValue_6) == 0x000144, "Member 'ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed::CallFunc_BooleanOR_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed, CallFunc_BooleanAND_ReturnValue_6) == 0x000145, "Member 'ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed::CallFunc_BooleanAND_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed, Temp_object_Variable_11) == 0x000148, "Member 'ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed::Temp_object_Variable_11' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed, CallFunc_Not_PreBool_ReturnValue_7) == 0x000150, "Member 'ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed::CallFunc_Not_PreBool_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_1) == 0x000154, "Member 'ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed, CallFunc_LessEqual_FloatFloat_ReturnValue_1) == 0x000158, "Member 'ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed::CallFunc_LessEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed, CallFunc_Not_PreBool_ReturnValue_8) == 0x000159, "Member 'ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed::CallFunc_Not_PreBool_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed, CallFunc_BooleanOR_ReturnValue_7) == 0x00015A, "Member 'ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed::CallFunc_BooleanOR_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed, CallFunc_BooleanAND_ReturnValue_7) == 0x00015B, "Member 'ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed::CallFunc_BooleanAND_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed, CallFunc_Not_PreBool_ReturnValue_9) == 0x00015C, "Member 'ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed::CallFunc_Not_PreBool_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed, CallFunc_BooleanAND_ReturnValue_8) == 0x00015D, "Member 'ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed::CallFunc_BooleanAND_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed, CallFunc_BooleanAND_ReturnValue_9) == 0x00015E, "Member 'ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed::CallFunc_BooleanAND_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed, CallFunc_BooleanOR_ReturnValue_8) == 0x00015F, "Member 'ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed::CallFunc_BooleanOR_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed, Temp_int_Variable_2) == 0x000160, "Member 'ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed, CallFunc_BooleanAND_ReturnValue_10) == 0x000164, "Member 'ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed::CallFunc_BooleanAND_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed, CallFunc_BooleanAND_ReturnValue_11) == 0x000165, "Member 'ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed::CallFunc_BooleanAND_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed, K2Node_Select_Default_2) == 0x000168, "Member 'ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed, CallFunc_GetRelevantAnimTimeRemainingFraction_ReturnValue) == 0x000170, "Member 'ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed::CallFunc_GetRelevantAnimTimeRemainingFraction_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed, CallFunc_Less_FloatFloat_ReturnValue) == 0x000174, "Member 'ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed, CallFunc_BooleanAND_ReturnValue_12) == 0x000175, "Member 'ABP_Human_TP_Downed_C_ExecuteUbergraph_ABP_Human_TP_Downed::CallFunc_BooleanAND_ReturnValue_12' has a wrong offset!");

// Function ABP_Human_TP_Downed.ABP_Human_TP_Downed_C.BlueprintUpdateAnimation
// 0x0004 (0x0004 - 0x0000)
struct ABP_Human_TP_Downed_C_BlueprintUpdateAnimation final
{
public:
	float                                         DeltaTimeX;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Human_TP_Downed_C_BlueprintUpdateAnimation) == 0x000004, "Wrong alignment on ABP_Human_TP_Downed_C_BlueprintUpdateAnimation");
static_assert(sizeof(ABP_Human_TP_Downed_C_BlueprintUpdateAnimation) == 0x000004, "Wrong size on ABP_Human_TP_Downed_C_BlueprintUpdateAnimation");
static_assert(offsetof(ABP_Human_TP_Downed_C_BlueprintUpdateAnimation, DeltaTimeX) == 0x000000, "Member 'ABP_Human_TP_Downed_C_BlueprintUpdateAnimation::DeltaTimeX' has a wrong offset!");

// Function ABP_Human_TP_Downed.ABP_Human_TP_Downed_C.CopyValuesFromSpecialist
// 0x00A8 (0x00A8 - 0x0000)
struct ABP_Human_TP_Downed_C_CopyValuesFromSpecialist final
{
public:
	bool                                          CallFunc_IsDownedLocomotionEnabled_ReturnValue;    // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDownedLocomotionState                 CallFunc_GetDownedLocomotionParams_ReturnValue;    // 0x0008(0x0070)(NoDestructor)
	float                                         CallFunc_BreakVector_X;                            // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0088(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VInterpTo_ReturnValue;                    // 0x0094(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHealthState                                  CallFunc_GetHealthState_ReturnValue;               // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x00A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x00A3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_5;        // 0x00A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_6;        // 0x00A6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ABP_Human_TP_Downed_C_CopyValuesFromSpecialist) == 0x000004, "Wrong alignment on ABP_Human_TP_Downed_C_CopyValuesFromSpecialist");
static_assert(sizeof(ABP_Human_TP_Downed_C_CopyValuesFromSpecialist) == 0x0000A8, "Wrong size on ABP_Human_TP_Downed_C_CopyValuesFromSpecialist");
static_assert(offsetof(ABP_Human_TP_Downed_C_CopyValuesFromSpecialist, CallFunc_IsDownedLocomotionEnabled_ReturnValue) == 0x000000, "Member 'ABP_Human_TP_Downed_C_CopyValuesFromSpecialist::CallFunc_IsDownedLocomotionEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_Downed_C_CopyValuesFromSpecialist, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000001, "Member 'ABP_Human_TP_Downed_C_CopyValuesFromSpecialist::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_Downed_C_CopyValuesFromSpecialist, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'ABP_Human_TP_Downed_C_CopyValuesFromSpecialist::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_Downed_C_CopyValuesFromSpecialist, CallFunc_BooleanAND_ReturnValue) == 0x000003, "Member 'ABP_Human_TP_Downed_C_CopyValuesFromSpecialist::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_Downed_C_CopyValuesFromSpecialist, CallFunc_Not_PreBool_ReturnValue_1) == 0x000004, "Member 'ABP_Human_TP_Downed_C_CopyValuesFromSpecialist::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_Downed_C_CopyValuesFromSpecialist, CallFunc_GetDownedLocomotionParams_ReturnValue) == 0x000008, "Member 'ABP_Human_TP_Downed_C_CopyValuesFromSpecialist::CallFunc_GetDownedLocomotionParams_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_Downed_C_CopyValuesFromSpecialist, CallFunc_BreakVector_X) == 0x000078, "Member 'ABP_Human_TP_Downed_C_CopyValuesFromSpecialist::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_Downed_C_CopyValuesFromSpecialist, CallFunc_BreakVector_Y) == 0x00007C, "Member 'ABP_Human_TP_Downed_C_CopyValuesFromSpecialist::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_Downed_C_CopyValuesFromSpecialist, CallFunc_BreakVector_Z) == 0x000080, "Member 'ABP_Human_TP_Downed_C_CopyValuesFromSpecialist::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_Downed_C_CopyValuesFromSpecialist, CallFunc_MapRangeClamped_ReturnValue) == 0x000084, "Member 'ABP_Human_TP_Downed_C_CopyValuesFromSpecialist::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_Downed_C_CopyValuesFromSpecialist, CallFunc_MakeVector_ReturnValue) == 0x000088, "Member 'ABP_Human_TP_Downed_C_CopyValuesFromSpecialist::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_Downed_C_CopyValuesFromSpecialist, CallFunc_VInterpTo_ReturnValue) == 0x000094, "Member 'ABP_Human_TP_Downed_C_CopyValuesFromSpecialist::CallFunc_VInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_Downed_C_CopyValuesFromSpecialist, CallFunc_GetHealthState_ReturnValue) == 0x0000A0, "Member 'ABP_Human_TP_Downed_C_CopyValuesFromSpecialist::CallFunc_GetHealthState_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_Downed_C_CopyValuesFromSpecialist, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0000A1, "Member 'ABP_Human_TP_Downed_C_CopyValuesFromSpecialist::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_Downed_C_CopyValuesFromSpecialist, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x0000A2, "Member 'ABP_Human_TP_Downed_C_CopyValuesFromSpecialist::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_Downed_C_CopyValuesFromSpecialist, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x0000A3, "Member 'ABP_Human_TP_Downed_C_CopyValuesFromSpecialist::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_Downed_C_CopyValuesFromSpecialist, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x0000A4, "Member 'ABP_Human_TP_Downed_C_CopyValuesFromSpecialist::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_Downed_C_CopyValuesFromSpecialist, CallFunc_EqualEqual_ByteByte_ReturnValue_5) == 0x0000A5, "Member 'ABP_Human_TP_Downed_C_CopyValuesFromSpecialist::CallFunc_EqualEqual_ByteByte_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_Downed_C_CopyValuesFromSpecialist, CallFunc_EqualEqual_ByteByte_ReturnValue_6) == 0x0000A6, "Member 'ABP_Human_TP_Downed_C_CopyValuesFromSpecialist::CallFunc_EqualEqual_ByteByte_ReturnValue_6' has a wrong offset!");

// Function ABP_Human_TP_Downed.ABP_Human_TP_Downed_C.GetSkillfullKillsAnims
// 0x0030 (0x0030 - 0x0000)
struct ABP_Human_TP_Downed_C_GetSkillfullKillsAnims final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UAnimSequenceBase*>              K2Node_Select_Default;                             // 0x0008(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequenceBase*                      CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Human_TP_Downed_C_GetSkillfullKillsAnims) == 0x000008, "Wrong alignment on ABP_Human_TP_Downed_C_GetSkillfullKillsAnims");
static_assert(sizeof(ABP_Human_TP_Downed_C_GetSkillfullKillsAnims) == 0x000030, "Wrong size on ABP_Human_TP_Downed_C_GetSkillfullKillsAnims");
static_assert(offsetof(ABP_Human_TP_Downed_C_GetSkillfullKillsAnims, Index_0) == 0x000000, "Member 'ABP_Human_TP_Downed_C_GetSkillfullKillsAnims::Index_0' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_Downed_C_GetSkillfullKillsAnims, Temp_int_Variable) == 0x000004, "Member 'ABP_Human_TP_Downed_C_GetSkillfullKillsAnims::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_Downed_C_GetSkillfullKillsAnims, K2Node_Select_Default) == 0x000008, "Member 'ABP_Human_TP_Downed_C_GetSkillfullKillsAnims::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_Downed_C_GetSkillfullKillsAnims, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'ABP_Human_TP_Downed_C_GetSkillfullKillsAnims::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_Downed_C_GetSkillfullKillsAnims, CallFunc_Subtract_IntInt_ReturnValue) == 0x00001C, "Member 'ABP_Human_TP_Downed_C_GetSkillfullKillsAnims::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_Downed_C_GetSkillfullKillsAnims, CallFunc_RandomIntegerInRange_ReturnValue) == 0x000020, "Member 'ABP_Human_TP_Downed_C_GetSkillfullKillsAnims::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_Downed_C_GetSkillfullKillsAnims, CallFunc_Array_Get_Item) == 0x000028, "Member 'ABP_Human_TP_Downed_C_GetSkillfullKillsAnims::CallFunc_Array_Get_Item' has a wrong offset!");

// Function ABP_Human_TP_Downed.ABP_Human_TP_Downed_C.AnimGraph
// 0x0020 (0x0020 - 0x0000)
struct ABP_Human_TP_Downed_C_AnimGraph final
{
public:
	struct FPoseLink                              ABP_Human_TP_Pose;                                 // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              AnimGraph_0;                                       // 0x0010(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABP_Human_TP_Downed_C_AnimGraph) == 0x000008, "Wrong alignment on ABP_Human_TP_Downed_C_AnimGraph");
static_assert(sizeof(ABP_Human_TP_Downed_C_AnimGraph) == 0x000020, "Wrong size on ABP_Human_TP_Downed_C_AnimGraph");
static_assert(offsetof(ABP_Human_TP_Downed_C_AnimGraph, ABP_Human_TP_Pose) == 0x000000, "Member 'ABP_Human_TP_Downed_C_AnimGraph::ABP_Human_TP_Pose' has a wrong offset!");
static_assert(offsetof(ABP_Human_TP_Downed_C_AnimGraph, AnimGraph_0) == 0x000010, "Member 'ABP_Human_TP_Downed_C_AnimGraph::AnimGraph_0' has a wrong offset!");

}

