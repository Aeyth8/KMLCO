#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: StartUp_Video_Mediator

#include "Basic.hpp"

#include "Keaton_structs.hpp"


namespace SDK::Params
{

// Function StartUp_Video_Mediator.StartUp_Video_Mediator_C.ExecuteUbergraph_StartUp_Video_Mediator
// 0x0138 (0x0138 - 0x0000)
struct StartUp_Video_Mediator_C_ExecuteUbergraph_StartUp_Video_Mediator final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FCAUIEventData& Event_data)> K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0014)(ZeroConstructor, NoDestructor)
	TDelegate<void(const struct FCAUIEventData& Event_data)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0018(0x0014)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCAUIEventData                         K2Node_CustomEvent_event_data_1;                   // 0x0030(0x0080)()
	struct FCAUIEventData                         K2Node_CustomEvent_event_data;                     // 0x00B0(0x0080)()
	bool                                          CallFunc_CallEvent_ReturnValue;                    // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryPlayFromDataItem_results;              // 0x0131(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(StartUp_Video_Mediator_C_ExecuteUbergraph_StartUp_Video_Mediator) == 0x000008, "Wrong alignment on StartUp_Video_Mediator_C_ExecuteUbergraph_StartUp_Video_Mediator");
static_assert(sizeof(StartUp_Video_Mediator_C_ExecuteUbergraph_StartUp_Video_Mediator) == 0x000138, "Wrong size on StartUp_Video_Mediator_C_ExecuteUbergraph_StartUp_Video_Mediator");
static_assert(offsetof(StartUp_Video_Mediator_C_ExecuteUbergraph_StartUp_Video_Mediator, EntryPoint) == 0x000000, "Member 'StartUp_Video_Mediator_C_ExecuteUbergraph_StartUp_Video_Mediator::EntryPoint' has a wrong offset!");
static_assert(offsetof(StartUp_Video_Mediator_C_ExecuteUbergraph_StartUp_Video_Mediator, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'StartUp_Video_Mediator_C_ExecuteUbergraph_StartUp_Video_Mediator::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(StartUp_Video_Mediator_C_ExecuteUbergraph_StartUp_Video_Mediator, K2Node_CreateDelegate_OutputDelegate_1) == 0x000018, "Member 'StartUp_Video_Mediator_C_ExecuteUbergraph_StartUp_Video_Mediator::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(StartUp_Video_Mediator_C_ExecuteUbergraph_StartUp_Video_Mediator, K2Node_CustomEvent_event_data_1) == 0x000030, "Member 'StartUp_Video_Mediator_C_ExecuteUbergraph_StartUp_Video_Mediator::K2Node_CustomEvent_event_data_1' has a wrong offset!");
static_assert(offsetof(StartUp_Video_Mediator_C_ExecuteUbergraph_StartUp_Video_Mediator, K2Node_CustomEvent_event_data) == 0x0000B0, "Member 'StartUp_Video_Mediator_C_ExecuteUbergraph_StartUp_Video_Mediator::K2Node_CustomEvent_event_data' has a wrong offset!");
static_assert(offsetof(StartUp_Video_Mediator_C_ExecuteUbergraph_StartUp_Video_Mediator, CallFunc_CallEvent_ReturnValue) == 0x000130, "Member 'StartUp_Video_Mediator_C_ExecuteUbergraph_StartUp_Video_Mediator::CallFunc_CallEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(StartUp_Video_Mediator_C_ExecuteUbergraph_StartUp_Video_Mediator, CallFunc_TryPlayFromDataItem_results) == 0x000131, "Member 'StartUp_Video_Mediator_C_ExecuteUbergraph_StartUp_Video_Mediator::CallFunc_TryPlayFromDataItem_results' has a wrong offset!");

// Function StartUp_Video_Mediator.StartUp_Video_Mediator_C.OnRequestVideoStop
// 0x0080 (0x0080 - 0x0000)
struct StartUp_Video_Mediator_C_OnRequestVideoStop final
{
public:
	struct FCAUIEventData                         Event_data;                                        // 0x0000(0x0080)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(StartUp_Video_Mediator_C_OnRequestVideoStop) == 0x000008, "Wrong alignment on StartUp_Video_Mediator_C_OnRequestVideoStop");
static_assert(sizeof(StartUp_Video_Mediator_C_OnRequestVideoStop) == 0x000080, "Wrong size on StartUp_Video_Mediator_C_OnRequestVideoStop");
static_assert(offsetof(StartUp_Video_Mediator_C_OnRequestVideoStop, Event_data) == 0x000000, "Member 'StartUp_Video_Mediator_C_OnRequestVideoStop::Event_data' has a wrong offset!");

// Function StartUp_Video_Mediator.StartUp_Video_Mediator_C.OnRequestVideoStart
// 0x0080 (0x0080 - 0x0000)
struct StartUp_Video_Mediator_C_OnRequestVideoStart final
{
public:
	struct FCAUIEventData                         Event_data;                                        // 0x0000(0x0080)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(StartUp_Video_Mediator_C_OnRequestVideoStart) == 0x000008, "Wrong alignment on StartUp_Video_Mediator_C_OnRequestVideoStart");
static_assert(sizeof(StartUp_Video_Mediator_C_OnRequestVideoStart) == 0x000080, "Wrong size on StartUp_Video_Mediator_C_OnRequestVideoStart");
static_assert(offsetof(StartUp_Video_Mediator_C_OnRequestVideoStart, Event_data) == 0x000000, "Member 'StartUp_Video_Mediator_C_OnRequestVideoStart::Event_data' has a wrong offset!");

// Function StartUp_Video_Mediator.StartUp_Video_Mediator_C.TryPlayFromDataItem
// 0x0020 (0x0020 - 0x0000)
struct StartUp_Video_Mediator_C_TryPlayFromDataItem final
{
public:
	class UObject*                                Payload;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Results;                                           // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCASpecialistDataItem*                  K2Node_DynamicCast_AsCASpecialist_Data_Item;       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(StartUp_Video_Mediator_C_TryPlayFromDataItem) == 0x000008, "Wrong alignment on StartUp_Video_Mediator_C_TryPlayFromDataItem");
static_assert(sizeof(StartUp_Video_Mediator_C_TryPlayFromDataItem) == 0x000020, "Wrong size on StartUp_Video_Mediator_C_TryPlayFromDataItem");
static_assert(offsetof(StartUp_Video_Mediator_C_TryPlayFromDataItem, Payload) == 0x000000, "Member 'StartUp_Video_Mediator_C_TryPlayFromDataItem::Payload' has a wrong offset!");
static_assert(offsetof(StartUp_Video_Mediator_C_TryPlayFromDataItem, Results) == 0x000008, "Member 'StartUp_Video_Mediator_C_TryPlayFromDataItem::Results' has a wrong offset!");
static_assert(offsetof(StartUp_Video_Mediator_C_TryPlayFromDataItem, K2Node_DynamicCast_AsCASpecialist_Data_Item) == 0x000010, "Member 'StartUp_Video_Mediator_C_TryPlayFromDataItem::K2Node_DynamicCast_AsCASpecialist_Data_Item' has a wrong offset!");
static_assert(offsetof(StartUp_Video_Mediator_C_TryPlayFromDataItem, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'StartUp_Video_Mediator_C_TryPlayFromDataItem::K2Node_DynamicCast_bSuccess' has a wrong offset!");

}

