#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ThresholdPlayerManagerComponent

#include "Basic.hpp"

#include "Keaton_structs.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function BP_ThresholdPlayerManagerComponent.BP_ThresholdPlayerManagerComponent_C.ExecuteUbergraph_BP_ThresholdPlayerManagerComponent
// 0x0008 (0x0008 - 0x0000)
struct BP_ThresholdPlayerManagerComponent_C_ExecuteUbergraph_BP_ThresholdPlayerManagerComponent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ThresholdPlayerManagerComponent_C_ExecuteUbergraph_BP_ThresholdPlayerManagerComponent) == 0x000004, "Wrong alignment on BP_ThresholdPlayerManagerComponent_C_ExecuteUbergraph_BP_ThresholdPlayerManagerComponent");
static_assert(sizeof(BP_ThresholdPlayerManagerComponent_C_ExecuteUbergraph_BP_ThresholdPlayerManagerComponent) == 0x000008, "Wrong size on BP_ThresholdPlayerManagerComponent_C_ExecuteUbergraph_BP_ThresholdPlayerManagerComponent");
static_assert(offsetof(BP_ThresholdPlayerManagerComponent_C_ExecuteUbergraph_BP_ThresholdPlayerManagerComponent, EntryPoint) == 0x000000, "Member 'BP_ThresholdPlayerManagerComponent_C_ExecuteUbergraph_BP_ThresholdPlayerManagerComponent::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_ThresholdPlayerManagerComponent_C_ExecuteUbergraph_BP_ThresholdPlayerManagerComponent, K2Node_Event_DeltaSeconds) == 0x000004, "Member 'BP_ThresholdPlayerManagerComponent_C_ExecuteUbergraph_BP_ThresholdPlayerManagerComponent::K2Node_Event_DeltaSeconds' has a wrong offset!");

// Function BP_ThresholdPlayerManagerComponent.BP_ThresholdPlayerManagerComponent_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_ThresholdPlayerManagerComponent_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ThresholdPlayerManagerComponent_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_ThresholdPlayerManagerComponent_C_ReceiveTick");
static_assert(sizeof(BP_ThresholdPlayerManagerComponent_C_ReceiveTick) == 0x000004, "Wrong size on BP_ThresholdPlayerManagerComponent_C_ReceiveTick");
static_assert(offsetof(BP_ThresholdPlayerManagerComponent_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_ThresholdPlayerManagerComponent_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_ThresholdPlayerManagerComponent.BP_ThresholdPlayerManagerComponent_C.Tick
// 0x0130 (0x0130 - 0x0000)
struct BP_ThresholdPlayerManagerComponent_C_Tick final
{
public:
	class ACACharacter*                           Character;                                         // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsTeamAboveThreshold;                              // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTeamData                              TeamData;                                          // 0x000C(0x0030)(Edit, BlueprintVisible, NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACACharacter*                           CallFunc_Array_Get_Item;                           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACAGameState*                           CallFunc_GetGameState_ReturnValue;                 // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACAGameState*                           CallFunc_GetGameState_ReturnValue_1;               // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasTeamReachedThreshold_ReturnValue;      // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ACAPlayerState*>                 CallFunc_GetTeamPlayers_players;                   // 0x0098(0x0010)(ReferenceParm)
	class ACAPlayerState*                         CallFunc_Array_Get_Item_1;                         // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B6[0x2];                                       // 0x00B6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ACACharacter*                           K2Node_DynamicCast_AsCACharacter;                  // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACAGameState*                           CallFunc_GetGameState_ReturnValue_2;               // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTeamStateData                         CallFunc_GetTeamData_ReturnValue;                  // 0x00D0(0x0028)(ConstParm)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTeamData                              CallFunc_Array_Get_Item_2;                         // 0x00FC(0x0030)(NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ThresholdPlayerManagerComponent_C_Tick) == 0x000008, "Wrong alignment on BP_ThresholdPlayerManagerComponent_C_Tick");
static_assert(sizeof(BP_ThresholdPlayerManagerComponent_C_Tick) == 0x000130, "Wrong size on BP_ThresholdPlayerManagerComponent_C_Tick");
static_assert(offsetof(BP_ThresholdPlayerManagerComponent_C_Tick, Character) == 0x000000, "Member 'BP_ThresholdPlayerManagerComponent_C_Tick::Character' has a wrong offset!");
static_assert(offsetof(BP_ThresholdPlayerManagerComponent_C_Tick, IsTeamAboveThreshold) == 0x000008, "Member 'BP_ThresholdPlayerManagerComponent_C_Tick::IsTeamAboveThreshold' has a wrong offset!");
static_assert(offsetof(BP_ThresholdPlayerManagerComponent_C_Tick, TeamData) == 0x00000C, "Member 'BP_ThresholdPlayerManagerComponent_C_Tick::TeamData' has a wrong offset!");
static_assert(offsetof(BP_ThresholdPlayerManagerComponent_C_Tick, Temp_int_Loop_Counter_Variable) == 0x00003C, "Member 'BP_ThresholdPlayerManagerComponent_C_Tick::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ThresholdPlayerManagerComponent_C_Tick, CallFunc_Add_IntInt_ReturnValue) == 0x000040, "Member 'BP_ThresholdPlayerManagerComponent_C_Tick::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThresholdPlayerManagerComponent_C_Tick, Temp_int_Array_Index_Variable) == 0x000044, "Member 'BP_ThresholdPlayerManagerComponent_C_Tick::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ThresholdPlayerManagerComponent_C_Tick, Temp_int_Array_Index_Variable_1) == 0x000048, "Member 'BP_ThresholdPlayerManagerComponent_C_Tick::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ThresholdPlayerManagerComponent_C_Tick, Temp_int_Loop_Counter_Variable_1) == 0x00004C, "Member 'BP_ThresholdPlayerManagerComponent_C_Tick::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ThresholdPlayerManagerComponent_C_Tick, CallFunc_Add_IntInt_ReturnValue_1) == 0x000050, "Member 'BP_ThresholdPlayerManagerComponent_C_Tick::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ThresholdPlayerManagerComponent_C_Tick, Temp_int_Array_Index_Variable_2) == 0x000054, "Member 'BP_ThresholdPlayerManagerComponent_C_Tick::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_ThresholdPlayerManagerComponent_C_Tick, CallFunc_Array_Get_Item) == 0x000058, "Member 'BP_ThresholdPlayerManagerComponent_C_Tick::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ThresholdPlayerManagerComponent_C_Tick, CallFunc_Array_Length_ReturnValue) == 0x000060, "Member 'BP_ThresholdPlayerManagerComponent_C_Tick::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThresholdPlayerManagerComponent_C_Tick, CallFunc_IsValid_ReturnValue) == 0x000064, "Member 'BP_ThresholdPlayerManagerComponent_C_Tick::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThresholdPlayerManagerComponent_C_Tick, CallFunc_Subtract_IntInt_ReturnValue) == 0x000068, "Member 'BP_ThresholdPlayerManagerComponent_C_Tick::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThresholdPlayerManagerComponent_C_Tick, CallFunc_Max_ReturnValue) == 0x00006C, "Member 'BP_ThresholdPlayerManagerComponent_C_Tick::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThresholdPlayerManagerComponent_C_Tick, Temp_int_Loop_Counter_Variable_2) == 0x000070, "Member 'BP_ThresholdPlayerManagerComponent_C_Tick::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_ThresholdPlayerManagerComponent_C_Tick, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000074, "Member 'BP_ThresholdPlayerManagerComponent_C_Tick::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ThresholdPlayerManagerComponent_C_Tick, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000078, "Member 'BP_ThresholdPlayerManagerComponent_C_Tick::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThresholdPlayerManagerComponent_C_Tick, CallFunc_GetGameState_ReturnValue) == 0x000080, "Member 'BP_ThresholdPlayerManagerComponent_C_Tick::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThresholdPlayerManagerComponent_C_Tick, CallFunc_GetGameState_ReturnValue_1) == 0x000088, "Member 'BP_ThresholdPlayerManagerComponent_C_Tick::CallFunc_GetGameState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ThresholdPlayerManagerComponent_C_Tick, CallFunc_HasTeamReachedThreshold_ReturnValue) == 0x000090, "Member 'BP_ThresholdPlayerManagerComponent_C_Tick::CallFunc_HasTeamReachedThreshold_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThresholdPlayerManagerComponent_C_Tick, CallFunc_GetTeamPlayers_players) == 0x000098, "Member 'BP_ThresholdPlayerManagerComponent_C_Tick::CallFunc_GetTeamPlayers_players' has a wrong offset!");
static_assert(offsetof(BP_ThresholdPlayerManagerComponent_C_Tick, CallFunc_Array_Get_Item_1) == 0x0000A8, "Member 'BP_ThresholdPlayerManagerComponent_C_Tick::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_ThresholdPlayerManagerComponent_C_Tick, CallFunc_Array_Length_ReturnValue_1) == 0x0000B0, "Member 'BP_ThresholdPlayerManagerComponent_C_Tick::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ThresholdPlayerManagerComponent_C_Tick, CallFunc_Less_IntInt_ReturnValue) == 0x0000B4, "Member 'BP_ThresholdPlayerManagerComponent_C_Tick::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThresholdPlayerManagerComponent_C_Tick, CallFunc_IsValid_ReturnValue_1) == 0x0000B5, "Member 'BP_ThresholdPlayerManagerComponent_C_Tick::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ThresholdPlayerManagerComponent_C_Tick, K2Node_DynamicCast_AsCACharacter) == 0x0000B8, "Member 'BP_ThresholdPlayerManagerComponent_C_Tick::K2Node_DynamicCast_AsCACharacter' has a wrong offset!");
static_assert(offsetof(BP_ThresholdPlayerManagerComponent_C_Tick, K2Node_DynamicCast_bSuccess) == 0x0000C0, "Member 'BP_ThresholdPlayerManagerComponent_C_Tick::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ThresholdPlayerManagerComponent_C_Tick, CallFunc_GetGameState_ReturnValue_2) == 0x0000C8, "Member 'BP_ThresholdPlayerManagerComponent_C_Tick::CallFunc_GetGameState_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ThresholdPlayerManagerComponent_C_Tick, CallFunc_GetTeamData_ReturnValue) == 0x0000D0, "Member 'BP_ThresholdPlayerManagerComponent_C_Tick::CallFunc_GetTeamData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThresholdPlayerManagerComponent_C_Tick, CallFunc_Array_Length_ReturnValue_2) == 0x0000F8, "Member 'BP_ThresholdPlayerManagerComponent_C_Tick::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ThresholdPlayerManagerComponent_C_Tick, CallFunc_Array_Get_Item_2) == 0x0000FC, "Member 'BP_ThresholdPlayerManagerComponent_C_Tick::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_ThresholdPlayerManagerComponent_C_Tick, CallFunc_Less_IntInt_ReturnValue_1) == 0x00012C, "Member 'BP_ThresholdPlayerManagerComponent_C_Tick::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_ThresholdPlayerManagerComponent.BP_ThresholdPlayerManagerComponent_C.OnPlayerReachesThreshold
// 0x0080 (0x0080 - 0x0000)
struct BP_ThresholdPlayerManagerComponent_C_OnPlayerReachesThreshold final
{
public:
	class APawn*                                  Pawn;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAbilitySystemComponent*                AbilitySystemComponent;                            // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ACACharacter*                           K2Node_DynamicCast_AsCACharacter;                  // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_GetPawnMesh_ReturnValue;                  // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_2;                   // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_2;               // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraComponent*                      CallFunc_SpawnCANiagaraSystemAttached_ReturnValue; // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue; // 0x0060(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayAbilitySpecHandle             CallFunc_GiveAndActivateOneTimeAbility_ReturnValue; // 0x0078(0x0004)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ThresholdPlayerManagerComponent_C_OnPlayerReachesThreshold) == 0x000008, "Wrong alignment on BP_ThresholdPlayerManagerComponent_C_OnPlayerReachesThreshold");
static_assert(sizeof(BP_ThresholdPlayerManagerComponent_C_OnPlayerReachesThreshold) == 0x000080, "Wrong size on BP_ThresholdPlayerManagerComponent_C_OnPlayerReachesThreshold");
static_assert(offsetof(BP_ThresholdPlayerManagerComponent_C_OnPlayerReachesThreshold, Pawn) == 0x000000, "Member 'BP_ThresholdPlayerManagerComponent_C_OnPlayerReachesThreshold::Pawn' has a wrong offset!");
static_assert(offsetof(BP_ThresholdPlayerManagerComponent_C_OnPlayerReachesThreshold, AbilitySystemComponent) == 0x000008, "Member 'BP_ThresholdPlayerManagerComponent_C_OnPlayerReachesThreshold::AbilitySystemComponent' has a wrong offset!");
static_assert(offsetof(BP_ThresholdPlayerManagerComponent_C_OnPlayerReachesThreshold, CallFunc_GetOwner_ReturnValue) == 0x000010, "Member 'BP_ThresholdPlayerManagerComponent_C_OnPlayerReachesThreshold::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThresholdPlayerManagerComponent_C_OnPlayerReachesThreshold, CallFunc_HasAuthority_ReturnValue) == 0x000018, "Member 'BP_ThresholdPlayerManagerComponent_C_OnPlayerReachesThreshold::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThresholdPlayerManagerComponent_C_OnPlayerReachesThreshold, CallFunc_IsLocallyControlled_ReturnValue) == 0x000019, "Member 'BP_ThresholdPlayerManagerComponent_C_OnPlayerReachesThreshold::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThresholdPlayerManagerComponent_C_OnPlayerReachesThreshold, K2Node_DynamicCast_AsCACharacter) == 0x000020, "Member 'BP_ThresholdPlayerManagerComponent_C_OnPlayerReachesThreshold::K2Node_DynamicCast_AsCACharacter' has a wrong offset!");
static_assert(offsetof(BP_ThresholdPlayerManagerComponent_C_OnPlayerReachesThreshold, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_ThresholdPlayerManagerComponent_C_OnPlayerReachesThreshold::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ThresholdPlayerManagerComponent_C_OnPlayerReachesThreshold, CallFunc_GetOwner_ReturnValue_1) == 0x000030, "Member 'BP_ThresholdPlayerManagerComponent_C_OnPlayerReachesThreshold::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ThresholdPlayerManagerComponent_C_OnPlayerReachesThreshold, CallFunc_GetPawnMesh_ReturnValue) == 0x000038, "Member 'BP_ThresholdPlayerManagerComponent_C_OnPlayerReachesThreshold::CallFunc_GetPawnMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThresholdPlayerManagerComponent_C_OnPlayerReachesThreshold, CallFunc_HasAuthority_ReturnValue_1) == 0x000040, "Member 'BP_ThresholdPlayerManagerComponent_C_OnPlayerReachesThreshold::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ThresholdPlayerManagerComponent_C_OnPlayerReachesThreshold, CallFunc_GetOwner_ReturnValue_2) == 0x000048, "Member 'BP_ThresholdPlayerManagerComponent_C_OnPlayerReachesThreshold::CallFunc_GetOwner_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ThresholdPlayerManagerComponent_C_OnPlayerReachesThreshold, CallFunc_HasAuthority_ReturnValue_2) == 0x000050, "Member 'BP_ThresholdPlayerManagerComponent_C_OnPlayerReachesThreshold::CallFunc_HasAuthority_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ThresholdPlayerManagerComponent_C_OnPlayerReachesThreshold, CallFunc_SpawnCANiagaraSystemAttached_ReturnValue) == 0x000058, "Member 'BP_ThresholdPlayerManagerComponent_C_OnPlayerReachesThreshold::CallFunc_SpawnCANiagaraSystemAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThresholdPlayerManagerComponent_C_OnPlayerReachesThreshold, CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue) == 0x000060, "Member 'BP_ThresholdPlayerManagerComponent_C_OnPlayerReachesThreshold::CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThresholdPlayerManagerComponent_C_OnPlayerReachesThreshold, CallFunc_IsValid_ReturnValue) == 0x000068, "Member 'BP_ThresholdPlayerManagerComponent_C_OnPlayerReachesThreshold::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThresholdPlayerManagerComponent_C_OnPlayerReachesThreshold, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x000070, "Member 'BP_ThresholdPlayerManagerComponent_C_OnPlayerReachesThreshold::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThresholdPlayerManagerComponent_C_OnPlayerReachesThreshold, CallFunc_GiveAndActivateOneTimeAbility_ReturnValue) == 0x000078, "Member 'BP_ThresholdPlayerManagerComponent_C_OnPlayerReachesThreshold::CallFunc_GiveAndActivateOneTimeAbility_ReturnValue' has a wrong offset!");

// Function BP_ThresholdPlayerManagerComponent.BP_ThresholdPlayerManagerComponent_C.OnPlayerLosesThreshold
// 0x0070 (0x0070 - 0x0000)
struct BP_ThresholdPlayerManagerComponent_C_OnPlayerLosesThreshold final
{
public:
	class APawn*                                  Pawn;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      NiagaraVFXComponent;                               // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAbilitySystemComponent*                AbilitySystemComponent;                            // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_2;                   // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_2;               // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraComponent*                      CallFunc_Map_Find_Value;                           // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Map_Remove_ReturnValue;                   // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4B[0x1];                                       // 0x004B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FActiveGameplayEffectHandle            CallFunc_Map_Find_Value_1;                         // 0x004C(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RemoveActiveGameplayEffect_ReturnValue;   // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Map_Remove_ReturnValue_1;                 // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_63[0x1];                                       // 0x0063(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayAbilitySpecHandle             CallFunc_Map_Find_Value_2;                         // 0x0064(0x0004)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_2;                   // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ThresholdPlayerManagerComponent_C_OnPlayerLosesThreshold) == 0x000008, "Wrong alignment on BP_ThresholdPlayerManagerComponent_C_OnPlayerLosesThreshold");
static_assert(sizeof(BP_ThresholdPlayerManagerComponent_C_OnPlayerLosesThreshold) == 0x000070, "Wrong size on BP_ThresholdPlayerManagerComponent_C_OnPlayerLosesThreshold");
static_assert(offsetof(BP_ThresholdPlayerManagerComponent_C_OnPlayerLosesThreshold, Pawn) == 0x000000, "Member 'BP_ThresholdPlayerManagerComponent_C_OnPlayerLosesThreshold::Pawn' has a wrong offset!");
static_assert(offsetof(BP_ThresholdPlayerManagerComponent_C_OnPlayerLosesThreshold, NiagaraVFXComponent) == 0x000008, "Member 'BP_ThresholdPlayerManagerComponent_C_OnPlayerLosesThreshold::NiagaraVFXComponent' has a wrong offset!");
static_assert(offsetof(BP_ThresholdPlayerManagerComponent_C_OnPlayerLosesThreshold, AbilitySystemComponent) == 0x000010, "Member 'BP_ThresholdPlayerManagerComponent_C_OnPlayerLosesThreshold::AbilitySystemComponent' has a wrong offset!");
static_assert(offsetof(BP_ThresholdPlayerManagerComponent_C_OnPlayerLosesThreshold, CallFunc_GetOwner_ReturnValue) == 0x000018, "Member 'BP_ThresholdPlayerManagerComponent_C_OnPlayerLosesThreshold::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThresholdPlayerManagerComponent_C_OnPlayerLosesThreshold, CallFunc_GetOwner_ReturnValue_1) == 0x000020, "Member 'BP_ThresholdPlayerManagerComponent_C_OnPlayerLosesThreshold::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ThresholdPlayerManagerComponent_C_OnPlayerLosesThreshold, CallFunc_HasAuthority_ReturnValue) == 0x000028, "Member 'BP_ThresholdPlayerManagerComponent_C_OnPlayerLosesThreshold::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThresholdPlayerManagerComponent_C_OnPlayerLosesThreshold, CallFunc_HasAuthority_ReturnValue_1) == 0x000029, "Member 'BP_ThresholdPlayerManagerComponent_C_OnPlayerLosesThreshold::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ThresholdPlayerManagerComponent_C_OnPlayerLosesThreshold, CallFunc_GetOwner_ReturnValue_2) == 0x000030, "Member 'BP_ThresholdPlayerManagerComponent_C_OnPlayerLosesThreshold::CallFunc_GetOwner_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ThresholdPlayerManagerComponent_C_OnPlayerLosesThreshold, CallFunc_HasAuthority_ReturnValue_2) == 0x000038, "Member 'BP_ThresholdPlayerManagerComponent_C_OnPlayerLosesThreshold::CallFunc_HasAuthority_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ThresholdPlayerManagerComponent_C_OnPlayerLosesThreshold, CallFunc_Map_Find_Value) == 0x000040, "Member 'BP_ThresholdPlayerManagerComponent_C_OnPlayerLosesThreshold::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_ThresholdPlayerManagerComponent_C_OnPlayerLosesThreshold, CallFunc_Map_Find_ReturnValue) == 0x000048, "Member 'BP_ThresholdPlayerManagerComponent_C_OnPlayerLosesThreshold::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThresholdPlayerManagerComponent_C_OnPlayerLosesThreshold, CallFunc_IsValid_ReturnValue) == 0x000049, "Member 'BP_ThresholdPlayerManagerComponent_C_OnPlayerLosesThreshold::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThresholdPlayerManagerComponent_C_OnPlayerLosesThreshold, CallFunc_Map_Remove_ReturnValue) == 0x00004A, "Member 'BP_ThresholdPlayerManagerComponent_C_OnPlayerLosesThreshold::CallFunc_Map_Remove_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThresholdPlayerManagerComponent_C_OnPlayerLosesThreshold, CallFunc_Map_Find_Value_1) == 0x00004C, "Member 'BP_ThresholdPlayerManagerComponent_C_OnPlayerLosesThreshold::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(BP_ThresholdPlayerManagerComponent_C_OnPlayerLosesThreshold, CallFunc_Map_Find_ReturnValue_1) == 0x000054, "Member 'BP_ThresholdPlayerManagerComponent_C_OnPlayerLosesThreshold::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ThresholdPlayerManagerComponent_C_OnPlayerLosesThreshold, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x000058, "Member 'BP_ThresholdPlayerManagerComponent_C_OnPlayerLosesThreshold::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThresholdPlayerManagerComponent_C_OnPlayerLosesThreshold, CallFunc_RemoveActiveGameplayEffect_ReturnValue) == 0x000060, "Member 'BP_ThresholdPlayerManagerComponent_C_OnPlayerLosesThreshold::CallFunc_RemoveActiveGameplayEffect_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThresholdPlayerManagerComponent_C_OnPlayerLosesThreshold, CallFunc_IsValid_ReturnValue_1) == 0x000061, "Member 'BP_ThresholdPlayerManagerComponent_C_OnPlayerLosesThreshold::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ThresholdPlayerManagerComponent_C_OnPlayerLosesThreshold, CallFunc_Map_Remove_ReturnValue_1) == 0x000062, "Member 'BP_ThresholdPlayerManagerComponent_C_OnPlayerLosesThreshold::CallFunc_Map_Remove_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ThresholdPlayerManagerComponent_C_OnPlayerLosesThreshold, CallFunc_Map_Find_Value_2) == 0x000064, "Member 'BP_ThresholdPlayerManagerComponent_C_OnPlayerLosesThreshold::CallFunc_Map_Find_Value_2' has a wrong offset!");
static_assert(offsetof(BP_ThresholdPlayerManagerComponent_C_OnPlayerLosesThreshold, CallFunc_Map_Find_ReturnValue_2) == 0x000068, "Member 'BP_ThresholdPlayerManagerComponent_C_OnPlayerLosesThreshold::CallFunc_Map_Find_ReturnValue_2' has a wrong offset!");

// Function BP_ThresholdPlayerManagerComponent.BP_ThresholdPlayerManagerComponent_C.UpdatePlayerPerks
// 0x0020 (0x0020 - 0x0000)
struct BP_ThresholdPlayerManagerComponent_C_UpdatePlayerPerks final
{
public:
	class ACACharacter*                           PlayerCharacter;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsPlayerTeamAboveThreshold;                        // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsPlayerInArray;                                   // 0x0009(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDying_ReturnValue;                      // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDying_ReturnValue_1;                    // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_16[0x2];                                       // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ThresholdPlayerManagerComponent_C_UpdatePlayerPerks) == 0x000008, "Wrong alignment on BP_ThresholdPlayerManagerComponent_C_UpdatePlayerPerks");
static_assert(sizeof(BP_ThresholdPlayerManagerComponent_C_UpdatePlayerPerks) == 0x000020, "Wrong size on BP_ThresholdPlayerManagerComponent_C_UpdatePlayerPerks");
static_assert(offsetof(BP_ThresholdPlayerManagerComponent_C_UpdatePlayerPerks, PlayerCharacter) == 0x000000, "Member 'BP_ThresholdPlayerManagerComponent_C_UpdatePlayerPerks::PlayerCharacter' has a wrong offset!");
static_assert(offsetof(BP_ThresholdPlayerManagerComponent_C_UpdatePlayerPerks, IsPlayerTeamAboveThreshold) == 0x000008, "Member 'BP_ThresholdPlayerManagerComponent_C_UpdatePlayerPerks::IsPlayerTeamAboveThreshold' has a wrong offset!");
static_assert(offsetof(BP_ThresholdPlayerManagerComponent_C_UpdatePlayerPerks, IsPlayerInArray) == 0x000009, "Member 'BP_ThresholdPlayerManagerComponent_C_UpdatePlayerPerks::IsPlayerInArray' has a wrong offset!");
static_assert(offsetof(BP_ThresholdPlayerManagerComponent_C_UpdatePlayerPerks, CallFunc_IsDying_ReturnValue) == 0x00000A, "Member 'BP_ThresholdPlayerManagerComponent_C_UpdatePlayerPerks::CallFunc_IsDying_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThresholdPlayerManagerComponent_C_UpdatePlayerPerks, CallFunc_IsDying_ReturnValue_1) == 0x00000B, "Member 'BP_ThresholdPlayerManagerComponent_C_UpdatePlayerPerks::CallFunc_IsDying_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ThresholdPlayerManagerComponent_C_UpdatePlayerPerks, CallFunc_Not_PreBool_ReturnValue) == 0x00000C, "Member 'BP_ThresholdPlayerManagerComponent_C_UpdatePlayerPerks::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThresholdPlayerManagerComponent_C_UpdatePlayerPerks, CallFunc_BooleanAND_ReturnValue) == 0x00000D, "Member 'BP_ThresholdPlayerManagerComponent_C_UpdatePlayerPerks::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThresholdPlayerManagerComponent_C_UpdatePlayerPerks, CallFunc_Not_PreBool_ReturnValue_1) == 0x00000E, "Member 'BP_ThresholdPlayerManagerComponent_C_UpdatePlayerPerks::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ThresholdPlayerManagerComponent_C_UpdatePlayerPerks, CallFunc_BooleanOR_ReturnValue) == 0x00000F, "Member 'BP_ThresholdPlayerManagerComponent_C_UpdatePlayerPerks::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThresholdPlayerManagerComponent_C_UpdatePlayerPerks, CallFunc_Array_Find_ReturnValue) == 0x000010, "Member 'BP_ThresholdPlayerManagerComponent_C_UpdatePlayerPerks::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThresholdPlayerManagerComponent_C_UpdatePlayerPerks, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000014, "Member 'BP_ThresholdPlayerManagerComponent_C_UpdatePlayerPerks::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThresholdPlayerManagerComponent_C_UpdatePlayerPerks, CallFunc_Array_RemoveItem_ReturnValue) == 0x000015, "Member 'BP_ThresholdPlayerManagerComponent_C_UpdatePlayerPerks::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThresholdPlayerManagerComponent_C_UpdatePlayerPerks, CallFunc_Array_AddUnique_ReturnValue) == 0x000018, "Member 'BP_ThresholdPlayerManagerComponent_C_UpdatePlayerPerks::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ThresholdPlayerManagerComponent_C_UpdatePlayerPerks, CallFunc_BooleanAND_ReturnValue_1) == 0x00001C, "Member 'BP_ThresholdPlayerManagerComponent_C_UpdatePlayerPerks::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ThresholdPlayerManagerComponent_C_UpdatePlayerPerks, CallFunc_Not_PreBool_ReturnValue_2) == 0x00001D, "Member 'BP_ThresholdPlayerManagerComponent_C_UpdatePlayerPerks::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ThresholdPlayerManagerComponent_C_UpdatePlayerPerks, CallFunc_BooleanAND_ReturnValue_2) == 0x00001E, "Member 'BP_ThresholdPlayerManagerComponent_C_UpdatePlayerPerks::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");

}

