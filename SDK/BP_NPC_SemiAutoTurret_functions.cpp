#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_NPC_SemiAutoTurret

#include "Basic.hpp"

#include "BP_NPC_SemiAutoTurret_classes.hpp"
#include "BP_NPC_SemiAutoTurret_parameters.hpp"


namespace SDK
{

// Function BP_NPC_SemiAutoTurret.BP_NPC_SemiAutoTurret_C.ExecuteUbergraph_BP_NPC_SemiAutoTurret
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NPC_SemiAutoTurret_C::ExecuteUbergraph_BP_NPC_SemiAutoTurret(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_SemiAutoTurret_C", "ExecuteUbergraph_BP_NPC_SemiAutoTurret");

	Params::BP_NPC_SemiAutoTurret_C_ExecuteUbergraph_BP_NPC_SemiAutoTurret Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NPC_SemiAutoTurret.BP_NPC_SemiAutoTurret_C.SetObjectiveLoopIds
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FGameplayTag>             Objective_loops_ids                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ABP_NPC_SemiAutoTurret_C::SetObjectiveLoopIds(const TArray<struct FGameplayTag>& Objective_loops_ids)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_SemiAutoTurret_C", "SetObjectiveLoopIds");

	Params::BP_NPC_SemiAutoTurret_C_SetObjectiveLoopIds Parms{};

	Parms.Objective_loops_ids = std::move(Objective_loops_ids);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NPC_SemiAutoTurret.BP_NPC_SemiAutoTurret_C.RemoveObjectiveLoopOwner
// (Event, Public, BlueprintEvent)
// Parameters:
// class ACAObjectiveLoop*                 Objective_loop                                         (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NPC_SemiAutoTurret_C::RemoveObjectiveLoopOwner(const class ACAObjectiveLoop* Objective_loop)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_SemiAutoTurret_C", "RemoveObjectiveLoopOwner");

	Params::BP_NPC_SemiAutoTurret_C_RemoveObjectiveLoopOwner Parms{};

	Parms.Objective_loop = Objective_loop;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NPC_SemiAutoTurret.BP_NPC_SemiAutoTurret_C.AddObjectiveLoopOwner
// (Event, Public, BlueprintEvent)
// Parameters:
// class ACAObjectiveLoop*                 Objective_loop                                         (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NPC_SemiAutoTurret_C::AddObjectiveLoopOwner(const class ACAObjectiveLoop* Objective_loop)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_SemiAutoTurret_C", "AddObjectiveLoopOwner");

	Params::BP_NPC_SemiAutoTurret_C_AddObjectiveLoopOwner Parms{};

	Parms.Objective_loop = Objective_loop;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NPC_SemiAutoTurret.BP_NPC_SemiAutoTurret_C.BndEvt__BP_NPC_RailgunTurret_m_ability_system_component_K2Node_ComponentBoundEvent_0_OnHitReceived__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// struct FCADamageEffectInfo              Damage_effect_info                                     (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ABP_NPC_SemiAutoTurret_C::BndEvt__BP_NPC_RailgunTurret_m_ability_system_component_K2Node_ComponentBoundEvent_0_OnHitReceived__DelegateSignature(const struct FCADamageEffectInfo& Damage_effect_info)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_SemiAutoTurret_C", "BndEvt__BP_NPC_RailgunTurret_m_ability_system_component_K2Node_ComponentBoundEvent_0_OnHitReceived__DelegateSignature");

	Params::BP_NPC_SemiAutoTurret_C_BndEvt__BP_NPC_RailgunTurret_m_ability_system_component_K2Node_ComponentBoundEvent_0_OnHitReceived__DelegateSignature Parms{};

	Parms.Damage_effect_info = std::move(Damage_effect_info);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NPC_SemiAutoTurret.BP_NPC_SemiAutoTurret_C.OnMesssagesFromObjectiveLoopReceived
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FGameplayTag>             Messages                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ABP_NPC_SemiAutoTurret_C::OnMesssagesFromObjectiveLoopReceived(const TArray<struct FGameplayTag>& Messages)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_SemiAutoTurret_C", "OnMesssagesFromObjectiveLoopReceived");

	Params::BP_NPC_SemiAutoTurret_C_OnMesssagesFromObjectiveLoopReceived Parms{};

	Parms.Messages = std::move(Messages);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NPC_SemiAutoTurret.BP_NPC_SemiAutoTurret_C.DelayingIdleAudio
// (BlueprintCallable, BlueprintEvent)

void ABP_NPC_SemiAutoTurret_C::DelayingIdleAudio()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_SemiAutoTurret_C", "DelayingIdleAudio");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NPC_SemiAutoTurret.BP_NPC_SemiAutoTurret_C.OnPoolStatusChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    Is_in_pool                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_NPC_SemiAutoTurret_C::OnPoolStatusChanged(bool Is_in_pool)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_SemiAutoTurret_C", "OnPoolStatusChanged");

	Params::BP_NPC_SemiAutoTurret_C_OnPoolStatusChanged Parms{};

	Parms.Is_in_pool = Is_in_pool;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NPC_SemiAutoTurret.BP_NPC_SemiAutoTurret_C.SetStartsOnline
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Starts_online                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_NPC_SemiAutoTurret_C::SetStartsOnline(bool Starts_online)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_SemiAutoTurret_C", "SetStartsOnline");

	Params::BP_NPC_SemiAutoTurret_C_SetStartsOnline Parms{};

	Parms.Starts_online = Starts_online;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NPC_SemiAutoTurret.BP_NPC_SemiAutoTurret_C.Death stop sound event
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ACACharacter*                     Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayEffectSpec              Death_gameplay_effect_spec                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// float                                   Damage_magnitude                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FNetworkedHit                    Networked_hit                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
// class AActor*                           Killer                                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NPC_SemiAutoTurret_C::Death_stop_sound_event(class ACACharacter* Character, const struct FGameplayEffectSpec& Death_gameplay_effect_spec, float Damage_magnitude, const struct FNetworkedHit& Networked_hit, const class AActor* Killer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_SemiAutoTurret_C", "Death stop sound event");

	Params::BP_NPC_SemiAutoTurret_C_Death_stop_sound_event Parms{};

	Parms.Character = Character;
	Parms.Death_gameplay_effect_spec = std::move(Death_gameplay_effect_spec);
	Parms.Damage_magnitude = Damage_magnitude;
	Parms.Networked_hit = std::move(Networked_hit);
	Parms.Killer = Killer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NPC_SemiAutoTurret.BP_NPC_SemiAutoTurret_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NPC_SemiAutoTurret_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_SemiAutoTurret_C", "ReceiveTick");

	Params::BP_NPC_SemiAutoTurret_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NPC_SemiAutoTurret.BP_NPC_SemiAutoTurret_C.RemoveObjectiveLoopId
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     Objective_loop_tag                                     (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)

void ABP_NPC_SemiAutoTurret_C::RemoveObjectiveLoopId(const struct FGameplayTag& Objective_loop_tag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_SemiAutoTurret_C", "RemoveObjectiveLoopId");

	Params::BP_NPC_SemiAutoTurret_C_RemoveObjectiveLoopId Parms{};

	Parms.Objective_loop_tag = std::move(Objective_loop_tag);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NPC_SemiAutoTurret.BP_NPC_SemiAutoTurret_C.DeactivateObjectiveLoopObject
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_NPC_SemiAutoTurret_C::DeactivateObjectiveLoopObject()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_SemiAutoTurret_C", "DeactivateObjectiveLoopObject");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NPC_SemiAutoTurret.BP_NPC_SemiAutoTurret_C.AddObjectiveLoopId
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     Objective_loop_tag                                     (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)

void ABP_NPC_SemiAutoTurret_C::AddObjectiveLoopId(const struct FGameplayTag& Objective_loop_tag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_SemiAutoTurret_C", "AddObjectiveLoopId");

	Params::BP_NPC_SemiAutoTurret_C_AddObjectiveLoopId Parms{};

	Parms.Objective_loop_tag = std::move(Objective_loop_tag);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NPC_SemiAutoTurret.BP_NPC_SemiAutoTurret_C.ActivateObjectiveLoopObject
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_NPC_SemiAutoTurret_C::ActivateObjectiveLoopObject()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_SemiAutoTurret_C", "ActivateObjectiveLoopObject");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NPC_SemiAutoTurret.BP_NPC_SemiAutoTurret_C.GetObjectiveLoopIds
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FGameplayTag>             Out_objective_loop_ids                                 (Parm, OutParm)

void ABP_NPC_SemiAutoTurret_C::GetObjectiveLoopIds(TArray<struct FGameplayTag>* Out_objective_loop_ids)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_SemiAutoTurret_C", "GetObjectiveLoopIds");

	Params::BP_NPC_SemiAutoTurret_C_GetObjectiveLoopIds Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Out_objective_loop_ids != nullptr)
		*Out_objective_loop_ids = std::move(Parms.Out_objective_loop_ids);
}


// Function BP_NPC_SemiAutoTurret.BP_NPC_SemiAutoTurret_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_NPC_SemiAutoTurret_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_SemiAutoTurret_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NPC_SemiAutoTurret.BP_NPC_SemiAutoTurret_C.IsAssignedToObjectiveLoop
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FGameplayTag                     Objective_loop_tag                                     (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_NPC_SemiAutoTurret_C::IsAssignedToObjectiveLoop(const struct FGameplayTag& Objective_loop_tag) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_SemiAutoTurret_C", "IsAssignedToObjectiveLoop");

	Params::BP_NPC_SemiAutoTurret_C_IsAssignedToObjectiveLoop Parms{};

	Parms.Objective_loop_tag = std::move(Objective_loop_tag);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_NPC_SemiAutoTurret.BP_NPC_SemiAutoTurret_C.IsAssignedToAnyObjectiveLoop
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_NPC_SemiAutoTurret_C::IsAssignedToAnyObjectiveLoop() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_SemiAutoTurret_C", "IsAssignedToAnyObjectiveLoop");

	Params::BP_NPC_SemiAutoTurret_C_IsAssignedToAnyObjectiveLoop Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

