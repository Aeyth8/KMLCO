#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_RootLayout

#include "Basic.hpp"

#include "Keaton_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function BP_RootLayout.BP_RootLayout_C.ClearDisplaySlot
// 0x0006 (0x0006 - 0x0000)
struct BP_RootLayout_C_ClearDisplaySlot final
{
public:
	ECADisplaySlot                                Display_slot;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ClearDisplaySlot_ReturnValue;             // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ClearDisplaySlot_ReturnValue_1;           // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECADisplaySlotPrefixes                        CallFunc_SwitchDisplaySlotPrefixes_exec;           // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_RootLayout_C_ClearDisplaySlot) == 0x000001, "Wrong alignment on BP_RootLayout_C_ClearDisplaySlot");
static_assert(sizeof(BP_RootLayout_C_ClearDisplaySlot) == 0x000006, "Wrong size on BP_RootLayout_C_ClearDisplaySlot");
static_assert(offsetof(BP_RootLayout_C_ClearDisplaySlot, Display_slot) == 0x000000, "Member 'BP_RootLayout_C_ClearDisplaySlot::Display_slot' has a wrong offset!");
static_assert(offsetof(BP_RootLayout_C_ClearDisplaySlot, ReturnValue) == 0x000001, "Member 'BP_RootLayout_C_ClearDisplaySlot::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RootLayout_C_ClearDisplaySlot, CallFunc_ClearDisplaySlot_ReturnValue) == 0x000002, "Member 'BP_RootLayout_C_ClearDisplaySlot::CallFunc_ClearDisplaySlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RootLayout_C_ClearDisplaySlot, CallFunc_ClearDisplaySlot_ReturnValue_1) == 0x000003, "Member 'BP_RootLayout_C_ClearDisplaySlot::CallFunc_ClearDisplaySlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RootLayout_C_ClearDisplaySlot, CallFunc_SwitchDisplaySlotPrefixes_exec) == 0x000004, "Member 'BP_RootLayout_C_ClearDisplaySlot::CallFunc_SwitchDisplaySlotPrefixes_exec' has a wrong offset!");
static_assert(offsetof(BP_RootLayout_C_ClearDisplaySlot, K2Node_SwitchEnum_CmpSuccess) == 0x000005, "Member 'BP_RootLayout_C_ClearDisplaySlot::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_RootLayout.BP_RootLayout_C.ChangeLayout
// 0x0018 (0x0018 - 0x0000)
struct BP_RootLayout_C_ChangeLayout final
{
public:
	class UCABaseLayout*                          Layout;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_RootLayout_C_ChangeLayout) == 0x000008, "Wrong alignment on BP_RootLayout_C_ChangeLayout");
static_assert(sizeof(BP_RootLayout_C_ChangeLayout) == 0x000018, "Wrong size on BP_RootLayout_C_ChangeLayout");
static_assert(offsetof(BP_RootLayout_C_ChangeLayout, Layout) == 0x000000, "Member 'BP_RootLayout_C_ChangeLayout::Layout' has a wrong offset!");
static_assert(offsetof(BP_RootLayout_C_ChangeLayout, CallFunc_AddChild_ReturnValue) == 0x000008, "Member 'BP_RootLayout_C_ChangeLayout::CallFunc_AddChild_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RootLayout_C_ChangeLayout, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_RootLayout_C_ChangeLayout::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_RootLayout.BP_RootLayout_C.AddChildToDisplaySlot
// 0x0028 (0x0028 - 0x0000)
struct BP_RootLayout_C_AddChildToDisplaySlot final
{
public:
	ECADisplaySlot                                Display_slot;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCABaseScreen*                          Widget;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_AddChildToDisplaySlot_ReturnValue;        // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECADisplaySlotPrefixes                        CallFunc_SwitchDisplaySlotPrefixes_exec;           // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_AddChildToDisplaySlot_ReturnValue_1;      // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_RootLayout_C_AddChildToDisplaySlot) == 0x000008, "Wrong alignment on BP_RootLayout_C_AddChildToDisplaySlot");
static_assert(sizeof(BP_RootLayout_C_AddChildToDisplaySlot) == 0x000028, "Wrong size on BP_RootLayout_C_AddChildToDisplaySlot");
static_assert(offsetof(BP_RootLayout_C_AddChildToDisplaySlot, Display_slot) == 0x000000, "Member 'BP_RootLayout_C_AddChildToDisplaySlot::Display_slot' has a wrong offset!");
static_assert(offsetof(BP_RootLayout_C_AddChildToDisplaySlot, Widget) == 0x000008, "Member 'BP_RootLayout_C_AddChildToDisplaySlot::Widget' has a wrong offset!");
static_assert(offsetof(BP_RootLayout_C_AddChildToDisplaySlot, ReturnValue) == 0x000010, "Member 'BP_RootLayout_C_AddChildToDisplaySlot::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RootLayout_C_AddChildToDisplaySlot, CallFunc_AddChildToDisplaySlot_ReturnValue) == 0x000011, "Member 'BP_RootLayout_C_AddChildToDisplaySlot::CallFunc_AddChildToDisplaySlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RootLayout_C_AddChildToDisplaySlot, CallFunc_PlayAnimation_ReturnValue) == 0x000018, "Member 'BP_RootLayout_C_AddChildToDisplaySlot::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RootLayout_C_AddChildToDisplaySlot, CallFunc_SwitchDisplaySlotPrefixes_exec) == 0x000020, "Member 'BP_RootLayout_C_AddChildToDisplaySlot::CallFunc_SwitchDisplaySlotPrefixes_exec' has a wrong offset!");
static_assert(offsetof(BP_RootLayout_C_AddChildToDisplaySlot, K2Node_SwitchEnum_CmpSuccess) == 0x000021, "Member 'BP_RootLayout_C_AddChildToDisplaySlot::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_RootLayout_C_AddChildToDisplaySlot, CallFunc_AddChildToDisplaySlot_ReturnValue_1) == 0x000022, "Member 'BP_RootLayout_C_AddChildToDisplaySlot::CallFunc_AddChildToDisplaySlot_ReturnValue_1' has a wrong offset!");

// Function BP_RootLayout.BP_RootLayout_C.Tick
// 0x003C (0x003C - 0x0000)
struct BP_RootLayout_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RootLayout_C_Tick) == 0x000004, "Wrong alignment on BP_RootLayout_C_Tick");
static_assert(sizeof(BP_RootLayout_C_Tick) == 0x00003C, "Wrong size on BP_RootLayout_C_Tick");
static_assert(offsetof(BP_RootLayout_C_Tick, MyGeometry) == 0x000000, "Member 'BP_RootLayout_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_RootLayout_C_Tick, InDeltaTime) == 0x000038, "Member 'BP_RootLayout_C_Tick::InDeltaTime' has a wrong offset!");

// Function BP_RootLayout.BP_RootLayout_C.ExecuteUbergraph_BP_RootLayout
// 0x0044 (0x0044 - 0x0000)
struct BP_RootLayout_C_ExecuteUbergraph_BP_RootLayout final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0004(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFeatureActive_ReturnValue;              // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_RootLayout_C_ExecuteUbergraph_BP_RootLayout) == 0x000004, "Wrong alignment on BP_RootLayout_C_ExecuteUbergraph_BP_RootLayout");
static_assert(sizeof(BP_RootLayout_C_ExecuteUbergraph_BP_RootLayout) == 0x000044, "Wrong size on BP_RootLayout_C_ExecuteUbergraph_BP_RootLayout");
static_assert(offsetof(BP_RootLayout_C_ExecuteUbergraph_BP_RootLayout, EntryPoint) == 0x000000, "Member 'BP_RootLayout_C_ExecuteUbergraph_BP_RootLayout::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_RootLayout_C_ExecuteUbergraph_BP_RootLayout, K2Node_Event_MyGeometry) == 0x000004, "Member 'BP_RootLayout_C_ExecuteUbergraph_BP_RootLayout::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_RootLayout_C_ExecuteUbergraph_BP_RootLayout, K2Node_Event_InDeltaTime) == 0x00003C, "Member 'BP_RootLayout_C_ExecuteUbergraph_BP_RootLayout::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(BP_RootLayout_C_ExecuteUbergraph_BP_RootLayout, CallFunc_IsFeatureActive_ReturnValue) == 0x000040, "Member 'BP_RootLayout_C_ExecuteUbergraph_BP_RootLayout::CallFunc_IsFeatureActive_ReturnValue' has a wrong offset!");

}

