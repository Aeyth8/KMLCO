#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GCA_Cosplayer_InDisguise

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayAbilities_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GCA_Cosplayer_InDisguise.GCA_Cosplayer_InDisguise_C
// 0x0048 (0x0308 - 0x02C0)
class AGCA_Cosplayer_InDisguise_C : public AGameplayCueNotify_Actor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UPostProcessComponent*                  PostProcess;                                       // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_1_Fade_In_D2BACE1A4F37B2701164B4984D9D4A78; // 0x02D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_1__Direction_D2BACE1A4F37B2701164B4984D9D4A78; // 0x02DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2DD[0x3];                                      // 0x02DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_1;                                        // 0x02E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_0_Fade_27DA25AA4CC0F46773ABD4A911ED6B87;  // 0x02E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_0__Direction_27DA25AA4CC0F46773ABD4A911ED6B87; // 0x02EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2ED[0x3];                                      // 0x02ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_0;                                        // 0x02F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      Niagara_1P_VFX_;                                   // 0x02F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               PPMaterialInstance;                                // 0x0300(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_GCA_Cosplayer_InDisguise(int32 EntryPoint);
	void OnRemoved(class AActor* Character);
	void OnActivated(class AActor* Character);
	void ReceiveBeginPlay();
	void Timeline_1__UpdateFunc();
	void Timeline_1__FinishedFunc();
	void Timeline_0__UpdateFunc();
	void Timeline_0__FinishedFunc();
	bool OnActive(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters);
	bool WhileActive(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters);
	bool OnRemove(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GCA_Cosplayer_InDisguise_C">();
	}
	static class AGCA_Cosplayer_InDisguise_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AGCA_Cosplayer_InDisguise_C>();
	}
};
static_assert(alignof(AGCA_Cosplayer_InDisguise_C) == 0x000008, "Wrong alignment on AGCA_Cosplayer_InDisguise_C");
static_assert(sizeof(AGCA_Cosplayer_InDisguise_C) == 0x000308, "Wrong size on AGCA_Cosplayer_InDisguise_C");
static_assert(offsetof(AGCA_Cosplayer_InDisguise_C, UberGraphFrame) == 0x0002C0, "Member 'AGCA_Cosplayer_InDisguise_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AGCA_Cosplayer_InDisguise_C, PostProcess) == 0x0002C8, "Member 'AGCA_Cosplayer_InDisguise_C::PostProcess' has a wrong offset!");
static_assert(offsetof(AGCA_Cosplayer_InDisguise_C, DefaultSceneRoot) == 0x0002D0, "Member 'AGCA_Cosplayer_InDisguise_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(AGCA_Cosplayer_InDisguise_C, Timeline_1_Fade_In_D2BACE1A4F37B2701164B4984D9D4A78) == 0x0002D8, "Member 'AGCA_Cosplayer_InDisguise_C::Timeline_1_Fade_In_D2BACE1A4F37B2701164B4984D9D4A78' has a wrong offset!");
static_assert(offsetof(AGCA_Cosplayer_InDisguise_C, Timeline_1__Direction_D2BACE1A4F37B2701164B4984D9D4A78) == 0x0002DC, "Member 'AGCA_Cosplayer_InDisguise_C::Timeline_1__Direction_D2BACE1A4F37B2701164B4984D9D4A78' has a wrong offset!");
static_assert(offsetof(AGCA_Cosplayer_InDisguise_C, Timeline_1) == 0x0002E0, "Member 'AGCA_Cosplayer_InDisguise_C::Timeline_1' has a wrong offset!");
static_assert(offsetof(AGCA_Cosplayer_InDisguise_C, Timeline_0_Fade_27DA25AA4CC0F46773ABD4A911ED6B87) == 0x0002E8, "Member 'AGCA_Cosplayer_InDisguise_C::Timeline_0_Fade_27DA25AA4CC0F46773ABD4A911ED6B87' has a wrong offset!");
static_assert(offsetof(AGCA_Cosplayer_InDisguise_C, Timeline_0__Direction_27DA25AA4CC0F46773ABD4A911ED6B87) == 0x0002EC, "Member 'AGCA_Cosplayer_InDisguise_C::Timeline_0__Direction_27DA25AA4CC0F46773ABD4A911ED6B87' has a wrong offset!");
static_assert(offsetof(AGCA_Cosplayer_InDisguise_C, Timeline_0) == 0x0002F0, "Member 'AGCA_Cosplayer_InDisguise_C::Timeline_0' has a wrong offset!");
static_assert(offsetof(AGCA_Cosplayer_InDisguise_C, Niagara_1P_VFX_) == 0x0002F8, "Member 'AGCA_Cosplayer_InDisguise_C::Niagara_1P_VFX_' has a wrong offset!");
static_assert(offsetof(AGCA_Cosplayer_InDisguise_C, PPMaterialInstance) == 0x000300, "Member 'AGCA_Cosplayer_InDisguise_C::PPMaterialInstance' has a wrong offset!");

}

