#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PlayerCard

#include "Basic.hpp"

#include "Keaton_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function BP_PlayerCard.BP_PlayerCard_C.ExecuteUbergraph_BP_PlayerCard
// 0x04F0 (0x04F0 - 0x0000)
struct BP_PlayerCard_C_ExecuteUbergraph_BP_PlayerCard final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_CustomEvent_name_1;                         // 0x0008(0x0018)()
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_CustomEvent_name;                           // 0x0028(0x0018)()
	class FText                                   CallFunc_TextToUpper_ReturnValue;                  // 0x0040(0x0018)()
	TSoftObjectPtr<class UTexture2D>              K2Node_CustomEvent_texture;                        // 0x0058(0x0030)(HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0088(0x0014)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         K2Node_CustomEvent_rank;                           // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class FName, struct FCACurrencyAssetData> K2Node_CustomEvent_currencies_1;                   // 0x00A8(0x0050)()
	class FText                                   CallFunc_Conv_Int64ToText_ReturnValue;             // 0x00F8(0x0018)()
	TMap<class FName, struct FCACurrencyAssetData> K2Node_CustomEvent_currencys;                      // 0x0110(0x0050)()
	class FName                                   K2Node_CustomEvent_currency_name;                  // 0x0160(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16C[0x4];                                      // 0x016C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                K2Node_CustomEvent_container;                      // 0x0170(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCACurrencyTextBlock*                   K2Node_CustomEvent_currency;                       // 0x0178(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class FName, struct FCACurrencyAssetData> K2Node_CustomEvent_currencies;                     // 0x0180(0x0050)()
	struct FCACurrencyAssetData                   CallFunc_Map_Find_Value;                           // 0x01D0(0x0098)()
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_269[0x3];                                      // 0x0269(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x026C(0x0014)(ZeroConstructor, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0281(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0282(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0283(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_preogress;                      // 0x0284(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_CustomEvent_user_id;                        // 0x0288(0x0018)()
	struct FCAPlayerCardUIData                    K2Node_CustomEvent_player_card_data;               // 0x02A0(0x0100)()
	bool                                          K2Node_CustomEvent_show;                           // 0x03A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A1[0x7];                                      // 0x03A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x03A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x03B0(0x0028)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x03D8(0x0028)()
	class FText                                   Temp_text_Variable;                                // 0x0400(0x0018)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_2;                    // 0x0418(0x0028)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_3;                    // 0x0440(0x0028)()
	bool                                          Temp_bool_Variable_1;                              // 0x0468(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_469[0x7];                                      // 0x0469(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_CreatePlayAnimationProxyObject_Result;    // 0x0470(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimationPlayCallbackProxy*      CallFunc_CreatePlayAnimationProxyObject_ReturnValue; // 0x0478(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_Select_Default_1;                           // 0x0480(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0498(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x04A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A9[0x7];                                      // 0x04A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetSubstring_ReturnValue;                 // 0x04B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x04C0(0x0018)()
	class UUMGSequencePlayer*                     CallFunc_CreatePlayAnimationProxyObject_Result_1;  // 0x04D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimationPlayCallbackProxy*      CallFunc_CreatePlayAnimationProxyObject_ReturnValue_1; // 0x04E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x04E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerCard_C_ExecuteUbergraph_BP_PlayerCard) == 0x000008, "Wrong alignment on BP_PlayerCard_C_ExecuteUbergraph_BP_PlayerCard");
static_assert(sizeof(BP_PlayerCard_C_ExecuteUbergraph_BP_PlayerCard) == 0x0004F0, "Wrong size on BP_PlayerCard_C_ExecuteUbergraph_BP_PlayerCard");
static_assert(offsetof(BP_PlayerCard_C_ExecuteUbergraph_BP_PlayerCard, EntryPoint) == 0x000000, "Member 'BP_PlayerCard_C_ExecuteUbergraph_BP_PlayerCard::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_PlayerCard_C_ExecuteUbergraph_BP_PlayerCard, K2Node_CustomEvent_name_1) == 0x000008, "Member 'BP_PlayerCard_C_ExecuteUbergraph_BP_PlayerCard::K2Node_CustomEvent_name_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCard_C_ExecuteUbergraph_BP_PlayerCard, CallFunc_TextIsEmpty_ReturnValue) == 0x000020, "Member 'BP_PlayerCard_C_ExecuteUbergraph_BP_PlayerCard::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCard_C_ExecuteUbergraph_BP_PlayerCard, K2Node_CustomEvent_name) == 0x000028, "Member 'BP_PlayerCard_C_ExecuteUbergraph_BP_PlayerCard::K2Node_CustomEvent_name' has a wrong offset!");
static_assert(offsetof(BP_PlayerCard_C_ExecuteUbergraph_BP_PlayerCard, CallFunc_TextToUpper_ReturnValue) == 0x000040, "Member 'BP_PlayerCard_C_ExecuteUbergraph_BP_PlayerCard::CallFunc_TextToUpper_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCard_C_ExecuteUbergraph_BP_PlayerCard, K2Node_CustomEvent_texture) == 0x000058, "Member 'BP_PlayerCard_C_ExecuteUbergraph_BP_PlayerCard::K2Node_CustomEvent_texture' has a wrong offset!");
static_assert(offsetof(BP_PlayerCard_C_ExecuteUbergraph_BP_PlayerCard, K2Node_CreateDelegate_OutputDelegate) == 0x000088, "Member 'BP_PlayerCard_C_ExecuteUbergraph_BP_PlayerCard::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_PlayerCard_C_ExecuteUbergraph_BP_PlayerCard, K2Node_CustomEvent_rank) == 0x0000A0, "Member 'BP_PlayerCard_C_ExecuteUbergraph_BP_PlayerCard::K2Node_CustomEvent_rank' has a wrong offset!");
static_assert(offsetof(BP_PlayerCard_C_ExecuteUbergraph_BP_PlayerCard, K2Node_CustomEvent_currencies_1) == 0x0000A8, "Member 'BP_PlayerCard_C_ExecuteUbergraph_BP_PlayerCard::K2Node_CustomEvent_currencies_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCard_C_ExecuteUbergraph_BP_PlayerCard, CallFunc_Conv_Int64ToText_ReturnValue) == 0x0000F8, "Member 'BP_PlayerCard_C_ExecuteUbergraph_BP_PlayerCard::CallFunc_Conv_Int64ToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCard_C_ExecuteUbergraph_BP_PlayerCard, K2Node_CustomEvent_currencys) == 0x000110, "Member 'BP_PlayerCard_C_ExecuteUbergraph_BP_PlayerCard::K2Node_CustomEvent_currencys' has a wrong offset!");
static_assert(offsetof(BP_PlayerCard_C_ExecuteUbergraph_BP_PlayerCard, K2Node_CustomEvent_currency_name) == 0x000160, "Member 'BP_PlayerCard_C_ExecuteUbergraph_BP_PlayerCard::K2Node_CustomEvent_currency_name' has a wrong offset!");
static_assert(offsetof(BP_PlayerCard_C_ExecuteUbergraph_BP_PlayerCard, K2Node_CustomEvent_container) == 0x000170, "Member 'BP_PlayerCard_C_ExecuteUbergraph_BP_PlayerCard::K2Node_CustomEvent_container' has a wrong offset!");
static_assert(offsetof(BP_PlayerCard_C_ExecuteUbergraph_BP_PlayerCard, K2Node_CustomEvent_currency) == 0x000178, "Member 'BP_PlayerCard_C_ExecuteUbergraph_BP_PlayerCard::K2Node_CustomEvent_currency' has a wrong offset!");
static_assert(offsetof(BP_PlayerCard_C_ExecuteUbergraph_BP_PlayerCard, K2Node_CustomEvent_currencies) == 0x000180, "Member 'BP_PlayerCard_C_ExecuteUbergraph_BP_PlayerCard::K2Node_CustomEvent_currencies' has a wrong offset!");
static_assert(offsetof(BP_PlayerCard_C_ExecuteUbergraph_BP_PlayerCard, CallFunc_Map_Find_Value) == 0x0001D0, "Member 'BP_PlayerCard_C_ExecuteUbergraph_BP_PlayerCard::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_PlayerCard_C_ExecuteUbergraph_BP_PlayerCard, CallFunc_Map_Find_ReturnValue) == 0x000268, "Member 'BP_PlayerCard_C_ExecuteUbergraph_BP_PlayerCard::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCard_C_ExecuteUbergraph_BP_PlayerCard, K2Node_CreateDelegate_OutputDelegate_1) == 0x00026C, "Member 'BP_PlayerCard_C_ExecuteUbergraph_BP_PlayerCard::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCard_C_ExecuteUbergraph_BP_PlayerCard, Temp_byte_Variable) == 0x000280, "Member 'BP_PlayerCard_C_ExecuteUbergraph_BP_PlayerCard::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerCard_C_ExecuteUbergraph_BP_PlayerCard, Temp_byte_Variable_1) == 0x000281, "Member 'BP_PlayerCard_C_ExecuteUbergraph_BP_PlayerCard::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCard_C_ExecuteUbergraph_BP_PlayerCard, Temp_bool_Variable) == 0x000282, "Member 'BP_PlayerCard_C_ExecuteUbergraph_BP_PlayerCard::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerCard_C_ExecuteUbergraph_BP_PlayerCard, K2Node_Select_Default) == 0x000283, "Member 'BP_PlayerCard_C_ExecuteUbergraph_BP_PlayerCard::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_PlayerCard_C_ExecuteUbergraph_BP_PlayerCard, K2Node_CustomEvent_preogress) == 0x000284, "Member 'BP_PlayerCard_C_ExecuteUbergraph_BP_PlayerCard::K2Node_CustomEvent_preogress' has a wrong offset!");
static_assert(offsetof(BP_PlayerCard_C_ExecuteUbergraph_BP_PlayerCard, K2Node_CustomEvent_user_id) == 0x000288, "Member 'BP_PlayerCard_C_ExecuteUbergraph_BP_PlayerCard::K2Node_CustomEvent_user_id' has a wrong offset!");
static_assert(offsetof(BP_PlayerCard_C_ExecuteUbergraph_BP_PlayerCard, K2Node_CustomEvent_player_card_data) == 0x0002A0, "Member 'BP_PlayerCard_C_ExecuteUbergraph_BP_PlayerCard::K2Node_CustomEvent_player_card_data' has a wrong offset!");
static_assert(offsetof(BP_PlayerCard_C_ExecuteUbergraph_BP_PlayerCard, K2Node_CustomEvent_show) == 0x0003A0, "Member 'BP_PlayerCard_C_ExecuteUbergraph_BP_PlayerCard::K2Node_CustomEvent_show' has a wrong offset!");
static_assert(offsetof(BP_PlayerCard_C_ExecuteUbergraph_BP_PlayerCard, CallFunc_GetDynamicMaterial_ReturnValue) == 0x0003A8, "Member 'BP_PlayerCard_C_ExecuteUbergraph_BP_PlayerCard::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCard_C_ExecuteUbergraph_BP_PlayerCard, K2Node_MakeStruct_SlateColor) == 0x0003B0, "Member 'BP_PlayerCard_C_ExecuteUbergraph_BP_PlayerCard::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(BP_PlayerCard_C_ExecuteUbergraph_BP_PlayerCard, K2Node_MakeStruct_SlateColor_1) == 0x0003D8, "Member 'BP_PlayerCard_C_ExecuteUbergraph_BP_PlayerCard::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCard_C_ExecuteUbergraph_BP_PlayerCard, Temp_text_Variable) == 0x000400, "Member 'BP_PlayerCard_C_ExecuteUbergraph_BP_PlayerCard::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerCard_C_ExecuteUbergraph_BP_PlayerCard, K2Node_MakeStruct_SlateColor_2) == 0x000418, "Member 'BP_PlayerCard_C_ExecuteUbergraph_BP_PlayerCard::K2Node_MakeStruct_SlateColor_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerCard_C_ExecuteUbergraph_BP_PlayerCard, K2Node_MakeStruct_SlateColor_3) == 0x000440, "Member 'BP_PlayerCard_C_ExecuteUbergraph_BP_PlayerCard::K2Node_MakeStruct_SlateColor_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerCard_C_ExecuteUbergraph_BP_PlayerCard, Temp_bool_Variable_1) == 0x000468, "Member 'BP_PlayerCard_C_ExecuteUbergraph_BP_PlayerCard::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCard_C_ExecuteUbergraph_BP_PlayerCard, CallFunc_CreatePlayAnimationProxyObject_Result) == 0x000470, "Member 'BP_PlayerCard_C_ExecuteUbergraph_BP_PlayerCard::CallFunc_CreatePlayAnimationProxyObject_Result' has a wrong offset!");
static_assert(offsetof(BP_PlayerCard_C_ExecuteUbergraph_BP_PlayerCard, CallFunc_CreatePlayAnimationProxyObject_ReturnValue) == 0x000478, "Member 'BP_PlayerCard_C_ExecuteUbergraph_BP_PlayerCard::CallFunc_CreatePlayAnimationProxyObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCard_C_ExecuteUbergraph_BP_PlayerCard, K2Node_Select_Default_1) == 0x000480, "Member 'BP_PlayerCard_C_ExecuteUbergraph_BP_PlayerCard::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCard_C_ExecuteUbergraph_BP_PlayerCard, CallFunc_Conv_TextToString_ReturnValue) == 0x000498, "Member 'BP_PlayerCard_C_ExecuteUbergraph_BP_PlayerCard::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCard_C_ExecuteUbergraph_BP_PlayerCard, CallFunc_IsValid_ReturnValue) == 0x0004A8, "Member 'BP_PlayerCard_C_ExecuteUbergraph_BP_PlayerCard::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCard_C_ExecuteUbergraph_BP_PlayerCard, CallFunc_GetSubstring_ReturnValue) == 0x0004B0, "Member 'BP_PlayerCard_C_ExecuteUbergraph_BP_PlayerCard::CallFunc_GetSubstring_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCard_C_ExecuteUbergraph_BP_PlayerCard, CallFunc_Conv_StringToText_ReturnValue) == 0x0004C0, "Member 'BP_PlayerCard_C_ExecuteUbergraph_BP_PlayerCard::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCard_C_ExecuteUbergraph_BP_PlayerCard, CallFunc_CreatePlayAnimationProxyObject_Result_1) == 0x0004D8, "Member 'BP_PlayerCard_C_ExecuteUbergraph_BP_PlayerCard::CallFunc_CreatePlayAnimationProxyObject_Result_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCard_C_ExecuteUbergraph_BP_PlayerCard, CallFunc_CreatePlayAnimationProxyObject_ReturnValue_1) == 0x0004E0, "Member 'BP_PlayerCard_C_ExecuteUbergraph_BP_PlayerCard::CallFunc_CreatePlayAnimationProxyObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCard_C_ExecuteUbergraph_BP_PlayerCard, CallFunc_IsValid_ReturnValue_1) == 0x0004E8, "Member 'BP_PlayerCard_C_ExecuteUbergraph_BP_PlayerCard::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_PlayerCard.BP_PlayerCard_C.ShowServicesUserID
// 0x0001 (0x0001 - 0x0000)
struct BP_PlayerCard_C_ShowServicesUserID final
{
public:
	bool                                          Show;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerCard_C_ShowServicesUserID) == 0x000001, "Wrong alignment on BP_PlayerCard_C_ShowServicesUserID");
static_assert(sizeof(BP_PlayerCard_C_ShowServicesUserID) == 0x000001, "Wrong size on BP_PlayerCard_C_ShowServicesUserID");
static_assert(offsetof(BP_PlayerCard_C_ShowServicesUserID, Show) == 0x000000, "Member 'BP_PlayerCard_C_ShowServicesUserID::Show' has a wrong offset!");

// Function BP_PlayerCard.BP_PlayerCard_C.SetPlayerCardData
// 0x0100 (0x0100 - 0x0000)
struct BP_PlayerCard_C_SetPlayerCardData final
{
public:
	struct FCAPlayerCardUIData                    Player_card_data;                                  // 0x0000(0x0100)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(BP_PlayerCard_C_SetPlayerCardData) == 0x000008, "Wrong alignment on BP_PlayerCard_C_SetPlayerCardData");
static_assert(sizeof(BP_PlayerCard_C_SetPlayerCardData) == 0x000100, "Wrong size on BP_PlayerCard_C_SetPlayerCardData");
static_assert(offsetof(BP_PlayerCard_C_SetPlayerCardData, Player_card_data) == 0x000000, "Member 'BP_PlayerCard_C_SetPlayerCardData::Player_card_data' has a wrong offset!");

// Function BP_PlayerCard.BP_PlayerCard_C.SetUserID
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerCard_C_SetUserID final
{
public:
	class FText                                   User_id;                                           // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(BP_PlayerCard_C_SetUserID) == 0x000008, "Wrong alignment on BP_PlayerCard_C_SetUserID");
static_assert(sizeof(BP_PlayerCard_C_SetUserID) == 0x000018, "Wrong size on BP_PlayerCard_C_SetUserID");
static_assert(offsetof(BP_PlayerCard_C_SetUserID, User_id) == 0x000000, "Member 'BP_PlayerCard_C_SetUserID::User_id' has a wrong offset!");

// Function BP_PlayerCard.BP_PlayerCard_C.SetLevelProgress
// 0x0004 (0x0004 - 0x0000)
struct BP_PlayerCard_C_SetLevelProgress final
{
public:
	float                                         Preogress;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCard_C_SetLevelProgress) == 0x000004, "Wrong alignment on BP_PlayerCard_C_SetLevelProgress");
static_assert(sizeof(BP_PlayerCard_C_SetLevelProgress) == 0x000004, "Wrong size on BP_PlayerCard_C_SetLevelProgress");
static_assert(offsetof(BP_PlayerCard_C_SetLevelProgress, Preogress) == 0x000000, "Member 'BP_PlayerCard_C_SetLevelProgress::Preogress' has a wrong offset!");

// Function BP_PlayerCard.BP_PlayerCard_C.SetHardCurrency
// 0x0050 (0x0050 - 0x0000)
struct BP_PlayerCard_C_SetHardCurrency final
{
public:
	TMap<class FName, struct FCACurrencyAssetData> Currencies;                                        // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(BP_PlayerCard_C_SetHardCurrency) == 0x000008, "Wrong alignment on BP_PlayerCard_C_SetHardCurrency");
static_assert(sizeof(BP_PlayerCard_C_SetHardCurrency) == 0x000050, "Wrong size on BP_PlayerCard_C_SetHardCurrency");
static_assert(offsetof(BP_PlayerCard_C_SetHardCurrency, Currencies) == 0x000000, "Member 'BP_PlayerCard_C_SetHardCurrency::Currencies' has a wrong offset!");

// Function BP_PlayerCard.BP_PlayerCard_C.SetCurrency
// 0x0070 (0x0070 - 0x0000)
struct BP_PlayerCard_C_SetCurrency final
{
public:
	TMap<class FName, struct FCACurrencyAssetData> Currencys;                                         // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FName                                   Currency_name;                                     // 0x0050(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                Container;                                         // 0x0060(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCACurrencyTextBlock*                   Currency;                                          // 0x0068(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCard_C_SetCurrency) == 0x000008, "Wrong alignment on BP_PlayerCard_C_SetCurrency");
static_assert(sizeof(BP_PlayerCard_C_SetCurrency) == 0x000070, "Wrong size on BP_PlayerCard_C_SetCurrency");
static_assert(offsetof(BP_PlayerCard_C_SetCurrency, Currencys) == 0x000000, "Member 'BP_PlayerCard_C_SetCurrency::Currencys' has a wrong offset!");
static_assert(offsetof(BP_PlayerCard_C_SetCurrency, Currency_name) == 0x000050, "Member 'BP_PlayerCard_C_SetCurrency::Currency_name' has a wrong offset!");
static_assert(offsetof(BP_PlayerCard_C_SetCurrency, Container) == 0x000060, "Member 'BP_PlayerCard_C_SetCurrency::Container' has a wrong offset!");
static_assert(offsetof(BP_PlayerCard_C_SetCurrency, Currency) == 0x000068, "Member 'BP_PlayerCard_C_SetCurrency::Currency' has a wrong offset!");

// Function BP_PlayerCard.BP_PlayerCard_C.SetSoftCurrency
// 0x0050 (0x0050 - 0x0000)
struct BP_PlayerCard_C_SetSoftCurrency final
{
public:
	TMap<class FName, struct FCACurrencyAssetData> Currencies;                                        // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(BP_PlayerCard_C_SetSoftCurrency) == 0x000008, "Wrong alignment on BP_PlayerCard_C_SetSoftCurrency");
static_assert(sizeof(BP_PlayerCard_C_SetSoftCurrency) == 0x000050, "Wrong size on BP_PlayerCard_C_SetSoftCurrency");
static_assert(offsetof(BP_PlayerCard_C_SetSoftCurrency, Currencies) == 0x000000, "Member 'BP_PlayerCard_C_SetSoftCurrency::Currencies' has a wrong offset!");

// Function BP_PlayerCard.BP_PlayerCard_C.SetRankValue
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCard_C_SetRankValue final
{
public:
	int64                                         Rank;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCard_C_SetRankValue) == 0x000008, "Wrong alignment on BP_PlayerCard_C_SetRankValue");
static_assert(sizeof(BP_PlayerCard_C_SetRankValue) == 0x000008, "Wrong size on BP_PlayerCard_C_SetRankValue");
static_assert(offsetof(BP_PlayerCard_C_SetRankValue, Rank) == 0x000000, "Member 'BP_PlayerCard_C_SetRankValue::Rank' has a wrong offset!");

// Function BP_PlayerCard.BP_PlayerCard_C.SetRankIcon
// 0x0030 (0x0030 - 0x0000)
struct BP_PlayerCard_C_SetRankIcon final
{
public:
	TSoftObjectPtr<class UTexture2D>              Texture;                                           // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCard_C_SetRankIcon) == 0x000008, "Wrong alignment on BP_PlayerCard_C_SetRankIcon");
static_assert(sizeof(BP_PlayerCard_C_SetRankIcon) == 0x000030, "Wrong size on BP_PlayerCard_C_SetRankIcon");
static_assert(offsetof(BP_PlayerCard_C_SetRankIcon, Texture) == 0x000000, "Member 'BP_PlayerCard_C_SetRankIcon::Texture' has a wrong offset!");

// Function BP_PlayerCard.BP_PlayerCard_C.SetRankName
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerCard_C_SetRankName final
{
public:
	class FText                                   Name_0;                                            // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(BP_PlayerCard_C_SetRankName) == 0x000008, "Wrong alignment on BP_PlayerCard_C_SetRankName");
static_assert(sizeof(BP_PlayerCard_C_SetRankName) == 0x000018, "Wrong size on BP_PlayerCard_C_SetRankName");
static_assert(offsetof(BP_PlayerCard_C_SetRankName, Name_0) == 0x000000, "Member 'BP_PlayerCard_C_SetRankName::Name_0' has a wrong offset!");

// Function BP_PlayerCard.BP_PlayerCard_C.SetPlayerName
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerCard_C_SetPlayerName final
{
public:
	class FText                                   Name_0;                                            // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(BP_PlayerCard_C_SetPlayerName) == 0x000008, "Wrong alignment on BP_PlayerCard_C_SetPlayerName");
static_assert(sizeof(BP_PlayerCard_C_SetPlayerName) == 0x000018, "Wrong size on BP_PlayerCard_C_SetPlayerName");
static_assert(offsetof(BP_PlayerCard_C_SetPlayerName, Name_0) == 0x000000, "Member 'BP_PlayerCard_C_SetPlayerName::Name_0' has a wrong offset!");

}

