#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPUI_HUD_ControlScheme

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Keaton_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BPUI_HUD_ControlScheme.BPUI_HUD_ControlScheme_C
// 0x0028 (0x0460 - 0x0438)
class UBPUI_HUD_ControlScheme_C final : public UCAHUDInventoryWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0438(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBP_StandardOutlineButton_C*            BTN_controller;                                    // 0x0440(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_StandardOutlineButton_C*            BTN_keyboard;                                      // 0x0448(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UControlMapPanel_C*                     ControlMapPanel;                                   // 0x0450(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          IsMatchStartActive;                                // 0x0458(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BPUI_HUD_ControlScheme(int32 EntryPoint);
	void BlockInputEvent();
	void BndEvt__BTN_controller_1_K2Node_ComponentBoundEvent_3_UIElementSelected__DelegateSignature(class UCABaseUIElement* button);
	void OnShow();
	void BndEvt__options_btn_K2Node_ComponentBoundEvent_2_UIElementSelected__DelegateSignature(class UCABaseUIElement* button);
	void OnHide();
	void CaptureInput();
	void ReleaseInput();
	void ShowGamepadIcons();
	void HideGamepadIcons();
	void UpdateGamepadIcons();
	void UpdateVisibility(bool Is_visible);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BPUI_HUD_ControlScheme_C">();
	}
	static class UBPUI_HUD_ControlScheme_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBPUI_HUD_ControlScheme_C>();
	}
};
static_assert(alignof(UBPUI_HUD_ControlScheme_C) == 0x000008, "Wrong alignment on UBPUI_HUD_ControlScheme_C");
static_assert(sizeof(UBPUI_HUD_ControlScheme_C) == 0x000460, "Wrong size on UBPUI_HUD_ControlScheme_C");
static_assert(offsetof(UBPUI_HUD_ControlScheme_C, UberGraphFrame) == 0x000438, "Member 'UBPUI_HUD_ControlScheme_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBPUI_HUD_ControlScheme_C, BTN_controller) == 0x000440, "Member 'UBPUI_HUD_ControlScheme_C::BTN_controller' has a wrong offset!");
static_assert(offsetof(UBPUI_HUD_ControlScheme_C, BTN_keyboard) == 0x000448, "Member 'UBPUI_HUD_ControlScheme_C::BTN_keyboard' has a wrong offset!");
static_assert(offsetof(UBPUI_HUD_ControlScheme_C, ControlMapPanel) == 0x000450, "Member 'UBPUI_HUD_ControlScheme_C::ControlMapPanel' has a wrong offset!");
static_assert(offsetof(UBPUI_HUD_ControlScheme_C, IsMatchStartActive) == 0x000458, "Member 'UBPUI_HUD_ControlScheme_C::IsMatchStartActive' has a wrong offset!");

}

