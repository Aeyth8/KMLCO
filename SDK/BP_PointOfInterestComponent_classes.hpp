#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PointOfInterestComponent

#include "Basic.hpp"

#include "CALocalisationRuntime_structs.hpp"
#include "Engine_structs.hpp"
#include "Keaton_structs.hpp"
#include "Keaton_classes.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_PointOfInterestComponent.BP_PointOfInterestComponent_C
// 0x00C0 (0x0410 - 0x0350)
class UBP_PointOfInterestComponent_C final : public UCACollisionComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0350(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	bool                                          CreateOwnMapEntityOnStart;                         // 0x0358(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          InSameRoom;                                        // 0x0359(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35A[0x2];                                      // 0x035A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MapEntityID;                                       // 0x035C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECAUIHUDEntityId                              EntityType;                                        // 0x0360(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_361[0x7];                                      // 0x0361(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCAText                                CAText;                                            // 0x0368(0x0030)(Edit, BlueprintVisible)
	ECAInformationControlLevel                    InformationLevel;                                  // 0x0398(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_399[0x7];                                      // 0x0399(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  RequireTags;                                       // 0x03A0(0x0020)(Edit, BlueprintVisible)
	struct FGameplayTagContainer                  IgnoreTags;                                        // 0x03C0(0x0020)(Edit, BlueprintVisible)
	bool                                          TeammateStillInArea;                               // 0x03E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E1[0x7];                                      // 0x03E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         ActorsToUpdate;                                    // 0x03E8(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	TArray<class AActor*>                         ActorsUpdated;                                     // 0x03F8(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)

public:
	void ExecuteUbergraph_BP_PointOfInterestComponent(int32 EntryPoint);
	void ReceiveTick(float DeltaSeconds);
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void EndOverlap(class USceneComponent* OverlappedComponent, class AActor* OtherActor, class USceneComponent* OtherComp, int32 OtherBodyIndex);
	void BeginOverlap(class USceneComponent* OverlappedComponent, class AActor* OtherActor, class USceneComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void ReceiveBeginPlay();
	void Check_Spatial_Conditions(class AActor* OtherActor, bool* Result);
	void SetInformationLevel(const struct FCATeamID& _0_, const struct FCATeamID& Team_id, class AActor* OtherActor);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_PointOfInterestComponent_C">();
	}
	static class UBP_PointOfInterestComponent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_PointOfInterestComponent_C>();
	}
};
static_assert(alignof(UBP_PointOfInterestComponent_C) == 0x000010, "Wrong alignment on UBP_PointOfInterestComponent_C");
static_assert(sizeof(UBP_PointOfInterestComponent_C) == 0x000410, "Wrong size on UBP_PointOfInterestComponent_C");
static_assert(offsetof(UBP_PointOfInterestComponent_C, UberGraphFrame) == 0x000350, "Member 'UBP_PointOfInterestComponent_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_PointOfInterestComponent_C, CreateOwnMapEntityOnStart) == 0x000358, "Member 'UBP_PointOfInterestComponent_C::CreateOwnMapEntityOnStart' has a wrong offset!");
static_assert(offsetof(UBP_PointOfInterestComponent_C, InSameRoom) == 0x000359, "Member 'UBP_PointOfInterestComponent_C::InSameRoom' has a wrong offset!");
static_assert(offsetof(UBP_PointOfInterestComponent_C, MapEntityID) == 0x00035C, "Member 'UBP_PointOfInterestComponent_C::MapEntityID' has a wrong offset!");
static_assert(offsetof(UBP_PointOfInterestComponent_C, EntityType) == 0x000360, "Member 'UBP_PointOfInterestComponent_C::EntityType' has a wrong offset!");
static_assert(offsetof(UBP_PointOfInterestComponent_C, CAText) == 0x000368, "Member 'UBP_PointOfInterestComponent_C::CAText' has a wrong offset!");
static_assert(offsetof(UBP_PointOfInterestComponent_C, InformationLevel) == 0x000398, "Member 'UBP_PointOfInterestComponent_C::InformationLevel' has a wrong offset!");
static_assert(offsetof(UBP_PointOfInterestComponent_C, RequireTags) == 0x0003A0, "Member 'UBP_PointOfInterestComponent_C::RequireTags' has a wrong offset!");
static_assert(offsetof(UBP_PointOfInterestComponent_C, IgnoreTags) == 0x0003C0, "Member 'UBP_PointOfInterestComponent_C::IgnoreTags' has a wrong offset!");
static_assert(offsetof(UBP_PointOfInterestComponent_C, TeammateStillInArea) == 0x0003E0, "Member 'UBP_PointOfInterestComponent_C::TeammateStillInArea' has a wrong offset!");
static_assert(offsetof(UBP_PointOfInterestComponent_C, ActorsToUpdate) == 0x0003E8, "Member 'UBP_PointOfInterestComponent_C::ActorsToUpdate' has a wrong offset!");
static_assert(offsetof(UBP_PointOfInterestComponent_C, ActorsUpdated) == 0x0003F8, "Member 'UBP_PointOfInterestComponent_C::ActorsUpdated' has a wrong offset!");

}

