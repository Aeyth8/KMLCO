#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_NPC_Character

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Keaton_structs.hpp"
#include "Keaton_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_NPC_Character.BP_NPC_Character_C
// 0x0070 (0x2070 - 0x2000)
class ABP_NPC_Character_C : public ACACharacter_NPC
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x2000(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBPWC_NPC_AlertWidget_C*                BPWC_NPC_AlertWidget;                              // 0x2008(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_GravityStatusComponent_C*           BP_GravityStatusComponent;                         // 0x2010(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnTeleport;                                        // 0x2018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, BlueprintAssignable, BlueprintCallable)
	class FName                                   OnStopIdleLinesNPC;                                // 0x2028(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          MayMakeTempUnispectable;                           // 0x2034(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2035[0x3];                                     // 0x2035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   OnKillNPCTarget_Dialogue_Trigger;                  // 0x2038(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   OnDownedTarget;                                    // 0x2044(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   OnVaultBreachStarted;                              // 0x2050(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   OnVaultAttackBreachingDevice;                      // 0x205C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           Timer;                                             // 0x2068(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void OnTeleport__DelegateSignature(float TeleportDuration, bool In);
	void ExecuteUbergraph_BP_NPC_Character(int32 EntryPoint);
	void OnDeath(class ACACharacter* Character, const struct FGameplayEffectSpec& Death_gameplay_effect_spec, float Damage_magnitude, const struct FNetworkedHit& Networked_hit, const class AActor* Killer);
	void VaultStateChanged(ECAMissionManagerVaultState New_vault_state);
	void TargetingBreachingTool();
	void BndEvt__BP_NPC_Character_m_ability_system_component_K2Node_ComponentBoundEvent_4_OnHitDelivered__DelegateSignature(const struct FCADamageEffectInfo& Damage_effect_info);
	void CancelTemporarilyUninspectable();
	void MakeTemporarilyUninspectable(float Duration);
	void CheckWeaponVisibility();
	void SetScanIntensity(float Amount);
	void EnterCombat(bool Target_is_npc, class AActor* Target_actor);
	void OnPoolStatusChanged(bool Is_in_pool);
	void BndEvt__BP_NPC_Grunt_m_hit_reaction_component_K2Node_ComponentBoundEvent_0_HitRecievedSignature__DelegateSignature(const struct FNetworkedHit& Hit);
	void ReceiveBeginPlay();
	void BndEvt__BP_GravityStatusComponent_K2Node_ComponentBoundEvent_0_GameplayStateChanged__DelegateSignature();
	void BndEvt__BP_GravityStatusComponent_K2Node_ComponentBoundEvent_1_GameplayStateChanged__DelegateSignature();
	void OnTeleportOutBegin(float Teleport_duration);
	void OnTeleportInBegin(float Teleport_duration);
	void PlayHitReceivedVox(float HitBaseDamage, EBodyPart HitBodyPart, ECAWeaponClass HitWeaponClass);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_NPC_Character_C">();
	}
	static class ABP_NPC_Character_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_NPC_Character_C>();
	}
};
static_assert(alignof(ABP_NPC_Character_C) == 0x000010, "Wrong alignment on ABP_NPC_Character_C");
static_assert(sizeof(ABP_NPC_Character_C) == 0x002070, "Wrong size on ABP_NPC_Character_C");
static_assert(offsetof(ABP_NPC_Character_C, UberGraphFrame) == 0x002000, "Member 'ABP_NPC_Character_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_NPC_Character_C, BPWC_NPC_AlertWidget) == 0x002008, "Member 'ABP_NPC_Character_C::BPWC_NPC_AlertWidget' has a wrong offset!");
static_assert(offsetof(ABP_NPC_Character_C, BP_GravityStatusComponent) == 0x002010, "Member 'ABP_NPC_Character_C::BP_GravityStatusComponent' has a wrong offset!");
static_assert(offsetof(ABP_NPC_Character_C, OnTeleport) == 0x002018, "Member 'ABP_NPC_Character_C::OnTeleport' has a wrong offset!");
static_assert(offsetof(ABP_NPC_Character_C, OnStopIdleLinesNPC) == 0x002028, "Member 'ABP_NPC_Character_C::OnStopIdleLinesNPC' has a wrong offset!");
static_assert(offsetof(ABP_NPC_Character_C, MayMakeTempUnispectable) == 0x002034, "Member 'ABP_NPC_Character_C::MayMakeTempUnispectable' has a wrong offset!");
static_assert(offsetof(ABP_NPC_Character_C, OnKillNPCTarget_Dialogue_Trigger) == 0x002038, "Member 'ABP_NPC_Character_C::OnKillNPCTarget_Dialogue_Trigger' has a wrong offset!");
static_assert(offsetof(ABP_NPC_Character_C, OnDownedTarget) == 0x002044, "Member 'ABP_NPC_Character_C::OnDownedTarget' has a wrong offset!");
static_assert(offsetof(ABP_NPC_Character_C, OnVaultBreachStarted) == 0x002050, "Member 'ABP_NPC_Character_C::OnVaultBreachStarted' has a wrong offset!");
static_assert(offsetof(ABP_NPC_Character_C, OnVaultAttackBreachingDevice) == 0x00205C, "Member 'ABP_NPC_Character_C::OnVaultAttackBreachingDevice' has a wrong offset!");
static_assert(offsetof(ABP_NPC_Character_C, Timer) == 0x002068, "Member 'ABP_NPC_Character_C::Timer' has a wrong offset!");

}

