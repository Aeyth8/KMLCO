#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_DragQueen_Untouchable_Shield

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "Keaton_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_DragQueen_Untouchable_Shield.BP_DragQueen_Untouchable_Shield_C
// 0x0070 (0x03B0 - 0x0340)
class ABP_DragQueen_Untouchable_Shield_C final : public ACAActorWithAbilities
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0340(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCapsuleComponent*                      ShieldCapsule;                                     // 0x0348(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0350(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCADragQueenExplosionComponent*         ExplosionComponent;                                // 0x0358(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACACharacter*                           Character;                                         // 0x0360(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Actors_to_Ignore_In_Sweep;                         // 0x0368(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	float                                         Default_Shield_HalfMinusHeight;                    // 0x0378(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Default_Shield_Radius;                             // 0x037C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  Pushed_By_Actors_with_Tags;                        // 0x0380(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         MinimumShieldRadius;                               // 0x03A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Shield_Push_Multiplier;                            // 0x03A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ActivationDelay;                                   // 0x03A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_DragQueen_Untouchable_Shield(int32 EntryPoint);
	void ReceiveTick(float DeltaSeconds);
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void Hit_Recieved(const struct FCADamageEffectInfo& Damage_effect_info);
	void ReceiveBeginPlay();
	void ReceiveActorBeginOverlap(class AActor* OtherActor);
	void OnFinish_6CDE9FE541C347ABBD0C47A44B168B04();
	void OnFinish_E072D22F4AE53D9FEE1C7D93CC036599();
	void Disable_Projectile_Explosion(class AActor* Projectile);
	void AdjustShieldSizeAndPositionBasedOnActorPenetration();
	void SetBalancingData();
	void SetupCapsule();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_DragQueen_Untouchable_Shield_C">();
	}
	static class ABP_DragQueen_Untouchable_Shield_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_DragQueen_Untouchable_Shield_C>();
	}
};
static_assert(alignof(ABP_DragQueen_Untouchable_Shield_C) == 0x000008, "Wrong alignment on ABP_DragQueen_Untouchable_Shield_C");
static_assert(sizeof(ABP_DragQueen_Untouchable_Shield_C) == 0x0003B0, "Wrong size on ABP_DragQueen_Untouchable_Shield_C");
static_assert(offsetof(ABP_DragQueen_Untouchable_Shield_C, UberGraphFrame) == 0x000340, "Member 'ABP_DragQueen_Untouchable_Shield_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_DragQueen_Untouchable_Shield_C, ShieldCapsule) == 0x000348, "Member 'ABP_DragQueen_Untouchable_Shield_C::ShieldCapsule' has a wrong offset!");
static_assert(offsetof(ABP_DragQueen_Untouchable_Shield_C, DefaultSceneRoot) == 0x000350, "Member 'ABP_DragQueen_Untouchable_Shield_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_DragQueen_Untouchable_Shield_C, ExplosionComponent) == 0x000358, "Member 'ABP_DragQueen_Untouchable_Shield_C::ExplosionComponent' has a wrong offset!");
static_assert(offsetof(ABP_DragQueen_Untouchable_Shield_C, Character) == 0x000360, "Member 'ABP_DragQueen_Untouchable_Shield_C::Character' has a wrong offset!");
static_assert(offsetof(ABP_DragQueen_Untouchable_Shield_C, Actors_to_Ignore_In_Sweep) == 0x000368, "Member 'ABP_DragQueen_Untouchable_Shield_C::Actors_to_Ignore_In_Sweep' has a wrong offset!");
static_assert(offsetof(ABP_DragQueen_Untouchable_Shield_C, Default_Shield_HalfMinusHeight) == 0x000378, "Member 'ABP_DragQueen_Untouchable_Shield_C::Default_Shield_HalfMinusHeight' has a wrong offset!");
static_assert(offsetof(ABP_DragQueen_Untouchable_Shield_C, Default_Shield_Radius) == 0x00037C, "Member 'ABP_DragQueen_Untouchable_Shield_C::Default_Shield_Radius' has a wrong offset!");
static_assert(offsetof(ABP_DragQueen_Untouchable_Shield_C, Pushed_By_Actors_with_Tags) == 0x000380, "Member 'ABP_DragQueen_Untouchable_Shield_C::Pushed_By_Actors_with_Tags' has a wrong offset!");
static_assert(offsetof(ABP_DragQueen_Untouchable_Shield_C, MinimumShieldRadius) == 0x0003A0, "Member 'ABP_DragQueen_Untouchable_Shield_C::MinimumShieldRadius' has a wrong offset!");
static_assert(offsetof(ABP_DragQueen_Untouchable_Shield_C, Shield_Push_Multiplier) == 0x0003A4, "Member 'ABP_DragQueen_Untouchable_Shield_C::Shield_Push_Multiplier' has a wrong offset!");
static_assert(offsetof(ABP_DragQueen_Untouchable_Shield_C, ActivationDelay) == 0x0003A8, "Member 'ABP_DragQueen_Untouchable_Shield_C::ActivationDelay' has a wrong offset!");

}

