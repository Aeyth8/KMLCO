#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ExplosionExplosiveCanister

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "PhysicsCore_structs.hpp"
#include "Engine_structs.hpp"
#include "Keaton_structs.hpp"


namespace SDK::Params
{

// Function BP_ExplosionExplosiveCanister.BP_ExplosionExplosiveCanister_C.ExecuteUbergraph_BP_ExplosionExplosiveCanister
// 0x0180 (0x0180 - 0x0000)
struct BP_ExplosionExplosiveCanister_C_ExecuteUbergraph_BP_ExplosionExplosiveCanister final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              K2Node_CustomEvent_SurfaceType;                    // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_CustomEvent_HitResult;                      // 0x000C(0x0090)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FCATraceAuxiliaryResult                K2Node_CustomEvent_AuxiliaryResult;                // 0x009C(0x000C)(NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_epicenter;                            // 0x00AC(0x000C)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_radius;                               // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_attached_to_surface;                  // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BD[0x3];                                       // 0x00BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Event_surface_normal;                       // 0x00C0(0x000C)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_incoming_direction;                   // 0x00CC(0x000C)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_friendly;                             // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D9[0x3];                                       // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_duration;                             // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromZ_ReturnValue;                 // 0x00E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x00F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0100(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10C[0x4];                                      // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_SpawnCADecalAtLocation_out_material_instance; // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        CallFunc_ZeroGCascadeSwitch_ReturnValue;           // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0120(0x0010)(ConstParm, ReferenceParm)
	TArray<struct FCAEmitterEnabledState>         Temp_struct_Variable;                              // 0x0130(0x0010)(ConstParm, ReferenceParm)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0140(0x0010)(ConstParm, ReferenceParm)
	class UParticleSystemComponent*               CallFunc_SpawnCACascadeSystemAtLocation_ReturnValue; // 0x0150(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UPrimitiveComponent*>            CallFunc_SphereOverlapComponents_OutComponents;    // 0x0158(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_SphereOverlapComponents_ReturnValue;      // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_169[0x3];                                      // 0x0169(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_Array_Get_Item;                           // 0x0170(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ExplosionExplosiveCanister_C_ExecuteUbergraph_BP_ExplosionExplosiveCanister) == 0x000008, "Wrong alignment on BP_ExplosionExplosiveCanister_C_ExecuteUbergraph_BP_ExplosionExplosiveCanister");
static_assert(sizeof(BP_ExplosionExplosiveCanister_C_ExecuteUbergraph_BP_ExplosionExplosiveCanister) == 0x000180, "Wrong size on BP_ExplosionExplosiveCanister_C_ExecuteUbergraph_BP_ExplosionExplosiveCanister");
static_assert(offsetof(BP_ExplosionExplosiveCanister_C_ExecuteUbergraph_BP_ExplosionExplosiveCanister, EntryPoint) == 0x000000, "Member 'BP_ExplosionExplosiveCanister_C_ExecuteUbergraph_BP_ExplosionExplosiveCanister::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_ExplosionExplosiveCanister_C_ExecuteUbergraph_BP_ExplosionExplosiveCanister, Temp_int_Variable) == 0x000004, "Member 'BP_ExplosionExplosiveCanister_C_ExecuteUbergraph_BP_ExplosionExplosiveCanister::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_ExplosionExplosiveCanister_C_ExecuteUbergraph_BP_ExplosionExplosiveCanister, K2Node_CustomEvent_SurfaceType) == 0x000008, "Member 'BP_ExplosionExplosiveCanister_C_ExecuteUbergraph_BP_ExplosionExplosiveCanister::K2Node_CustomEvent_SurfaceType' has a wrong offset!");
static_assert(offsetof(BP_ExplosionExplosiveCanister_C_ExecuteUbergraph_BP_ExplosionExplosiveCanister, K2Node_CustomEvent_HitResult) == 0x00000C, "Member 'BP_ExplosionExplosiveCanister_C_ExecuteUbergraph_BP_ExplosionExplosiveCanister::K2Node_CustomEvent_HitResult' has a wrong offset!");
static_assert(offsetof(BP_ExplosionExplosiveCanister_C_ExecuteUbergraph_BP_ExplosionExplosiveCanister, K2Node_CustomEvent_AuxiliaryResult) == 0x00009C, "Member 'BP_ExplosionExplosiveCanister_C_ExecuteUbergraph_BP_ExplosionExplosiveCanister::K2Node_CustomEvent_AuxiliaryResult' has a wrong offset!");
static_assert(offsetof(BP_ExplosionExplosiveCanister_C_ExecuteUbergraph_BP_ExplosionExplosiveCanister, CallFunc_Add_IntInt_ReturnValue) == 0x0000A8, "Member 'BP_ExplosionExplosiveCanister_C_ExecuteUbergraph_BP_ExplosionExplosiveCanister::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExplosionExplosiveCanister_C_ExecuteUbergraph_BP_ExplosionExplosiveCanister, K2Node_Event_epicenter) == 0x0000AC, "Member 'BP_ExplosionExplosiveCanister_C_ExecuteUbergraph_BP_ExplosionExplosiveCanister::K2Node_Event_epicenter' has a wrong offset!");
static_assert(offsetof(BP_ExplosionExplosiveCanister_C_ExecuteUbergraph_BP_ExplosionExplosiveCanister, K2Node_Event_radius) == 0x0000B8, "Member 'BP_ExplosionExplosiveCanister_C_ExecuteUbergraph_BP_ExplosionExplosiveCanister::K2Node_Event_radius' has a wrong offset!");
static_assert(offsetof(BP_ExplosionExplosiveCanister_C_ExecuteUbergraph_BP_ExplosionExplosiveCanister, K2Node_Event_attached_to_surface) == 0x0000BC, "Member 'BP_ExplosionExplosiveCanister_C_ExecuteUbergraph_BP_ExplosionExplosiveCanister::K2Node_Event_attached_to_surface' has a wrong offset!");
static_assert(offsetof(BP_ExplosionExplosiveCanister_C_ExecuteUbergraph_BP_ExplosionExplosiveCanister, K2Node_Event_surface_normal) == 0x0000C0, "Member 'BP_ExplosionExplosiveCanister_C_ExecuteUbergraph_BP_ExplosionExplosiveCanister::K2Node_Event_surface_normal' has a wrong offset!");
static_assert(offsetof(BP_ExplosionExplosiveCanister_C_ExecuteUbergraph_BP_ExplosionExplosiveCanister, K2Node_Event_incoming_direction) == 0x0000CC, "Member 'BP_ExplosionExplosiveCanister_C_ExecuteUbergraph_BP_ExplosionExplosiveCanister::K2Node_Event_incoming_direction' has a wrong offset!");
static_assert(offsetof(BP_ExplosionExplosiveCanister_C_ExecuteUbergraph_BP_ExplosionExplosiveCanister, K2Node_Event_friendly) == 0x0000D8, "Member 'BP_ExplosionExplosiveCanister_C_ExecuteUbergraph_BP_ExplosionExplosiveCanister::K2Node_Event_friendly' has a wrong offset!");
static_assert(offsetof(BP_ExplosionExplosiveCanister_C_ExecuteUbergraph_BP_ExplosionExplosiveCanister, K2Node_Event_duration) == 0x0000DC, "Member 'BP_ExplosionExplosiveCanister_C_ExecuteUbergraph_BP_ExplosionExplosiveCanister::K2Node_Event_duration' has a wrong offset!");
static_assert(offsetof(BP_ExplosionExplosiveCanister_C_ExecuteUbergraph_BP_ExplosionExplosiveCanister, CallFunc_RandomFloatInRange_ReturnValue) == 0x0000E0, "Member 'BP_ExplosionExplosiveCanister_C_ExecuteUbergraph_BP_ExplosionExplosiveCanister::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExplosionExplosiveCanister_C_ExecuteUbergraph_BP_ExplosionExplosiveCanister, CallFunc_MakeRotFromZ_ReturnValue) == 0x0000E4, "Member 'BP_ExplosionExplosiveCanister_C_ExecuteUbergraph_BP_ExplosionExplosiveCanister::CallFunc_MakeRotFromZ_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExplosionExplosiveCanister_C_ExecuteUbergraph_BP_ExplosionExplosiveCanister, CallFunc_MakeRotator_ReturnValue) == 0x0000F0, "Member 'BP_ExplosionExplosiveCanister_C_ExecuteUbergraph_BP_ExplosionExplosiveCanister::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExplosionExplosiveCanister_C_ExecuteUbergraph_BP_ExplosionExplosiveCanister, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000FC, "Member 'BP_ExplosionExplosiveCanister_C_ExecuteUbergraph_BP_ExplosionExplosiveCanister::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExplosionExplosiveCanister_C_ExecuteUbergraph_BP_ExplosionExplosiveCanister, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000100, "Member 'BP_ExplosionExplosiveCanister_C_ExecuteUbergraph_BP_ExplosionExplosiveCanister::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExplosionExplosiveCanister_C_ExecuteUbergraph_BP_ExplosionExplosiveCanister, CallFunc_SpawnCADecalAtLocation_out_material_instance) == 0x000110, "Member 'BP_ExplosionExplosiveCanister_C_ExecuteUbergraph_BP_ExplosionExplosiveCanister::CallFunc_SpawnCADecalAtLocation_out_material_instance' has a wrong offset!");
static_assert(offsetof(BP_ExplosionExplosiveCanister_C_ExecuteUbergraph_BP_ExplosionExplosiveCanister, CallFunc_ZeroGCascadeSwitch_ReturnValue) == 0x000118, "Member 'BP_ExplosionExplosiveCanister_C_ExecuteUbergraph_BP_ExplosionExplosiveCanister::CallFunc_ZeroGCascadeSwitch_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExplosionExplosiveCanister_C_ExecuteUbergraph_BP_ExplosionExplosiveCanister, Temp_object_Variable) == 0x000120, "Member 'BP_ExplosionExplosiveCanister_C_ExecuteUbergraph_BP_ExplosionExplosiveCanister::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_ExplosionExplosiveCanister_C_ExecuteUbergraph_BP_ExplosionExplosiveCanister, Temp_struct_Variable) == 0x000130, "Member 'BP_ExplosionExplosiveCanister_C_ExecuteUbergraph_BP_ExplosionExplosiveCanister::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_ExplosionExplosiveCanister_C_ExecuteUbergraph_BP_ExplosionExplosiveCanister, K2Node_MakeArray_Array) == 0x000140, "Member 'BP_ExplosionExplosiveCanister_C_ExecuteUbergraph_BP_ExplosionExplosiveCanister::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_ExplosionExplosiveCanister_C_ExecuteUbergraph_BP_ExplosionExplosiveCanister, CallFunc_SpawnCACascadeSystemAtLocation_ReturnValue) == 0x000150, "Member 'BP_ExplosionExplosiveCanister_C_ExecuteUbergraph_BP_ExplosionExplosiveCanister::CallFunc_SpawnCACascadeSystemAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExplosionExplosiveCanister_C_ExecuteUbergraph_BP_ExplosionExplosiveCanister, CallFunc_SphereOverlapComponents_OutComponents) == 0x000158, "Member 'BP_ExplosionExplosiveCanister_C_ExecuteUbergraph_BP_ExplosionExplosiveCanister::CallFunc_SphereOverlapComponents_OutComponents' has a wrong offset!");
static_assert(offsetof(BP_ExplosionExplosiveCanister_C_ExecuteUbergraph_BP_ExplosionExplosiveCanister, CallFunc_SphereOverlapComponents_ReturnValue) == 0x000168, "Member 'BP_ExplosionExplosiveCanister_C_ExecuteUbergraph_BP_ExplosionExplosiveCanister::CallFunc_SphereOverlapComponents_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExplosionExplosiveCanister_C_ExecuteUbergraph_BP_ExplosionExplosiveCanister, CallFunc_Array_Length_ReturnValue) == 0x00016C, "Member 'BP_ExplosionExplosiveCanister_C_ExecuteUbergraph_BP_ExplosionExplosiveCanister::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExplosionExplosiveCanister_C_ExecuteUbergraph_BP_ExplosionExplosiveCanister, CallFunc_Array_Get_Item) == 0x000170, "Member 'BP_ExplosionExplosiveCanister_C_ExecuteUbergraph_BP_ExplosionExplosiveCanister::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ExplosionExplosiveCanister_C_ExecuteUbergraph_BP_ExplosionExplosiveCanister, CallFunc_Less_IntInt_ReturnValue) == 0x000178, "Member 'BP_ExplosionExplosiveCanister_C_ExecuteUbergraph_BP_ExplosionExplosiveCanister::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_ExplosionExplosiveCanister.BP_ExplosionExplosiveCanister_C.GroundFireRayCasts
// 0x00A0 (0x00A0 - 0x0000)
struct BP_ExplosionExplosiveCanister_C_GroundFireRayCasts final
{
public:
	EPhysicalSurface                              SurfaceType;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             HitResult;                                         // 0x0004(0x0090)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FCATraceAuxiliaryResult                AuxiliaryResult;                                   // 0x0094(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(BP_ExplosionExplosiveCanister_C_GroundFireRayCasts) == 0x000004, "Wrong alignment on BP_ExplosionExplosiveCanister_C_GroundFireRayCasts");
static_assert(sizeof(BP_ExplosionExplosiveCanister_C_GroundFireRayCasts) == 0x0000A0, "Wrong size on BP_ExplosionExplosiveCanister_C_GroundFireRayCasts");
static_assert(offsetof(BP_ExplosionExplosiveCanister_C_GroundFireRayCasts, SurfaceType) == 0x000000, "Member 'BP_ExplosionExplosiveCanister_C_GroundFireRayCasts::SurfaceType' has a wrong offset!");
static_assert(offsetof(BP_ExplosionExplosiveCanister_C_GroundFireRayCasts, HitResult) == 0x000004, "Member 'BP_ExplosionExplosiveCanister_C_GroundFireRayCasts::HitResult' has a wrong offset!");
static_assert(offsetof(BP_ExplosionExplosiveCanister_C_GroundFireRayCasts, AuxiliaryResult) == 0x000094, "Member 'BP_ExplosionExplosiveCanister_C_GroundFireRayCasts::AuxiliaryResult' has a wrong offset!");

// Function BP_ExplosionExplosiveCanister.BP_ExplosionExplosiveCanister_C.OnTrigger
// 0x0034 (0x0034 - 0x0000)
struct BP_ExplosionExplosiveCanister_C_OnTrigger final
{
public:
	struct FVector                                Epicenter;                                         // 0x0000(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Radius;                                            // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Attached_to_surface;                               // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Surface_normal;                                    // 0x0014(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Incoming_direction;                                // 0x0020(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Friendly;                                          // 0x002C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Duration;                                          // 0x0030(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ExplosionExplosiveCanister_C_OnTrigger) == 0x000004, "Wrong alignment on BP_ExplosionExplosiveCanister_C_OnTrigger");
static_assert(sizeof(BP_ExplosionExplosiveCanister_C_OnTrigger) == 0x000034, "Wrong size on BP_ExplosionExplosiveCanister_C_OnTrigger");
static_assert(offsetof(BP_ExplosionExplosiveCanister_C_OnTrigger, Epicenter) == 0x000000, "Member 'BP_ExplosionExplosiveCanister_C_OnTrigger::Epicenter' has a wrong offset!");
static_assert(offsetof(BP_ExplosionExplosiveCanister_C_OnTrigger, Radius) == 0x00000C, "Member 'BP_ExplosionExplosiveCanister_C_OnTrigger::Radius' has a wrong offset!");
static_assert(offsetof(BP_ExplosionExplosiveCanister_C_OnTrigger, Attached_to_surface) == 0x000010, "Member 'BP_ExplosionExplosiveCanister_C_OnTrigger::Attached_to_surface' has a wrong offset!");
static_assert(offsetof(BP_ExplosionExplosiveCanister_C_OnTrigger, Surface_normal) == 0x000014, "Member 'BP_ExplosionExplosiveCanister_C_OnTrigger::Surface_normal' has a wrong offset!");
static_assert(offsetof(BP_ExplosionExplosiveCanister_C_OnTrigger, Incoming_direction) == 0x000020, "Member 'BP_ExplosionExplosiveCanister_C_OnTrigger::Incoming_direction' has a wrong offset!");
static_assert(offsetof(BP_ExplosionExplosiveCanister_C_OnTrigger, Friendly) == 0x00002C, "Member 'BP_ExplosionExplosiveCanister_C_OnTrigger::Friendly' has a wrong offset!");
static_assert(offsetof(BP_ExplosionExplosiveCanister_C_OnTrigger, Duration) == 0x000030, "Member 'BP_ExplosionExplosiveCanister_C_OnTrigger::Duration' has a wrong offset!");

}

