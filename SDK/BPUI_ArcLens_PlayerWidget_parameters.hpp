#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPUI_ArcLens_PlayerWidget

#include "Basic.hpp"

#include "S_UI_SegBarColours_structs.hpp"
#include "Keaton_structs.hpp"
#include "UMG_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BPUI_ArcLens_PlayerWidget.BPUI_ArcLens_PlayerWidget_C.ExecuteUbergraph_BPUI_ArcLens_PlayerWidget
// 0x00D8 (0x00D8 - 0x0000)
struct BPUI_ArcLens_PlayerWidget_C_ExecuteUbergraph_BPUI_ArcLens_PlayerWidget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_armor;                                // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_old_armor;                            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_health;                               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_old_health;                           // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_emoji_scale;                          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_health_scale;                         // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x001C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHealthState                                  K2Node_Event_health_state;                         // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_26[0x2];                                       // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UBPUI_HUD_Mk5_SegBar_C*                 K2Node_DynamicCast_AsBPUI_HUD_Mk_5_Seg_Bar;        // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_UI_SegBarColours                    K2Node_MakeStruct_S_UI_SegBarColours;              // 0x0034(0x0040)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBPUI_HUD_Mk5_SegBar_C*                 K2Node_DynamicCast_AsBPUI_HUD_Mk_5_Seg_Bar_1;      // 0x0078(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_UI_SegBarColours                    K2Node_MakeStruct_S_UI_SegBarColours_1;            // 0x0084(0x0040)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue;           // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              CallFunc_GetVisibility_ReturnValue;                // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue_1;         // 0x00D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPUI_ArcLens_PlayerWidget_C_ExecuteUbergraph_BPUI_ArcLens_PlayerWidget) == 0x000008, "Wrong alignment on BPUI_ArcLens_PlayerWidget_C_ExecuteUbergraph_BPUI_ArcLens_PlayerWidget");
static_assert(sizeof(BPUI_ArcLens_PlayerWidget_C_ExecuteUbergraph_BPUI_ArcLens_PlayerWidget) == 0x0000D8, "Wrong size on BPUI_ArcLens_PlayerWidget_C_ExecuteUbergraph_BPUI_ArcLens_PlayerWidget");
static_assert(offsetof(BPUI_ArcLens_PlayerWidget_C_ExecuteUbergraph_BPUI_ArcLens_PlayerWidget, EntryPoint) == 0x000000, "Member 'BPUI_ArcLens_PlayerWidget_C_ExecuteUbergraph_BPUI_ArcLens_PlayerWidget::EntryPoint' has a wrong offset!");
static_assert(offsetof(BPUI_ArcLens_PlayerWidget_C_ExecuteUbergraph_BPUI_ArcLens_PlayerWidget, K2Node_Event_armor) == 0x000004, "Member 'BPUI_ArcLens_PlayerWidget_C_ExecuteUbergraph_BPUI_ArcLens_PlayerWidget::K2Node_Event_armor' has a wrong offset!");
static_assert(offsetof(BPUI_ArcLens_PlayerWidget_C_ExecuteUbergraph_BPUI_ArcLens_PlayerWidget, K2Node_Event_old_armor) == 0x000008, "Member 'BPUI_ArcLens_PlayerWidget_C_ExecuteUbergraph_BPUI_ArcLens_PlayerWidget::K2Node_Event_old_armor' has a wrong offset!");
static_assert(offsetof(BPUI_ArcLens_PlayerWidget_C_ExecuteUbergraph_BPUI_ArcLens_PlayerWidget, K2Node_Event_health) == 0x00000C, "Member 'BPUI_ArcLens_PlayerWidget_C_ExecuteUbergraph_BPUI_ArcLens_PlayerWidget::K2Node_Event_health' has a wrong offset!");
static_assert(offsetof(BPUI_ArcLens_PlayerWidget_C_ExecuteUbergraph_BPUI_ArcLens_PlayerWidget, K2Node_Event_old_health) == 0x000010, "Member 'BPUI_ArcLens_PlayerWidget_C_ExecuteUbergraph_BPUI_ArcLens_PlayerWidget::K2Node_Event_old_health' has a wrong offset!");
static_assert(offsetof(BPUI_ArcLens_PlayerWidget_C_ExecuteUbergraph_BPUI_ArcLens_PlayerWidget, K2Node_Event_emoji_scale) == 0x000014, "Member 'BPUI_ArcLens_PlayerWidget_C_ExecuteUbergraph_BPUI_ArcLens_PlayerWidget::K2Node_Event_emoji_scale' has a wrong offset!");
static_assert(offsetof(BPUI_ArcLens_PlayerWidget_C_ExecuteUbergraph_BPUI_ArcLens_PlayerWidget, K2Node_Event_health_scale) == 0x000018, "Member 'BPUI_ArcLens_PlayerWidget_C_ExecuteUbergraph_BPUI_ArcLens_PlayerWidget::K2Node_Event_health_scale' has a wrong offset!");
static_assert(offsetof(BPUI_ArcLens_PlayerWidget_C_ExecuteUbergraph_BPUI_ArcLens_PlayerWidget, CallFunc_MakeVector2D_ReturnValue) == 0x00001C, "Member 'BPUI_ArcLens_PlayerWidget_C_ExecuteUbergraph_BPUI_ArcLens_PlayerWidget::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPUI_ArcLens_PlayerWidget_C_ExecuteUbergraph_BPUI_ArcLens_PlayerWidget, K2Node_Event_health_state) == 0x000024, "Member 'BPUI_ArcLens_PlayerWidget_C_ExecuteUbergraph_BPUI_ArcLens_PlayerWidget::K2Node_Event_health_state' has a wrong offset!");
static_assert(offsetof(BPUI_ArcLens_PlayerWidget_C_ExecuteUbergraph_BPUI_ArcLens_PlayerWidget, K2Node_SwitchEnum_CmpSuccess) == 0x000025, "Member 'BPUI_ArcLens_PlayerWidget_C_ExecuteUbergraph_BPUI_ArcLens_PlayerWidget::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BPUI_ArcLens_PlayerWidget_C_ExecuteUbergraph_BPUI_ArcLens_PlayerWidget, K2Node_DynamicCast_AsBPUI_HUD_Mk_5_Seg_Bar) == 0x000028, "Member 'BPUI_ArcLens_PlayerWidget_C_ExecuteUbergraph_BPUI_ArcLens_PlayerWidget::K2Node_DynamicCast_AsBPUI_HUD_Mk_5_Seg_Bar' has a wrong offset!");
static_assert(offsetof(BPUI_ArcLens_PlayerWidget_C_ExecuteUbergraph_BPUI_ArcLens_PlayerWidget, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BPUI_ArcLens_PlayerWidget_C_ExecuteUbergraph_BPUI_ArcLens_PlayerWidget::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPUI_ArcLens_PlayerWidget_C_ExecuteUbergraph_BPUI_ArcLens_PlayerWidget, K2Node_MakeStruct_S_UI_SegBarColours) == 0x000034, "Member 'BPUI_ArcLens_PlayerWidget_C_ExecuteUbergraph_BPUI_ArcLens_PlayerWidget::K2Node_MakeStruct_S_UI_SegBarColours' has a wrong offset!");
static_assert(offsetof(BPUI_ArcLens_PlayerWidget_C_ExecuteUbergraph_BPUI_ArcLens_PlayerWidget, K2Node_DynamicCast_AsBPUI_HUD_Mk_5_Seg_Bar_1) == 0x000078, "Member 'BPUI_ArcLens_PlayerWidget_C_ExecuteUbergraph_BPUI_ArcLens_PlayerWidget::K2Node_DynamicCast_AsBPUI_HUD_Mk_5_Seg_Bar_1' has a wrong offset!");
static_assert(offsetof(BPUI_ArcLens_PlayerWidget_C_ExecuteUbergraph_BPUI_ArcLens_PlayerWidget, K2Node_DynamicCast_bSuccess_1) == 0x000080, "Member 'BPUI_ArcLens_PlayerWidget_C_ExecuteUbergraph_BPUI_ArcLens_PlayerWidget::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BPUI_ArcLens_PlayerWidget_C_ExecuteUbergraph_BPUI_ArcLens_PlayerWidget, K2Node_MakeStruct_S_UI_SegBarColours_1) == 0x000084, "Member 'BPUI_ArcLens_PlayerWidget_C_ExecuteUbergraph_BPUI_ArcLens_PlayerWidget::K2Node_MakeStruct_S_UI_SegBarColours_1' has a wrong offset!");
static_assert(offsetof(BPUI_ArcLens_PlayerWidget_C_ExecuteUbergraph_BPUI_ArcLens_PlayerWidget, CallFunc_PlayAnimation_ReturnValue) == 0x0000C8, "Member 'BPUI_ArcLens_PlayerWidget_C_ExecuteUbergraph_BPUI_ArcLens_PlayerWidget::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPUI_ArcLens_PlayerWidget_C_ExecuteUbergraph_BPUI_ArcLens_PlayerWidget, CallFunc_IsAnimationPlaying_ReturnValue) == 0x0000D0, "Member 'BPUI_ArcLens_PlayerWidget_C_ExecuteUbergraph_BPUI_ArcLens_PlayerWidget::CallFunc_IsAnimationPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPUI_ArcLens_PlayerWidget_C_ExecuteUbergraph_BPUI_ArcLens_PlayerWidget, CallFunc_GetVisibility_ReturnValue) == 0x0000D1, "Member 'BPUI_ArcLens_PlayerWidget_C_ExecuteUbergraph_BPUI_ArcLens_PlayerWidget::CallFunc_GetVisibility_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPUI_ArcLens_PlayerWidget_C_ExecuteUbergraph_BPUI_ArcLens_PlayerWidget, CallFunc_IsAnimationPlaying_ReturnValue_1) == 0x0000D2, "Member 'BPUI_ArcLens_PlayerWidget_C_ExecuteUbergraph_BPUI_ArcLens_PlayerWidget::CallFunc_IsAnimationPlaying_ReturnValue_1' has a wrong offset!");

// Function BPUI_ArcLens_PlayerWidget.BPUI_ArcLens_PlayerWidget_C.OnPlayerHealthStateChanged
// 0x0001 (0x0001 - 0x0000)
struct BPUI_ArcLens_PlayerWidget_C_OnPlayerHealthStateChanged final
{
public:
	EHealthState                                  Health_state;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPUI_ArcLens_PlayerWidget_C_OnPlayerHealthStateChanged) == 0x000001, "Wrong alignment on BPUI_ArcLens_PlayerWidget_C_OnPlayerHealthStateChanged");
static_assert(sizeof(BPUI_ArcLens_PlayerWidget_C_OnPlayerHealthStateChanged) == 0x000001, "Wrong size on BPUI_ArcLens_PlayerWidget_C_OnPlayerHealthStateChanged");
static_assert(offsetof(BPUI_ArcLens_PlayerWidget_C_OnPlayerHealthStateChanged, Health_state) == 0x000000, "Member 'BPUI_ArcLens_PlayerWidget_C_OnPlayerHealthStateChanged::Health_state' has a wrong offset!");

// Function BPUI_ArcLens_PlayerWidget.BPUI_ArcLens_PlayerWidget_C.UpdateHealthScale
// 0x0004 (0x0004 - 0x0000)
struct BPUI_ArcLens_PlayerWidget_C_UpdateHealthScale final
{
public:
	float                                         Health_scale;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPUI_ArcLens_PlayerWidget_C_UpdateHealthScale) == 0x000004, "Wrong alignment on BPUI_ArcLens_PlayerWidget_C_UpdateHealthScale");
static_assert(sizeof(BPUI_ArcLens_PlayerWidget_C_UpdateHealthScale) == 0x000004, "Wrong size on BPUI_ArcLens_PlayerWidget_C_UpdateHealthScale");
static_assert(offsetof(BPUI_ArcLens_PlayerWidget_C_UpdateHealthScale, Health_scale) == 0x000000, "Member 'BPUI_ArcLens_PlayerWidget_C_UpdateHealthScale::Health_scale' has a wrong offset!");

// Function BPUI_ArcLens_PlayerWidget.BPUI_ArcLens_PlayerWidget_C.UpdateEmojiScale
// 0x0004 (0x0004 - 0x0000)
struct BPUI_ArcLens_PlayerWidget_C_UpdateEmojiScale final
{
public:
	float                                         Emoji_scale;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPUI_ArcLens_PlayerWidget_C_UpdateEmojiScale) == 0x000004, "Wrong alignment on BPUI_ArcLens_PlayerWidget_C_UpdateEmojiScale");
static_assert(sizeof(BPUI_ArcLens_PlayerWidget_C_UpdateEmojiScale) == 0x000004, "Wrong size on BPUI_ArcLens_PlayerWidget_C_UpdateEmojiScale");
static_assert(offsetof(BPUI_ArcLens_PlayerWidget_C_UpdateEmojiScale, Emoji_scale) == 0x000000, "Member 'BPUI_ArcLens_PlayerWidget_C_UpdateEmojiScale::Emoji_scale' has a wrong offset!");

// Function BPUI_ArcLens_PlayerWidget.BPUI_ArcLens_PlayerWidget_C.OnHealthChanged
// 0x0008 (0x0008 - 0x0000)
struct BPUI_ArcLens_PlayerWidget_C_OnHealthChanged final
{
public:
	float                                         Health;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Old_health;                                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPUI_ArcLens_PlayerWidget_C_OnHealthChanged) == 0x000004, "Wrong alignment on BPUI_ArcLens_PlayerWidget_C_OnHealthChanged");
static_assert(sizeof(BPUI_ArcLens_PlayerWidget_C_OnHealthChanged) == 0x000008, "Wrong size on BPUI_ArcLens_PlayerWidget_C_OnHealthChanged");
static_assert(offsetof(BPUI_ArcLens_PlayerWidget_C_OnHealthChanged, Health) == 0x000000, "Member 'BPUI_ArcLens_PlayerWidget_C_OnHealthChanged::Health' has a wrong offset!");
static_assert(offsetof(BPUI_ArcLens_PlayerWidget_C_OnHealthChanged, Old_health) == 0x000004, "Member 'BPUI_ArcLens_PlayerWidget_C_OnHealthChanged::Old_health' has a wrong offset!");

// Function BPUI_ArcLens_PlayerWidget.BPUI_ArcLens_PlayerWidget_C.OnArmorChanged
// 0x0008 (0x0008 - 0x0000)
struct BPUI_ArcLens_PlayerWidget_C_OnArmorChanged final
{
public:
	float                                         Armor;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Old_armor;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPUI_ArcLens_PlayerWidget_C_OnArmorChanged) == 0x000004, "Wrong alignment on BPUI_ArcLens_PlayerWidget_C_OnArmorChanged");
static_assert(sizeof(BPUI_ArcLens_PlayerWidget_C_OnArmorChanged) == 0x000008, "Wrong size on BPUI_ArcLens_PlayerWidget_C_OnArmorChanged");
static_assert(offsetof(BPUI_ArcLens_PlayerWidget_C_OnArmorChanged, Armor) == 0x000000, "Member 'BPUI_ArcLens_PlayerWidget_C_OnArmorChanged::Armor' has a wrong offset!");
static_assert(offsetof(BPUI_ArcLens_PlayerWidget_C_OnArmorChanged, Old_armor) == 0x000004, "Member 'BPUI_ArcLens_PlayerWidget_C_OnArmorChanged::Old_armor' has a wrong offset!");

}

