#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPFL_EquipmentUtilityLibrary

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function BPFL_EquipmentUtilityLibrary.BPFL_EquipmentUtilityLibrary_C.GetCountInPlayerInventory
// 0x0030 (0x0030 - 0x0000)
struct BPFL_EquipmentUtilityLibrary_C_GetCountInPlayerInventory final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCAInventoryItem*                       InventoryItemType;                                 // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Ammo_count;                                        // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACACharacter_MainPlayer*                K2Node_DynamicCast_AsCACharacter_Main_Player;      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetItemAmount_ReturnValue;                // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_EquipmentUtilityLibrary_C_GetCountInPlayerInventory) == 0x000008, "Wrong alignment on BPFL_EquipmentUtilityLibrary_C_GetCountInPlayerInventory");
static_assert(sizeof(BPFL_EquipmentUtilityLibrary_C_GetCountInPlayerInventory) == 0x000030, "Wrong size on BPFL_EquipmentUtilityLibrary_C_GetCountInPlayerInventory");
static_assert(offsetof(BPFL_EquipmentUtilityLibrary_C_GetCountInPlayerInventory, Actor) == 0x000000, "Member 'BPFL_EquipmentUtilityLibrary_C_GetCountInPlayerInventory::Actor' has a wrong offset!");
static_assert(offsetof(BPFL_EquipmentUtilityLibrary_C_GetCountInPlayerInventory, InventoryItemType) == 0x000008, "Member 'BPFL_EquipmentUtilityLibrary_C_GetCountInPlayerInventory::InventoryItemType' has a wrong offset!");
static_assert(offsetof(BPFL_EquipmentUtilityLibrary_C_GetCountInPlayerInventory, __WorldContext) == 0x000010, "Member 'BPFL_EquipmentUtilityLibrary_C_GetCountInPlayerInventory::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_EquipmentUtilityLibrary_C_GetCountInPlayerInventory, Ammo_count) == 0x000018, "Member 'BPFL_EquipmentUtilityLibrary_C_GetCountInPlayerInventory::Ammo_count' has a wrong offset!");
static_assert(offsetof(BPFL_EquipmentUtilityLibrary_C_GetCountInPlayerInventory, K2Node_DynamicCast_AsCACharacter_Main_Player) == 0x000020, "Member 'BPFL_EquipmentUtilityLibrary_C_GetCountInPlayerInventory::K2Node_DynamicCast_AsCACharacter_Main_Player' has a wrong offset!");
static_assert(offsetof(BPFL_EquipmentUtilityLibrary_C_GetCountInPlayerInventory, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BPFL_EquipmentUtilityLibrary_C_GetCountInPlayerInventory::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPFL_EquipmentUtilityLibrary_C_GetCountInPlayerInventory, CallFunc_GetItemAmount_ReturnValue) == 0x00002C, "Member 'BPFL_EquipmentUtilityLibrary_C_GetCountInPlayerInventory::CallFunc_GetItemAmount_ReturnValue' has a wrong offset!");

// Function BPFL_EquipmentUtilityLibrary.BPFL_EquipmentUtilityLibrary_C.GetCountInClipFaked
// 0x0028 (0x0028 - 0x0000)
struct BPFL_EquipmentUtilityLibrary_C_GetCountInClipFaked final
{
public:
	class AActor*                                 Attached_actor;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCAInventoryItem*                       Item;                                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Apparent_count;                                    // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCountInPlayerInventory_ammo_count;     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPFL_EquipmentUtilityLibrary_C_GetCountInClipFaked) == 0x000008, "Wrong alignment on BPFL_EquipmentUtilityLibrary_C_GetCountInClipFaked");
static_assert(sizeof(BPFL_EquipmentUtilityLibrary_C_GetCountInClipFaked) == 0x000028, "Wrong size on BPFL_EquipmentUtilityLibrary_C_GetCountInClipFaked");
static_assert(offsetof(BPFL_EquipmentUtilityLibrary_C_GetCountInClipFaked, Attached_actor) == 0x000000, "Member 'BPFL_EquipmentUtilityLibrary_C_GetCountInClipFaked::Attached_actor' has a wrong offset!");
static_assert(offsetof(BPFL_EquipmentUtilityLibrary_C_GetCountInClipFaked, Item) == 0x000008, "Member 'BPFL_EquipmentUtilityLibrary_C_GetCountInClipFaked::Item' has a wrong offset!");
static_assert(offsetof(BPFL_EquipmentUtilityLibrary_C_GetCountInClipFaked, __WorldContext) == 0x000010, "Member 'BPFL_EquipmentUtilityLibrary_C_GetCountInClipFaked::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_EquipmentUtilityLibrary_C_GetCountInClipFaked, Apparent_count) == 0x000018, "Member 'BPFL_EquipmentUtilityLibrary_C_GetCountInClipFaked::Apparent_count' has a wrong offset!");
static_assert(offsetof(BPFL_EquipmentUtilityLibrary_C_GetCountInClipFaked, CallFunc_GetCountInPlayerInventory_ammo_count) == 0x00001C, "Member 'BPFL_EquipmentUtilityLibrary_C_GetCountInClipFaked::CallFunc_GetCountInPlayerInventory_ammo_count' has a wrong offset!");
static_assert(offsetof(BPFL_EquipmentUtilityLibrary_C_GetCountInClipFaked, CallFunc_Greater_IntInt_ReturnValue) == 0x000020, "Member 'BPFL_EquipmentUtilityLibrary_C_GetCountInClipFaked::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BPFL_EquipmentUtilityLibrary.BPFL_EquipmentUtilityLibrary_C.GetCountOutOfClipFaked
// 0x0028 (0x0028 - 0x0000)
struct BPFL_EquipmentUtilityLibrary_C_GetCountOutOfClipFaked final
{
public:
	class AActor*                                 Attached_actor;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCAInventoryItem*                       Item;                                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Apparent_count;                                    // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCountInPlayerInventory_ammo_count;     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_EquipmentUtilityLibrary_C_GetCountOutOfClipFaked) == 0x000008, "Wrong alignment on BPFL_EquipmentUtilityLibrary_C_GetCountOutOfClipFaked");
static_assert(sizeof(BPFL_EquipmentUtilityLibrary_C_GetCountOutOfClipFaked) == 0x000028, "Wrong size on BPFL_EquipmentUtilityLibrary_C_GetCountOutOfClipFaked");
static_assert(offsetof(BPFL_EquipmentUtilityLibrary_C_GetCountOutOfClipFaked, Attached_actor) == 0x000000, "Member 'BPFL_EquipmentUtilityLibrary_C_GetCountOutOfClipFaked::Attached_actor' has a wrong offset!");
static_assert(offsetof(BPFL_EquipmentUtilityLibrary_C_GetCountOutOfClipFaked, Item) == 0x000008, "Member 'BPFL_EquipmentUtilityLibrary_C_GetCountOutOfClipFaked::Item' has a wrong offset!");
static_assert(offsetof(BPFL_EquipmentUtilityLibrary_C_GetCountOutOfClipFaked, __WorldContext) == 0x000010, "Member 'BPFL_EquipmentUtilityLibrary_C_GetCountOutOfClipFaked::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_EquipmentUtilityLibrary_C_GetCountOutOfClipFaked, Apparent_count) == 0x000018, "Member 'BPFL_EquipmentUtilityLibrary_C_GetCountOutOfClipFaked::Apparent_count' has a wrong offset!");
static_assert(offsetof(BPFL_EquipmentUtilityLibrary_C_GetCountOutOfClipFaked, CallFunc_GetCountInPlayerInventory_ammo_count) == 0x00001C, "Member 'BPFL_EquipmentUtilityLibrary_C_GetCountOutOfClipFaked::CallFunc_GetCountInPlayerInventory_ammo_count' has a wrong offset!");
static_assert(offsetof(BPFL_EquipmentUtilityLibrary_C_GetCountOutOfClipFaked, CallFunc_Subtract_IntInt_ReturnValue) == 0x000020, "Member 'BPFL_EquipmentUtilityLibrary_C_GetCountOutOfClipFaked::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EquipmentUtilityLibrary_C_GetCountOutOfClipFaked, CallFunc_Max_ReturnValue) == 0x000024, "Member 'BPFL_EquipmentUtilityLibrary_C_GetCountOutOfClipFaked::CallFunc_Max_ReturnValue' has a wrong offset!");

// Function BPFL_EquipmentUtilityLibrary.BPFL_EquipmentUtilityLibrary_C.BankRobber_ShouldUsePlacementAbility
// 0x0028 (0x0028 - 0x0000)
struct BPFL_EquipmentUtilityLibrary_C_BankRobber_ShouldUsePlacementAbility final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UsePlaceAbility;                                   // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCAGameplayEffectTableValueRow         CallFunc_GetDataTableRowFromName_OutRow;           // 0x0010(0x0010)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPFL_EquipmentUtilityLibrary_C_BankRobber_ShouldUsePlacementAbility) == 0x000008, "Wrong alignment on BPFL_EquipmentUtilityLibrary_C_BankRobber_ShouldUsePlacementAbility");
static_assert(sizeof(BPFL_EquipmentUtilityLibrary_C_BankRobber_ShouldUsePlacementAbility) == 0x000028, "Wrong size on BPFL_EquipmentUtilityLibrary_C_BankRobber_ShouldUsePlacementAbility");
static_assert(offsetof(BPFL_EquipmentUtilityLibrary_C_BankRobber_ShouldUsePlacementAbility, __WorldContext) == 0x000000, "Member 'BPFL_EquipmentUtilityLibrary_C_BankRobber_ShouldUsePlacementAbility::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_EquipmentUtilityLibrary_C_BankRobber_ShouldUsePlacementAbility, UsePlaceAbility) == 0x000008, "Member 'BPFL_EquipmentUtilityLibrary_C_BankRobber_ShouldUsePlacementAbility::UsePlaceAbility' has a wrong offset!");
static_assert(offsetof(BPFL_EquipmentUtilityLibrary_C_BankRobber_ShouldUsePlacementAbility, CallFunc_GetDataTableRowFromName_OutRow) == 0x000010, "Member 'BPFL_EquipmentUtilityLibrary_C_BankRobber_ShouldUsePlacementAbility::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BPFL_EquipmentUtilityLibrary_C_BankRobber_ShouldUsePlacementAbility, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000020, "Member 'BPFL_EquipmentUtilityLibrary_C_BankRobber_ShouldUsePlacementAbility::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EquipmentUtilityLibrary_C_BankRobber_ShouldUsePlacementAbility, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000021, "Member 'BPFL_EquipmentUtilityLibrary_C_BankRobber_ShouldUsePlacementAbility::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

}

