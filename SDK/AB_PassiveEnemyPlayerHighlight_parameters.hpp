#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AB_PassiveEnemyPlayerHighlight

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Keaton_structs.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function AB_PassiveEnemyPlayerHighlight.AB_PassiveEnemyPlayerHighlight_C.ExecuteUbergraph_AB_PassiveEnemyPlayerHighlight
// 0x0130 (0x0130 - 0x0000)
struct AB_PassiveEnemyPlayerHighlight_C_ExecuteUbergraph_AB_PassiveEnemyPlayerHighlight final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_User;                                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCAGameplayAbility*                     K2Node_Event_Ability;                              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayAbilitySpecHandle             K2Node_Event_Handle;                               // 0x0018(0x0004)(NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ACACharacter*>                   CallFunc_GetEnemyPlayersToHighlight_EnemyCharacterArray; // 0x0030(0x0010)(ReferenceParm)
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACACharacter*                           K2Node_DynamicCast_AsCACharacter;                  // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_HasAuthority_ReturnValue;              // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACAPlayerController*                    K2Node_DynamicCast_AsCAPlayer_Controller;          // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHighlightTagsRules                    K2Node_MakeStruct_HighlightTagsRules;              // 0x0078(0x0080)()
	class ACACharacter*                           CallFunc_Array_Get_Item;                           // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACAGlobalHighlightManager*              CallFunc_GetGlobalHighlightManager_ReturnValue;    // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bWasCancelled;                        // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_10D[0x3];                                      // 0x010D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0114(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_115[0x3];                                      // 0x0115(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_HasAuthority_ReturnValue_1;            // 0x011C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11D[0x3];                                      // 0x011D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ACACharacter*                           CallFunc_Array_Get_Item_1;                         // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AB_PassiveEnemyPlayerHighlight_C_ExecuteUbergraph_AB_PassiveEnemyPlayerHighlight) == 0x000008, "Wrong alignment on AB_PassiveEnemyPlayerHighlight_C_ExecuteUbergraph_AB_PassiveEnemyPlayerHighlight");
static_assert(sizeof(AB_PassiveEnemyPlayerHighlight_C_ExecuteUbergraph_AB_PassiveEnemyPlayerHighlight) == 0x000130, "Wrong size on AB_PassiveEnemyPlayerHighlight_C_ExecuteUbergraph_AB_PassiveEnemyPlayerHighlight");
static_assert(offsetof(AB_PassiveEnemyPlayerHighlight_C_ExecuteUbergraph_AB_PassiveEnemyPlayerHighlight, EntryPoint) == 0x000000, "Member 'AB_PassiveEnemyPlayerHighlight_C_ExecuteUbergraph_AB_PassiveEnemyPlayerHighlight::EntryPoint' has a wrong offset!");
static_assert(offsetof(AB_PassiveEnemyPlayerHighlight_C_ExecuteUbergraph_AB_PassiveEnemyPlayerHighlight, K2Node_Event_User) == 0x000008, "Member 'AB_PassiveEnemyPlayerHighlight_C_ExecuteUbergraph_AB_PassiveEnemyPlayerHighlight::K2Node_Event_User' has a wrong offset!");
static_assert(offsetof(AB_PassiveEnemyPlayerHighlight_C_ExecuteUbergraph_AB_PassiveEnemyPlayerHighlight, K2Node_Event_Ability) == 0x000010, "Member 'AB_PassiveEnemyPlayerHighlight_C_ExecuteUbergraph_AB_PassiveEnemyPlayerHighlight::K2Node_Event_Ability' has a wrong offset!");
static_assert(offsetof(AB_PassiveEnemyPlayerHighlight_C_ExecuteUbergraph_AB_PassiveEnemyPlayerHighlight, K2Node_Event_Handle) == 0x000018, "Member 'AB_PassiveEnemyPlayerHighlight_C_ExecuteUbergraph_AB_PassiveEnemyPlayerHighlight::K2Node_Event_Handle' has a wrong offset!");
static_assert(offsetof(AB_PassiveEnemyPlayerHighlight_C_ExecuteUbergraph_AB_PassiveEnemyPlayerHighlight, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'AB_PassiveEnemyPlayerHighlight_C_ExecuteUbergraph_AB_PassiveEnemyPlayerHighlight::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AB_PassiveEnemyPlayerHighlight_C_ExecuteUbergraph_AB_PassiveEnemyPlayerHighlight, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'AB_PassiveEnemyPlayerHighlight_C_ExecuteUbergraph_AB_PassiveEnemyPlayerHighlight::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AB_PassiveEnemyPlayerHighlight_C_ExecuteUbergraph_AB_PassiveEnemyPlayerHighlight, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'AB_PassiveEnemyPlayerHighlight_C_ExecuteUbergraph_AB_PassiveEnemyPlayerHighlight::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_PassiveEnemyPlayerHighlight_C_ExecuteUbergraph_AB_PassiveEnemyPlayerHighlight, Temp_int_Array_Index_Variable_1) == 0x000028, "Member 'AB_PassiveEnemyPlayerHighlight_C_ExecuteUbergraph_AB_PassiveEnemyPlayerHighlight::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(AB_PassiveEnemyPlayerHighlight_C_ExecuteUbergraph_AB_PassiveEnemyPlayerHighlight, CallFunc_GetEnemyPlayersToHighlight_EnemyCharacterArray) == 0x000030, "Member 'AB_PassiveEnemyPlayerHighlight_C_ExecuteUbergraph_AB_PassiveEnemyPlayerHighlight::CallFunc_GetEnemyPlayersToHighlight_EnemyCharacterArray' has a wrong offset!");
static_assert(offsetof(AB_PassiveEnemyPlayerHighlight_C_ExecuteUbergraph_AB_PassiveEnemyPlayerHighlight, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x000040, "Member 'AB_PassiveEnemyPlayerHighlight_C_ExecuteUbergraph_AB_PassiveEnemyPlayerHighlight::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_PassiveEnemyPlayerHighlight_C_ExecuteUbergraph_AB_PassiveEnemyPlayerHighlight, K2Node_DynamicCast_AsCACharacter) == 0x000048, "Member 'AB_PassiveEnemyPlayerHighlight_C_ExecuteUbergraph_AB_PassiveEnemyPlayerHighlight::K2Node_DynamicCast_AsCACharacter' has a wrong offset!");
static_assert(offsetof(AB_PassiveEnemyPlayerHighlight_C_ExecuteUbergraph_AB_PassiveEnemyPlayerHighlight, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'AB_PassiveEnemyPlayerHighlight_C_ExecuteUbergraph_AB_PassiveEnemyPlayerHighlight::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AB_PassiveEnemyPlayerHighlight_C_ExecuteUbergraph_AB_PassiveEnemyPlayerHighlight, CallFunc_GetController_ReturnValue) == 0x000058, "Member 'AB_PassiveEnemyPlayerHighlight_C_ExecuteUbergraph_AB_PassiveEnemyPlayerHighlight::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_PassiveEnemyPlayerHighlight_C_ExecuteUbergraph_AB_PassiveEnemyPlayerHighlight, CallFunc_K2_HasAuthority_ReturnValue) == 0x000060, "Member 'AB_PassiveEnemyPlayerHighlight_C_ExecuteUbergraph_AB_PassiveEnemyPlayerHighlight::CallFunc_K2_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_PassiveEnemyPlayerHighlight_C_ExecuteUbergraph_AB_PassiveEnemyPlayerHighlight, K2Node_DynamicCast_AsCAPlayer_Controller) == 0x000068, "Member 'AB_PassiveEnemyPlayerHighlight_C_ExecuteUbergraph_AB_PassiveEnemyPlayerHighlight::K2Node_DynamicCast_AsCAPlayer_Controller' has a wrong offset!");
static_assert(offsetof(AB_PassiveEnemyPlayerHighlight_C_ExecuteUbergraph_AB_PassiveEnemyPlayerHighlight, K2Node_DynamicCast_bSuccess_1) == 0x000070, "Member 'AB_PassiveEnemyPlayerHighlight_C_ExecuteUbergraph_AB_PassiveEnemyPlayerHighlight::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(AB_PassiveEnemyPlayerHighlight_C_ExecuteUbergraph_AB_PassiveEnemyPlayerHighlight, K2Node_MakeStruct_HighlightTagsRules) == 0x000078, "Member 'AB_PassiveEnemyPlayerHighlight_C_ExecuteUbergraph_AB_PassiveEnemyPlayerHighlight::K2Node_MakeStruct_HighlightTagsRules' has a wrong offset!");
static_assert(offsetof(AB_PassiveEnemyPlayerHighlight_C_ExecuteUbergraph_AB_PassiveEnemyPlayerHighlight, CallFunc_Array_Get_Item) == 0x0000F8, "Member 'AB_PassiveEnemyPlayerHighlight_C_ExecuteUbergraph_AB_PassiveEnemyPlayerHighlight::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AB_PassiveEnemyPlayerHighlight_C_ExecuteUbergraph_AB_PassiveEnemyPlayerHighlight, CallFunc_GetGlobalHighlightManager_ReturnValue) == 0x000100, "Member 'AB_PassiveEnemyPlayerHighlight_C_ExecuteUbergraph_AB_PassiveEnemyPlayerHighlight::CallFunc_GetGlobalHighlightManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_PassiveEnemyPlayerHighlight_C_ExecuteUbergraph_AB_PassiveEnemyPlayerHighlight, CallFunc_Array_Length_ReturnValue) == 0x000108, "Member 'AB_PassiveEnemyPlayerHighlight_C_ExecuteUbergraph_AB_PassiveEnemyPlayerHighlight::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_PassiveEnemyPlayerHighlight_C_ExecuteUbergraph_AB_PassiveEnemyPlayerHighlight, K2Node_Event_bWasCancelled) == 0x00010C, "Member 'AB_PassiveEnemyPlayerHighlight_C_ExecuteUbergraph_AB_PassiveEnemyPlayerHighlight::K2Node_Event_bWasCancelled' has a wrong offset!");
static_assert(offsetof(AB_PassiveEnemyPlayerHighlight_C_ExecuteUbergraph_AB_PassiveEnemyPlayerHighlight, Temp_int_Loop_Counter_Variable_1) == 0x000110, "Member 'AB_PassiveEnemyPlayerHighlight_C_ExecuteUbergraph_AB_PassiveEnemyPlayerHighlight::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(AB_PassiveEnemyPlayerHighlight_C_ExecuteUbergraph_AB_PassiveEnemyPlayerHighlight, CallFunc_Less_IntInt_ReturnValue) == 0x000114, "Member 'AB_PassiveEnemyPlayerHighlight_C_ExecuteUbergraph_AB_PassiveEnemyPlayerHighlight::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_PassiveEnemyPlayerHighlight_C_ExecuteUbergraph_AB_PassiveEnemyPlayerHighlight, CallFunc_Add_IntInt_ReturnValue_1) == 0x000118, "Member 'AB_PassiveEnemyPlayerHighlight_C_ExecuteUbergraph_AB_PassiveEnemyPlayerHighlight::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AB_PassiveEnemyPlayerHighlight_C_ExecuteUbergraph_AB_PassiveEnemyPlayerHighlight, CallFunc_K2_HasAuthority_ReturnValue_1) == 0x00011C, "Member 'AB_PassiveEnemyPlayerHighlight_C_ExecuteUbergraph_AB_PassiveEnemyPlayerHighlight::CallFunc_K2_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AB_PassiveEnemyPlayerHighlight_C_ExecuteUbergraph_AB_PassiveEnemyPlayerHighlight, CallFunc_Array_Get_Item_1) == 0x000120, "Member 'AB_PassiveEnemyPlayerHighlight_C_ExecuteUbergraph_AB_PassiveEnemyPlayerHighlight::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(AB_PassiveEnemyPlayerHighlight_C_ExecuteUbergraph_AB_PassiveEnemyPlayerHighlight, CallFunc_Array_Length_ReturnValue_1) == 0x000128, "Member 'AB_PassiveEnemyPlayerHighlight_C_ExecuteUbergraph_AB_PassiveEnemyPlayerHighlight::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AB_PassiveEnemyPlayerHighlight_C_ExecuteUbergraph_AB_PassiveEnemyPlayerHighlight, CallFunc_Less_IntInt_ReturnValue_1) == 0x00012C, "Member 'AB_PassiveEnemyPlayerHighlight_C_ExecuteUbergraph_AB_PassiveEnemyPlayerHighlight::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function AB_PassiveEnemyPlayerHighlight.AB_PassiveEnemyPlayerHighlight_C.AbilityRemoved
// 0x0018 (0x0018 - 0x0000)
struct AB_PassiveEnemyPlayerHighlight_C_AbilityRemoved final
{
public:
	class AActor*                                 User;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCAGameplayAbility*                     Ability;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayAbilitySpecHandle             Handle;                                            // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AB_PassiveEnemyPlayerHighlight_C_AbilityRemoved) == 0x000008, "Wrong alignment on AB_PassiveEnemyPlayerHighlight_C_AbilityRemoved");
static_assert(sizeof(AB_PassiveEnemyPlayerHighlight_C_AbilityRemoved) == 0x000018, "Wrong size on AB_PassiveEnemyPlayerHighlight_C_AbilityRemoved");
static_assert(offsetof(AB_PassiveEnemyPlayerHighlight_C_AbilityRemoved, User) == 0x000000, "Member 'AB_PassiveEnemyPlayerHighlight_C_AbilityRemoved::User' has a wrong offset!");
static_assert(offsetof(AB_PassiveEnemyPlayerHighlight_C_AbilityRemoved, Ability) == 0x000008, "Member 'AB_PassiveEnemyPlayerHighlight_C_AbilityRemoved::Ability' has a wrong offset!");
static_assert(offsetof(AB_PassiveEnemyPlayerHighlight_C_AbilityRemoved, Handle) == 0x000010, "Member 'AB_PassiveEnemyPlayerHighlight_C_AbilityRemoved::Handle' has a wrong offset!");

// Function AB_PassiveEnemyPlayerHighlight.AB_PassiveEnemyPlayerHighlight_C.K2_OnEndAbility
// 0x0001 (0x0001 - 0x0000)
struct AB_PassiveEnemyPlayerHighlight_C_K2_OnEndAbility final
{
public:
	bool                                          bWasCancelled;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AB_PassiveEnemyPlayerHighlight_C_K2_OnEndAbility) == 0x000001, "Wrong alignment on AB_PassiveEnemyPlayerHighlight_C_K2_OnEndAbility");
static_assert(sizeof(AB_PassiveEnemyPlayerHighlight_C_K2_OnEndAbility) == 0x000001, "Wrong size on AB_PassiveEnemyPlayerHighlight_C_K2_OnEndAbility");
static_assert(offsetof(AB_PassiveEnemyPlayerHighlight_C_K2_OnEndAbility, bWasCancelled) == 0x000000, "Member 'AB_PassiveEnemyPlayerHighlight_C_K2_OnEndAbility::bWasCancelled' has a wrong offset!");

// Function AB_PassiveEnemyPlayerHighlight.AB_PassiveEnemyPlayerHighlight_C.GetActorsWithinScanDistance
// 0x00A8 (0x00A8 - 0x0000)
struct AB_PassiveEnemyPlayerHighlight_C_GetActorsWithinScanDistance final
{
public:
	TArray<class AActor*>                         ArrayOfActors;                                     // 0x0000(0x0010)(Parm, OutParm)
	TArray<class UPrimitiveComponent*>            OutComponents;                                     // 0x0010(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	TArray<class AActor*>                         ActorsToHighlight;                                 // 0x0020(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue_1; // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0040(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetActorListFromComponentList_OutActorList; // 0x0060(0x0010)(ReferenceParm)
	TArray<class AActor*>                         CallFunc_GetActorListFromComponentList_OutActorList_1; // 0x0070(0x0010)(ReferenceParm)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array_1;                          // 0x0080(0x0010)(ConstParm, ReferenceParm)
	TArray<class UPrimitiveComponent*>            CallFunc_SphereOverlapComponents_OutComponents;    // 0x0090(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_SphereOverlapComponents_ReturnValue;      // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AB_PassiveEnemyPlayerHighlight_C_GetActorsWithinScanDistance) == 0x000008, "Wrong alignment on AB_PassiveEnemyPlayerHighlight_C_GetActorsWithinScanDistance");
static_assert(sizeof(AB_PassiveEnemyPlayerHighlight_C_GetActorsWithinScanDistance) == 0x0000A8, "Wrong size on AB_PassiveEnemyPlayerHighlight_C_GetActorsWithinScanDistance");
static_assert(offsetof(AB_PassiveEnemyPlayerHighlight_C_GetActorsWithinScanDistance, ArrayOfActors) == 0x000000, "Member 'AB_PassiveEnemyPlayerHighlight_C_GetActorsWithinScanDistance::ArrayOfActors' has a wrong offset!");
static_assert(offsetof(AB_PassiveEnemyPlayerHighlight_C_GetActorsWithinScanDistance, OutComponents) == 0x000010, "Member 'AB_PassiveEnemyPlayerHighlight_C_GetActorsWithinScanDistance::OutComponents' has a wrong offset!");
static_assert(offsetof(AB_PassiveEnemyPlayerHighlight_C_GetActorsWithinScanDistance, ActorsToHighlight) == 0x000020, "Member 'AB_PassiveEnemyPlayerHighlight_C_GetActorsWithinScanDistance::ActorsToHighlight' has a wrong offset!");
static_assert(offsetof(AB_PassiveEnemyPlayerHighlight_C_GetActorsWithinScanDistance, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x000030, "Member 'AB_PassiveEnemyPlayerHighlight_C_GetActorsWithinScanDistance::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_PassiveEnemyPlayerHighlight_C_GetActorsWithinScanDistance, CallFunc_GetAvatarActorFromActorInfo_ReturnValue_1) == 0x000038, "Member 'AB_PassiveEnemyPlayerHighlight_C_GetActorsWithinScanDistance::CallFunc_GetAvatarActorFromActorInfo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AB_PassiveEnemyPlayerHighlight_C_GetActorsWithinScanDistance, K2Node_MakeArray_Array) == 0x000040, "Member 'AB_PassiveEnemyPlayerHighlight_C_GetActorsWithinScanDistance::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(AB_PassiveEnemyPlayerHighlight_C_GetActorsWithinScanDistance, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000050, "Member 'AB_PassiveEnemyPlayerHighlight_C_GetActorsWithinScanDistance::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_PassiveEnemyPlayerHighlight_C_GetActorsWithinScanDistance, CallFunc_GetActorListFromComponentList_OutActorList) == 0x000060, "Member 'AB_PassiveEnemyPlayerHighlight_C_GetActorsWithinScanDistance::CallFunc_GetActorListFromComponentList_OutActorList' has a wrong offset!");
static_assert(offsetof(AB_PassiveEnemyPlayerHighlight_C_GetActorsWithinScanDistance, CallFunc_GetActorListFromComponentList_OutActorList_1) == 0x000070, "Member 'AB_PassiveEnemyPlayerHighlight_C_GetActorsWithinScanDistance::CallFunc_GetActorListFromComponentList_OutActorList_1' has a wrong offset!");
static_assert(offsetof(AB_PassiveEnemyPlayerHighlight_C_GetActorsWithinScanDistance, K2Node_MakeArray_Array_1) == 0x000080, "Member 'AB_PassiveEnemyPlayerHighlight_C_GetActorsWithinScanDistance::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(AB_PassiveEnemyPlayerHighlight_C_GetActorsWithinScanDistance, CallFunc_SphereOverlapComponents_OutComponents) == 0x000090, "Member 'AB_PassiveEnemyPlayerHighlight_C_GetActorsWithinScanDistance::CallFunc_SphereOverlapComponents_OutComponents' has a wrong offset!");
static_assert(offsetof(AB_PassiveEnemyPlayerHighlight_C_GetActorsWithinScanDistance, CallFunc_SphereOverlapComponents_ReturnValue) == 0x0000A0, "Member 'AB_PassiveEnemyPlayerHighlight_C_GetActorsWithinScanDistance::CallFunc_SphereOverlapComponents_ReturnValue' has a wrong offset!");

// Function AB_PassiveEnemyPlayerHighlight.AB_PassiveEnemyPlayerHighlight_C.GetEnemyPlayersToHighlight
// 0x0068 (0x0068 - 0x0000)
struct AB_PassiveEnemyPlayerHighlight_C_GetEnemyPlayersToHighlight final
{
public:
	TArray<class ACACharacter*>                   EnemyCharacterArray;                               // 0x0000(0x0010)(Parm, OutParm)
	TArray<class ACACharacter*>                   EnemyCharacters;                                   // 0x0010(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetActorsWithinScanDistance_ArrayOfActors; // 0x0030(0x0010)(ReferenceParm)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACACharacter*                           K2Node_DynamicCast_AsCACharacter;                  // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A[0x2];                                       // 0x005A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_TeamIDTeamID_ReturnValue;      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AB_PassiveEnemyPlayerHighlight_C_GetEnemyPlayersToHighlight) == 0x000008, "Wrong alignment on AB_PassiveEnemyPlayerHighlight_C_GetEnemyPlayersToHighlight");
static_assert(sizeof(AB_PassiveEnemyPlayerHighlight_C_GetEnemyPlayersToHighlight) == 0x000068, "Wrong size on AB_PassiveEnemyPlayerHighlight_C_GetEnemyPlayersToHighlight");
static_assert(offsetof(AB_PassiveEnemyPlayerHighlight_C_GetEnemyPlayersToHighlight, EnemyCharacterArray) == 0x000000, "Member 'AB_PassiveEnemyPlayerHighlight_C_GetEnemyPlayersToHighlight::EnemyCharacterArray' has a wrong offset!");
static_assert(offsetof(AB_PassiveEnemyPlayerHighlight_C_GetEnemyPlayersToHighlight, EnemyCharacters) == 0x000010, "Member 'AB_PassiveEnemyPlayerHighlight_C_GetEnemyPlayersToHighlight::EnemyCharacters' has a wrong offset!");
static_assert(offsetof(AB_PassiveEnemyPlayerHighlight_C_GetEnemyPlayersToHighlight, Temp_int_Array_Index_Variable) == 0x000020, "Member 'AB_PassiveEnemyPlayerHighlight_C_GetEnemyPlayersToHighlight::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AB_PassiveEnemyPlayerHighlight_C_GetEnemyPlayersToHighlight, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'AB_PassiveEnemyPlayerHighlight_C_GetEnemyPlayersToHighlight::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AB_PassiveEnemyPlayerHighlight_C_GetEnemyPlayersToHighlight, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'AB_PassiveEnemyPlayerHighlight_C_GetEnemyPlayersToHighlight::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_PassiveEnemyPlayerHighlight_C_GetEnemyPlayersToHighlight, CallFunc_IsValid_ReturnValue) == 0x00002C, "Member 'AB_PassiveEnemyPlayerHighlight_C_GetEnemyPlayersToHighlight::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_PassiveEnemyPlayerHighlight_C_GetEnemyPlayersToHighlight, CallFunc_GetActorsWithinScanDistance_ArrayOfActors) == 0x000030, "Member 'AB_PassiveEnemyPlayerHighlight_C_GetEnemyPlayersToHighlight::CallFunc_GetActorsWithinScanDistance_ArrayOfActors' has a wrong offset!");
static_assert(offsetof(AB_PassiveEnemyPlayerHighlight_C_GetEnemyPlayersToHighlight, CallFunc_Array_Get_Item) == 0x000040, "Member 'AB_PassiveEnemyPlayerHighlight_C_GetEnemyPlayersToHighlight::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AB_PassiveEnemyPlayerHighlight_C_GetEnemyPlayersToHighlight, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'AB_PassiveEnemyPlayerHighlight_C_GetEnemyPlayersToHighlight::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_PassiveEnemyPlayerHighlight_C_GetEnemyPlayersToHighlight, K2Node_DynamicCast_AsCACharacter) == 0x000050, "Member 'AB_PassiveEnemyPlayerHighlight_C_GetEnemyPlayersToHighlight::K2Node_DynamicCast_AsCACharacter' has a wrong offset!");
static_assert(offsetof(AB_PassiveEnemyPlayerHighlight_C_GetEnemyPlayersToHighlight, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'AB_PassiveEnemyPlayerHighlight_C_GetEnemyPlayersToHighlight::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AB_PassiveEnemyPlayerHighlight_C_GetEnemyPlayersToHighlight, CallFunc_Less_IntInt_ReturnValue) == 0x000059, "Member 'AB_PassiveEnemyPlayerHighlight_C_GetEnemyPlayersToHighlight::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_PassiveEnemyPlayerHighlight_C_GetEnemyPlayersToHighlight, CallFunc_Array_AddUnique_ReturnValue) == 0x00005C, "Member 'AB_PassiveEnemyPlayerHighlight_C_GetEnemyPlayersToHighlight::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_PassiveEnemyPlayerHighlight_C_GetEnemyPlayersToHighlight, CallFunc_EqualEqual_TeamIDTeamID_ReturnValue) == 0x000060, "Member 'AB_PassiveEnemyPlayerHighlight_C_GetEnemyPlayersToHighlight::CallFunc_EqualEqual_TeamIDTeamID_ReturnValue' has a wrong offset!");

}

