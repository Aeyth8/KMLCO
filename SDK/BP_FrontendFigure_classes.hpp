#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FrontendFigure

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Keaton_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_FrontendFigure.BP_FrontendFigure_C
// 0x00A0 (0x0460 - 0x03C0)
class ABP_FrontendFigure_C final : public ACAFrontEndFigure
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x03C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UChildActorComponent*                   ChildActorCamera_CollectionSkins;                  // 0x03C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   ChildActorCamera_Home;                             // 0x03D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpringArmComponent*                    SpringArm_Home;                                    // 0x03D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   ChildActorCamera_Home_Emir;                        // 0x03E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   ChildActorCamera_Home_old;                         // 0x03E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpringArmComponent*                    SpringArm_CollectionSkins;                         // 0x03F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   ChildActorCamera_TutorialPurchase;                 // 0x03F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpringArmComponent*                    SpringArm_TutorialPurchase;                        // 0x0400(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   ChildActorCamera_WelcomeScreen;                    // 0x0408(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpringArmComponent*                    SpringArm_WelcomeScreen;                           // 0x0410(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   ChildActorCamera_CharacterParty;                   // 0x0418(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   ChildActorCamera_CharacterReadyUp;                 // 0x0420(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpringArmComponent*                    SpringArm_CharacterReadyUp;                        // 0x0428(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   ChildActorCamera_CharacterProfile;                 // 0x0430(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpringArmComponent*                    SpringArm_CharacterProfile;                        // 0x0438(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   ChildActorCamera_Collection;                       // 0x0440(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpringArmComponent*                    SpringArm_Collection;                              // 0x0448(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpringArmComponent*                    SpringArm_HomeOld;                                 // 0x0450(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   BP_FrontendWeapon;                                 // 0x0458(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	void ReceiveBeginPlay();
	void BndEvt__BP_FrontendWeapon_K2Node_ComponentBoundEvent_0_ActorComponentActivatedSignature__DelegateSignature(class UActorComponent* Component, bool bReset);
	void ExecuteUbergraph_BP_FrontendFigure(int32 EntryPoint);

	void GetFigureMesh(class USkeletalMeshComponent** Skeleton) const;
	class UChildActorComponent* GetComponentForCameraWithName(const class FName Camera_name) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_FrontendFigure_C">();
	}
	static class ABP_FrontendFigure_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_FrontendFigure_C>();
	}
};
static_assert(alignof(ABP_FrontendFigure_C) == 0x000008, "Wrong alignment on ABP_FrontendFigure_C");
static_assert(sizeof(ABP_FrontendFigure_C) == 0x000460, "Wrong size on ABP_FrontendFigure_C");
static_assert(offsetof(ABP_FrontendFigure_C, UberGraphFrame) == 0x0003C0, "Member 'ABP_FrontendFigure_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_FrontendFigure_C, ChildActorCamera_CollectionSkins) == 0x0003C8, "Member 'ABP_FrontendFigure_C::ChildActorCamera_CollectionSkins' has a wrong offset!");
static_assert(offsetof(ABP_FrontendFigure_C, ChildActorCamera_Home) == 0x0003D0, "Member 'ABP_FrontendFigure_C::ChildActorCamera_Home' has a wrong offset!");
static_assert(offsetof(ABP_FrontendFigure_C, SpringArm_Home) == 0x0003D8, "Member 'ABP_FrontendFigure_C::SpringArm_Home' has a wrong offset!");
static_assert(offsetof(ABP_FrontendFigure_C, ChildActorCamera_Home_Emir) == 0x0003E0, "Member 'ABP_FrontendFigure_C::ChildActorCamera_Home_Emir' has a wrong offset!");
static_assert(offsetof(ABP_FrontendFigure_C, ChildActorCamera_Home_old) == 0x0003E8, "Member 'ABP_FrontendFigure_C::ChildActorCamera_Home_old' has a wrong offset!");
static_assert(offsetof(ABP_FrontendFigure_C, SpringArm_CollectionSkins) == 0x0003F0, "Member 'ABP_FrontendFigure_C::SpringArm_CollectionSkins' has a wrong offset!");
static_assert(offsetof(ABP_FrontendFigure_C, ChildActorCamera_TutorialPurchase) == 0x0003F8, "Member 'ABP_FrontendFigure_C::ChildActorCamera_TutorialPurchase' has a wrong offset!");
static_assert(offsetof(ABP_FrontendFigure_C, SpringArm_TutorialPurchase) == 0x000400, "Member 'ABP_FrontendFigure_C::SpringArm_TutorialPurchase' has a wrong offset!");
static_assert(offsetof(ABP_FrontendFigure_C, ChildActorCamera_WelcomeScreen) == 0x000408, "Member 'ABP_FrontendFigure_C::ChildActorCamera_WelcomeScreen' has a wrong offset!");
static_assert(offsetof(ABP_FrontendFigure_C, SpringArm_WelcomeScreen) == 0x000410, "Member 'ABP_FrontendFigure_C::SpringArm_WelcomeScreen' has a wrong offset!");
static_assert(offsetof(ABP_FrontendFigure_C, ChildActorCamera_CharacterParty) == 0x000418, "Member 'ABP_FrontendFigure_C::ChildActorCamera_CharacterParty' has a wrong offset!");
static_assert(offsetof(ABP_FrontendFigure_C, ChildActorCamera_CharacterReadyUp) == 0x000420, "Member 'ABP_FrontendFigure_C::ChildActorCamera_CharacterReadyUp' has a wrong offset!");
static_assert(offsetof(ABP_FrontendFigure_C, SpringArm_CharacterReadyUp) == 0x000428, "Member 'ABP_FrontendFigure_C::SpringArm_CharacterReadyUp' has a wrong offset!");
static_assert(offsetof(ABP_FrontendFigure_C, ChildActorCamera_CharacterProfile) == 0x000430, "Member 'ABP_FrontendFigure_C::ChildActorCamera_CharacterProfile' has a wrong offset!");
static_assert(offsetof(ABP_FrontendFigure_C, SpringArm_CharacterProfile) == 0x000438, "Member 'ABP_FrontendFigure_C::SpringArm_CharacterProfile' has a wrong offset!");
static_assert(offsetof(ABP_FrontendFigure_C, ChildActorCamera_Collection) == 0x000440, "Member 'ABP_FrontendFigure_C::ChildActorCamera_Collection' has a wrong offset!");
static_assert(offsetof(ABP_FrontendFigure_C, SpringArm_Collection) == 0x000448, "Member 'ABP_FrontendFigure_C::SpringArm_Collection' has a wrong offset!");
static_assert(offsetof(ABP_FrontendFigure_C, SpringArm_HomeOld) == 0x000450, "Member 'ABP_FrontendFigure_C::SpringArm_HomeOld' has a wrong offset!");
static_assert(offsetof(ABP_FrontendFigure_C, BP_FrontendWeapon) == 0x000458, "Member 'ABP_FrontendFigure_C::BP_FrontendWeapon' has a wrong offset!");

}

