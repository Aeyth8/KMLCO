#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ImpactEffect_DeployableTurret

#include "Basic.hpp"

#include "PhysicsCore_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_ImpactEffect_DeployableTurret.BP_ImpactEffect_DeployableTurret_C.ExecuteUbergraph_BP_ImpactEffect_DeployableTurret
// 0x0098 (0x0098 - 0x0000)
struct BP_ImpactEffect_DeployableTurret_C_ExecuteUbergraph_BP_ImpactEffect_DeployableTurret final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              K2Node_Event_surface_type;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_Event_surface_hit;                          // 0x0008(0x0090)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_ImpactEffect_DeployableTurret_C_ExecuteUbergraph_BP_ImpactEffect_DeployableTurret) == 0x000004, "Wrong alignment on BP_ImpactEffect_DeployableTurret_C_ExecuteUbergraph_BP_ImpactEffect_DeployableTurret");
static_assert(sizeof(BP_ImpactEffect_DeployableTurret_C_ExecuteUbergraph_BP_ImpactEffect_DeployableTurret) == 0x000098, "Wrong size on BP_ImpactEffect_DeployableTurret_C_ExecuteUbergraph_BP_ImpactEffect_DeployableTurret");
static_assert(offsetof(BP_ImpactEffect_DeployableTurret_C_ExecuteUbergraph_BP_ImpactEffect_DeployableTurret, EntryPoint) == 0x000000, "Member 'BP_ImpactEffect_DeployableTurret_C_ExecuteUbergraph_BP_ImpactEffect_DeployableTurret::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_ImpactEffect_DeployableTurret_C_ExecuteUbergraph_BP_ImpactEffect_DeployableTurret, K2Node_Event_surface_type) == 0x000004, "Member 'BP_ImpactEffect_DeployableTurret_C_ExecuteUbergraph_BP_ImpactEffect_DeployableTurret::K2Node_Event_surface_type' has a wrong offset!");
static_assert(offsetof(BP_ImpactEffect_DeployableTurret_C_ExecuteUbergraph_BP_ImpactEffect_DeployableTurret, K2Node_Event_surface_hit) == 0x000008, "Member 'BP_ImpactEffect_DeployableTurret_C_ExecuteUbergraph_BP_ImpactEffect_DeployableTurret::K2Node_Event_surface_hit' has a wrong offset!");

// Function BP_ImpactEffect_DeployableTurret.BP_ImpactEffect_DeployableTurret_C.OnSpawnImpact
// 0x0094 (0x0094 - 0x0000)
struct BP_ImpactEffect_DeployableTurret_C_OnSpawnImpact final
{
public:
	EPhysicalSurface                              Surface_type;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             Surface_hit;                                       // 0x0004(0x0090)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_ImpactEffect_DeployableTurret_C_OnSpawnImpact) == 0x000004, "Wrong alignment on BP_ImpactEffect_DeployableTurret_C_OnSpawnImpact");
static_assert(sizeof(BP_ImpactEffect_DeployableTurret_C_OnSpawnImpact) == 0x000094, "Wrong size on BP_ImpactEffect_DeployableTurret_C_OnSpawnImpact");
static_assert(offsetof(BP_ImpactEffect_DeployableTurret_C_OnSpawnImpact, Surface_type) == 0x000000, "Member 'BP_ImpactEffect_DeployableTurret_C_OnSpawnImpact::Surface_type' has a wrong offset!");
static_assert(offsetof(BP_ImpactEffect_DeployableTurret_C_OnSpawnImpact, Surface_hit) == 0x000004, "Member 'BP_ImpactEffect_DeployableTurret_C_OnSpawnImpact::Surface_hit' has a wrong offset!");

}

