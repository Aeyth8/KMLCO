#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AB_Player_Ping

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function AB_Player_Ping.AB_Player_Ping_C.ExecuteUbergraph_AB_Player_Ping
// 0x03B0 (0x03B0 - 0x0000)
struct AB_Player_Ping_C_ExecuteUbergraph_AB_Player_Ping final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventData                     Temp_struct_Variable;                              // 0x0008(0x00B8)()
	TDelegate<void(const struct FGameplayEventData& Payload)> K2Node_CreateDelegate_OutputDelegate;              // 0x00C0(0x0014)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilityTask_WaitGameplayEvent*         CallFunc_WaitGameplayEvent_ReturnValue;            // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FGameplayEventData& Payload)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x00E0(0x0014)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F5[0x3];                                       // 0x00F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventData                     K2Node_CustomEvent_Payload;                        // 0x00F8(0x00B8)()
	struct FGameplayEventData                     Temp_struct_Variable_1;                            // 0x01B0(0x00B8)()
	class UAbilityTask_WaitGameplayEvent*         CallFunc_WaitGameplayEvent_ReturnValue_1;          // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_271[0x3];                                      // 0x0271(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0274(0x0014)(ZeroConstructor, NoDestructor)
	class UAbilityTask_WaitGameplayTagAdded*      CallFunc_WaitGameplayTagAdd_ReturnValue;           // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_CommitAbility_ReturnValue;             // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0291(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bWasCancelled;                        // 0x0292(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_293[0x5];                                      // 0x0293(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue_1; // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACACharacter_MainPlayer*                K2Node_DynamicCast_AsCACharacter_Main_Player;      // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B1[0x7];                                      // 0x02B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACACharacter_MainPlayer*                K2Node_DynamicCast_AsCACharacter_Main_Player_1;    // 0x02B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x02C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C1[0x7];                                      // 0x02C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue_1;              // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACAPlayerController*                    K2Node_DynamicCast_AsCAPlayer_Controller;          // 0x02D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x02E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E1[0x7];                                      // 0x02E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACAPlayerController*                    K2Node_DynamicCast_AsCAPlayer_Controller_1;        // 0x02E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x02F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F1[0x7];                                      // 0x02F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventData                     K2Node_CustomEvent_Payload_1;                      // 0x02F8(0x00B8)()
};
static_assert(alignof(AB_Player_Ping_C_ExecuteUbergraph_AB_Player_Ping) == 0x000008, "Wrong alignment on AB_Player_Ping_C_ExecuteUbergraph_AB_Player_Ping");
static_assert(sizeof(AB_Player_Ping_C_ExecuteUbergraph_AB_Player_Ping) == 0x0003B0, "Wrong size on AB_Player_Ping_C_ExecuteUbergraph_AB_Player_Ping");
static_assert(offsetof(AB_Player_Ping_C_ExecuteUbergraph_AB_Player_Ping, EntryPoint) == 0x000000, "Member 'AB_Player_Ping_C_ExecuteUbergraph_AB_Player_Ping::EntryPoint' has a wrong offset!");
static_assert(offsetof(AB_Player_Ping_C_ExecuteUbergraph_AB_Player_Ping, Temp_struct_Variable) == 0x000008, "Member 'AB_Player_Ping_C_ExecuteUbergraph_AB_Player_Ping::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(AB_Player_Ping_C_ExecuteUbergraph_AB_Player_Ping, K2Node_CreateDelegate_OutputDelegate) == 0x0000C0, "Member 'AB_Player_Ping_C_ExecuteUbergraph_AB_Player_Ping::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(AB_Player_Ping_C_ExecuteUbergraph_AB_Player_Ping, CallFunc_WaitGameplayEvent_ReturnValue) == 0x0000D8, "Member 'AB_Player_Ping_C_ExecuteUbergraph_AB_Player_Ping::CallFunc_WaitGameplayEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_Player_Ping_C_ExecuteUbergraph_AB_Player_Ping, K2Node_CreateDelegate_OutputDelegate_1) == 0x0000E0, "Member 'AB_Player_Ping_C_ExecuteUbergraph_AB_Player_Ping::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(AB_Player_Ping_C_ExecuteUbergraph_AB_Player_Ping, CallFunc_IsValid_ReturnValue) == 0x0000F4, "Member 'AB_Player_Ping_C_ExecuteUbergraph_AB_Player_Ping::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_Player_Ping_C_ExecuteUbergraph_AB_Player_Ping, K2Node_CustomEvent_Payload) == 0x0000F8, "Member 'AB_Player_Ping_C_ExecuteUbergraph_AB_Player_Ping::K2Node_CustomEvent_Payload' has a wrong offset!");
static_assert(offsetof(AB_Player_Ping_C_ExecuteUbergraph_AB_Player_Ping, Temp_struct_Variable_1) == 0x0001B0, "Member 'AB_Player_Ping_C_ExecuteUbergraph_AB_Player_Ping::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(AB_Player_Ping_C_ExecuteUbergraph_AB_Player_Ping, CallFunc_WaitGameplayEvent_ReturnValue_1) == 0x000268, "Member 'AB_Player_Ping_C_ExecuteUbergraph_AB_Player_Ping::CallFunc_WaitGameplayEvent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AB_Player_Ping_C_ExecuteUbergraph_AB_Player_Ping, CallFunc_IsValid_ReturnValue_1) == 0x000270, "Member 'AB_Player_Ping_C_ExecuteUbergraph_AB_Player_Ping::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AB_Player_Ping_C_ExecuteUbergraph_AB_Player_Ping, K2Node_CreateDelegate_OutputDelegate_2) == 0x000274, "Member 'AB_Player_Ping_C_ExecuteUbergraph_AB_Player_Ping::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(AB_Player_Ping_C_ExecuteUbergraph_AB_Player_Ping, CallFunc_WaitGameplayTagAdd_ReturnValue) == 0x000288, "Member 'AB_Player_Ping_C_ExecuteUbergraph_AB_Player_Ping::CallFunc_WaitGameplayTagAdd_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_Player_Ping_C_ExecuteUbergraph_AB_Player_Ping, CallFunc_K2_CommitAbility_ReturnValue) == 0x000290, "Member 'AB_Player_Ping_C_ExecuteUbergraph_AB_Player_Ping::CallFunc_K2_CommitAbility_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_Player_Ping_C_ExecuteUbergraph_AB_Player_Ping, CallFunc_IsValid_ReturnValue_2) == 0x000291, "Member 'AB_Player_Ping_C_ExecuteUbergraph_AB_Player_Ping::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AB_Player_Ping_C_ExecuteUbergraph_AB_Player_Ping, K2Node_Event_bWasCancelled) == 0x000292, "Member 'AB_Player_Ping_C_ExecuteUbergraph_AB_Player_Ping::K2Node_Event_bWasCancelled' has a wrong offset!");
static_assert(offsetof(AB_Player_Ping_C_ExecuteUbergraph_AB_Player_Ping, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x000298, "Member 'AB_Player_Ping_C_ExecuteUbergraph_AB_Player_Ping::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_Player_Ping_C_ExecuteUbergraph_AB_Player_Ping, CallFunc_GetAvatarActorFromActorInfo_ReturnValue_1) == 0x0002A0, "Member 'AB_Player_Ping_C_ExecuteUbergraph_AB_Player_Ping::CallFunc_GetAvatarActorFromActorInfo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AB_Player_Ping_C_ExecuteUbergraph_AB_Player_Ping, K2Node_DynamicCast_AsCACharacter_Main_Player) == 0x0002A8, "Member 'AB_Player_Ping_C_ExecuteUbergraph_AB_Player_Ping::K2Node_DynamicCast_AsCACharacter_Main_Player' has a wrong offset!");
static_assert(offsetof(AB_Player_Ping_C_ExecuteUbergraph_AB_Player_Ping, K2Node_DynamicCast_bSuccess) == 0x0002B0, "Member 'AB_Player_Ping_C_ExecuteUbergraph_AB_Player_Ping::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AB_Player_Ping_C_ExecuteUbergraph_AB_Player_Ping, K2Node_DynamicCast_AsCACharacter_Main_Player_1) == 0x0002B8, "Member 'AB_Player_Ping_C_ExecuteUbergraph_AB_Player_Ping::K2Node_DynamicCast_AsCACharacter_Main_Player_1' has a wrong offset!");
static_assert(offsetof(AB_Player_Ping_C_ExecuteUbergraph_AB_Player_Ping, K2Node_DynamicCast_bSuccess_1) == 0x0002C0, "Member 'AB_Player_Ping_C_ExecuteUbergraph_AB_Player_Ping::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(AB_Player_Ping_C_ExecuteUbergraph_AB_Player_Ping, CallFunc_GetController_ReturnValue) == 0x0002C8, "Member 'AB_Player_Ping_C_ExecuteUbergraph_AB_Player_Ping::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_Player_Ping_C_ExecuteUbergraph_AB_Player_Ping, CallFunc_GetController_ReturnValue_1) == 0x0002D0, "Member 'AB_Player_Ping_C_ExecuteUbergraph_AB_Player_Ping::CallFunc_GetController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AB_Player_Ping_C_ExecuteUbergraph_AB_Player_Ping, K2Node_DynamicCast_AsCAPlayer_Controller) == 0x0002D8, "Member 'AB_Player_Ping_C_ExecuteUbergraph_AB_Player_Ping::K2Node_DynamicCast_AsCAPlayer_Controller' has a wrong offset!");
static_assert(offsetof(AB_Player_Ping_C_ExecuteUbergraph_AB_Player_Ping, K2Node_DynamicCast_bSuccess_2) == 0x0002E0, "Member 'AB_Player_Ping_C_ExecuteUbergraph_AB_Player_Ping::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(AB_Player_Ping_C_ExecuteUbergraph_AB_Player_Ping, K2Node_DynamicCast_AsCAPlayer_Controller_1) == 0x0002E8, "Member 'AB_Player_Ping_C_ExecuteUbergraph_AB_Player_Ping::K2Node_DynamicCast_AsCAPlayer_Controller_1' has a wrong offset!");
static_assert(offsetof(AB_Player_Ping_C_ExecuteUbergraph_AB_Player_Ping, K2Node_DynamicCast_bSuccess_3) == 0x0002F0, "Member 'AB_Player_Ping_C_ExecuteUbergraph_AB_Player_Ping::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(AB_Player_Ping_C_ExecuteUbergraph_AB_Player_Ping, K2Node_CustomEvent_Payload_1) == 0x0002F8, "Member 'AB_Player_Ping_C_ExecuteUbergraph_AB_Player_Ping::K2Node_CustomEvent_Payload_1' has a wrong offset!");

// Function AB_Player_Ping.AB_Player_Ping_C.K2_OnEndAbility
// 0x0001 (0x0001 - 0x0000)
struct AB_Player_Ping_C_K2_OnEndAbility final
{
public:
	bool                                          bWasCancelled;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AB_Player_Ping_C_K2_OnEndAbility) == 0x000001, "Wrong alignment on AB_Player_Ping_C_K2_OnEndAbility");
static_assert(sizeof(AB_Player_Ping_C_K2_OnEndAbility) == 0x000001, "Wrong size on AB_Player_Ping_C_K2_OnEndAbility");
static_assert(offsetof(AB_Player_Ping_C_K2_OnEndAbility, bWasCancelled) == 0x000000, "Member 'AB_Player_Ping_C_K2_OnEndAbility::bWasCancelled' has a wrong offset!");

// Function AB_Player_Ping.AB_Player_Ping_C.EventReceived_2D126B1347228C113784399B0309B796
// 0x00B8 (0x00B8 - 0x0000)
struct AB_Player_Ping_C_EventReceived_2D126B1347228C113784399B0309B796 final
{
public:
	struct FGameplayEventData                     Payload;                                           // 0x0000(0x00B8)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(AB_Player_Ping_C_EventReceived_2D126B1347228C113784399B0309B796) == 0x000008, "Wrong alignment on AB_Player_Ping_C_EventReceived_2D126B1347228C113784399B0309B796");
static_assert(sizeof(AB_Player_Ping_C_EventReceived_2D126B1347228C113784399B0309B796) == 0x0000B8, "Wrong size on AB_Player_Ping_C_EventReceived_2D126B1347228C113784399B0309B796");
static_assert(offsetof(AB_Player_Ping_C_EventReceived_2D126B1347228C113784399B0309B796, Payload) == 0x000000, "Member 'AB_Player_Ping_C_EventReceived_2D126B1347228C113784399B0309B796::Payload' has a wrong offset!");

// Function AB_Player_Ping.AB_Player_Ping_C.EventReceived_4683D95B4D94FAC83D090091FA7FD242
// 0x00B8 (0x00B8 - 0x0000)
struct AB_Player_Ping_C_EventReceived_4683D95B4D94FAC83D090091FA7FD242 final
{
public:
	struct FGameplayEventData                     Payload;                                           // 0x0000(0x00B8)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(AB_Player_Ping_C_EventReceived_4683D95B4D94FAC83D090091FA7FD242) == 0x000008, "Wrong alignment on AB_Player_Ping_C_EventReceived_4683D95B4D94FAC83D090091FA7FD242");
static_assert(sizeof(AB_Player_Ping_C_EventReceived_4683D95B4D94FAC83D090091FA7FD242) == 0x0000B8, "Wrong size on AB_Player_Ping_C_EventReceived_4683D95B4D94FAC83D090091FA7FD242");
static_assert(offsetof(AB_Player_Ping_C_EventReceived_4683D95B4D94FAC83D090091FA7FD242, Payload) == 0x000000, "Member 'AB_Player_Ping_C_EventReceived_4683D95B4D94FAC83D090091FA7FD242::Payload' has a wrong offset!");

// Function AB_Player_Ping.AB_Player_Ping_C.K2_CanActivateAbility
// 0x0090 (0x0090 - 0x0000)
struct AB_Player_Ping_C_K2_CanActivateAbility final
{
public:
	struct FGameplayAbilityActorInfo              ActorInfo;                                         // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
	struct FGameplayAbilitySpecHandle             Handle;                                            // 0x0050(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  RelevantTags;                                      // 0x0058(0x0020)(Parm, OutParm)
	bool                                          ReturnValue;                                       // 0x0078(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7A[0x6];                                       // 0x007A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ACACharacter_MainPlayer*                K2Node_DynamicCast_AsCACharacter_Main_Player;      // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLookInputIgnored_ReturnValue;           // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AB_Player_Ping_C_K2_CanActivateAbility) == 0x000008, "Wrong alignment on AB_Player_Ping_C_K2_CanActivateAbility");
static_assert(sizeof(AB_Player_Ping_C_K2_CanActivateAbility) == 0x000090, "Wrong size on AB_Player_Ping_C_K2_CanActivateAbility");
static_assert(offsetof(AB_Player_Ping_C_K2_CanActivateAbility, ActorInfo) == 0x000000, "Member 'AB_Player_Ping_C_K2_CanActivateAbility::ActorInfo' has a wrong offset!");
static_assert(offsetof(AB_Player_Ping_C_K2_CanActivateAbility, Handle) == 0x000050, "Member 'AB_Player_Ping_C_K2_CanActivateAbility::Handle' has a wrong offset!");
static_assert(offsetof(AB_Player_Ping_C_K2_CanActivateAbility, RelevantTags) == 0x000058, "Member 'AB_Player_Ping_C_K2_CanActivateAbility::RelevantTags' has a wrong offset!");
static_assert(offsetof(AB_Player_Ping_C_K2_CanActivateAbility, ReturnValue) == 0x000078, "Member 'AB_Player_Ping_C_K2_CanActivateAbility::ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_Player_Ping_C_K2_CanActivateAbility, CallFunc_IsValid_ReturnValue) == 0x000079, "Member 'AB_Player_Ping_C_K2_CanActivateAbility::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_Player_Ping_C_K2_CanActivateAbility, K2Node_DynamicCast_AsCACharacter_Main_Player) == 0x000080, "Member 'AB_Player_Ping_C_K2_CanActivateAbility::K2Node_DynamicCast_AsCACharacter_Main_Player' has a wrong offset!");
static_assert(offsetof(AB_Player_Ping_C_K2_CanActivateAbility, K2Node_DynamicCast_bSuccess) == 0x000088, "Member 'AB_Player_Ping_C_K2_CanActivateAbility::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AB_Player_Ping_C_K2_CanActivateAbility, CallFunc_IsLookInputIgnored_ReturnValue) == 0x000089, "Member 'AB_Player_Ping_C_K2_CanActivateAbility::CallFunc_IsLookInputIgnored_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_Player_Ping_C_K2_CanActivateAbility, CallFunc_Not_PreBool_ReturnValue) == 0x00008A, "Member 'AB_Player_Ping_C_K2_CanActivateAbility::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

}

