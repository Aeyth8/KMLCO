#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_TeamReveal

#include "Basic.hpp"

#include "Keaton_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_TeamReveal.BP_TeamReveal_C.ExecuteUbergraph_BP_TeamReveal
// 0x02D0 (0x02D0 - 0x0000)
struct BP_TeamReveal_C_ExecuteUbergraph_BP_TeamReveal final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCATeamID                              K2Node_MakeStruct_CATeamID;                        // 0x0004(0x0004)(NoDestructor, HasGetValueTypeHash)
	struct FTeamData                              K2Node_CustomEvent_team_data;                      // 0x0008(0x0030)(ConstParm, NoDestructor)
	class ACAGameState*                           CallFunc_GetGameState_ReturnValue;                 // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EYMatchState                                  K2Node_CustomEvent_newMatchState;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42[0x6];                                       // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCATeamID                              CallFunc_GetTeamID_ReturnValue;                    // 0x0050(0x0004)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Player_C*                           K2Node_DynamicCast_AsBP_Player;                    // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        K2Node_CustomEvent_OverlappedComponent_1;          // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_OtherActor_1;                   // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        K2Node_CustomEvent_OtherComp_1;                    // 0x0080(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_OtherBodyIndex_1;               // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bFromSweep;                     // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D[0x3];                                       // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_CustomEvent_SweepResult;                    // 0x0090(0x0090)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class ABP_Player_C*                           K2Node_DynamicCast_AsBP_Player_1;                  // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_129[0x7];                                      // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        K2Node_CustomEvent_OverlappedComponent;            // 0x0138(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_OtherActor;                     // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        K2Node_CustomEvent_OtherComp;                      // 0x0148(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_OtherBodyIndex;                 // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_154[0x4];                                      // 0x0154(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACAPlayerController*                    K2Node_DynamicCast_AsCAPlayer_Controller;          // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_161[0x7];                                      // 0x0161(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Player_C*                           K2Node_DynamicCast_AsBP_Player_2;                  // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_171[0x7];                                      // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACAPlayerController*                    CallFunc_GetAssociatedPlayerController_ReturnValue; // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsRevealPinged_ReturnValue;               // 0x0181(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_182[0x6];                                      // 0x0182(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCAARcLensPingTypeDefinition           CallFunc_SetPingData_ping_data;                    // 0x0188(0x00B0)()
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x0239(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23A[0x6];                                      // 0x023A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ACAGameState*                           CallFunc_GetGameState_ReturnValue_1;               // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(struct FTeamData& Team_data)>  K2Node_CreateDelegate_OutputDelegate;              // 0x0248(0x0014)(ZeroConstructor, NoDestructor)
	TDelegate<void(class USceneComponent* OverlappedComponent, class AActor* OtherActor, class USceneComponent* OtherComp, int32 OtherBodyIndex)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x025C(0x0014)(ZeroConstructor, NoDestructor)
	struct FCATeamID                              K2Node_MakeStruct_CATeamID_1;                      // 0x0270(0x0004)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_274[0x4];                                      // 0x0274(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_2;                   // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_TeamIDTeamID_ReturnValue;      // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_281[0x3];                                      // 0x0281(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCATeamID                              CallFunc_GetTeamID_ReturnValue_1;                  // 0x0284(0x0004)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_TeamIDTeamID_ReturnValue_1;    // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_289[0x7];                                      // 0x0289(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACAPlayerState*                         CallFunc_GetMVPForTeam_ReturnValue;                // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_3;                   // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x02A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x02A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A3[0x1];                                      // 0x02A3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class USceneComponent* OverlappedComponent, class AActor* OtherActor, class USceneComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x02A4(0x0014)(ZeroConstructor, NoDestructor)
	TDelegate<void(EYMatchState NewMatchState)>   K2Node_CreateDelegate_OutputDelegate_3;            // 0x02B8(0x0014)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_NotEqual_TeamIDTeamID_ReturnValue;        // 0x02CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x02CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_TeamReveal_C_ExecuteUbergraph_BP_TeamReveal) == 0x000008, "Wrong alignment on BP_TeamReveal_C_ExecuteUbergraph_BP_TeamReveal");
static_assert(sizeof(BP_TeamReveal_C_ExecuteUbergraph_BP_TeamReveal) == 0x0002D0, "Wrong size on BP_TeamReveal_C_ExecuteUbergraph_BP_TeamReveal");
static_assert(offsetof(BP_TeamReveal_C_ExecuteUbergraph_BP_TeamReveal, EntryPoint) == 0x000000, "Member 'BP_TeamReveal_C_ExecuteUbergraph_BP_TeamReveal::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_TeamReveal_C_ExecuteUbergraph_BP_TeamReveal, K2Node_MakeStruct_CATeamID) == 0x000004, "Member 'BP_TeamReveal_C_ExecuteUbergraph_BP_TeamReveal::K2Node_MakeStruct_CATeamID' has a wrong offset!");
static_assert(offsetof(BP_TeamReveal_C_ExecuteUbergraph_BP_TeamReveal, K2Node_CustomEvent_team_data) == 0x000008, "Member 'BP_TeamReveal_C_ExecuteUbergraph_BP_TeamReveal::K2Node_CustomEvent_team_data' has a wrong offset!");
static_assert(offsetof(BP_TeamReveal_C_ExecuteUbergraph_BP_TeamReveal, CallFunc_GetGameState_ReturnValue) == 0x000038, "Member 'BP_TeamReveal_C_ExecuteUbergraph_BP_TeamReveal::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TeamReveal_C_ExecuteUbergraph_BP_TeamReveal, K2Node_CustomEvent_newMatchState) == 0x000040, "Member 'BP_TeamReveal_C_ExecuteUbergraph_BP_TeamReveal::K2Node_CustomEvent_newMatchState' has a wrong offset!");
static_assert(offsetof(BP_TeamReveal_C_ExecuteUbergraph_BP_TeamReveal, K2Node_SwitchEnum_CmpSuccess) == 0x000041, "Member 'BP_TeamReveal_C_ExecuteUbergraph_BP_TeamReveal::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_TeamReveal_C_ExecuteUbergraph_BP_TeamReveal, CallFunc_GetOwner_ReturnValue) == 0x000048, "Member 'BP_TeamReveal_C_ExecuteUbergraph_BP_TeamReveal::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TeamReveal_C_ExecuteUbergraph_BP_TeamReveal, CallFunc_GetTeamID_ReturnValue) == 0x000050, "Member 'BP_TeamReveal_C_ExecuteUbergraph_BP_TeamReveal::CallFunc_GetTeamID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TeamReveal_C_ExecuteUbergraph_BP_TeamReveal, CallFunc_GetOwner_ReturnValue_1) == 0x000058, "Member 'BP_TeamReveal_C_ExecuteUbergraph_BP_TeamReveal::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TeamReveal_C_ExecuteUbergraph_BP_TeamReveal, K2Node_DynamicCast_AsBP_Player) == 0x000060, "Member 'BP_TeamReveal_C_ExecuteUbergraph_BP_TeamReveal::K2Node_DynamicCast_AsBP_Player' has a wrong offset!");
static_assert(offsetof(BP_TeamReveal_C_ExecuteUbergraph_BP_TeamReveal, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'BP_TeamReveal_C_ExecuteUbergraph_BP_TeamReveal::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_TeamReveal_C_ExecuteUbergraph_BP_TeamReveal, K2Node_CustomEvent_OverlappedComponent_1) == 0x000070, "Member 'BP_TeamReveal_C_ExecuteUbergraph_BP_TeamReveal::K2Node_CustomEvent_OverlappedComponent_1' has a wrong offset!");
static_assert(offsetof(BP_TeamReveal_C_ExecuteUbergraph_BP_TeamReveal, K2Node_CustomEvent_OtherActor_1) == 0x000078, "Member 'BP_TeamReveal_C_ExecuteUbergraph_BP_TeamReveal::K2Node_CustomEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(BP_TeamReveal_C_ExecuteUbergraph_BP_TeamReveal, K2Node_CustomEvent_OtherComp_1) == 0x000080, "Member 'BP_TeamReveal_C_ExecuteUbergraph_BP_TeamReveal::K2Node_CustomEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(BP_TeamReveal_C_ExecuteUbergraph_BP_TeamReveal, K2Node_CustomEvent_OtherBodyIndex_1) == 0x000088, "Member 'BP_TeamReveal_C_ExecuteUbergraph_BP_TeamReveal::K2Node_CustomEvent_OtherBodyIndex_1' has a wrong offset!");
static_assert(offsetof(BP_TeamReveal_C_ExecuteUbergraph_BP_TeamReveal, K2Node_CustomEvent_bFromSweep) == 0x00008C, "Member 'BP_TeamReveal_C_ExecuteUbergraph_BP_TeamReveal::K2Node_CustomEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_TeamReveal_C_ExecuteUbergraph_BP_TeamReveal, K2Node_CustomEvent_SweepResult) == 0x000090, "Member 'BP_TeamReveal_C_ExecuteUbergraph_BP_TeamReveal::K2Node_CustomEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(BP_TeamReveal_C_ExecuteUbergraph_BP_TeamReveal, K2Node_DynamicCast_AsBP_Player_1) == 0x000120, "Member 'BP_TeamReveal_C_ExecuteUbergraph_BP_TeamReveal::K2Node_DynamicCast_AsBP_Player_1' has a wrong offset!");
static_assert(offsetof(BP_TeamReveal_C_ExecuteUbergraph_BP_TeamReveal, K2Node_DynamicCast_bSuccess_1) == 0x000128, "Member 'BP_TeamReveal_C_ExecuteUbergraph_BP_TeamReveal::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_TeamReveal_C_ExecuteUbergraph_BP_TeamReveal, CallFunc_GetController_ReturnValue) == 0x000130, "Member 'BP_TeamReveal_C_ExecuteUbergraph_BP_TeamReveal::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TeamReveal_C_ExecuteUbergraph_BP_TeamReveal, K2Node_CustomEvent_OverlappedComponent) == 0x000138, "Member 'BP_TeamReveal_C_ExecuteUbergraph_BP_TeamReveal::K2Node_CustomEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_TeamReveal_C_ExecuteUbergraph_BP_TeamReveal, K2Node_CustomEvent_OtherActor) == 0x000140, "Member 'BP_TeamReveal_C_ExecuteUbergraph_BP_TeamReveal::K2Node_CustomEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_TeamReveal_C_ExecuteUbergraph_BP_TeamReveal, K2Node_CustomEvent_OtherComp) == 0x000148, "Member 'BP_TeamReveal_C_ExecuteUbergraph_BP_TeamReveal::K2Node_CustomEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_TeamReveal_C_ExecuteUbergraph_BP_TeamReveal, K2Node_CustomEvent_OtherBodyIndex) == 0x000150, "Member 'BP_TeamReveal_C_ExecuteUbergraph_BP_TeamReveal::K2Node_CustomEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_TeamReveal_C_ExecuteUbergraph_BP_TeamReveal, K2Node_DynamicCast_AsCAPlayer_Controller) == 0x000158, "Member 'BP_TeamReveal_C_ExecuteUbergraph_BP_TeamReveal::K2Node_DynamicCast_AsCAPlayer_Controller' has a wrong offset!");
static_assert(offsetof(BP_TeamReveal_C_ExecuteUbergraph_BP_TeamReveal, K2Node_DynamicCast_bSuccess_2) == 0x000160, "Member 'BP_TeamReveal_C_ExecuteUbergraph_BP_TeamReveal::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_TeamReveal_C_ExecuteUbergraph_BP_TeamReveal, K2Node_DynamicCast_AsBP_Player_2) == 0x000168, "Member 'BP_TeamReveal_C_ExecuteUbergraph_BP_TeamReveal::K2Node_DynamicCast_AsBP_Player_2' has a wrong offset!");
static_assert(offsetof(BP_TeamReveal_C_ExecuteUbergraph_BP_TeamReveal, K2Node_DynamicCast_bSuccess_3) == 0x000170, "Member 'BP_TeamReveal_C_ExecuteUbergraph_BP_TeamReveal::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_TeamReveal_C_ExecuteUbergraph_BP_TeamReveal, CallFunc_GetAssociatedPlayerController_ReturnValue) == 0x000178, "Member 'BP_TeamReveal_C_ExecuteUbergraph_BP_TeamReveal::CallFunc_GetAssociatedPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TeamReveal_C_ExecuteUbergraph_BP_TeamReveal, CallFunc_IsValid_ReturnValue) == 0x000180, "Member 'BP_TeamReveal_C_ExecuteUbergraph_BP_TeamReveal::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TeamReveal_C_ExecuteUbergraph_BP_TeamReveal, CallFunc_IsRevealPinged_ReturnValue) == 0x000181, "Member 'BP_TeamReveal_C_ExecuteUbergraph_BP_TeamReveal::CallFunc_IsRevealPinged_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TeamReveal_C_ExecuteUbergraph_BP_TeamReveal, CallFunc_SetPingData_ping_data) == 0x000188, "Member 'BP_TeamReveal_C_ExecuteUbergraph_BP_TeamReveal::CallFunc_SetPingData_ping_data' has a wrong offset!");
static_assert(offsetof(BP_TeamReveal_C_ExecuteUbergraph_BP_TeamReveal, CallFunc_BooleanAND_ReturnValue) == 0x000238, "Member 'BP_TeamReveal_C_ExecuteUbergraph_BP_TeamReveal::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TeamReveal_C_ExecuteUbergraph_BP_TeamReveal, CallFunc_IsServer_ReturnValue) == 0x000239, "Member 'BP_TeamReveal_C_ExecuteUbergraph_BP_TeamReveal::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TeamReveal_C_ExecuteUbergraph_BP_TeamReveal, CallFunc_GetGameState_ReturnValue_1) == 0x000240, "Member 'BP_TeamReveal_C_ExecuteUbergraph_BP_TeamReveal::CallFunc_GetGameState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TeamReveal_C_ExecuteUbergraph_BP_TeamReveal, K2Node_CreateDelegate_OutputDelegate) == 0x000248, "Member 'BP_TeamReveal_C_ExecuteUbergraph_BP_TeamReveal::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_TeamReveal_C_ExecuteUbergraph_BP_TeamReveal, K2Node_CreateDelegate_OutputDelegate_1) == 0x00025C, "Member 'BP_TeamReveal_C_ExecuteUbergraph_BP_TeamReveal::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_TeamReveal_C_ExecuteUbergraph_BP_TeamReveal, K2Node_MakeStruct_CATeamID_1) == 0x000270, "Member 'BP_TeamReveal_C_ExecuteUbergraph_BP_TeamReveal::K2Node_MakeStruct_CATeamID_1' has a wrong offset!");
static_assert(offsetof(BP_TeamReveal_C_ExecuteUbergraph_BP_TeamReveal, CallFunc_GetOwner_ReturnValue_2) == 0x000278, "Member 'BP_TeamReveal_C_ExecuteUbergraph_BP_TeamReveal::CallFunc_GetOwner_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TeamReveal_C_ExecuteUbergraph_BP_TeamReveal, CallFunc_EqualEqual_TeamIDTeamID_ReturnValue) == 0x000280, "Member 'BP_TeamReveal_C_ExecuteUbergraph_BP_TeamReveal::CallFunc_EqualEqual_TeamIDTeamID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TeamReveal_C_ExecuteUbergraph_BP_TeamReveal, CallFunc_GetTeamID_ReturnValue_1) == 0x000284, "Member 'BP_TeamReveal_C_ExecuteUbergraph_BP_TeamReveal::CallFunc_GetTeamID_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TeamReveal_C_ExecuteUbergraph_BP_TeamReveal, CallFunc_EqualEqual_TeamIDTeamID_ReturnValue_1) == 0x000288, "Member 'BP_TeamReveal_C_ExecuteUbergraph_BP_TeamReveal::CallFunc_EqualEqual_TeamIDTeamID_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TeamReveal_C_ExecuteUbergraph_BP_TeamReveal, CallFunc_GetMVPForTeam_ReturnValue) == 0x000290, "Member 'BP_TeamReveal_C_ExecuteUbergraph_BP_TeamReveal::CallFunc_GetMVPForTeam_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TeamReveal_C_ExecuteUbergraph_BP_TeamReveal, CallFunc_GetOwner_ReturnValue_3) == 0x000298, "Member 'BP_TeamReveal_C_ExecuteUbergraph_BP_TeamReveal::CallFunc_GetOwner_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_TeamReveal_C_ExecuteUbergraph_BP_TeamReveal, CallFunc_IsValid_ReturnValue_1) == 0x0002A0, "Member 'BP_TeamReveal_C_ExecuteUbergraph_BP_TeamReveal::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TeamReveal_C_ExecuteUbergraph_BP_TeamReveal, CallFunc_IsValid_ReturnValue_2) == 0x0002A1, "Member 'BP_TeamReveal_C_ExecuteUbergraph_BP_TeamReveal::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TeamReveal_C_ExecuteUbergraph_BP_TeamReveal, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0002A2, "Member 'BP_TeamReveal_C_ExecuteUbergraph_BP_TeamReveal::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TeamReveal_C_ExecuteUbergraph_BP_TeamReveal, K2Node_CreateDelegate_OutputDelegate_2) == 0x0002A4, "Member 'BP_TeamReveal_C_ExecuteUbergraph_BP_TeamReveal::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_TeamReveal_C_ExecuteUbergraph_BP_TeamReveal, K2Node_CreateDelegate_OutputDelegate_3) == 0x0002B8, "Member 'BP_TeamReveal_C_ExecuteUbergraph_BP_TeamReveal::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(BP_TeamReveal_C_ExecuteUbergraph_BP_TeamReveal, CallFunc_NotEqual_TeamIDTeamID_ReturnValue) == 0x0002CC, "Member 'BP_TeamReveal_C_ExecuteUbergraph_BP_TeamReveal::CallFunc_NotEqual_TeamIDTeamID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TeamReveal_C_ExecuteUbergraph_BP_TeamReveal, CallFunc_BooleanAND_ReturnValue_1) == 0x0002CD, "Member 'BP_TeamReveal_C_ExecuteUbergraph_BP_TeamReveal::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function BP_TeamReveal.BP_TeamReveal_C.CE_EndOverlap
// 0x0020 (0x0020 - 0x0000)
struct BP_TeamReveal_C_CE_EndOverlap final
{
public:
	class USceneComponent*                        OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TeamReveal_C_CE_EndOverlap) == 0x000008, "Wrong alignment on BP_TeamReveal_C_CE_EndOverlap");
static_assert(sizeof(BP_TeamReveal_C_CE_EndOverlap) == 0x000020, "Wrong size on BP_TeamReveal_C_CE_EndOverlap");
static_assert(offsetof(BP_TeamReveal_C_CE_EndOverlap, OverlappedComponent) == 0x000000, "Member 'BP_TeamReveal_C_CE_EndOverlap::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_TeamReveal_C_CE_EndOverlap, OtherActor) == 0x000008, "Member 'BP_TeamReveal_C_CE_EndOverlap::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_TeamReveal_C_CE_EndOverlap, OtherComp) == 0x000010, "Member 'BP_TeamReveal_C_CE_EndOverlap::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_TeamReveal_C_CE_EndOverlap, OtherBodyIndex) == 0x000018, "Member 'BP_TeamReveal_C_CE_EndOverlap::OtherBodyIndex' has a wrong offset!");

// Function BP_TeamReveal.BP_TeamReveal_C.CE_BeginOverlap
// 0x00B0 (0x00B0 - 0x0000)
struct BP_TeamReveal_C_CE_BeginOverlap final
{
public:
	class USceneComponent*                        OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x0090)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_TeamReveal_C_CE_BeginOverlap) == 0x000008, "Wrong alignment on BP_TeamReveal_C_CE_BeginOverlap");
static_assert(sizeof(BP_TeamReveal_C_CE_BeginOverlap) == 0x0000B0, "Wrong size on BP_TeamReveal_C_CE_BeginOverlap");
static_assert(offsetof(BP_TeamReveal_C_CE_BeginOverlap, OverlappedComponent) == 0x000000, "Member 'BP_TeamReveal_C_CE_BeginOverlap::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_TeamReveal_C_CE_BeginOverlap, OtherActor) == 0x000008, "Member 'BP_TeamReveal_C_CE_BeginOverlap::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_TeamReveal_C_CE_BeginOverlap, OtherComp) == 0x000010, "Member 'BP_TeamReveal_C_CE_BeginOverlap::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_TeamReveal_C_CE_BeginOverlap, OtherBodyIndex) == 0x000018, "Member 'BP_TeamReveal_C_CE_BeginOverlap::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_TeamReveal_C_CE_BeginOverlap, bFromSweep) == 0x00001C, "Member 'BP_TeamReveal_C_CE_BeginOverlap::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_TeamReveal_C_CE_BeginOverlap, SweepResult) == 0x000020, "Member 'BP_TeamReveal_C_CE_BeginOverlap::SweepResult' has a wrong offset!");

// Function BP_TeamReveal.BP_TeamReveal_C.MatchStateChanged
// 0x0001 (0x0001 - 0x0000)
struct BP_TeamReveal_C_MatchStateChanged final
{
public:
	EYMatchState                                  NewMatchState;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TeamReveal_C_MatchStateChanged) == 0x000001, "Wrong alignment on BP_TeamReveal_C_MatchStateChanged");
static_assert(sizeof(BP_TeamReveal_C_MatchStateChanged) == 0x000001, "Wrong size on BP_TeamReveal_C_MatchStateChanged");
static_assert(offsetof(BP_TeamReveal_C_MatchStateChanged, NewMatchState) == 0x000000, "Member 'BP_TeamReveal_C_MatchStateChanged::NewMatchState' has a wrong offset!");

// Function BP_TeamReveal.BP_TeamReveal_C.LootUpdated
// 0x0030 (0x0030 - 0x0000)
struct BP_TeamReveal_C_LootUpdated final
{
public:
	struct FTeamData                              Team_data;                                         // 0x0000(0x0030)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(BP_TeamReveal_C_LootUpdated) == 0x000004, "Wrong alignment on BP_TeamReveal_C_LootUpdated");
static_assert(sizeof(BP_TeamReveal_C_LootUpdated) == 0x000030, "Wrong size on BP_TeamReveal_C_LootUpdated");
static_assert(offsetof(BP_TeamReveal_C_LootUpdated, Team_data) == 0x000000, "Member 'BP_TeamReveal_C_LootUpdated::Team_data' has a wrong offset!");

// Function BP_TeamReveal.BP_TeamReveal_C.RevealPlayerOnMap
// 0x0001 (0x0001 - 0x0000)
struct BP_TeamReveal_C_RevealPlayerOnMap final
{
public:
	bool                                          RevealedPlayer;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_TeamReveal_C_RevealPlayerOnMap) == 0x000001, "Wrong alignment on BP_TeamReveal_C_RevealPlayerOnMap");
static_assert(sizeof(BP_TeamReveal_C_RevealPlayerOnMap) == 0x000001, "Wrong size on BP_TeamReveal_C_RevealPlayerOnMap");
static_assert(offsetof(BP_TeamReveal_C_RevealPlayerOnMap, RevealedPlayer) == 0x000000, "Member 'BP_TeamReveal_C_RevealPlayerOnMap::RevealedPlayer' has a wrong offset!");

// Function BP_TeamReveal.BP_TeamReveal_C.ResetMapIcon
// 0x00D8 (0x00D8 - 0x0000)
struct BP_TeamReveal_C_ResetMapIcon final
{
public:
	bool                                          NeedRegistration;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FCATeamID>                      CallFunc_GetAllTeams_ReturnValue;                  // 0x0008(0x0010)(ReferenceParm)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayerLocationOffset_ValueX;           // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayerLocationOffset_ValueY;           // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayerLocationOffset_ValueZ;           // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector_NetQuantize                    K2Node_MakeStruct_Vector_NetQuantize;              // 0x0034(0x000C)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCAMapEntityPayload                    K2Node_MakeStruct_CAMapEntityPayload;              // 0x0048(0x0070)()
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x00B8(0x0008)(NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_2;                   // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RegisterMapEntity_ReturnValue;            // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TeamReveal_C_ResetMapIcon) == 0x000008, "Wrong alignment on BP_TeamReveal_C_ResetMapIcon");
static_assert(sizeof(BP_TeamReveal_C_ResetMapIcon) == 0x0000D8, "Wrong size on BP_TeamReveal_C_ResetMapIcon");
static_assert(offsetof(BP_TeamReveal_C_ResetMapIcon, NeedRegistration) == 0x000000, "Member 'BP_TeamReveal_C_ResetMapIcon::NeedRegistration' has a wrong offset!");
static_assert(offsetof(BP_TeamReveal_C_ResetMapIcon, CallFunc_GetAllTeams_ReturnValue) == 0x000008, "Member 'BP_TeamReveal_C_ResetMapIcon::CallFunc_GetAllTeams_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TeamReveal_C_ResetMapIcon, CallFunc_Array_RemoveItem_ReturnValue) == 0x000018, "Member 'BP_TeamReveal_C_ResetMapIcon::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TeamReveal_C_ResetMapIcon, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000019, "Member 'BP_TeamReveal_C_ResetMapIcon::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TeamReveal_C_ResetMapIcon, CallFunc_GetOwner_ReturnValue) == 0x000020, "Member 'BP_TeamReveal_C_ResetMapIcon::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TeamReveal_C_ResetMapIcon, CallFunc_GetPlayerLocationOffset_ValueX) == 0x000028, "Member 'BP_TeamReveal_C_ResetMapIcon::CallFunc_GetPlayerLocationOffset_ValueX' has a wrong offset!");
static_assert(offsetof(BP_TeamReveal_C_ResetMapIcon, CallFunc_GetPlayerLocationOffset_ValueY) == 0x00002C, "Member 'BP_TeamReveal_C_ResetMapIcon::CallFunc_GetPlayerLocationOffset_ValueY' has a wrong offset!");
static_assert(offsetof(BP_TeamReveal_C_ResetMapIcon, CallFunc_GetPlayerLocationOffset_ValueZ) == 0x000030, "Member 'BP_TeamReveal_C_ResetMapIcon::CallFunc_GetPlayerLocationOffset_ValueZ' has a wrong offset!");
static_assert(offsetof(BP_TeamReveal_C_ResetMapIcon, K2Node_MakeStruct_Vector_NetQuantize) == 0x000034, "Member 'BP_TeamReveal_C_ResetMapIcon::K2Node_MakeStruct_Vector_NetQuantize' has a wrong offset!");
static_assert(offsetof(BP_TeamReveal_C_ResetMapIcon, CallFunc_RandomFloatInRange_ReturnValue) == 0x000040, "Member 'BP_TeamReveal_C_ResetMapIcon::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TeamReveal_C_ResetMapIcon, K2Node_MakeStruct_CAMapEntityPayload) == 0x000048, "Member 'BP_TeamReveal_C_ResetMapIcon::K2Node_MakeStruct_CAMapEntityPayload' has a wrong offset!");
static_assert(offsetof(BP_TeamReveal_C_ResetMapIcon, CallFunc_K2_SetTimer_ReturnValue) == 0x0000B8, "Member 'BP_TeamReveal_C_ResetMapIcon::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TeamReveal_C_ResetMapIcon, CallFunc_GetOwner_ReturnValue_1) == 0x0000C0, "Member 'BP_TeamReveal_C_ResetMapIcon::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TeamReveal_C_ResetMapIcon, CallFunc_GetOwner_ReturnValue_2) == 0x0000C8, "Member 'BP_TeamReveal_C_ResetMapIcon::CallFunc_GetOwner_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_TeamReveal_C_ResetMapIcon, CallFunc_RegisterMapEntity_ReturnValue) == 0x0000D0, "Member 'BP_TeamReveal_C_ResetMapIcon::CallFunc_RegisterMapEntity_ReturnValue' has a wrong offset!");

// Function BP_TeamReveal.BP_TeamReveal_C.UpdateMapIcon
// 0x0098 (0x0098 - 0x0000)
struct BP_TeamReveal_C_UpdateMapIcon final
{
public:
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayerLocationOffset_ValueX;           // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayerLocationOffset_ValueY;           // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayerLocationOffset_ValueZ;           // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector_NetQuantize                    K2Node_MakeStruct_Vector_NetQuantize;              // 0x001C(0x000C)(NoDestructor, HasGetValueTypeHash)
	struct FCAMapEntityPayload                    K2Node_MakeStruct_CAMapEntityPayload;              // 0x0028(0x0070)()
};
static_assert(alignof(BP_TeamReveal_C_UpdateMapIcon) == 0x000008, "Wrong alignment on BP_TeamReveal_C_UpdateMapIcon");
static_assert(sizeof(BP_TeamReveal_C_UpdateMapIcon) == 0x000098, "Wrong size on BP_TeamReveal_C_UpdateMapIcon");
static_assert(offsetof(BP_TeamReveal_C_UpdateMapIcon, CallFunc_GetOwner_ReturnValue) == 0x000000, "Member 'BP_TeamReveal_C_UpdateMapIcon::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TeamReveal_C_UpdateMapIcon, CallFunc_GetOwner_ReturnValue_1) == 0x000008, "Member 'BP_TeamReveal_C_UpdateMapIcon::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_TeamReveal_C_UpdateMapIcon, CallFunc_GetPlayerLocationOffset_ValueX) == 0x000010, "Member 'BP_TeamReveal_C_UpdateMapIcon::CallFunc_GetPlayerLocationOffset_ValueX' has a wrong offset!");
static_assert(offsetof(BP_TeamReveal_C_UpdateMapIcon, CallFunc_GetPlayerLocationOffset_ValueY) == 0x000014, "Member 'BP_TeamReveal_C_UpdateMapIcon::CallFunc_GetPlayerLocationOffset_ValueY' has a wrong offset!");
static_assert(offsetof(BP_TeamReveal_C_UpdateMapIcon, CallFunc_GetPlayerLocationOffset_ValueZ) == 0x000018, "Member 'BP_TeamReveal_C_UpdateMapIcon::CallFunc_GetPlayerLocationOffset_ValueZ' has a wrong offset!");
static_assert(offsetof(BP_TeamReveal_C_UpdateMapIcon, K2Node_MakeStruct_Vector_NetQuantize) == 0x00001C, "Member 'BP_TeamReveal_C_UpdateMapIcon::K2Node_MakeStruct_Vector_NetQuantize' has a wrong offset!");
static_assert(offsetof(BP_TeamReveal_C_UpdateMapIcon, K2Node_MakeStruct_CAMapEntityPayload) == 0x000028, "Member 'BP_TeamReveal_C_UpdateMapIcon::K2Node_MakeStruct_CAMapEntityPayload' has a wrong offset!");

// Function BP_TeamReveal.BP_TeamReveal_C.GetPlayerLocationOffset
// 0x0040 (0x0040 - 0x0000)
struct BP_TeamReveal_C_GetPlayerLocationOffset final
{
public:
	class AActor*                                 ActortoLocate;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OffsetX_0;                                         // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OffsetY_0;                                         // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ValueX;                                            // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ValueY;                                            // 0x0014(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ValueZ;                                            // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TeamReveal_C_GetPlayerLocationOffset) == 0x000008, "Wrong alignment on BP_TeamReveal_C_GetPlayerLocationOffset");
static_assert(sizeof(BP_TeamReveal_C_GetPlayerLocationOffset) == 0x000040, "Wrong size on BP_TeamReveal_C_GetPlayerLocationOffset");
static_assert(offsetof(BP_TeamReveal_C_GetPlayerLocationOffset, ActortoLocate) == 0x000000, "Member 'BP_TeamReveal_C_GetPlayerLocationOffset::ActortoLocate' has a wrong offset!");
static_assert(offsetof(BP_TeamReveal_C_GetPlayerLocationOffset, OffsetX_0) == 0x000008, "Member 'BP_TeamReveal_C_GetPlayerLocationOffset::OffsetX_0' has a wrong offset!");
static_assert(offsetof(BP_TeamReveal_C_GetPlayerLocationOffset, OffsetY_0) == 0x00000C, "Member 'BP_TeamReveal_C_GetPlayerLocationOffset::OffsetY_0' has a wrong offset!");
static_assert(offsetof(BP_TeamReveal_C_GetPlayerLocationOffset, ValueX) == 0x000010, "Member 'BP_TeamReveal_C_GetPlayerLocationOffset::ValueX' has a wrong offset!");
static_assert(offsetof(BP_TeamReveal_C_GetPlayerLocationOffset, ValueY) == 0x000014, "Member 'BP_TeamReveal_C_GetPlayerLocationOffset::ValueY' has a wrong offset!");
static_assert(offsetof(BP_TeamReveal_C_GetPlayerLocationOffset, ValueZ) == 0x000018, "Member 'BP_TeamReveal_C_GetPlayerLocationOffset::ValueZ' has a wrong offset!");
static_assert(offsetof(BP_TeamReveal_C_GetPlayerLocationOffset, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00001C, "Member 'BP_TeamReveal_C_GetPlayerLocationOffset::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TeamReveal_C_GetPlayerLocationOffset, CallFunc_BreakVector_X) == 0x000028, "Member 'BP_TeamReveal_C_GetPlayerLocationOffset::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_TeamReveal_C_GetPlayerLocationOffset, CallFunc_BreakVector_Y) == 0x00002C, "Member 'BP_TeamReveal_C_GetPlayerLocationOffset::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_TeamReveal_C_GetPlayerLocationOffset, CallFunc_BreakVector_Z) == 0x000030, "Member 'BP_TeamReveal_C_GetPlayerLocationOffset::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_TeamReveal_C_GetPlayerLocationOffset, CallFunc_Add_FloatFloat_ReturnValue) == 0x000034, "Member 'BP_TeamReveal_C_GetPlayerLocationOffset::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TeamReveal_C_GetPlayerLocationOffset, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000038, "Member 'BP_TeamReveal_C_GetPlayerLocationOffset::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");

// Function BP_TeamReveal.BP_TeamReveal_C.IsRevealPinged
// 0x00B0 (0x00B0 - 0x0000)
struct BP_TeamReveal_C_IsRevealPinged final
{
public:
	class UCAPlayerPingComponent*                 PingComponent;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PlayerID;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UCAArcLensPingComponent*                K2Node_DynamicCast_AsCAArc_Lens_Ping_Component;    // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCAArcLensPingData                     CallFunc_GetPingDataForPlayer_ping_data;           // 0x0020(0x0088)()
	bool                                          CallFunc_GetPingDataForPlayer_ReturnValue;         // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_TeamReveal_C_IsRevealPinged) == 0x000008, "Wrong alignment on BP_TeamReveal_C_IsRevealPinged");
static_assert(sizeof(BP_TeamReveal_C_IsRevealPinged) == 0x0000B0, "Wrong size on BP_TeamReveal_C_IsRevealPinged");
static_assert(offsetof(BP_TeamReveal_C_IsRevealPinged, PingComponent) == 0x000000, "Member 'BP_TeamReveal_C_IsRevealPinged::PingComponent' has a wrong offset!");
static_assert(offsetof(BP_TeamReveal_C_IsRevealPinged, PlayerID) == 0x000008, "Member 'BP_TeamReveal_C_IsRevealPinged::PlayerID' has a wrong offset!");
static_assert(offsetof(BP_TeamReveal_C_IsRevealPinged, ReturnValue) == 0x00000C, "Member 'BP_TeamReveal_C_IsRevealPinged::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TeamReveal_C_IsRevealPinged, K2Node_DynamicCast_AsCAArc_Lens_Ping_Component) == 0x000010, "Member 'BP_TeamReveal_C_IsRevealPinged::K2Node_DynamicCast_AsCAArc_Lens_Ping_Component' has a wrong offset!");
static_assert(offsetof(BP_TeamReveal_C_IsRevealPinged, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_TeamReveal_C_IsRevealPinged::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_TeamReveal_C_IsRevealPinged, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'BP_TeamReveal_C_IsRevealPinged::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TeamReveal_C_IsRevealPinged, CallFunc_GetPingDataForPlayer_ping_data) == 0x000020, "Member 'BP_TeamReveal_C_IsRevealPinged::CallFunc_GetPingDataForPlayer_ping_data' has a wrong offset!");
static_assert(offsetof(BP_TeamReveal_C_IsRevealPinged, CallFunc_GetPingDataForPlayer_ReturnValue) == 0x0000A8, "Member 'BP_TeamReveal_C_IsRevealPinged::CallFunc_GetPingDataForPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TeamReveal_C_IsRevealPinged, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000A9, "Member 'BP_TeamReveal_C_IsRevealPinged::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

}

