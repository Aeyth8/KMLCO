#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AB_Debug_Teleport_Example

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function AB_Debug_Teleport_Example.AB_Debug_Teleport_Example_C.ExecuteUbergraph_AB_Debug_Teleport_Example
// 0x0240 (0x0240 - 0x0000)
struct AB_Debug_Teleport_Example_C_ExecuteUbergraph_AB_Debug_Teleport_Example final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0xC];                                        // 0x0004(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             K2Node_CustomEvent_chosen_location_transform_4;    // 0x0010(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	TDelegate<void(struct FTransform& Chosen_location_transform)> K2Node_CreateDelegate_OutputDelegate;              // 0x0040(0x0014)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_54[0xC];                                       // 0x0054(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             K2Node_CustomEvent_chosen_location_transform_3;    // 0x0060(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	TDelegate<void(struct FTransform& Chosen_location_transform)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0090(0x0014)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_A4[0xC];                                       // 0x00A4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             K2Node_CustomEvent_chosen_location_transform_2;    // 0x00B0(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	TDelegate<void(struct FTransform& Chosen_location_transform)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x00E0(0x0014)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_F4[0xC];                                       // 0x00F4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             K2Node_CustomEvent_chosen_location_transform_1;    // 0x0100(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	TDelegate<void(struct FTransform& Chosen_location_transform)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x0130(0x0014)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_144[0xC];                                      // 0x0144(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             K2Node_CustomEvent_chosen_location_transform;      // 0x0150(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	TDelegate<void(struct FTransform& Chosen_location_transform)> K2Node_CreateDelegate_OutputDelegate_4;            // 0x0180(0x0014)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_194[0xC];                                      // 0x0194(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Temp_struct_Variable;                              // 0x01A0(0x0030)(IsPlainOldData, NoDestructor)
	class UCAWaitTargetData_PickTeleportTarget*   CallFunc_CAWaitTargetData_PickTeleportTarget_ReturnValue; // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D9[0x3];                                      // 0x01D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x01DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x01E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x01F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_BuildString_Vector_ReturnValue;           // 0x0200(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACACharacter_MainPlayer*                K2Node_DynamicCast_AsCACharacter_Main_Player;      // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_221[0x3];                                      // 0x0221(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_TeleportToNearestLocation_out_location;   // 0x0224(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TeleportToNearestLocation_ReturnValue;    // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AB_Debug_Teleport_Example_C_ExecuteUbergraph_AB_Debug_Teleport_Example) == 0x000010, "Wrong alignment on AB_Debug_Teleport_Example_C_ExecuteUbergraph_AB_Debug_Teleport_Example");
static_assert(sizeof(AB_Debug_Teleport_Example_C_ExecuteUbergraph_AB_Debug_Teleport_Example) == 0x000240, "Wrong size on AB_Debug_Teleport_Example_C_ExecuteUbergraph_AB_Debug_Teleport_Example");
static_assert(offsetof(AB_Debug_Teleport_Example_C_ExecuteUbergraph_AB_Debug_Teleport_Example, EntryPoint) == 0x000000, "Member 'AB_Debug_Teleport_Example_C_ExecuteUbergraph_AB_Debug_Teleport_Example::EntryPoint' has a wrong offset!");
static_assert(offsetof(AB_Debug_Teleport_Example_C_ExecuteUbergraph_AB_Debug_Teleport_Example, K2Node_CustomEvent_chosen_location_transform_4) == 0x000010, "Member 'AB_Debug_Teleport_Example_C_ExecuteUbergraph_AB_Debug_Teleport_Example::K2Node_CustomEvent_chosen_location_transform_4' has a wrong offset!");
static_assert(offsetof(AB_Debug_Teleport_Example_C_ExecuteUbergraph_AB_Debug_Teleport_Example, K2Node_CreateDelegate_OutputDelegate) == 0x000040, "Member 'AB_Debug_Teleport_Example_C_ExecuteUbergraph_AB_Debug_Teleport_Example::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(AB_Debug_Teleport_Example_C_ExecuteUbergraph_AB_Debug_Teleport_Example, K2Node_CustomEvent_chosen_location_transform_3) == 0x000060, "Member 'AB_Debug_Teleport_Example_C_ExecuteUbergraph_AB_Debug_Teleport_Example::K2Node_CustomEvent_chosen_location_transform_3' has a wrong offset!");
static_assert(offsetof(AB_Debug_Teleport_Example_C_ExecuteUbergraph_AB_Debug_Teleport_Example, K2Node_CreateDelegate_OutputDelegate_1) == 0x000090, "Member 'AB_Debug_Teleport_Example_C_ExecuteUbergraph_AB_Debug_Teleport_Example::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(AB_Debug_Teleport_Example_C_ExecuteUbergraph_AB_Debug_Teleport_Example, K2Node_CustomEvent_chosen_location_transform_2) == 0x0000B0, "Member 'AB_Debug_Teleport_Example_C_ExecuteUbergraph_AB_Debug_Teleport_Example::K2Node_CustomEvent_chosen_location_transform_2' has a wrong offset!");
static_assert(offsetof(AB_Debug_Teleport_Example_C_ExecuteUbergraph_AB_Debug_Teleport_Example, K2Node_CreateDelegate_OutputDelegate_2) == 0x0000E0, "Member 'AB_Debug_Teleport_Example_C_ExecuteUbergraph_AB_Debug_Teleport_Example::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(AB_Debug_Teleport_Example_C_ExecuteUbergraph_AB_Debug_Teleport_Example, K2Node_CustomEvent_chosen_location_transform_1) == 0x000100, "Member 'AB_Debug_Teleport_Example_C_ExecuteUbergraph_AB_Debug_Teleport_Example::K2Node_CustomEvent_chosen_location_transform_1' has a wrong offset!");
static_assert(offsetof(AB_Debug_Teleport_Example_C_ExecuteUbergraph_AB_Debug_Teleport_Example, K2Node_CreateDelegate_OutputDelegate_3) == 0x000130, "Member 'AB_Debug_Teleport_Example_C_ExecuteUbergraph_AB_Debug_Teleport_Example::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(AB_Debug_Teleport_Example_C_ExecuteUbergraph_AB_Debug_Teleport_Example, K2Node_CustomEvent_chosen_location_transform) == 0x000150, "Member 'AB_Debug_Teleport_Example_C_ExecuteUbergraph_AB_Debug_Teleport_Example::K2Node_CustomEvent_chosen_location_transform' has a wrong offset!");
static_assert(offsetof(AB_Debug_Teleport_Example_C_ExecuteUbergraph_AB_Debug_Teleport_Example, K2Node_CreateDelegate_OutputDelegate_4) == 0x000180, "Member 'AB_Debug_Teleport_Example_C_ExecuteUbergraph_AB_Debug_Teleport_Example::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(AB_Debug_Teleport_Example_C_ExecuteUbergraph_AB_Debug_Teleport_Example, Temp_struct_Variable) == 0x0001A0, "Member 'AB_Debug_Teleport_Example_C_ExecuteUbergraph_AB_Debug_Teleport_Example::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(AB_Debug_Teleport_Example_C_ExecuteUbergraph_AB_Debug_Teleport_Example, CallFunc_CAWaitTargetData_PickTeleportTarget_ReturnValue) == 0x0001D0, "Member 'AB_Debug_Teleport_Example_C_ExecuteUbergraph_AB_Debug_Teleport_Example::CallFunc_CAWaitTargetData_PickTeleportTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_Debug_Teleport_Example_C_ExecuteUbergraph_AB_Debug_Teleport_Example, CallFunc_IsValid_ReturnValue) == 0x0001D8, "Member 'AB_Debug_Teleport_Example_C_ExecuteUbergraph_AB_Debug_Teleport_Example::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_Debug_Teleport_Example_C_ExecuteUbergraph_AB_Debug_Teleport_Example, CallFunc_BreakTransform_Location) == 0x0001DC, "Member 'AB_Debug_Teleport_Example_C_ExecuteUbergraph_AB_Debug_Teleport_Example::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(AB_Debug_Teleport_Example_C_ExecuteUbergraph_AB_Debug_Teleport_Example, CallFunc_BreakTransform_Rotation) == 0x0001E8, "Member 'AB_Debug_Teleport_Example_C_ExecuteUbergraph_AB_Debug_Teleport_Example::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(AB_Debug_Teleport_Example_C_ExecuteUbergraph_AB_Debug_Teleport_Example, CallFunc_BreakTransform_Scale) == 0x0001F4, "Member 'AB_Debug_Teleport_Example_C_ExecuteUbergraph_AB_Debug_Teleport_Example::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(AB_Debug_Teleport_Example_C_ExecuteUbergraph_AB_Debug_Teleport_Example, CallFunc_BuildString_Vector_ReturnValue) == 0x000200, "Member 'AB_Debug_Teleport_Example_C_ExecuteUbergraph_AB_Debug_Teleport_Example::CallFunc_BuildString_Vector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_Debug_Teleport_Example_C_ExecuteUbergraph_AB_Debug_Teleport_Example, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x000210, "Member 'AB_Debug_Teleport_Example_C_ExecuteUbergraph_AB_Debug_Teleport_Example::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_Debug_Teleport_Example_C_ExecuteUbergraph_AB_Debug_Teleport_Example, K2Node_DynamicCast_AsCACharacter_Main_Player) == 0x000218, "Member 'AB_Debug_Teleport_Example_C_ExecuteUbergraph_AB_Debug_Teleport_Example::K2Node_DynamicCast_AsCACharacter_Main_Player' has a wrong offset!");
static_assert(offsetof(AB_Debug_Teleport_Example_C_ExecuteUbergraph_AB_Debug_Teleport_Example, K2Node_DynamicCast_bSuccess) == 0x000220, "Member 'AB_Debug_Teleport_Example_C_ExecuteUbergraph_AB_Debug_Teleport_Example::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AB_Debug_Teleport_Example_C_ExecuteUbergraph_AB_Debug_Teleport_Example, CallFunc_TeleportToNearestLocation_out_location) == 0x000224, "Member 'AB_Debug_Teleport_Example_C_ExecuteUbergraph_AB_Debug_Teleport_Example::CallFunc_TeleportToNearestLocation_out_location' has a wrong offset!");
static_assert(offsetof(AB_Debug_Teleport_Example_C_ExecuteUbergraph_AB_Debug_Teleport_Example, CallFunc_TeleportToNearestLocation_ReturnValue) == 0x000230, "Member 'AB_Debug_Teleport_Example_C_ExecuteUbergraph_AB_Debug_Teleport_Example::CallFunc_TeleportToNearestLocation_ReturnValue' has a wrong offset!");

// Function AB_Debug_Teleport_Example.AB_Debug_Teleport_Example_C.LocationPicked_3AF8E154432F8665FDA1D5BAC2A09795
// 0x0030 (0x0030 - 0x0000)
struct AB_Debug_Teleport_Example_C_LocationPicked_3AF8E154432F8665FDA1D5BAC2A09795 final
{
public:
	struct FTransform                             Chosen_location_transform;                         // 0x0000(0x0030)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AB_Debug_Teleport_Example_C_LocationPicked_3AF8E154432F8665FDA1D5BAC2A09795) == 0x000010, "Wrong alignment on AB_Debug_Teleport_Example_C_LocationPicked_3AF8E154432F8665FDA1D5BAC2A09795");
static_assert(sizeof(AB_Debug_Teleport_Example_C_LocationPicked_3AF8E154432F8665FDA1D5BAC2A09795) == 0x000030, "Wrong size on AB_Debug_Teleport_Example_C_LocationPicked_3AF8E154432F8665FDA1D5BAC2A09795");
static_assert(offsetof(AB_Debug_Teleport_Example_C_LocationPicked_3AF8E154432F8665FDA1D5BAC2A09795, Chosen_location_transform) == 0x000000, "Member 'AB_Debug_Teleport_Example_C_LocationPicked_3AF8E154432F8665FDA1D5BAC2A09795::Chosen_location_transform' has a wrong offset!");

// Function AB_Debug_Teleport_Example.AB_Debug_Teleport_Example_C.ValidData_3AF8E154432F8665FDA1D5BAC2A09795
// 0x0030 (0x0030 - 0x0000)
struct AB_Debug_Teleport_Example_C_ValidData_3AF8E154432F8665FDA1D5BAC2A09795 final
{
public:
	struct FTransform                             Chosen_location_transform;                         // 0x0000(0x0030)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AB_Debug_Teleport_Example_C_ValidData_3AF8E154432F8665FDA1D5BAC2A09795) == 0x000010, "Wrong alignment on AB_Debug_Teleport_Example_C_ValidData_3AF8E154432F8665FDA1D5BAC2A09795");
static_assert(sizeof(AB_Debug_Teleport_Example_C_ValidData_3AF8E154432F8665FDA1D5BAC2A09795) == 0x000030, "Wrong size on AB_Debug_Teleport_Example_C_ValidData_3AF8E154432F8665FDA1D5BAC2A09795");
static_assert(offsetof(AB_Debug_Teleport_Example_C_ValidData_3AF8E154432F8665FDA1D5BAC2A09795, Chosen_location_transform) == 0x000000, "Member 'AB_Debug_Teleport_Example_C_ValidData_3AF8E154432F8665FDA1D5BAC2A09795::Chosen_location_transform' has a wrong offset!");

// Function AB_Debug_Teleport_Example.AB_Debug_Teleport_Example_C.Cancelled_3AF8E154432F8665FDA1D5BAC2A09795
// 0x0030 (0x0030 - 0x0000)
struct AB_Debug_Teleport_Example_C_Cancelled_3AF8E154432F8665FDA1D5BAC2A09795 final
{
public:
	struct FTransform                             Chosen_location_transform;                         // 0x0000(0x0030)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AB_Debug_Teleport_Example_C_Cancelled_3AF8E154432F8665FDA1D5BAC2A09795) == 0x000010, "Wrong alignment on AB_Debug_Teleport_Example_C_Cancelled_3AF8E154432F8665FDA1D5BAC2A09795");
static_assert(sizeof(AB_Debug_Teleport_Example_C_Cancelled_3AF8E154432F8665FDA1D5BAC2A09795) == 0x000030, "Wrong size on AB_Debug_Teleport_Example_C_Cancelled_3AF8E154432F8665FDA1D5BAC2A09795");
static_assert(offsetof(AB_Debug_Teleport_Example_C_Cancelled_3AF8E154432F8665FDA1D5BAC2A09795, Chosen_location_transform) == 0x000000, "Member 'AB_Debug_Teleport_Example_C_Cancelled_3AF8E154432F8665FDA1D5BAC2A09795::Chosen_location_transform' has a wrong offset!");

// Function AB_Debug_Teleport_Example.AB_Debug_Teleport_Example_C.LocationEnter_3AF8E154432F8665FDA1D5BAC2A09795
// 0x0030 (0x0030 - 0x0000)
struct AB_Debug_Teleport_Example_C_LocationEnter_3AF8E154432F8665FDA1D5BAC2A09795 final
{
public:
	struct FTransform                             Chosen_location_transform;                         // 0x0000(0x0030)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AB_Debug_Teleport_Example_C_LocationEnter_3AF8E154432F8665FDA1D5BAC2A09795) == 0x000010, "Wrong alignment on AB_Debug_Teleport_Example_C_LocationEnter_3AF8E154432F8665FDA1D5BAC2A09795");
static_assert(sizeof(AB_Debug_Teleport_Example_C_LocationEnter_3AF8E154432F8665FDA1D5BAC2A09795) == 0x000030, "Wrong size on AB_Debug_Teleport_Example_C_LocationEnter_3AF8E154432F8665FDA1D5BAC2A09795");
static_assert(offsetof(AB_Debug_Teleport_Example_C_LocationEnter_3AF8E154432F8665FDA1D5BAC2A09795, Chosen_location_transform) == 0x000000, "Member 'AB_Debug_Teleport_Example_C_LocationEnter_3AF8E154432F8665FDA1D5BAC2A09795::Chosen_location_transform' has a wrong offset!");

// Function AB_Debug_Teleport_Example.AB_Debug_Teleport_Example_C.LocationLeave_3AF8E154432F8665FDA1D5BAC2A09795
// 0x0030 (0x0030 - 0x0000)
struct AB_Debug_Teleport_Example_C_LocationLeave_3AF8E154432F8665FDA1D5BAC2A09795 final
{
public:
	struct FTransform                             Chosen_location_transform;                         // 0x0000(0x0030)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AB_Debug_Teleport_Example_C_LocationLeave_3AF8E154432F8665FDA1D5BAC2A09795) == 0x000010, "Wrong alignment on AB_Debug_Teleport_Example_C_LocationLeave_3AF8E154432F8665FDA1D5BAC2A09795");
static_assert(sizeof(AB_Debug_Teleport_Example_C_LocationLeave_3AF8E154432F8665FDA1D5BAC2A09795) == 0x000030, "Wrong size on AB_Debug_Teleport_Example_C_LocationLeave_3AF8E154432F8665FDA1D5BAC2A09795");
static_assert(offsetof(AB_Debug_Teleport_Example_C_LocationLeave_3AF8E154432F8665FDA1D5BAC2A09795, Chosen_location_transform) == 0x000000, "Member 'AB_Debug_Teleport_Example_C_LocationLeave_3AF8E154432F8665FDA1D5BAC2A09795::Chosen_location_transform' has a wrong offset!");

}

