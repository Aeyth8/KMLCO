#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_LayoutB

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Keaton_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BP_LayoutB.BP_LayoutB_C
// 0x0030 (0x0310 - 0x02E0)
class UBP_LayoutB_C final : public UCABaseLayout
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UScaleBox*                              SlotA;                                             // 0x02E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScaleBox*                              SlotB;                                             // 0x02F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScaleBox*                              SlotC;                                             // 0x02F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScaleBox*                              SlotD;                                             // 0x0300(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScaleBox*                              SlotE;                                             // 0x0308(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_LayoutB(int32 EntryPoint);
	void Construct();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_LayoutB_C">();
	}
	static class UBP_LayoutB_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_LayoutB_C>();
	}
};
static_assert(alignof(UBP_LayoutB_C) == 0x000008, "Wrong alignment on UBP_LayoutB_C");
static_assert(sizeof(UBP_LayoutB_C) == 0x000310, "Wrong size on UBP_LayoutB_C");
static_assert(offsetof(UBP_LayoutB_C, UberGraphFrame) == 0x0002E0, "Member 'UBP_LayoutB_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_LayoutB_C, SlotA) == 0x0002E8, "Member 'UBP_LayoutB_C::SlotA' has a wrong offset!");
static_assert(offsetof(UBP_LayoutB_C, SlotB) == 0x0002F0, "Member 'UBP_LayoutB_C::SlotB' has a wrong offset!");
static_assert(offsetof(UBP_LayoutB_C, SlotC) == 0x0002F8, "Member 'UBP_LayoutB_C::SlotC' has a wrong offset!");
static_assert(offsetof(UBP_LayoutB_C, SlotD) == 0x000300, "Member 'UBP_LayoutB_C::SlotD' has a wrong offset!");
static_assert(offsetof(UBP_LayoutB_C, SlotE) == 0x000308, "Member 'UBP_LayoutB_C::SlotE' has a wrong offset!");

}

