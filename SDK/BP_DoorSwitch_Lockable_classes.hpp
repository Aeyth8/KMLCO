#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_DoorSwitch_Lockable

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_BaseSwitch_classes.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_DoorSwitch_Lockable.BP_DoorSwitch_Lockable_C
// 0x0090 (0x0490 - 0x0400)
class ABP_DoorSwitch_Lockable_C final : public ABP_BaseSwitch_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_DoorSwitch_Lockable_C;           // 0x0400(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   AR_BG;                                             // 0x0408(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      DoorUsedAR;                                        // 0x0410(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   DoorSwitchARMesh;                                  // 0x0418(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class ABP_DoorBaseV2_C*                       DoorActor;                                         // 0x0420(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      ARLockedMaterial;                                  // 0x0428(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      ARUnlockedMaterial;                                // 0x0430(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      CooldownScreenMaterial;                            // 0x0438(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      AvailableScreenMaterial;                           // 0x0440(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_DoorStateComponent_C*               DoorStateMachineComponent;                         // 0x0448(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DoorLocked;                                        // 0x0450(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_451[0x7];                                      // 0x0451(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraSystem*                         DoorAROpen;                                        // 0x0458(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         DoorARClosed;                                      // 0x0460(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            FoamedGE;                                          // 0x0468(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            LockedGE;                                          // 0x0470(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ABP_DoorBaseV2_C*                       Target;                                            // 0x0478(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            EMP_GE;                                            // 0x0480(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      ARCooldownMaterial;                                // 0x0488(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_DoorSwitch_Lockable(int32 EntryPoint);
	void BndEvt__BP_DoorSwitch_BP_SwitchStateMachine_K2Node_ComponentBoundEvent_0_EventEnabled__DelegateSignature();
	void CE_DoorUnlocked();
	void CE_DoorLocked();
	void ReceiveBeginPlay();
	void BndEvt__BP_SwitchStateMachine_K2Node_ComponentBoundEvent_4_EventDisabled__DelegateSignature();
	void BndEvt__BP_DoorSwitch_Lockable_BP_SwitchStateMachine_K2Node_ComponentBoundEvent_7_EventCooldownToOff__DelegateSignature();
	void BndEvt__BP_DoorSwitch_Lockable_BP_SwitchStateMachine_K2Node_ComponentBoundEvent_6_EventCooldownToOn__DelegateSignature();
	void BndEvt__BP_DoorSwitch_Lockable_BP_SwitchStateMachine_K2Node_ComponentBoundEvent_5_EventSwitchedOff__DelegateSignature();
	void BndEvt__BP_DoorSwitch_Lockable_BP_SwitchStateMachine_K2Node_ComponentBoundEvent_3_EventSwitchedOn__DelegateSignature();
	void CE_DoorEMPFinished();
	void CE_DoorEMP();
	void Unfoamed();
	void Foamed();
	void CE_GameStarted();
	void LockUnlockDoor(bool ShouldLock, class UBP_DoorStateComponent_C* DoorActor_0);
	void RefreshSwitchState();
	void GetOwnerDoorStateMachine();
	void EnableAR(bool UsedARActive);
	void SwitchAR(bool DoorLockedARActive);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_DoorSwitch_Lockable_C">();
	}
	static class ABP_DoorSwitch_Lockable_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_DoorSwitch_Lockable_C>();
	}
};
static_assert(alignof(ABP_DoorSwitch_Lockable_C) == 0x000008, "Wrong alignment on ABP_DoorSwitch_Lockable_C");
static_assert(sizeof(ABP_DoorSwitch_Lockable_C) == 0x000490, "Wrong size on ABP_DoorSwitch_Lockable_C");
static_assert(offsetof(ABP_DoorSwitch_Lockable_C, UberGraphFrame_BP_DoorSwitch_Lockable_C) == 0x000400, "Member 'ABP_DoorSwitch_Lockable_C::UberGraphFrame_BP_DoorSwitch_Lockable_C' has a wrong offset!");
static_assert(offsetof(ABP_DoorSwitch_Lockable_C, AR_BG) == 0x000408, "Member 'ABP_DoorSwitch_Lockable_C::AR_BG' has a wrong offset!");
static_assert(offsetof(ABP_DoorSwitch_Lockable_C, DoorUsedAR) == 0x000410, "Member 'ABP_DoorSwitch_Lockable_C::DoorUsedAR' has a wrong offset!");
static_assert(offsetof(ABP_DoorSwitch_Lockable_C, DoorSwitchARMesh) == 0x000418, "Member 'ABP_DoorSwitch_Lockable_C::DoorSwitchARMesh' has a wrong offset!");
static_assert(offsetof(ABP_DoorSwitch_Lockable_C, DoorActor) == 0x000420, "Member 'ABP_DoorSwitch_Lockable_C::DoorActor' has a wrong offset!");
static_assert(offsetof(ABP_DoorSwitch_Lockable_C, ARLockedMaterial) == 0x000428, "Member 'ABP_DoorSwitch_Lockable_C::ARLockedMaterial' has a wrong offset!");
static_assert(offsetof(ABP_DoorSwitch_Lockable_C, ARUnlockedMaterial) == 0x000430, "Member 'ABP_DoorSwitch_Lockable_C::ARUnlockedMaterial' has a wrong offset!");
static_assert(offsetof(ABP_DoorSwitch_Lockable_C, CooldownScreenMaterial) == 0x000438, "Member 'ABP_DoorSwitch_Lockable_C::CooldownScreenMaterial' has a wrong offset!");
static_assert(offsetof(ABP_DoorSwitch_Lockable_C, AvailableScreenMaterial) == 0x000440, "Member 'ABP_DoorSwitch_Lockable_C::AvailableScreenMaterial' has a wrong offset!");
static_assert(offsetof(ABP_DoorSwitch_Lockable_C, DoorStateMachineComponent) == 0x000448, "Member 'ABP_DoorSwitch_Lockable_C::DoorStateMachineComponent' has a wrong offset!");
static_assert(offsetof(ABP_DoorSwitch_Lockable_C, DoorLocked) == 0x000450, "Member 'ABP_DoorSwitch_Lockable_C::DoorLocked' has a wrong offset!");
static_assert(offsetof(ABP_DoorSwitch_Lockable_C, DoorAROpen) == 0x000458, "Member 'ABP_DoorSwitch_Lockable_C::DoorAROpen' has a wrong offset!");
static_assert(offsetof(ABP_DoorSwitch_Lockable_C, DoorARClosed) == 0x000460, "Member 'ABP_DoorSwitch_Lockable_C::DoorARClosed' has a wrong offset!");
static_assert(offsetof(ABP_DoorSwitch_Lockable_C, FoamedGE) == 0x000468, "Member 'ABP_DoorSwitch_Lockable_C::FoamedGE' has a wrong offset!");
static_assert(offsetof(ABP_DoorSwitch_Lockable_C, LockedGE) == 0x000470, "Member 'ABP_DoorSwitch_Lockable_C::LockedGE' has a wrong offset!");
static_assert(offsetof(ABP_DoorSwitch_Lockable_C, Target) == 0x000478, "Member 'ABP_DoorSwitch_Lockable_C::Target' has a wrong offset!");
static_assert(offsetof(ABP_DoorSwitch_Lockable_C, EMP_GE) == 0x000480, "Member 'ABP_DoorSwitch_Lockable_C::EMP_GE' has a wrong offset!");
static_assert(offsetof(ABP_DoorSwitch_Lockable_C, ARCooldownMaterial) == 0x000488, "Member 'ABP_DoorSwitch_Lockable_C::ARCooldownMaterial' has a wrong offset!");

}

