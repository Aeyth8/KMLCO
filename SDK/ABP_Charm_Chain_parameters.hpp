#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_Charm_Chain

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function ABP_Charm_Chain.ABP_Charm_Chain_C.ExecuteUbergraph_ABP_Charm_Chain
// 0x0100 (0x0100 - 0x0000)
struct ABP_Charm_Chain_C_ExecuteUbergraph_ABP_Charm_Chain final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACACharacter_MainPlayer*                CallFunc_GetCACharacter_CACharacter;               // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_GetSpecificPawnMesh_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue;           // 0x0020(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue_1;         // 0x0050(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0080(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x008C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0098(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInZeroG_ReturnValue;                    // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A5[0x3];                                       // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x00A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_GetOwningComponent_ReturnValue;           // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaTimeX;                           // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue;                     // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D6[0x2];                                       // 0x00D6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x00D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x00E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x00F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Charm_Chain_C_ExecuteUbergraph_ABP_Charm_Chain) == 0x000010, "Wrong alignment on ABP_Charm_Chain_C_ExecuteUbergraph_ABP_Charm_Chain");
static_assert(sizeof(ABP_Charm_Chain_C_ExecuteUbergraph_ABP_Charm_Chain) == 0x000100, "Wrong size on ABP_Charm_Chain_C_ExecuteUbergraph_ABP_Charm_Chain");
static_assert(offsetof(ABP_Charm_Chain_C_ExecuteUbergraph_ABP_Charm_Chain, EntryPoint) == 0x000000, "Member 'ABP_Charm_Chain_C_ExecuteUbergraph_ABP_Charm_Chain::EntryPoint' has a wrong offset!");
static_assert(offsetof(ABP_Charm_Chain_C_ExecuteUbergraph_ABP_Charm_Chain, CallFunc_GetCACharacter_CACharacter) == 0x000008, "Member 'ABP_Charm_Chain_C_ExecuteUbergraph_ABP_Charm_Chain::CallFunc_GetCACharacter_CACharacter' has a wrong offset!");
static_assert(offsetof(ABP_Charm_Chain_C_ExecuteUbergraph_ABP_Charm_Chain, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'ABP_Charm_Chain_C_ExecuteUbergraph_ABP_Charm_Chain::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Charm_Chain_C_ExecuteUbergraph_ABP_Charm_Chain, CallFunc_GetSpecificPawnMesh_ReturnValue) == 0x000018, "Member 'ABP_Charm_Chain_C_ExecuteUbergraph_ABP_Charm_Chain::CallFunc_GetSpecificPawnMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Charm_Chain_C_ExecuteUbergraph_ABP_Charm_Chain, CallFunc_GetSocketTransform_ReturnValue) == 0x000020, "Member 'ABP_Charm_Chain_C_ExecuteUbergraph_ABP_Charm_Chain::CallFunc_GetSocketTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Charm_Chain_C_ExecuteUbergraph_ABP_Charm_Chain, CallFunc_GetSocketTransform_ReturnValue_1) == 0x000050, "Member 'ABP_Charm_Chain_C_ExecuteUbergraph_ABP_Charm_Chain::CallFunc_GetSocketTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Charm_Chain_C_ExecuteUbergraph_ABP_Charm_Chain, CallFunc_BreakTransform_Location) == 0x000080, "Member 'ABP_Charm_Chain_C_ExecuteUbergraph_ABP_Charm_Chain::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(ABP_Charm_Chain_C_ExecuteUbergraph_ABP_Charm_Chain, CallFunc_BreakTransform_Rotation) == 0x00008C, "Member 'ABP_Charm_Chain_C_ExecuteUbergraph_ABP_Charm_Chain::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(ABP_Charm_Chain_C_ExecuteUbergraph_ABP_Charm_Chain, CallFunc_BreakTransform_Scale) == 0x000098, "Member 'ABP_Charm_Chain_C_ExecuteUbergraph_ABP_Charm_Chain::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(ABP_Charm_Chain_C_ExecuteUbergraph_ABP_Charm_Chain, CallFunc_IsInZeroG_ReturnValue) == 0x0000A4, "Member 'ABP_Charm_Chain_C_ExecuteUbergraph_ABP_Charm_Chain::CallFunc_IsInZeroG_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Charm_Chain_C_ExecuteUbergraph_ABP_Charm_Chain, CallFunc_SelectVector_ReturnValue) == 0x0000A8, "Member 'ABP_Charm_Chain_C_ExecuteUbergraph_ABP_Charm_Chain::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Charm_Chain_C_ExecuteUbergraph_ABP_Charm_Chain, CallFunc_GetOwningComponent_ReturnValue) == 0x0000B8, "Member 'ABP_Charm_Chain_C_ExecuteUbergraph_ABP_Charm_Chain::CallFunc_GetOwningComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Charm_Chain_C_ExecuteUbergraph_ABP_Charm_Chain, CallFunc_GetObjectName_ReturnValue) == 0x0000C0, "Member 'ABP_Charm_Chain_C_ExecuteUbergraph_ABP_Charm_Chain::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Charm_Chain_C_ExecuteUbergraph_ABP_Charm_Chain, K2Node_Event_DeltaTimeX) == 0x0000D0, "Member 'ABP_Charm_Chain_C_ExecuteUbergraph_ABP_Charm_Chain::K2Node_Event_DeltaTimeX' has a wrong offset!");
static_assert(offsetof(ABP_Charm_Chain_C_ExecuteUbergraph_ABP_Charm_Chain, CallFunc_Contains_ReturnValue) == 0x0000D4, "Member 'ABP_Charm_Chain_C_ExecuteUbergraph_ABP_Charm_Chain::CallFunc_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Charm_Chain_C_ExecuteUbergraph_ABP_Charm_Chain, CallFunc_Not_PreBool_ReturnValue) == 0x0000D5, "Member 'ABP_Charm_Chain_C_ExecuteUbergraph_ABP_Charm_Chain::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Charm_Chain_C_ExecuteUbergraph_ABP_Charm_Chain, CallFunc_BreakTransform_Location_1) == 0x0000D8, "Member 'ABP_Charm_Chain_C_ExecuteUbergraph_ABP_Charm_Chain::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(ABP_Charm_Chain_C_ExecuteUbergraph_ABP_Charm_Chain, CallFunc_BreakTransform_Rotation_1) == 0x0000E4, "Member 'ABP_Charm_Chain_C_ExecuteUbergraph_ABP_Charm_Chain::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(ABP_Charm_Chain_C_ExecuteUbergraph_ABP_Charm_Chain, CallFunc_BreakTransform_Scale_1) == 0x0000F0, "Member 'ABP_Charm_Chain_C_ExecuteUbergraph_ABP_Charm_Chain::CallFunc_BreakTransform_Scale_1' has a wrong offset!");

// Function ABP_Charm_Chain.ABP_Charm_Chain_C.BlueprintUpdateAnimation
// 0x0004 (0x0004 - 0x0000)
struct ABP_Charm_Chain_C_BlueprintUpdateAnimation final
{
public:
	float                                         DeltaTimeX;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Charm_Chain_C_BlueprintUpdateAnimation) == 0x000004, "Wrong alignment on ABP_Charm_Chain_C_BlueprintUpdateAnimation");
static_assert(sizeof(ABP_Charm_Chain_C_BlueprintUpdateAnimation) == 0x000004, "Wrong size on ABP_Charm_Chain_C_BlueprintUpdateAnimation");
static_assert(offsetof(ABP_Charm_Chain_C_BlueprintUpdateAnimation, DeltaTimeX) == 0x000000, "Member 'ABP_Charm_Chain_C_BlueprintUpdateAnimation::DeltaTimeX' has a wrong offset!");

// Function ABP_Charm_Chain.ABP_Charm_Chain_C.GetCACharacter
// 0x0028 (0x0028 - 0x0000)
struct ABP_Charm_Chain_C_GetCACharacter final
{
public:
	class ACACharacter_MainPlayer*                CACharacter;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwningActor_ReturnValue;               // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACACharacter_MainPlayer*                K2Node_DynamicCast_AsCACharacter_Main_Player;      // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ABP_Charm_Chain_C_GetCACharacter) == 0x000008, "Wrong alignment on ABP_Charm_Chain_C_GetCACharacter");
static_assert(sizeof(ABP_Charm_Chain_C_GetCACharacter) == 0x000028, "Wrong size on ABP_Charm_Chain_C_GetCACharacter");
static_assert(offsetof(ABP_Charm_Chain_C_GetCACharacter, CACharacter) == 0x000000, "Member 'ABP_Charm_Chain_C_GetCACharacter::CACharacter' has a wrong offset!");
static_assert(offsetof(ABP_Charm_Chain_C_GetCACharacter, CallFunc_GetOwningActor_ReturnValue) == 0x000008, "Member 'ABP_Charm_Chain_C_GetCACharacter::CallFunc_GetOwningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Charm_Chain_C_GetCACharacter, CallFunc_GetOwner_ReturnValue) == 0x000010, "Member 'ABP_Charm_Chain_C_GetCACharacter::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Charm_Chain_C_GetCACharacter, K2Node_DynamicCast_AsCACharacter_Main_Player) == 0x000018, "Member 'ABP_Charm_Chain_C_GetCACharacter::K2Node_DynamicCast_AsCACharacter_Main_Player' has a wrong offset!");
static_assert(offsetof(ABP_Charm_Chain_C_GetCACharacter, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'ABP_Charm_Chain_C_GetCACharacter::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function ABP_Charm_Chain.ABP_Charm_Chain_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct ABP_Charm_Chain_C_AnimGraph final
{
public:
	struct FPoseLink                              AnimGraph_0;                                       // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABP_Charm_Chain_C_AnimGraph) == 0x000008, "Wrong alignment on ABP_Charm_Chain_C_AnimGraph");
static_assert(sizeof(ABP_Charm_Chain_C_AnimGraph) == 0x000010, "Wrong size on ABP_Charm_Chain_C_AnimGraph");
static_assert(offsetof(ABP_Charm_Chain_C_AnimGraph, AnimGraph_0) == 0x000000, "Member 'ABP_Charm_Chain_C_AnimGraph::AnimGraph_0' has a wrong offset!");

}

