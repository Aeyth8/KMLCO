#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SupplyCrateBase

#include "Basic.hpp"

#include "BP_SupplyCrateBase_classes.hpp"
#include "BP_SupplyCrateBase_parameters.hpp"


namespace SDK
{

// Function BP_SupplyCrateBase.BP_SupplyCrateBase_C.ExecuteUbergraph_BP_SupplyCrateBase
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SupplyCrateBase_C::ExecuteUbergraph_BP_SupplyCrateBase(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SupplyCrateBase_C", "ExecuteUbergraph_BP_SupplyCrateBase");

	Params::BP_SupplyCrateBase_C_ExecuteUbergraph_BP_SupplyCrateBase Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SupplyCrateBase.BP_SupplyCrateBase_C.BndEvt__BP_SupplyCrateBase_ResupplyCollision_K2Node_ComponentBoundEvent_1_SceneComponentBeginOverlapSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class USceneComponent*                  OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USceneComponent*                  OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFromSweep                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FHitResult                       SweepResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_SupplyCrateBase_C::BndEvt__BP_SupplyCrateBase_ResupplyCollision_K2Node_ComponentBoundEvent_1_SceneComponentBeginOverlapSignature__DelegateSignature(class USceneComponent* OverlappedComponent, class AActor* OtherActor, class USceneComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SupplyCrateBase_C", "BndEvt__BP_SupplyCrateBase_ResupplyCollision_K2Node_ComponentBoundEvent_1_SceneComponentBeginOverlapSignature__DelegateSignature");

	Params::BP_SupplyCrateBase_C_BndEvt__BP_SupplyCrateBase_ResupplyCollision_K2Node_ComponentBoundEvent_1_SceneComponentBeginOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SupplyCrateBase.BP_SupplyCrateBase_C.BndEvt__BP_SupplyCrateBase_ResupplyCollision_K2Node_ComponentBoundEvent_8_SceneComponentEndOverlapSignature__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class USceneComponent*                  OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USceneComponent*                  OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SupplyCrateBase_C::BndEvt__BP_SupplyCrateBase_ResupplyCollision_K2Node_ComponentBoundEvent_8_SceneComponentEndOverlapSignature__DelegateSignature(class USceneComponent* OverlappedComponent, class AActor* OtherActor, class USceneComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SupplyCrateBase_C", "BndEvt__BP_SupplyCrateBase_ResupplyCollision_K2Node_ComponentBoundEvent_8_SceneComponentEndOverlapSignature__DelegateSignature");

	Params::BP_SupplyCrateBase_C_BndEvt__BP_SupplyCrateBase_ResupplyCollision_K2Node_ComponentBoundEvent_8_SceneComponentEndOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SupplyCrateBase.BP_SupplyCrateBase_C.BndEvt__BP_SupplyCrateBase_BP_SupplyCrateStateComponent_K2Node_ComponentBoundEvent_2_EventClosed__DelegateSignature
// (BlueprintEvent)

void ABP_SupplyCrateBase_C::BndEvt__BP_SupplyCrateBase_BP_SupplyCrateStateComponent_K2Node_ComponentBoundEvent_2_EventClosed__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SupplyCrateBase_C", "BndEvt__BP_SupplyCrateBase_BP_SupplyCrateStateComponent_K2Node_ComponentBoundEvent_2_EventClosed__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SupplyCrateBase.BP_SupplyCrateBase_C.BndEvt__BP_SupplyCrateBase_BP_SupplyCrateStateComponent_K2Node_ComponentBoundEvent_3_EventOpening__DelegateSignature
// (BlueprintEvent)

void ABP_SupplyCrateBase_C::BndEvt__BP_SupplyCrateBase_BP_SupplyCrateStateComponent_K2Node_ComponentBoundEvent_3_EventOpening__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SupplyCrateBase_C", "BndEvt__BP_SupplyCrateBase_BP_SupplyCrateStateComponent_K2Node_ComponentBoundEvent_3_EventOpening__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SupplyCrateBase.BP_SupplyCrateBase_C.BndEvt__BP_SupplyCrateBase_BP_SupplyCrateStateComponent_K2Node_ComponentBoundEvent_4_EventDamaged__DelegateSignature
// (BlueprintEvent)

void ABP_SupplyCrateBase_C::BndEvt__BP_SupplyCrateBase_BP_SupplyCrateStateComponent_K2Node_ComponentBoundEvent_4_EventDamaged__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SupplyCrateBase_C", "BndEvt__BP_SupplyCrateBase_BP_SupplyCrateStateComponent_K2Node_ComponentBoundEvent_4_EventDamaged__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SupplyCrateBase.BP_SupplyCrateBase_C.BndEvt__BP_SupplyCrateBase_BP_SupplyCrateStateComponent_K2Node_ComponentBoundEvent_5_EventClosing__DelegateSignature
// (BlueprintEvent)

void ABP_SupplyCrateBase_C::BndEvt__BP_SupplyCrateBase_BP_SupplyCrateStateComponent_K2Node_ComponentBoundEvent_5_EventClosing__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SupplyCrateBase_C", "BndEvt__BP_SupplyCrateBase_BP_SupplyCrateStateComponent_K2Node_ComponentBoundEvent_5_EventClosing__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SupplyCrateBase.BP_SupplyCrateBase_C.ReceiveEndPlay
// (Event, Protected, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SupplyCrateBase_C::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SupplyCrateBase_C", "ReceiveEndPlay");

	Params::BP_SupplyCrateBase_C_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SupplyCrateBase.BP_SupplyCrateBase_C.BndEvt__BP_SupplyCrateBase_BP_SupplyCrateStateComponent_K2Node_ComponentBoundEvent_0_EventOpen__DelegateSignature
// (BlueprintEvent)

void ABP_SupplyCrateBase_C::BndEvt__BP_SupplyCrateBase_BP_SupplyCrateStateComponent_K2Node_ComponentBoundEvent_0_EventOpen__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SupplyCrateBase_C", "BndEvt__BP_SupplyCrateBase_BP_SupplyCrateStateComponent_K2Node_ComponentBoundEvent_0_EventOpen__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SupplyCrateBase.BP_SupplyCrateBase_C.OnProjectileAttached
// (Event, Public, BlueprintEvent)

void ABP_SupplyCrateBase_C::OnProjectileAttached()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SupplyCrateBase_C", "OnProjectileAttached");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SupplyCrateBase.BP_SupplyCrateBase_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_SupplyCrateBase_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SupplyCrateBase_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SupplyCrateBase.BP_SupplyCrateBase_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_SupplyCrateBase_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SupplyCrateBase_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SupplyCrateBase.BP_SupplyCrateBase_C.DestroyFoam
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_SupplyCrateBase_C::DestroyFoam()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SupplyCrateBase_C", "DestroyFoam");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SupplyCrateBase.BP_SupplyCrateBase_C.CrateVFX
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Open                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_SupplyCrateBase_C::CrateVFX(bool Open)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SupplyCrateBase_C", "CrateVFX");

	Params::BP_SupplyCrateBase_C_CrateVFX Parms{};

	Parms.Open = Open;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SupplyCrateBase.BP_SupplyCrateBase_C.StopAudioPlaybackInstance
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_SupplyCrateBase_C::StopAudioPlaybackInstance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SupplyCrateBase_C", "StopAudioPlaybackInstance");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SupplyCrateBase.BP_SupplyCrateBase_C.Get Material Override by Tag
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     Area_Type_Tag                                          (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// class UMaterialInstance*                Material_Instance                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SupplyCrateBase_C::Get_Material_Override_by_Tag(const struct FGameplayTag& Area_Type_Tag, class UMaterialInstance** Material_Instance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SupplyCrateBase_C", "Get Material Override by Tag");

	Params::BP_SupplyCrateBase_C_Get_Material_Override_by_Tag Parms{};

	Parms.Area_Type_Tag = std::move(Area_Type_Tag);

	UObject::ProcessEvent(Func, &Parms);

	if (Material_Instance != nullptr)
		*Material_Instance = Parms.Material_Instance;
}


// Function BP_SupplyCrateBase.BP_SupplyCrateBase_C.SetMaterialOverride
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMaterialInstance*                Material_Instance_Override                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SupplyCrateBase_C::SetMaterialOverride(class UMaterialInstance* Material_Instance_Override)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SupplyCrateBase_C", "SetMaterialOverride");

	Params::BP_SupplyCrateBase_C_SetMaterialOverride Parms{};

	Parms.Material_Instance_Override = Material_Instance_Override;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SupplyCrateBase.BP_SupplyCrateBase_C.IsOpen
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_SupplyCrateBase_C::IsOpen() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SupplyCrateBase_C", "IsOpen");

	Params::BP_SupplyCrateBase_C_IsOpen Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_SupplyCrateBase.BP_SupplyCrateBase_C.IsClosed
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_SupplyCrateBase_C::IsClosed() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SupplyCrateBase_C", "IsClosed");

	Params::BP_SupplyCrateBase_C_IsClosed Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_SupplyCrateBase.BP_SupplyCrateBase_C.GetCurrentTargetMode
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FCATeamID                        UserTeamID                                             (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// class UActorComponent*                  TargetComponent                                        (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ECAUI_ReticuleTargettingMode            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

ECAUI_ReticuleTargettingMode ABP_SupplyCrateBase_C::GetCurrentTargetMode(const struct FCATeamID& UserTeamID, const class UActorComponent* TargetComponent) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SupplyCrateBase_C", "GetCurrentTargetMode");

	Params::BP_SupplyCrateBase_C_GetCurrentTargetMode Parms{};

	Parms.UserTeamID = std::move(UserTeamID);
	Parms.TargetComponent = TargetComponent;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

