#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BaseSwitch

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Keaton_classes.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_BaseSwitch.BP_BaseSwitch_C
// 0x0050 (0x0400 - 0x03B0)
class ABP_BaseSwitch_C : public ACAObjectiveLoopActorWithAuthorization
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x03B0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   HitSpotMesh;                                       // 0x03B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_SwitchStateMachine_C*               BP_SwitchStateMachine;                             // 0x03C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCAFoamAlignmentComponent*              CAFoamAlignment;                                   // 0x03C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCAAudioComponent*                      CAAudio;                                           // 0x03D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCACollisionComponent*                  CACollision;                                       // 0x03D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SwitchMesh;                                        // 0x03E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x03E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            ImmuneGameplayEffect;                              // 0x03F0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          IsShootable;                                       // 0x03F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BP_BaseSwitch(int32 EntryPoint);
	void BndEvt__BP_BaseSwitch_BP_SwitchStateMachine_K2Node_ComponentBoundEvent_5_EventCooldownToOff__DelegateSignature();
	void BndEvt__BP_BaseSwitch_BP_SwitchStateMachine_K2Node_ComponentBoundEvent_4_EventCooldownToOn__DelegateSignature();
	void BndEvt__BP_BaseSwitch_BP_SwitchStateMachine_K2Node_ComponentBoundEvent_3_EventSwitchedOff__DelegateSignature();
	void BndEvt__BP_BaseSwitch_BP_SwitchStateMachine_K2Node_ComponentBoundEvent_0_EventSwitchedOn__DelegateSignature();
	void BndEvt__BP_BaseSwitch_CAFoamAlignment_K2Node_ComponentBoundEvent_2_FoamDestroyed__DelegateSignature();
	void BndEvt__BP_BaseSwitch_CAFoamAlignment_K2Node_ComponentBoundEvent_1_FoamActivated__DelegateSignature();
	void UserConstructionScript();

	bool HasSecurityClearance(class AActor* User) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_BaseSwitch_C">();
	}
	static class ABP_BaseSwitch_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_BaseSwitch_C>();
	}
};
static_assert(alignof(ABP_BaseSwitch_C) == 0x000008, "Wrong alignment on ABP_BaseSwitch_C");
static_assert(sizeof(ABP_BaseSwitch_C) == 0x000400, "Wrong size on ABP_BaseSwitch_C");
static_assert(offsetof(ABP_BaseSwitch_C, UberGraphFrame) == 0x0003B0, "Member 'ABP_BaseSwitch_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_BaseSwitch_C, HitSpotMesh) == 0x0003B8, "Member 'ABP_BaseSwitch_C::HitSpotMesh' has a wrong offset!");
static_assert(offsetof(ABP_BaseSwitch_C, BP_SwitchStateMachine) == 0x0003C0, "Member 'ABP_BaseSwitch_C::BP_SwitchStateMachine' has a wrong offset!");
static_assert(offsetof(ABP_BaseSwitch_C, CAFoamAlignment) == 0x0003C8, "Member 'ABP_BaseSwitch_C::CAFoamAlignment' has a wrong offset!");
static_assert(offsetof(ABP_BaseSwitch_C, CAAudio) == 0x0003D0, "Member 'ABP_BaseSwitch_C::CAAudio' has a wrong offset!");
static_assert(offsetof(ABP_BaseSwitch_C, CACollision) == 0x0003D8, "Member 'ABP_BaseSwitch_C::CACollision' has a wrong offset!");
static_assert(offsetof(ABP_BaseSwitch_C, SwitchMesh) == 0x0003E0, "Member 'ABP_BaseSwitch_C::SwitchMesh' has a wrong offset!");
static_assert(offsetof(ABP_BaseSwitch_C, DefaultSceneRoot) == 0x0003E8, "Member 'ABP_BaseSwitch_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_BaseSwitch_C, ImmuneGameplayEffect) == 0x0003F0, "Member 'ABP_BaseSwitch_C::ImmuneGameplayEffect' has a wrong offset!");
static_assert(offsetof(ABP_BaseSwitch_C, IsShootable) == 0x0003F8, "Member 'ABP_BaseSwitch_C::IsShootable' has a wrong offset!");

}

