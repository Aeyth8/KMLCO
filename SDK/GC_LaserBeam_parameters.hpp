#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GC_LaserBeam

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "CAAudio_structs.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function GC_LaserBeam.GC_LaserBeam_C.ExecuteUbergraph_GC_LaserBeam
// 0x0118 (0x0118 - 0x0000)
struct GC_LaserBeam_C_ExecuteUbergraph_GC_LaserBeam final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_VInterpTo_ReturnValue;                    // 0x0008(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCAAudioPlaybackInstance               CallFunc_PlayEventInWorld_playback_instance;       // 0x0018(0x0010)()
	bool                                          CallFunc_PlayEventInWorld_play_success;            // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class ICAWeaponInterface>    CallFunc_GetChargeDuration_self_CastInput;         // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetChargeDuration_ReturnValue;            // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_GetLaserBeam_LaserBeam;                   // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetMuzzleLocation_ReturnValue;            // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FCAAudioEventType& Event_name)> Temp_delegate_Variable;                            // 0x005C(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACACharacter_NPC*                       K2Node_DynamicCast_AsCACharacter_NPC;              // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetCurrentLaserBeamEnd_ReturnValue;       // 0x0084(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasGameplayTag_ReturnValue;               // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraComponent*                      CallFunc_GetChargeVFX_ChargeVFX;                   // 0x0098(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_GetBallBeam_Beam;                         // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_GetChargeVFX_ChargeVFX_1;                 // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_CalcNPCLaserBeamEnd_Client_Lerped_ReturnValue; // 0x00B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCAAudioPlaybackInstance               CallFunc_PlayEvent_playback_instance;              // 0x00C0(0x0010)()
	bool                                          CallFunc_PlayEvent_play_success;                   // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D2[0x2];                                       // 0x00D2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x00DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CleanUp_ReturnValue;                      // 0x00DB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_2;                   // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACACharacter_NPC*                       K2Node_DynamicCast_AsCACharacter_NPC_1;            // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACACharacter_NPC*                       K2Node_DynamicCast_AsCACharacter_NPC_2;            // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GC_LaserBeam_C_ExecuteUbergraph_GC_LaserBeam) == 0x000008, "Wrong alignment on GC_LaserBeam_C_ExecuteUbergraph_GC_LaserBeam");
static_assert(sizeof(GC_LaserBeam_C_ExecuteUbergraph_GC_LaserBeam) == 0x000118, "Wrong size on GC_LaserBeam_C_ExecuteUbergraph_GC_LaserBeam");
static_assert(offsetof(GC_LaserBeam_C_ExecuteUbergraph_GC_LaserBeam, EntryPoint) == 0x000000, "Member 'GC_LaserBeam_C_ExecuteUbergraph_GC_LaserBeam::EntryPoint' has a wrong offset!");
static_assert(offsetof(GC_LaserBeam_C_ExecuteUbergraph_GC_LaserBeam, Temp_bool_IsClosed_Variable) == 0x000004, "Member 'GC_LaserBeam_C_ExecuteUbergraph_GC_LaserBeam::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(GC_LaserBeam_C_ExecuteUbergraph_GC_LaserBeam, CallFunc_Not_PreBool_ReturnValue) == 0x000005, "Member 'GC_LaserBeam_C_ExecuteUbergraph_GC_LaserBeam::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_LaserBeam_C_ExecuteUbergraph_GC_LaserBeam, CallFunc_VInterpTo_ReturnValue) == 0x000008, "Member 'GC_LaserBeam_C_ExecuteUbergraph_GC_LaserBeam::CallFunc_VInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_LaserBeam_C_ExecuteUbergraph_GC_LaserBeam, CallFunc_PlayEventInWorld_playback_instance) == 0x000018, "Member 'GC_LaserBeam_C_ExecuteUbergraph_GC_LaserBeam::CallFunc_PlayEventInWorld_playback_instance' has a wrong offset!");
static_assert(offsetof(GC_LaserBeam_C_ExecuteUbergraph_GC_LaserBeam, CallFunc_PlayEventInWorld_play_success) == 0x000028, "Member 'GC_LaserBeam_C_ExecuteUbergraph_GC_LaserBeam::CallFunc_PlayEventInWorld_play_success' has a wrong offset!");
static_assert(offsetof(GC_LaserBeam_C_ExecuteUbergraph_GC_LaserBeam, CallFunc_Add_FloatFloat_ReturnValue) == 0x00002C, "Member 'GC_LaserBeam_C_ExecuteUbergraph_GC_LaserBeam::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_LaserBeam_C_ExecuteUbergraph_GC_LaserBeam, CallFunc_GetChargeDuration_self_CastInput) == 0x000030, "Member 'GC_LaserBeam_C_ExecuteUbergraph_GC_LaserBeam::CallFunc_GetChargeDuration_self_CastInput' has a wrong offset!");
static_assert(offsetof(GC_LaserBeam_C_ExecuteUbergraph_GC_LaserBeam, CallFunc_GetChargeDuration_ReturnValue) == 0x000040, "Member 'GC_LaserBeam_C_ExecuteUbergraph_GC_LaserBeam::CallFunc_GetChargeDuration_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_LaserBeam_C_ExecuteUbergraph_GC_LaserBeam, CallFunc_FMax_ReturnValue) == 0x000044, "Member 'GC_LaserBeam_C_ExecuteUbergraph_GC_LaserBeam::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_LaserBeam_C_ExecuteUbergraph_GC_LaserBeam, CallFunc_GetLaserBeam_LaserBeam) == 0x000048, "Member 'GC_LaserBeam_C_ExecuteUbergraph_GC_LaserBeam::CallFunc_GetLaserBeam_LaserBeam' has a wrong offset!");
static_assert(offsetof(GC_LaserBeam_C_ExecuteUbergraph_GC_LaserBeam, CallFunc_GetMuzzleLocation_ReturnValue) == 0x000050, "Member 'GC_LaserBeam_C_ExecuteUbergraph_GC_LaserBeam::CallFunc_GetMuzzleLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_LaserBeam_C_ExecuteUbergraph_GC_LaserBeam, Temp_delegate_Variable) == 0x00005C, "Member 'GC_LaserBeam_C_ExecuteUbergraph_GC_LaserBeam::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(GC_LaserBeam_C_ExecuteUbergraph_GC_LaserBeam, CallFunc_GetOwner_ReturnValue) == 0x000070, "Member 'GC_LaserBeam_C_ExecuteUbergraph_GC_LaserBeam::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_LaserBeam_C_ExecuteUbergraph_GC_LaserBeam, K2Node_DynamicCast_AsCACharacter_NPC) == 0x000078, "Member 'GC_LaserBeam_C_ExecuteUbergraph_GC_LaserBeam::K2Node_DynamicCast_AsCACharacter_NPC' has a wrong offset!");
static_assert(offsetof(GC_LaserBeam_C_ExecuteUbergraph_GC_LaserBeam, K2Node_DynamicCast_bSuccess) == 0x000080, "Member 'GC_LaserBeam_C_ExecuteUbergraph_GC_LaserBeam::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GC_LaserBeam_C_ExecuteUbergraph_GC_LaserBeam, CallFunc_GetCurrentLaserBeamEnd_ReturnValue) == 0x000084, "Member 'GC_LaserBeam_C_ExecuteUbergraph_GC_LaserBeam::CallFunc_GetCurrentLaserBeamEnd_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_LaserBeam_C_ExecuteUbergraph_GC_LaserBeam, CallFunc_HasGameplayTag_ReturnValue) == 0x000090, "Member 'GC_LaserBeam_C_ExecuteUbergraph_GC_LaserBeam::CallFunc_HasGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_LaserBeam_C_ExecuteUbergraph_GC_LaserBeam, CallFunc_GetChargeVFX_ChargeVFX) == 0x000098, "Member 'GC_LaserBeam_C_ExecuteUbergraph_GC_LaserBeam::CallFunc_GetChargeVFX_ChargeVFX' has a wrong offset!");
static_assert(offsetof(GC_LaserBeam_C_ExecuteUbergraph_GC_LaserBeam, CallFunc_GetBallBeam_Beam) == 0x0000A0, "Member 'GC_LaserBeam_C_ExecuteUbergraph_GC_LaserBeam::CallFunc_GetBallBeam_Beam' has a wrong offset!");
static_assert(offsetof(GC_LaserBeam_C_ExecuteUbergraph_GC_LaserBeam, CallFunc_GetChargeVFX_ChargeVFX_1) == 0x0000A8, "Member 'GC_LaserBeam_C_ExecuteUbergraph_GC_LaserBeam::CallFunc_GetChargeVFX_ChargeVFX_1' has a wrong offset!");
static_assert(offsetof(GC_LaserBeam_C_ExecuteUbergraph_GC_LaserBeam, CallFunc_CalcNPCLaserBeamEnd_Client_Lerped_ReturnValue) == 0x0000B0, "Member 'GC_LaserBeam_C_ExecuteUbergraph_GC_LaserBeam::CallFunc_CalcNPCLaserBeamEnd_Client_Lerped_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_LaserBeam_C_ExecuteUbergraph_GC_LaserBeam, CallFunc_PlayEvent_playback_instance) == 0x0000C0, "Member 'GC_LaserBeam_C_ExecuteUbergraph_GC_LaserBeam::CallFunc_PlayEvent_playback_instance' has a wrong offset!");
static_assert(offsetof(GC_LaserBeam_C_ExecuteUbergraph_GC_LaserBeam, CallFunc_PlayEvent_play_success) == 0x0000D0, "Member 'GC_LaserBeam_C_ExecuteUbergraph_GC_LaserBeam::CallFunc_PlayEvent_play_success' has a wrong offset!");
static_assert(offsetof(GC_LaserBeam_C_ExecuteUbergraph_GC_LaserBeam, Temp_bool_Has_Been_Initd_Variable) == 0x0000D1, "Member 'GC_LaserBeam_C_ExecuteUbergraph_GC_LaserBeam::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(GC_LaserBeam_C_ExecuteUbergraph_GC_LaserBeam, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0000D4, "Member 'GC_LaserBeam_C_ExecuteUbergraph_GC_LaserBeam::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_LaserBeam_C_ExecuteUbergraph_GC_LaserBeam, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0000D8, "Member 'GC_LaserBeam_C_ExecuteUbergraph_GC_LaserBeam::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_LaserBeam_C_ExecuteUbergraph_GC_LaserBeam, CallFunc_Less_FloatFloat_ReturnValue) == 0x0000D9, "Member 'GC_LaserBeam_C_ExecuteUbergraph_GC_LaserBeam::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_LaserBeam_C_ExecuteUbergraph_GC_LaserBeam, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x0000DA, "Member 'GC_LaserBeam_C_ExecuteUbergraph_GC_LaserBeam::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GC_LaserBeam_C_ExecuteUbergraph_GC_LaserBeam, CallFunc_CleanUp_ReturnValue) == 0x0000DB, "Member 'GC_LaserBeam_C_ExecuteUbergraph_GC_LaserBeam::CallFunc_CleanUp_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_LaserBeam_C_ExecuteUbergraph_GC_LaserBeam, K2Node_Event_DeltaSeconds) == 0x0000DC, "Member 'GC_LaserBeam_C_ExecuteUbergraph_GC_LaserBeam::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(GC_LaserBeam_C_ExecuteUbergraph_GC_LaserBeam, CallFunc_IsValid_ReturnValue) == 0x0000E0, "Member 'GC_LaserBeam_C_ExecuteUbergraph_GC_LaserBeam::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_LaserBeam_C_ExecuteUbergraph_GC_LaserBeam, CallFunc_GetOwner_ReturnValue_1) == 0x0000E8, "Member 'GC_LaserBeam_C_ExecuteUbergraph_GC_LaserBeam::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GC_LaserBeam_C_ExecuteUbergraph_GC_LaserBeam, CallFunc_GetOwner_ReturnValue_2) == 0x0000F0, "Member 'GC_LaserBeam_C_ExecuteUbergraph_GC_LaserBeam::CallFunc_GetOwner_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GC_LaserBeam_C_ExecuteUbergraph_GC_LaserBeam, K2Node_DynamicCast_AsCACharacter_NPC_1) == 0x0000F8, "Member 'GC_LaserBeam_C_ExecuteUbergraph_GC_LaserBeam::K2Node_DynamicCast_AsCACharacter_NPC_1' has a wrong offset!");
static_assert(offsetof(GC_LaserBeam_C_ExecuteUbergraph_GC_LaserBeam, K2Node_DynamicCast_bSuccess_1) == 0x000100, "Member 'GC_LaserBeam_C_ExecuteUbergraph_GC_LaserBeam::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(GC_LaserBeam_C_ExecuteUbergraph_GC_LaserBeam, K2Node_DynamicCast_AsCACharacter_NPC_2) == 0x000108, "Member 'GC_LaserBeam_C_ExecuteUbergraph_GC_LaserBeam::K2Node_DynamicCast_AsCACharacter_NPC_2' has a wrong offset!");
static_assert(offsetof(GC_LaserBeam_C_ExecuteUbergraph_GC_LaserBeam, K2Node_DynamicCast_bSuccess_2) == 0x000110, "Member 'GC_LaserBeam_C_ExecuteUbergraph_GC_LaserBeam::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");

// Function GC_LaserBeam.GC_LaserBeam_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct GC_LaserBeam_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GC_LaserBeam_C_ReceiveTick) == 0x000004, "Wrong alignment on GC_LaserBeam_C_ReceiveTick");
static_assert(sizeof(GC_LaserBeam_C_ReceiveTick) == 0x000004, "Wrong size on GC_LaserBeam_C_ReceiveTick");
static_assert(offsetof(GC_LaserBeam_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'GC_LaserBeam_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function GC_LaserBeam.GC_LaserBeam_C.OnActive
// 0x0100 (0x0100 - 0x0000)
struct GC_LaserBeam_C_OnActive final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x00F0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	bool                                          ReturnValue;                                       // 0x00F8(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GC_LaserBeam_C_OnActive) == 0x000008, "Wrong alignment on GC_LaserBeam_C_OnActive");
static_assert(sizeof(GC_LaserBeam_C_OnActive) == 0x000100, "Wrong size on GC_LaserBeam_C_OnActive");
static_assert(offsetof(GC_LaserBeam_C_OnActive, MyTarget) == 0x000000, "Member 'GC_LaserBeam_C_OnActive::MyTarget' has a wrong offset!");
static_assert(offsetof(GC_LaserBeam_C_OnActive, Parameters) == 0x000008, "Member 'GC_LaserBeam_C_OnActive::Parameters' has a wrong offset!");
static_assert(offsetof(GC_LaserBeam_C_OnActive, ReturnValue) == 0x0000F8, "Member 'GC_LaserBeam_C_OnActive::ReturnValue' has a wrong offset!");

// Function GC_LaserBeam.GC_LaserBeam_C.OnRemove
// 0x0100 (0x0100 - 0x0000)
struct GC_LaserBeam_C_OnRemove final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x00F0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	bool                                          ReturnValue;                                       // 0x00F8(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CleanUp_ReturnValue;                      // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GC_LaserBeam_C_OnRemove) == 0x000008, "Wrong alignment on GC_LaserBeam_C_OnRemove");
static_assert(sizeof(GC_LaserBeam_C_OnRemove) == 0x000100, "Wrong size on GC_LaserBeam_C_OnRemove");
static_assert(offsetof(GC_LaserBeam_C_OnRemove, MyTarget) == 0x000000, "Member 'GC_LaserBeam_C_OnRemove::MyTarget' has a wrong offset!");
static_assert(offsetof(GC_LaserBeam_C_OnRemove, Parameters) == 0x000008, "Member 'GC_LaserBeam_C_OnRemove::Parameters' has a wrong offset!");
static_assert(offsetof(GC_LaserBeam_C_OnRemove, ReturnValue) == 0x0000F8, "Member 'GC_LaserBeam_C_OnRemove::ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_LaserBeam_C_OnRemove, CallFunc_CleanUp_ReturnValue) == 0x0000F9, "Member 'GC_LaserBeam_C_OnRemove::CallFunc_CleanUp_ReturnValue' has a wrong offset!");

// Function GC_LaserBeam.GC_LaserBeam_C.On Laser Target Changed
// 0x0018 (0x0018 - 0x0000)
struct GC_LaserBeam_C_On_Laser_Target_Changed final
{
public:
	class AActor*                                 LaserTarget;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACACharacter_MainPlayer*                K2Node_DynamicCast_AsCACharacter_Main_Player;      // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsBeingViewed_ReturnValue;                // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GC_LaserBeam_C_On_Laser_Target_Changed) == 0x000008, "Wrong alignment on GC_LaserBeam_C_On_Laser_Target_Changed");
static_assert(sizeof(GC_LaserBeam_C_On_Laser_Target_Changed) == 0x000018, "Wrong size on GC_LaserBeam_C_On_Laser_Target_Changed");
static_assert(offsetof(GC_LaserBeam_C_On_Laser_Target_Changed, LaserTarget) == 0x000000, "Member 'GC_LaserBeam_C_On_Laser_Target_Changed::LaserTarget' has a wrong offset!");
static_assert(offsetof(GC_LaserBeam_C_On_Laser_Target_Changed, K2Node_DynamicCast_AsCACharacter_Main_Player) == 0x000008, "Member 'GC_LaserBeam_C_On_Laser_Target_Changed::K2Node_DynamicCast_AsCACharacter_Main_Player' has a wrong offset!");
static_assert(offsetof(GC_LaserBeam_C_On_Laser_Target_Changed, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'GC_LaserBeam_C_On_Laser_Target_Changed::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GC_LaserBeam_C_On_Laser_Target_Changed, CallFunc_IsBeingViewed_ReturnValue) == 0x000011, "Member 'GC_LaserBeam_C_On_Laser_Target_Changed::CallFunc_IsBeingViewed_ReturnValue' has a wrong offset!");

// Function GC_LaserBeam.GC_LaserBeam_C.WhileActive
// 0x0220 (0x0220 - 0x0000)
struct GC_LaserBeam_C_WhileActive final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x00F0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	bool                                          ReturnValue;                                       // 0x00F8(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F9[0x3];                                       // 0x00F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakGameplayCueParameters_NormalizedMagnitude; // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakGameplayCueParameters_RawMagnitude;  // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_104[0x4];                                      // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEffectContextHandle           CallFunc_BreakGameplayCueParameters_EffectContext; // 0x0108(0x0018)()
	struct FGameplayTag                           CallFunc_BreakGameplayCueParameters_MatchedTagName; // 0x0120(0x000C)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_BreakGameplayCueParameters_OriginalTag;   // 0x012C(0x000C)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  CallFunc_BreakGameplayCueParameters_AggregatedSourceTags; // 0x0138(0x0020)()
	struct FGameplayTagContainer                  CallFunc_BreakGameplayCueParameters_AggregatedTargetTags; // 0x0158(0x0020)()
	struct FVector                                CallFunc_BreakGameplayCueParameters_Location;      // 0x0178(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakGameplayCueParameters_Normal;        // 0x0184(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakGameplayCueParameters_Instigator;    // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakGameplayCueParameters_EffectCauser;  // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_BreakGameplayCueParameters_SourceObject;  // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakGameplayCueParameters_PhysicalMaterial; // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakGameplayCueParameters_GameplayEffectLevel; // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakGameplayCueParameters_AbilityLevel;  // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_BreakGameplayCueParameters_TargetAttachComponent; // 0x01B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakGameplayCueParameters_bReplicateLocationWhenUsingMinimalRepProxy; // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C1[0x7];                                      // 0x01C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Weapon_Laser_C*                     K2Node_DynamicCast_AsBP_Weapon_Laser;              // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D1[0x3];                                      // 0x01D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AActor* LaserTarget)>    K2Node_CreateDelegate_OutputDelegate;              // 0x01D4(0x0014)(ZeroConstructor, NoDestructor)
	class UNiagaraComponent*                      CallFunc_GetBallBeam_Beam;                         // 0x01E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FCAAudioEventType& Event_name)> Temp_delegate_Variable;                            // 0x01F0(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	uint8                                         Pad_204[0x4];                                      // 0x0204(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCAAudioPlaybackInstance               CallFunc_PlayEvent_playback_instance;              // 0x0208(0x0010)()
	bool                                          CallFunc_PlayEvent_play_success;                   // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GC_LaserBeam_C_WhileActive) == 0x000008, "Wrong alignment on GC_LaserBeam_C_WhileActive");
static_assert(sizeof(GC_LaserBeam_C_WhileActive) == 0x000220, "Wrong size on GC_LaserBeam_C_WhileActive");
static_assert(offsetof(GC_LaserBeam_C_WhileActive, MyTarget) == 0x000000, "Member 'GC_LaserBeam_C_WhileActive::MyTarget' has a wrong offset!");
static_assert(offsetof(GC_LaserBeam_C_WhileActive, Parameters) == 0x000008, "Member 'GC_LaserBeam_C_WhileActive::Parameters' has a wrong offset!");
static_assert(offsetof(GC_LaserBeam_C_WhileActive, ReturnValue) == 0x0000F8, "Member 'GC_LaserBeam_C_WhileActive::ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_LaserBeam_C_WhileActive, CallFunc_BreakGameplayCueParameters_NormalizedMagnitude) == 0x0000FC, "Member 'GC_LaserBeam_C_WhileActive::CallFunc_BreakGameplayCueParameters_NormalizedMagnitude' has a wrong offset!");
static_assert(offsetof(GC_LaserBeam_C_WhileActive, CallFunc_BreakGameplayCueParameters_RawMagnitude) == 0x000100, "Member 'GC_LaserBeam_C_WhileActive::CallFunc_BreakGameplayCueParameters_RawMagnitude' has a wrong offset!");
static_assert(offsetof(GC_LaserBeam_C_WhileActive, CallFunc_BreakGameplayCueParameters_EffectContext) == 0x000108, "Member 'GC_LaserBeam_C_WhileActive::CallFunc_BreakGameplayCueParameters_EffectContext' has a wrong offset!");
static_assert(offsetof(GC_LaserBeam_C_WhileActive, CallFunc_BreakGameplayCueParameters_MatchedTagName) == 0x000120, "Member 'GC_LaserBeam_C_WhileActive::CallFunc_BreakGameplayCueParameters_MatchedTagName' has a wrong offset!");
static_assert(offsetof(GC_LaserBeam_C_WhileActive, CallFunc_BreakGameplayCueParameters_OriginalTag) == 0x00012C, "Member 'GC_LaserBeam_C_WhileActive::CallFunc_BreakGameplayCueParameters_OriginalTag' has a wrong offset!");
static_assert(offsetof(GC_LaserBeam_C_WhileActive, CallFunc_BreakGameplayCueParameters_AggregatedSourceTags) == 0x000138, "Member 'GC_LaserBeam_C_WhileActive::CallFunc_BreakGameplayCueParameters_AggregatedSourceTags' has a wrong offset!");
static_assert(offsetof(GC_LaserBeam_C_WhileActive, CallFunc_BreakGameplayCueParameters_AggregatedTargetTags) == 0x000158, "Member 'GC_LaserBeam_C_WhileActive::CallFunc_BreakGameplayCueParameters_AggregatedTargetTags' has a wrong offset!");
static_assert(offsetof(GC_LaserBeam_C_WhileActive, CallFunc_BreakGameplayCueParameters_Location) == 0x000178, "Member 'GC_LaserBeam_C_WhileActive::CallFunc_BreakGameplayCueParameters_Location' has a wrong offset!");
static_assert(offsetof(GC_LaserBeam_C_WhileActive, CallFunc_BreakGameplayCueParameters_Normal) == 0x000184, "Member 'GC_LaserBeam_C_WhileActive::CallFunc_BreakGameplayCueParameters_Normal' has a wrong offset!");
static_assert(offsetof(GC_LaserBeam_C_WhileActive, CallFunc_BreakGameplayCueParameters_Instigator) == 0x000190, "Member 'GC_LaserBeam_C_WhileActive::CallFunc_BreakGameplayCueParameters_Instigator' has a wrong offset!");
static_assert(offsetof(GC_LaserBeam_C_WhileActive, CallFunc_BreakGameplayCueParameters_EffectCauser) == 0x000198, "Member 'GC_LaserBeam_C_WhileActive::CallFunc_BreakGameplayCueParameters_EffectCauser' has a wrong offset!");
static_assert(offsetof(GC_LaserBeam_C_WhileActive, CallFunc_BreakGameplayCueParameters_SourceObject) == 0x0001A0, "Member 'GC_LaserBeam_C_WhileActive::CallFunc_BreakGameplayCueParameters_SourceObject' has a wrong offset!");
static_assert(offsetof(GC_LaserBeam_C_WhileActive, CallFunc_BreakGameplayCueParameters_PhysicalMaterial) == 0x0001A8, "Member 'GC_LaserBeam_C_WhileActive::CallFunc_BreakGameplayCueParameters_PhysicalMaterial' has a wrong offset!");
static_assert(offsetof(GC_LaserBeam_C_WhileActive, CallFunc_BreakGameplayCueParameters_GameplayEffectLevel) == 0x0001B0, "Member 'GC_LaserBeam_C_WhileActive::CallFunc_BreakGameplayCueParameters_GameplayEffectLevel' has a wrong offset!");
static_assert(offsetof(GC_LaserBeam_C_WhileActive, CallFunc_BreakGameplayCueParameters_AbilityLevel) == 0x0001B4, "Member 'GC_LaserBeam_C_WhileActive::CallFunc_BreakGameplayCueParameters_AbilityLevel' has a wrong offset!");
static_assert(offsetof(GC_LaserBeam_C_WhileActive, CallFunc_BreakGameplayCueParameters_TargetAttachComponent) == 0x0001B8, "Member 'GC_LaserBeam_C_WhileActive::CallFunc_BreakGameplayCueParameters_TargetAttachComponent' has a wrong offset!");
static_assert(offsetof(GC_LaserBeam_C_WhileActive, CallFunc_BreakGameplayCueParameters_bReplicateLocationWhenUsingMinimalRepProxy) == 0x0001C0, "Member 'GC_LaserBeam_C_WhileActive::CallFunc_BreakGameplayCueParameters_bReplicateLocationWhenUsingMinimalRepProxy' has a wrong offset!");
static_assert(offsetof(GC_LaserBeam_C_WhileActive, K2Node_DynamicCast_AsBP_Weapon_Laser) == 0x0001C8, "Member 'GC_LaserBeam_C_WhileActive::K2Node_DynamicCast_AsBP_Weapon_Laser' has a wrong offset!");
static_assert(offsetof(GC_LaserBeam_C_WhileActive, K2Node_DynamicCast_bSuccess) == 0x0001D0, "Member 'GC_LaserBeam_C_WhileActive::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GC_LaserBeam_C_WhileActive, K2Node_CreateDelegate_OutputDelegate) == 0x0001D4, "Member 'GC_LaserBeam_C_WhileActive::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GC_LaserBeam_C_WhileActive, CallFunc_GetBallBeam_Beam) == 0x0001E8, "Member 'GC_LaserBeam_C_WhileActive::CallFunc_GetBallBeam_Beam' has a wrong offset!");
static_assert(offsetof(GC_LaserBeam_C_WhileActive, Temp_delegate_Variable) == 0x0001F0, "Member 'GC_LaserBeam_C_WhileActive::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(GC_LaserBeam_C_WhileActive, CallFunc_PlayEvent_playback_instance) == 0x000208, "Member 'GC_LaserBeam_C_WhileActive::CallFunc_PlayEvent_playback_instance' has a wrong offset!");
static_assert(offsetof(GC_LaserBeam_C_WhileActive, CallFunc_PlayEvent_play_success) == 0x000218, "Member 'GC_LaserBeam_C_WhileActive::CallFunc_PlayEvent_play_success' has a wrong offset!");

// Function GC_LaserBeam.GC_LaserBeam_C.CleanUp
// 0x0088 (0x0088 - 0x0000)
struct GC_LaserBeam_C_CleanUp final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FCAAudioEventType& Event_name)> Temp_delegate_Variable;                            // 0x0010(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACACharacter_NPC*                       K2Node_DynamicCast_AsCACharacter_NPC;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCAAudioPlaybackInstance               CallFunc_PlayEvent_playback_instance;              // 0x0038(0x0010)()
	bool                                          CallFunc_PlayEvent_play_success;                   // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const struct FCAAudioEventType& Event_name)> Temp_delegate_Variable_1;                          // 0x004C(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	struct FCAAudioPlaybackInstance               CallFunc_PlayEvent_playback_instance_1;            // 0x0060(0x0010)()
	bool                                          CallFunc_PlayEvent_play_success_1;                 // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraComponent*                      CallFunc_GetLaserBeam_LaserBeam;                   // 0x0078(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_GetBallBeam_Beam;                         // 0x0080(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GC_LaserBeam_C_CleanUp) == 0x000008, "Wrong alignment on GC_LaserBeam_C_CleanUp");
static_assert(sizeof(GC_LaserBeam_C_CleanUp) == 0x000088, "Wrong size on GC_LaserBeam_C_CleanUp");
static_assert(offsetof(GC_LaserBeam_C_CleanUp, ReturnValue) == 0x000000, "Member 'GC_LaserBeam_C_CleanUp::ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_LaserBeam_C_CleanUp, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'GC_LaserBeam_C_CleanUp::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_LaserBeam_C_CleanUp, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'GC_LaserBeam_C_CleanUp::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_LaserBeam_C_CleanUp, Temp_delegate_Variable) == 0x000010, "Member 'GC_LaserBeam_C_CleanUp::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(GC_LaserBeam_C_CleanUp, K2Node_DynamicCast_AsCACharacter_NPC) == 0x000028, "Member 'GC_LaserBeam_C_CleanUp::K2Node_DynamicCast_AsCACharacter_NPC' has a wrong offset!");
static_assert(offsetof(GC_LaserBeam_C_CleanUp, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'GC_LaserBeam_C_CleanUp::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GC_LaserBeam_C_CleanUp, CallFunc_PlayEvent_playback_instance) == 0x000038, "Member 'GC_LaserBeam_C_CleanUp::CallFunc_PlayEvent_playback_instance' has a wrong offset!");
static_assert(offsetof(GC_LaserBeam_C_CleanUp, CallFunc_PlayEvent_play_success) == 0x000048, "Member 'GC_LaserBeam_C_CleanUp::CallFunc_PlayEvent_play_success' has a wrong offset!");
static_assert(offsetof(GC_LaserBeam_C_CleanUp, Temp_delegate_Variable_1) == 0x00004C, "Member 'GC_LaserBeam_C_CleanUp::Temp_delegate_Variable_1' has a wrong offset!");
static_assert(offsetof(GC_LaserBeam_C_CleanUp, CallFunc_PlayEvent_playback_instance_1) == 0x000060, "Member 'GC_LaserBeam_C_CleanUp::CallFunc_PlayEvent_playback_instance_1' has a wrong offset!");
static_assert(offsetof(GC_LaserBeam_C_CleanUp, CallFunc_PlayEvent_play_success_1) == 0x000070, "Member 'GC_LaserBeam_C_CleanUp::CallFunc_PlayEvent_play_success_1' has a wrong offset!");
static_assert(offsetof(GC_LaserBeam_C_CleanUp, CallFunc_GetLaserBeam_LaserBeam) == 0x000078, "Member 'GC_LaserBeam_C_CleanUp::CallFunc_GetLaserBeam_LaserBeam' has a wrong offset!");
static_assert(offsetof(GC_LaserBeam_C_CleanUp, CallFunc_GetBallBeam_Beam) == 0x000080, "Member 'GC_LaserBeam_C_CleanUp::CallFunc_GetBallBeam_Beam' has a wrong offset!");

// Function GC_LaserBeam.GC_LaserBeam_C.AudioStopEventOnChargePercentage
// 0x0038 (0x0038 - 0x0000)
struct GC_LaserBeam_C_AudioStopEventOnChargePercentage final
{
public:
	float                                         ChangeDuration;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FCAAudioEventType& Event_name)> Temp_delegate_Variable;                            // 0x0004(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCAAudioPlaybackInstance               CallFunc_PlayEvent_playback_instance;              // 0x0020(0x0010)()
	bool                                          CallFunc_PlayEvent_play_success;                   // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GC_LaserBeam_C_AudioStopEventOnChargePercentage) == 0x000008, "Wrong alignment on GC_LaserBeam_C_AudioStopEventOnChargePercentage");
static_assert(sizeof(GC_LaserBeam_C_AudioStopEventOnChargePercentage) == 0x000038, "Wrong size on GC_LaserBeam_C_AudioStopEventOnChargePercentage");
static_assert(offsetof(GC_LaserBeam_C_AudioStopEventOnChargePercentage, ChangeDuration) == 0x000000, "Member 'GC_LaserBeam_C_AudioStopEventOnChargePercentage::ChangeDuration' has a wrong offset!");
static_assert(offsetof(GC_LaserBeam_C_AudioStopEventOnChargePercentage, Temp_delegate_Variable) == 0x000004, "Member 'GC_LaserBeam_C_AudioStopEventOnChargePercentage::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(GC_LaserBeam_C_AudioStopEventOnChargePercentage, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000018, "Member 'GC_LaserBeam_C_AudioStopEventOnChargePercentage::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_LaserBeam_C_AudioStopEventOnChargePercentage, CallFunc_Less_FloatFloat_ReturnValue) == 0x00001C, "Member 'GC_LaserBeam_C_AudioStopEventOnChargePercentage::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_LaserBeam_C_AudioStopEventOnChargePercentage, CallFunc_PlayEvent_playback_instance) == 0x000020, "Member 'GC_LaserBeam_C_AudioStopEventOnChargePercentage::CallFunc_PlayEvent_playback_instance' has a wrong offset!");
static_assert(offsetof(GC_LaserBeam_C_AudioStopEventOnChargePercentage, CallFunc_PlayEvent_play_success) == 0x000030, "Member 'GC_LaserBeam_C_AudioStopEventOnChargePercentage::CallFunc_PlayEvent_play_success' has a wrong offset!");
static_assert(offsetof(GC_LaserBeam_C_AudioStopEventOnChargePercentage, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000031, "Member 'GC_LaserBeam_C_AudioStopEventOnChargePercentage::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

}

