#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_DoorBaseV2

#include "Basic.hpp"

#include "CAAudio_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "F_EditorActorSnapToData_structs.hpp"
#include "Keaton_structs.hpp"
#include "DoorSwitchStruct_structs.hpp"


namespace SDK::Params
{

// Function BP_DoorBaseV2.BP_DoorBaseV2_C.ExecuteUbergraph_BP_DoorBaseV2
// 0x01B8 (0x01B8 - 0x0000)
struct BP_DoorBaseV2_C_ExecuteUbergraph_BP_DoorBaseV2 final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FCAAudioEventType& Event_name)> Temp_delegate_Variable;                            // 0x0004(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	TDelegate<void(const struct FCAAudioEventType& Event_name)> Temp_delegate_Variable_1;                          // 0x0018(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_ComponentBoundEvent_Percentage;             // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCAAudioPlaybackInstance               CallFunc_PlayEvent_playback_instance;              // 0x0038(0x0010)()
	bool                                          CallFunc_PlayEvent_play_success;                   // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        K2Node_CustomEvent_OverlappedComponent_1;          // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_OtherActor_1;                   // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        K2Node_CustomEvent_OtherComp_1;                    // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_OtherBodyIndex_1;               // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bFromSweep;                     // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_CustomEvent_SweepResult;                    // 0x0070(0x0090)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class USceneComponent*                        K2Node_CustomEvent_OverlappedComponent;            // 0x0100(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_OtherActor;                     // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        K2Node_CustomEvent_OtherComp;                      // 0x0110(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_OtherBodyIndex;                 // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class USceneComponent* OverlappedComponent, class AActor* OtherActor, class USceneComponent* OtherComp, int32 OtherBodyIndex)> K2Node_CreateDelegate_OutputDelegate;              // 0x011C(0x0014)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsServer_ReturnValue_1;                   // 0x0131(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsServer_ReturnValue_2;                   // 0x0132(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_133[0x1];                                      // 0x0133(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_ComponentBoundEvent_Tag;                    // 0x0134(0x000C)(NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_Added;                  // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue;       // 0x0141(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_142[0x2];                                      // 0x0142(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCATeamID                              K2Node_MakeStruct_CATeamID;                        // 0x0144(0x0004)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class USceneComponent* OverlappedComponent, class AActor* OtherActor, class USceneComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0148(0x0014)(ZeroConstructor, NoDestructor)
	TDelegate<void(const struct FCAAudioEventType& Event_name)> Temp_delegate_Variable_2;                          // 0x015C(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	struct FCAAudioPlaybackInstance               CallFunc_PlayEvent_playback_instance_1;            // 0x0170(0x0010)()
	bool                                          CallFunc_PlayEvent_play_success_1;                 // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_181[0x7];                                      // 0x0181(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCAFiniteState*                         CallFunc_GetStateByName_ReturnValue;               // 0x0188(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCAFiniteState*                         CallFunc_GetStateByName_ReturnValue_1;             // 0x0190(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCurrentActiveState_ReturnValue;         // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsCurrentActiveState_ReturnValue_1;       // 0x0199(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x019A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19B[0x5];                                      // 0x019B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCAAudioPlaybackInstance               CallFunc_PlayEvent_playback_instance_2;            // 0x01A0(0x0010)()
	bool                                          CallFunc_PlayEvent_play_success_2;                 // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x01B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAnySwitchLocked_Locked;                 // 0x01B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAnySwitchLocked_Locked_1;               // 0x01B3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_DoorBaseV2_C_ExecuteUbergraph_BP_DoorBaseV2) == 0x000008, "Wrong alignment on BP_DoorBaseV2_C_ExecuteUbergraph_BP_DoorBaseV2");
static_assert(sizeof(BP_DoorBaseV2_C_ExecuteUbergraph_BP_DoorBaseV2) == 0x0001B8, "Wrong size on BP_DoorBaseV2_C_ExecuteUbergraph_BP_DoorBaseV2");
static_assert(offsetof(BP_DoorBaseV2_C_ExecuteUbergraph_BP_DoorBaseV2, EntryPoint) == 0x000000, "Member 'BP_DoorBaseV2_C_ExecuteUbergraph_BP_DoorBaseV2::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_ExecuteUbergraph_BP_DoorBaseV2, Temp_delegate_Variable) == 0x000004, "Member 'BP_DoorBaseV2_C_ExecuteUbergraph_BP_DoorBaseV2::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_ExecuteUbergraph_BP_DoorBaseV2, Temp_delegate_Variable_1) == 0x000018, "Member 'BP_DoorBaseV2_C_ExecuteUbergraph_BP_DoorBaseV2::Temp_delegate_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_ExecuteUbergraph_BP_DoorBaseV2, CallFunc_IsValidClass_ReturnValue) == 0x00002C, "Member 'BP_DoorBaseV2_C_ExecuteUbergraph_BP_DoorBaseV2::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_ExecuteUbergraph_BP_DoorBaseV2, K2Node_ComponentBoundEvent_Percentage) == 0x000030, "Member 'BP_DoorBaseV2_C_ExecuteUbergraph_BP_DoorBaseV2::K2Node_ComponentBoundEvent_Percentage' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_ExecuteUbergraph_BP_DoorBaseV2, CallFunc_PlayEvent_playback_instance) == 0x000038, "Member 'BP_DoorBaseV2_C_ExecuteUbergraph_BP_DoorBaseV2::CallFunc_PlayEvent_playback_instance' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_ExecuteUbergraph_BP_DoorBaseV2, CallFunc_PlayEvent_play_success) == 0x000048, "Member 'BP_DoorBaseV2_C_ExecuteUbergraph_BP_DoorBaseV2::CallFunc_PlayEvent_play_success' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_ExecuteUbergraph_BP_DoorBaseV2, K2Node_CustomEvent_OverlappedComponent_1) == 0x000050, "Member 'BP_DoorBaseV2_C_ExecuteUbergraph_BP_DoorBaseV2::K2Node_CustomEvent_OverlappedComponent_1' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_ExecuteUbergraph_BP_DoorBaseV2, K2Node_CustomEvent_OtherActor_1) == 0x000058, "Member 'BP_DoorBaseV2_C_ExecuteUbergraph_BP_DoorBaseV2::K2Node_CustomEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_ExecuteUbergraph_BP_DoorBaseV2, K2Node_CustomEvent_OtherComp_1) == 0x000060, "Member 'BP_DoorBaseV2_C_ExecuteUbergraph_BP_DoorBaseV2::K2Node_CustomEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_ExecuteUbergraph_BP_DoorBaseV2, K2Node_CustomEvent_OtherBodyIndex_1) == 0x000068, "Member 'BP_DoorBaseV2_C_ExecuteUbergraph_BP_DoorBaseV2::K2Node_CustomEvent_OtherBodyIndex_1' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_ExecuteUbergraph_BP_DoorBaseV2, K2Node_CustomEvent_bFromSweep) == 0x00006C, "Member 'BP_DoorBaseV2_C_ExecuteUbergraph_BP_DoorBaseV2::K2Node_CustomEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_ExecuteUbergraph_BP_DoorBaseV2, K2Node_CustomEvent_SweepResult) == 0x000070, "Member 'BP_DoorBaseV2_C_ExecuteUbergraph_BP_DoorBaseV2::K2Node_CustomEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_ExecuteUbergraph_BP_DoorBaseV2, K2Node_CustomEvent_OverlappedComponent) == 0x000100, "Member 'BP_DoorBaseV2_C_ExecuteUbergraph_BP_DoorBaseV2::K2Node_CustomEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_ExecuteUbergraph_BP_DoorBaseV2, K2Node_CustomEvent_OtherActor) == 0x000108, "Member 'BP_DoorBaseV2_C_ExecuteUbergraph_BP_DoorBaseV2::K2Node_CustomEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_ExecuteUbergraph_BP_DoorBaseV2, K2Node_CustomEvent_OtherComp) == 0x000110, "Member 'BP_DoorBaseV2_C_ExecuteUbergraph_BP_DoorBaseV2::K2Node_CustomEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_ExecuteUbergraph_BP_DoorBaseV2, K2Node_CustomEvent_OtherBodyIndex) == 0x000118, "Member 'BP_DoorBaseV2_C_ExecuteUbergraph_BP_DoorBaseV2::K2Node_CustomEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_ExecuteUbergraph_BP_DoorBaseV2, K2Node_CreateDelegate_OutputDelegate) == 0x00011C, "Member 'BP_DoorBaseV2_C_ExecuteUbergraph_BP_DoorBaseV2::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_ExecuteUbergraph_BP_DoorBaseV2, CallFunc_IsServer_ReturnValue) == 0x000130, "Member 'BP_DoorBaseV2_C_ExecuteUbergraph_BP_DoorBaseV2::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_ExecuteUbergraph_BP_DoorBaseV2, CallFunc_IsServer_ReturnValue_1) == 0x000131, "Member 'BP_DoorBaseV2_C_ExecuteUbergraph_BP_DoorBaseV2::CallFunc_IsServer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_ExecuteUbergraph_BP_DoorBaseV2, CallFunc_IsServer_ReturnValue_2) == 0x000132, "Member 'BP_DoorBaseV2_C_ExecuteUbergraph_BP_DoorBaseV2::CallFunc_IsServer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_ExecuteUbergraph_BP_DoorBaseV2, K2Node_ComponentBoundEvent_Tag) == 0x000134, "Member 'BP_DoorBaseV2_C_ExecuteUbergraph_BP_DoorBaseV2::K2Node_ComponentBoundEvent_Tag' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_ExecuteUbergraph_BP_DoorBaseV2, K2Node_ComponentBoundEvent_Added) == 0x000140, "Member 'BP_DoorBaseV2_C_ExecuteUbergraph_BP_DoorBaseV2::K2Node_ComponentBoundEvent_Added' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_ExecuteUbergraph_BP_DoorBaseV2, CallFunc_EqualEqual_GameplayTag_ReturnValue) == 0x000141, "Member 'BP_DoorBaseV2_C_ExecuteUbergraph_BP_DoorBaseV2::CallFunc_EqualEqual_GameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_ExecuteUbergraph_BP_DoorBaseV2, K2Node_MakeStruct_CATeamID) == 0x000144, "Member 'BP_DoorBaseV2_C_ExecuteUbergraph_BP_DoorBaseV2::K2Node_MakeStruct_CATeamID' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_ExecuteUbergraph_BP_DoorBaseV2, K2Node_CreateDelegate_OutputDelegate_1) == 0x000148, "Member 'BP_DoorBaseV2_C_ExecuteUbergraph_BP_DoorBaseV2::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_ExecuteUbergraph_BP_DoorBaseV2, Temp_delegate_Variable_2) == 0x00015C, "Member 'BP_DoorBaseV2_C_ExecuteUbergraph_BP_DoorBaseV2::Temp_delegate_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_ExecuteUbergraph_BP_DoorBaseV2, CallFunc_PlayEvent_playback_instance_1) == 0x000170, "Member 'BP_DoorBaseV2_C_ExecuteUbergraph_BP_DoorBaseV2::CallFunc_PlayEvent_playback_instance_1' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_ExecuteUbergraph_BP_DoorBaseV2, CallFunc_PlayEvent_play_success_1) == 0x000180, "Member 'BP_DoorBaseV2_C_ExecuteUbergraph_BP_DoorBaseV2::CallFunc_PlayEvent_play_success_1' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_ExecuteUbergraph_BP_DoorBaseV2, CallFunc_GetStateByName_ReturnValue) == 0x000188, "Member 'BP_DoorBaseV2_C_ExecuteUbergraph_BP_DoorBaseV2::CallFunc_GetStateByName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_ExecuteUbergraph_BP_DoorBaseV2, CallFunc_GetStateByName_ReturnValue_1) == 0x000190, "Member 'BP_DoorBaseV2_C_ExecuteUbergraph_BP_DoorBaseV2::CallFunc_GetStateByName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_ExecuteUbergraph_BP_DoorBaseV2, CallFunc_IsCurrentActiveState_ReturnValue) == 0x000198, "Member 'BP_DoorBaseV2_C_ExecuteUbergraph_BP_DoorBaseV2::CallFunc_IsCurrentActiveState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_ExecuteUbergraph_BP_DoorBaseV2, CallFunc_IsCurrentActiveState_ReturnValue_1) == 0x000199, "Member 'BP_DoorBaseV2_C_ExecuteUbergraph_BP_DoorBaseV2::CallFunc_IsCurrentActiveState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_ExecuteUbergraph_BP_DoorBaseV2, CallFunc_BooleanOR_ReturnValue) == 0x00019A, "Member 'BP_DoorBaseV2_C_ExecuteUbergraph_BP_DoorBaseV2::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_ExecuteUbergraph_BP_DoorBaseV2, CallFunc_PlayEvent_playback_instance_2) == 0x0001A0, "Member 'BP_DoorBaseV2_C_ExecuteUbergraph_BP_DoorBaseV2::CallFunc_PlayEvent_playback_instance_2' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_ExecuteUbergraph_BP_DoorBaseV2, CallFunc_PlayEvent_play_success_2) == 0x0001B0, "Member 'BP_DoorBaseV2_C_ExecuteUbergraph_BP_DoorBaseV2::CallFunc_PlayEvent_play_success_2' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_ExecuteUbergraph_BP_DoorBaseV2, CallFunc_IsDedicatedServer_ReturnValue) == 0x0001B1, "Member 'BP_DoorBaseV2_C_ExecuteUbergraph_BP_DoorBaseV2::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_ExecuteUbergraph_BP_DoorBaseV2, CallFunc_IsAnySwitchLocked_Locked) == 0x0001B2, "Member 'BP_DoorBaseV2_C_ExecuteUbergraph_BP_DoorBaseV2::CallFunc_IsAnySwitchLocked_Locked' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_ExecuteUbergraph_BP_DoorBaseV2, CallFunc_IsAnySwitchLocked_Locked_1) == 0x0001B3, "Member 'BP_DoorBaseV2_C_ExecuteUbergraph_BP_DoorBaseV2::CallFunc_IsAnySwitchLocked_Locked_1' has a wrong offset!");

// Function BP_DoorBaseV2.BP_DoorBaseV2_C.BndEvt__BP_DoorBaseV2_StateMachineComponent_K2Node_ComponentBoundEvent_7_StateTagChangedDelegate__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct BP_DoorBaseV2_C_BndEvt__BP_DoorBaseV2_StateMachineComponent_K2Node_ComponentBoundEvent_7_StateTagChangedDelegate__DelegateSignature final
{
public:
	struct FGameplayTag                           Tag;                                               // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	bool                                          Added;                                             // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_DoorBaseV2_C_BndEvt__BP_DoorBaseV2_StateMachineComponent_K2Node_ComponentBoundEvent_7_StateTagChangedDelegate__DelegateSignature) == 0x000004, "Wrong alignment on BP_DoorBaseV2_C_BndEvt__BP_DoorBaseV2_StateMachineComponent_K2Node_ComponentBoundEvent_7_StateTagChangedDelegate__DelegateSignature");
static_assert(sizeof(BP_DoorBaseV2_C_BndEvt__BP_DoorBaseV2_StateMachineComponent_K2Node_ComponentBoundEvent_7_StateTagChangedDelegate__DelegateSignature) == 0x000010, "Wrong size on BP_DoorBaseV2_C_BndEvt__BP_DoorBaseV2_StateMachineComponent_K2Node_ComponentBoundEvent_7_StateTagChangedDelegate__DelegateSignature");
static_assert(offsetof(BP_DoorBaseV2_C_BndEvt__BP_DoorBaseV2_StateMachineComponent_K2Node_ComponentBoundEvent_7_StateTagChangedDelegate__DelegateSignature, Tag) == 0x000000, "Member 'BP_DoorBaseV2_C_BndEvt__BP_DoorBaseV2_StateMachineComponent_K2Node_ComponentBoundEvent_7_StateTagChangedDelegate__DelegateSignature::Tag' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_BndEvt__BP_DoorBaseV2_StateMachineComponent_K2Node_ComponentBoundEvent_7_StateTagChangedDelegate__DelegateSignature, Added) == 0x00000C, "Member 'BP_DoorBaseV2_C_BndEvt__BP_DoorBaseV2_StateMachineComponent_K2Node_ComponentBoundEvent_7_StateTagChangedDelegate__DelegateSignature::Added' has a wrong offset!");

// Function BP_DoorBaseV2.BP_DoorBaseV2_C.OnActorEndBlocking
// 0x0020 (0x0020 - 0x0000)
struct BP_DoorBaseV2_C_OnActorEndBlocking final
{
public:
	class USceneComponent*                        OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DoorBaseV2_C_OnActorEndBlocking) == 0x000008, "Wrong alignment on BP_DoorBaseV2_C_OnActorEndBlocking");
static_assert(sizeof(BP_DoorBaseV2_C_OnActorEndBlocking) == 0x000020, "Wrong size on BP_DoorBaseV2_C_OnActorEndBlocking");
static_assert(offsetof(BP_DoorBaseV2_C_OnActorEndBlocking, OverlappedComponent) == 0x000000, "Member 'BP_DoorBaseV2_C_OnActorEndBlocking::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_OnActorEndBlocking, OtherActor) == 0x000008, "Member 'BP_DoorBaseV2_C_OnActorEndBlocking::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_OnActorEndBlocking, OtherComp) == 0x000010, "Member 'BP_DoorBaseV2_C_OnActorEndBlocking::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_OnActorEndBlocking, OtherBodyIndex) == 0x000018, "Member 'BP_DoorBaseV2_C_OnActorEndBlocking::OtherBodyIndex' has a wrong offset!");

// Function BP_DoorBaseV2.BP_DoorBaseV2_C.OnActorBlocking
// 0x00B0 (0x00B0 - 0x0000)
struct BP_DoorBaseV2_C_OnActorBlocking final
{
public:
	class USceneComponent*                        OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x0090)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_DoorBaseV2_C_OnActorBlocking) == 0x000008, "Wrong alignment on BP_DoorBaseV2_C_OnActorBlocking");
static_assert(sizeof(BP_DoorBaseV2_C_OnActorBlocking) == 0x0000B0, "Wrong size on BP_DoorBaseV2_C_OnActorBlocking");
static_assert(offsetof(BP_DoorBaseV2_C_OnActorBlocking, OverlappedComponent) == 0x000000, "Member 'BP_DoorBaseV2_C_OnActorBlocking::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_OnActorBlocking, OtherActor) == 0x000008, "Member 'BP_DoorBaseV2_C_OnActorBlocking::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_OnActorBlocking, OtherComp) == 0x000010, "Member 'BP_DoorBaseV2_C_OnActorBlocking::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_OnActorBlocking, OtherBodyIndex) == 0x000018, "Member 'BP_DoorBaseV2_C_OnActorBlocking::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_OnActorBlocking, bFromSweep) == 0x00001C, "Member 'BP_DoorBaseV2_C_OnActorBlocking::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_OnActorBlocking, SweepResult) == 0x000020, "Member 'BP_DoorBaseV2_C_OnActorBlocking::SweepResult' has a wrong offset!");

// Function BP_DoorBaseV2.BP_DoorBaseV2_C.BndEvt__StateMachineComponent_K2Node_ComponentBoundEvent_4_UpdateOpen__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct BP_DoorBaseV2_C_BndEvt__StateMachineComponent_K2Node_ComponentBoundEvent_4_UpdateOpen__DelegateSignature final
{
public:
	float                                         Percentage;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DoorBaseV2_C_BndEvt__StateMachineComponent_K2Node_ComponentBoundEvent_4_UpdateOpen__DelegateSignature) == 0x000004, "Wrong alignment on BP_DoorBaseV2_C_BndEvt__StateMachineComponent_K2Node_ComponentBoundEvent_4_UpdateOpen__DelegateSignature");
static_assert(sizeof(BP_DoorBaseV2_C_BndEvt__StateMachineComponent_K2Node_ComponentBoundEvent_4_UpdateOpen__DelegateSignature) == 0x000004, "Wrong size on BP_DoorBaseV2_C_BndEvt__StateMachineComponent_K2Node_ComponentBoundEvent_4_UpdateOpen__DelegateSignature");
static_assert(offsetof(BP_DoorBaseV2_C_BndEvt__StateMachineComponent_K2Node_ComponentBoundEvent_4_UpdateOpen__DelegateSignature, Percentage) == 0x000000, "Member 'BP_DoorBaseV2_C_BndEvt__StateMachineComponent_K2Node_ComponentBoundEvent_4_UpdateOpen__DelegateSignature::Percentage' has a wrong offset!");

// Function BP_DoorBaseV2.BP_DoorBaseV2_C.UserConstructionScript
// 0x00F0 (0x00F0 - 0x0000)
struct BP_DoorBaseV2_C_UserConstructionScript final
{
public:
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDataTableRowHandle                    K2Node_MakeStruct_DataTableRowHandle;              // 0x0008(0x0018)(NoDestructor)
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0020(0x0018)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_1;            // 0x0038(0x0018)()
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FDataTableRowHandle                    K2Node_MakeStruct_DataTableRowHandle_1;            // 0x0070(0x0018)(NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_1;        // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_2;        // 0x008B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D[0x3];                                       // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetRelativeTransform_ReturnValue;         // 0x0090(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_GetRelativeTransform_ReturnValue_1;       // 0x00C0(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_DoorBaseV2_C_UserConstructionScript) == 0x000010, "Wrong alignment on BP_DoorBaseV2_C_UserConstructionScript");
static_assert(sizeof(BP_DoorBaseV2_C_UserConstructionScript) == 0x0000F0, "Wrong size on BP_DoorBaseV2_C_UserConstructionScript");
static_assert(offsetof(BP_DoorBaseV2_C_UserConstructionScript, CallFunc_Not_PreBool_ReturnValue) == 0x000000, "Member 'BP_DoorBaseV2_C_UserConstructionScript::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_UserConstructionScript, CallFunc_BooleanAND_ReturnValue) == 0x000001, "Member 'BP_DoorBaseV2_C_UserConstructionScript::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_UserConstructionScript, K2Node_MakeStruct_DataTableRowHandle) == 0x000008, "Member 'BP_DoorBaseV2_C_UserConstructionScript::K2Node_MakeStruct_DataTableRowHandle' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_UserConstructionScript, CallFunc_MakeLiteralText_ReturnValue) == 0x000020, "Member 'BP_DoorBaseV2_C_UserConstructionScript::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_UserConstructionScript, CallFunc_MakeLiteralText_ReturnValue_1) == 0x000038, "Member 'BP_DoorBaseV2_C_UserConstructionScript::CallFunc_MakeLiteralText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_UserConstructionScript, CallFunc_GetDisplayName_ReturnValue) == 0x000050, "Member 'BP_DoorBaseV2_C_UserConstructionScript::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_UserConstructionScript, CallFunc_Concat_StrStr_ReturnValue) == 0x000060, "Member 'BP_DoorBaseV2_C_UserConstructionScript::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_UserConstructionScript, K2Node_MakeStruct_DataTableRowHandle_1) == 0x000070, "Member 'BP_DoorBaseV2_C_UserConstructionScript::K2Node_MakeStruct_DataTableRowHandle_1' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_UserConstructionScript, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000088, "Member 'BP_DoorBaseV2_C_UserConstructionScript::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_UserConstructionScript, CallFunc_Not_PreBool_ReturnValue_1) == 0x000089, "Member 'BP_DoorBaseV2_C_UserConstructionScript::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_UserConstructionScript, CallFunc_EqualEqual_NameName_ReturnValue_1) == 0x00008A, "Member 'BP_DoorBaseV2_C_UserConstructionScript::CallFunc_EqualEqual_NameName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_UserConstructionScript, CallFunc_EqualEqual_NameName_ReturnValue_2) == 0x00008B, "Member 'BP_DoorBaseV2_C_UserConstructionScript::CallFunc_EqualEqual_NameName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_UserConstructionScript, CallFunc_BooleanOR_ReturnValue) == 0x00008C, "Member 'BP_DoorBaseV2_C_UserConstructionScript::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_UserConstructionScript, CallFunc_GetRelativeTransform_ReturnValue) == 0x000090, "Member 'BP_DoorBaseV2_C_UserConstructionScript::CallFunc_GetRelativeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_UserConstructionScript, CallFunc_GetRelativeTransform_ReturnValue_1) == 0x0000C0, "Member 'BP_DoorBaseV2_C_UserConstructionScript::CallFunc_GetRelativeTransform_ReturnValue_1' has a wrong offset!");

// Function BP_DoorBaseV2.BP_DoorBaseV2_C.SetOpen
// 0x0002 (0x0002 - 0x0000)
struct BP_DoorBaseV2_C_SetOpen final
{
public:
	bool                                          Open;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Visibility;                                        // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_DoorBaseV2_C_SetOpen) == 0x000001, "Wrong alignment on BP_DoorBaseV2_C_SetOpen");
static_assert(sizeof(BP_DoorBaseV2_C_SetOpen) == 0x000002, "Wrong size on BP_DoorBaseV2_C_SetOpen");
static_assert(offsetof(BP_DoorBaseV2_C_SetOpen, Open) == 0x000000, "Member 'BP_DoorBaseV2_C_SetOpen::Open' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_SetOpen, Visibility) == 0x000001, "Member 'BP_DoorBaseV2_C_SetOpen::Visibility' has a wrong offset!");

// Function BP_DoorBaseV2.BP_DoorBaseV2_C.ShowLockedState
// 0x0001 (0x0001 - 0x0000)
struct BP_DoorBaseV2_C_ShowLockedState final
{
public:
	bool                                          ShowLocked;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_DoorBaseV2_C_ShowLockedState) == 0x000001, "Wrong alignment on BP_DoorBaseV2_C_ShowLockedState");
static_assert(sizeof(BP_DoorBaseV2_C_ShowLockedState) == 0x000001, "Wrong size on BP_DoorBaseV2_C_ShowLockedState");
static_assert(offsetof(BP_DoorBaseV2_C_ShowLockedState, ShowLocked) == 0x000000, "Member 'BP_DoorBaseV2_C_ShowLockedState::ShowLocked' has a wrong offset!");

// Function BP_DoorBaseV2.BP_DoorBaseV2_C.EnableFoam
// 0x0018 (0x0018 - 0x0000)
struct BP_DoorBaseV2_C_EnableFoam final
{
public:
	bool                                          Enable;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCAFoamAlignmentComponent*              CallFunc_GetComponentByClass_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_DoorBaseV2_C_EnableFoam) == 0x000008, "Wrong alignment on BP_DoorBaseV2_C_EnableFoam");
static_assert(sizeof(BP_DoorBaseV2_C_EnableFoam) == 0x000018, "Wrong size on BP_DoorBaseV2_C_EnableFoam");
static_assert(offsetof(BP_DoorBaseV2_C_EnableFoam, Enable) == 0x000000, "Member 'BP_DoorBaseV2_C_EnableFoam::Enable' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_EnableFoam, CallFunc_GetComponentByClass_ReturnValue) == 0x000008, "Member 'BP_DoorBaseV2_C_EnableFoam::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_EnableFoam, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_DoorBaseV2_C_EnableFoam::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_DoorBaseV2.BP_DoorBaseV2_C.UpdateLockedStatus
// 0x0020 (0x0020 - 0x0000)
struct BP_DoorBaseV2_C_UpdateLockedStatus final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasGameplayTag_ReturnValue;               // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ICAGameplayAuthorityInterface> CallFunc_RequiresAuthorization_self_CastInput;     // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_RequiresAuthorization_ReturnValue;        // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_DoorBaseV2_C_UpdateLockedStatus) == 0x000008, "Wrong alignment on BP_DoorBaseV2_C_UpdateLockedStatus");
static_assert(sizeof(BP_DoorBaseV2_C_UpdateLockedStatus) == 0x000020, "Wrong size on BP_DoorBaseV2_C_UpdateLockedStatus");
static_assert(offsetof(BP_DoorBaseV2_C_UpdateLockedStatus, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_DoorBaseV2_C_UpdateLockedStatus::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_UpdateLockedStatus, CallFunc_HasGameplayTag_ReturnValue) == 0x000001, "Member 'BP_DoorBaseV2_C_UpdateLockedStatus::CallFunc_HasGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_UpdateLockedStatus, CallFunc_RequiresAuthorization_self_CastInput) == 0x000008, "Member 'BP_DoorBaseV2_C_UpdateLockedStatus::CallFunc_RequiresAuthorization_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_UpdateLockedStatus, CallFunc_RequiresAuthorization_ReturnValue) == 0x000018, "Member 'BP_DoorBaseV2_C_UpdateLockedStatus::CallFunc_RequiresAuthorization_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_UpdateLockedStatus, CallFunc_BooleanAND_ReturnValue) == 0x000019, "Member 'BP_DoorBaseV2_C_UpdateLockedStatus::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_DoorBaseV2.BP_DoorBaseV2_C.GetDoorSwitchLocation
// 0x04D0 (0x04D0 - 0x0000)
struct BP_DoorBaseV2_C_GetDoorSwitchLocation final
{
public:
	struct FTransform                             Switch2Transform;                                  // 0x0000(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	struct FTransform                             Switch1Transform;                                  // 0x0030(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	class AActor*                                 ClosestBackSwitch;                                 // 0x0060(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 ClosestFrontSwitch;                                // 0x0068(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         BackDoorSwitch;                                    // 0x0070(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	TArray<class AActor*>                         FrontDoorSwitch;                                   // 0x0080(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	bool                                          HasDoorSwitchLocation;                             // 0x0090(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x00D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x00DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E8[0x8];                                       // 0x00E8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetRelativeTransform_ReturnValue;         // 0x00F0(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeRelativeTransform_ReturnValue;        // 0x0120(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeTransform_SweepHitResult;   // 0x0150(0x0090)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x01E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E2[0x6];                                      // 0x01E2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue_1;             // 0x01E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F9[0x7];                                      // 0x01F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0200(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0211(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_212[0xE];                                      // 0x0212(0x000E)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetRelativeTransform_ReturnValue_1;       // 0x0220(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeRelativeTransform_ReturnValue_1;      // 0x0250(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeTransform_SweepHitResult_1; // 0x0280(0x0090)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0310(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item_1;                         // 0x0318(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0320(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_321[0xF];                                      // 0x0321(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0330(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0360(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x036C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0378(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_384[0xC];                                      // 0x0384(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0390(0x0030)(IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x03C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x03C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C5[0x3];                                      // 0x03C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x03C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x03CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3CD[0x3];                                      // 0x03CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item_2;                         // 0x03D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x03D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDistanceTo_ReturnValue;                // 0x03DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDistanceTo_ReturnValue_1;              // 0x03E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x03E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E5[0x3];                                      // 0x03E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetDistanceTo_ReturnValue_2;              // 0x03E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x03EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item_3;                         // 0x03F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x03F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x03FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3FD[0x3];                                      // 0x03FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetDistanceTo_ReturnValue_3;              // 0x0400(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_1;            // 0x0404(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0405(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_406[0x2];                                      // 0x0406(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0408(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40C[0x4];                                      // 0x040C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetOverlappingActors_overlaps;            // 0x0410(0x0010)(ReferenceParm)
	class AActor*                                 CallFunc_Array_Get_Item_4;                         // 0x0420(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0428(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x042C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDotProductTo_ReturnValue;              // 0x0430(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ActorHasTag_ReturnValue;                  // 0x0434(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_2;            // 0x0435(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_436[0x2];                                      // 0x0436(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x0438(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x043C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x043D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_43E[0x2];                                      // 0x043E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue_1;               // 0x0440(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x0470(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x047C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x0488(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_494[0xC];                                      // 0x0494(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x04A0(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_DoorBaseV2_C_GetDoorSwitchLocation) == 0x000010, "Wrong alignment on BP_DoorBaseV2_C_GetDoorSwitchLocation");
static_assert(sizeof(BP_DoorBaseV2_C_GetDoorSwitchLocation) == 0x0004D0, "Wrong size on BP_DoorBaseV2_C_GetDoorSwitchLocation");
static_assert(offsetof(BP_DoorBaseV2_C_GetDoorSwitchLocation, Switch2Transform) == 0x000000, "Member 'BP_DoorBaseV2_C_GetDoorSwitchLocation::Switch2Transform' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_GetDoorSwitchLocation, Switch1Transform) == 0x000030, "Member 'BP_DoorBaseV2_C_GetDoorSwitchLocation::Switch1Transform' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_GetDoorSwitchLocation, ClosestBackSwitch) == 0x000060, "Member 'BP_DoorBaseV2_C_GetDoorSwitchLocation::ClosestBackSwitch' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_GetDoorSwitchLocation, ClosestFrontSwitch) == 0x000068, "Member 'BP_DoorBaseV2_C_GetDoorSwitchLocation::ClosestFrontSwitch' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_GetDoorSwitchLocation, BackDoorSwitch) == 0x000070, "Member 'BP_DoorBaseV2_C_GetDoorSwitchLocation::BackDoorSwitch' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_GetDoorSwitchLocation, FrontDoorSwitch) == 0x000080, "Member 'BP_DoorBaseV2_C_GetDoorSwitchLocation::FrontDoorSwitch' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_GetDoorSwitchLocation, HasDoorSwitchLocation) == 0x000090, "Member 'BP_DoorBaseV2_C_GetDoorSwitchLocation::HasDoorSwitchLocation' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_GetDoorSwitchLocation, Temp_int_Loop_Counter_Variable) == 0x000094, "Member 'BP_DoorBaseV2_C_GetDoorSwitchLocation::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_GetDoorSwitchLocation, Temp_int_Loop_Counter_Variable_1) == 0x000098, "Member 'BP_DoorBaseV2_C_GetDoorSwitchLocation::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_GetDoorSwitchLocation, CallFunc_Add_IntInt_ReturnValue) == 0x00009C, "Member 'BP_DoorBaseV2_C_GetDoorSwitchLocation::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_GetDoorSwitchLocation, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000A0, "Member 'BP_DoorBaseV2_C_GetDoorSwitchLocation::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_GetDoorSwitchLocation, Temp_int_Array_Index_Variable) == 0x0000A4, "Member 'BP_DoorBaseV2_C_GetDoorSwitchLocation::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_GetDoorSwitchLocation, Temp_int_Array_Index_Variable_1) == 0x0000A8, "Member 'BP_DoorBaseV2_C_GetDoorSwitchLocation::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_GetDoorSwitchLocation, Temp_int_Array_Index_Variable_2) == 0x0000AC, "Member 'BP_DoorBaseV2_C_GetDoorSwitchLocation::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_GetDoorSwitchLocation, CallFunc_GetDisplayName_ReturnValue) == 0x0000B0, "Member 'BP_DoorBaseV2_C_GetDoorSwitchLocation::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_GetDoorSwitchLocation, CallFunc_Concat_StrStr_ReturnValue) == 0x0000C0, "Member 'BP_DoorBaseV2_C_GetDoorSwitchLocation::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_GetDoorSwitchLocation, CallFunc_MakeRotator_ReturnValue) == 0x0000D0, "Member 'BP_DoorBaseV2_C_GetDoorSwitchLocation::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_GetDoorSwitchLocation, CallFunc_MakeRotator_ReturnValue_1) == 0x0000DC, "Member 'BP_DoorBaseV2_C_GetDoorSwitchLocation::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_GetDoorSwitchLocation, CallFunc_GetRelativeTransform_ReturnValue) == 0x0000F0, "Member 'BP_DoorBaseV2_C_GetDoorSwitchLocation::CallFunc_GetRelativeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_GetDoorSwitchLocation, CallFunc_MakeRelativeTransform_ReturnValue) == 0x000120, "Member 'BP_DoorBaseV2_C_GetDoorSwitchLocation::CallFunc_MakeRelativeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_GetDoorSwitchLocation, CallFunc_K2_SetRelativeTransform_SweepHitResult) == 0x000150, "Member 'BP_DoorBaseV2_C_GetDoorSwitchLocation::CallFunc_K2_SetRelativeTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_GetDoorSwitchLocation, CallFunc_IsValid_ReturnValue) == 0x0001E0, "Member 'BP_DoorBaseV2_C_GetDoorSwitchLocation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_GetDoorSwitchLocation, CallFunc_IsValid_ReturnValue_1) == 0x0001E1, "Member 'BP_DoorBaseV2_C_GetDoorSwitchLocation::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_GetDoorSwitchLocation, CallFunc_GetDisplayName_ReturnValue_1) == 0x0001E8, "Member 'BP_DoorBaseV2_C_GetDoorSwitchLocation::CallFunc_GetDisplayName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_GetDoorSwitchLocation, CallFunc_Not_PreBool_ReturnValue) == 0x0001F8, "Member 'BP_DoorBaseV2_C_GetDoorSwitchLocation::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_GetDoorSwitchLocation, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000200, "Member 'BP_DoorBaseV2_C_GetDoorSwitchLocation::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_GetDoorSwitchLocation, CallFunc_BooleanAND_ReturnValue) == 0x000210, "Member 'BP_DoorBaseV2_C_GetDoorSwitchLocation::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_GetDoorSwitchLocation, CallFunc_BooleanAND_ReturnValue_1) == 0x000211, "Member 'BP_DoorBaseV2_C_GetDoorSwitchLocation::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_GetDoorSwitchLocation, CallFunc_GetRelativeTransform_ReturnValue_1) == 0x000220, "Member 'BP_DoorBaseV2_C_GetDoorSwitchLocation::CallFunc_GetRelativeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_GetDoorSwitchLocation, CallFunc_MakeRelativeTransform_ReturnValue_1) == 0x000250, "Member 'BP_DoorBaseV2_C_GetDoorSwitchLocation::CallFunc_MakeRelativeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_GetDoorSwitchLocation, CallFunc_K2_SetRelativeTransform_SweepHitResult_1) == 0x000280, "Member 'BP_DoorBaseV2_C_GetDoorSwitchLocation::CallFunc_K2_SetRelativeTransform_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_GetDoorSwitchLocation, CallFunc_Array_Get_Item) == 0x000310, "Member 'BP_DoorBaseV2_C_GetDoorSwitchLocation::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_GetDoorSwitchLocation, CallFunc_Array_Get_Item_1) == 0x000318, "Member 'BP_DoorBaseV2_C_GetDoorSwitchLocation::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_GetDoorSwitchLocation, CallFunc_IsValid_ReturnValue_2) == 0x000320, "Member 'BP_DoorBaseV2_C_GetDoorSwitchLocation::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_GetDoorSwitchLocation, CallFunc_GetTransform_ReturnValue) == 0x000330, "Member 'BP_DoorBaseV2_C_GetDoorSwitchLocation::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_GetDoorSwitchLocation, CallFunc_BreakTransform_Location) == 0x000360, "Member 'BP_DoorBaseV2_C_GetDoorSwitchLocation::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_GetDoorSwitchLocation, CallFunc_BreakTransform_Rotation) == 0x00036C, "Member 'BP_DoorBaseV2_C_GetDoorSwitchLocation::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_GetDoorSwitchLocation, CallFunc_BreakTransform_Scale) == 0x000378, "Member 'BP_DoorBaseV2_C_GetDoorSwitchLocation::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_GetDoorSwitchLocation, CallFunc_MakeTransform_ReturnValue) == 0x000390, "Member 'BP_DoorBaseV2_C_GetDoorSwitchLocation::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_GetDoorSwitchLocation, CallFunc_Array_Length_ReturnValue) == 0x0003C0, "Member 'BP_DoorBaseV2_C_GetDoorSwitchLocation::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_GetDoorSwitchLocation, CallFunc_Greater_IntInt_ReturnValue) == 0x0003C4, "Member 'BP_DoorBaseV2_C_GetDoorSwitchLocation::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_GetDoorSwitchLocation, CallFunc_Array_Length_ReturnValue_1) == 0x0003C8, "Member 'BP_DoorBaseV2_C_GetDoorSwitchLocation::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_GetDoorSwitchLocation, CallFunc_Greater_IntInt_ReturnValue_1) == 0x0003CC, "Member 'BP_DoorBaseV2_C_GetDoorSwitchLocation::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_GetDoorSwitchLocation, CallFunc_Array_Get_Item_2) == 0x0003D0, "Member 'BP_DoorBaseV2_C_GetDoorSwitchLocation::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_GetDoorSwitchLocation, CallFunc_Array_Length_ReturnValue_2) == 0x0003D8, "Member 'BP_DoorBaseV2_C_GetDoorSwitchLocation::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_GetDoorSwitchLocation, CallFunc_GetDistanceTo_ReturnValue) == 0x0003DC, "Member 'BP_DoorBaseV2_C_GetDoorSwitchLocation::CallFunc_GetDistanceTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_GetDoorSwitchLocation, CallFunc_GetDistanceTo_ReturnValue_1) == 0x0003E0, "Member 'BP_DoorBaseV2_C_GetDoorSwitchLocation::CallFunc_GetDistanceTo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_GetDoorSwitchLocation, CallFunc_Less_FloatFloat_ReturnValue) == 0x0003E4, "Member 'BP_DoorBaseV2_C_GetDoorSwitchLocation::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_GetDoorSwitchLocation, CallFunc_GetDistanceTo_ReturnValue_2) == 0x0003E8, "Member 'BP_DoorBaseV2_C_GetDoorSwitchLocation::CallFunc_GetDistanceTo_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_GetDoorSwitchLocation, Temp_int_Loop_Counter_Variable_2) == 0x0003EC, "Member 'BP_DoorBaseV2_C_GetDoorSwitchLocation::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_GetDoorSwitchLocation, CallFunc_Array_Get_Item_3) == 0x0003F0, "Member 'BP_DoorBaseV2_C_GetDoorSwitchLocation::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_GetDoorSwitchLocation, CallFunc_Array_Length_ReturnValue_3) == 0x0003F8, "Member 'BP_DoorBaseV2_C_GetDoorSwitchLocation::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_GetDoorSwitchLocation, CallFunc_Less_IntInt_ReturnValue) == 0x0003FC, "Member 'BP_DoorBaseV2_C_GetDoorSwitchLocation::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_GetDoorSwitchLocation, CallFunc_GetDistanceTo_ReturnValue_3) == 0x000400, "Member 'BP_DoorBaseV2_C_GetDoorSwitchLocation::CallFunc_GetDistanceTo_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_GetDoorSwitchLocation, CallFunc_Less_FloatFloat_ReturnValue_1) == 0x000404, "Member 'BP_DoorBaseV2_C_GetDoorSwitchLocation::CallFunc_Less_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_GetDoorSwitchLocation, CallFunc_Less_IntInt_ReturnValue_1) == 0x000405, "Member 'BP_DoorBaseV2_C_GetDoorSwitchLocation::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_GetDoorSwitchLocation, CallFunc_Add_IntInt_ReturnValue_2) == 0x000408, "Member 'BP_DoorBaseV2_C_GetDoorSwitchLocation::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_GetDoorSwitchLocation, CallFunc_GetOverlappingActors_overlaps) == 0x000410, "Member 'BP_DoorBaseV2_C_GetDoorSwitchLocation::CallFunc_GetOverlappingActors_overlaps' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_GetDoorSwitchLocation, CallFunc_Array_Get_Item_4) == 0x000420, "Member 'BP_DoorBaseV2_C_GetDoorSwitchLocation::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_GetDoorSwitchLocation, CallFunc_Array_Add_ReturnValue) == 0x000428, "Member 'BP_DoorBaseV2_C_GetDoorSwitchLocation::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_GetDoorSwitchLocation, CallFunc_Array_Add_ReturnValue_1) == 0x00042C, "Member 'BP_DoorBaseV2_C_GetDoorSwitchLocation::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_GetDoorSwitchLocation, CallFunc_GetDotProductTo_ReturnValue) == 0x000430, "Member 'BP_DoorBaseV2_C_GetDoorSwitchLocation::CallFunc_GetDotProductTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_GetDoorSwitchLocation, CallFunc_ActorHasTag_ReturnValue) == 0x000434, "Member 'BP_DoorBaseV2_C_GetDoorSwitchLocation::CallFunc_ActorHasTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_GetDoorSwitchLocation, CallFunc_Less_FloatFloat_ReturnValue_2) == 0x000435, "Member 'BP_DoorBaseV2_C_GetDoorSwitchLocation::CallFunc_Less_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_GetDoorSwitchLocation, CallFunc_Array_Length_ReturnValue_4) == 0x000438, "Member 'BP_DoorBaseV2_C_GetDoorSwitchLocation::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_GetDoorSwitchLocation, CallFunc_Less_IntInt_ReturnValue_2) == 0x00043C, "Member 'BP_DoorBaseV2_C_GetDoorSwitchLocation::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_GetDoorSwitchLocation, CallFunc_IsValid_ReturnValue_3) == 0x00043D, "Member 'BP_DoorBaseV2_C_GetDoorSwitchLocation::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_GetDoorSwitchLocation, CallFunc_GetTransform_ReturnValue_1) == 0x000440, "Member 'BP_DoorBaseV2_C_GetDoorSwitchLocation::CallFunc_GetTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_GetDoorSwitchLocation, CallFunc_BreakTransform_Location_1) == 0x000470, "Member 'BP_DoorBaseV2_C_GetDoorSwitchLocation::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_GetDoorSwitchLocation, CallFunc_BreakTransform_Rotation_1) == 0x00047C, "Member 'BP_DoorBaseV2_C_GetDoorSwitchLocation::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_GetDoorSwitchLocation, CallFunc_BreakTransform_Scale_1) == 0x000488, "Member 'BP_DoorBaseV2_C_GetDoorSwitchLocation::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_GetDoorSwitchLocation, CallFunc_MakeTransform_ReturnValue_1) == 0x0004A0, "Member 'BP_DoorBaseV2_C_GetDoorSwitchLocation::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");

// Function BP_DoorBaseV2.BP_DoorBaseV2_C.SpawnDoorSwitch
// 0x00A0 (0x00A0 - 0x0000)
struct BP_DoorBaseV2_C_SpawnDoorSwitch final
{
public:
	class AActor*                                 L_DoorSwitch2Reference;                            // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class AActor*                                 L_DoorSwitch1Reference;                            // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0xE];                                       // 0x0012(0x000E)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0020(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_FinishSpawningActor_ReturnValue;          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue_1;     // 0x0060(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1; // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_FinishSpawningActor_ReturnValue_1;        // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DoorBaseV2_C_SpawnDoorSwitch) == 0x000010, "Wrong alignment on BP_DoorBaseV2_C_SpawnDoorSwitch");
static_assert(sizeof(BP_DoorBaseV2_C_SpawnDoorSwitch) == 0x0000A0, "Wrong size on BP_DoorBaseV2_C_SpawnDoorSwitch");
static_assert(offsetof(BP_DoorBaseV2_C_SpawnDoorSwitch, L_DoorSwitch2Reference) == 0x000000, "Member 'BP_DoorBaseV2_C_SpawnDoorSwitch::L_DoorSwitch2Reference' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_SpawnDoorSwitch, L_DoorSwitch1Reference) == 0x000008, "Member 'BP_DoorBaseV2_C_SpawnDoorSwitch::L_DoorSwitch1Reference' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_SpawnDoorSwitch, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_DoorBaseV2_C_SpawnDoorSwitch::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_SpawnDoorSwitch, CallFunc_IsValid_ReturnValue_1) == 0x000011, "Member 'BP_DoorBaseV2_C_SpawnDoorSwitch::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_SpawnDoorSwitch, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000020, "Member 'BP_DoorBaseV2_C_SpawnDoorSwitch::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_SpawnDoorSwitch, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000050, "Member 'BP_DoorBaseV2_C_SpawnDoorSwitch::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_SpawnDoorSwitch, CallFunc_FinishSpawningActor_ReturnValue) == 0x000058, "Member 'BP_DoorBaseV2_C_SpawnDoorSwitch::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_SpawnDoorSwitch, CallFunc_K2_GetComponentToWorld_ReturnValue_1) == 0x000060, "Member 'BP_DoorBaseV2_C_SpawnDoorSwitch::CallFunc_K2_GetComponentToWorld_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_SpawnDoorSwitch, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1) == 0x000090, "Member 'BP_DoorBaseV2_C_SpawnDoorSwitch::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_SpawnDoorSwitch, CallFunc_FinishSpawningActor_ReturnValue_1) == 0x000098, "Member 'BP_DoorBaseV2_C_SpawnDoorSwitch::CallFunc_FinishSpawningActor_ReturnValue_1' has a wrong offset!");

// Function BP_DoorBaseV2.BP_DoorBaseV2_C.Set Actor Start Blocking
// 0x0080 (0x0080 - 0x0000)
struct BP_DoorBaseV2_C_Set_Actor_Start_Blocking final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACACharacter_MainPlayer*                K2Node_DynamicCast_AsCACharacter_Main_Player;      // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuat                                  CallFunc_Conv_VectorToQuaternion_ReturnValue;      // 0x0030(0x0010)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Map_Find_Value;                           // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Quat_VectorForward_ReturnValue;           // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorInt_ReturnValue;           // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DoorBaseV2_C_Set_Actor_Start_Blocking) == 0x000010, "Wrong alignment on BP_DoorBaseV2_C_Set_Actor_Start_Blocking");
static_assert(sizeof(BP_DoorBaseV2_C_Set_Actor_Start_Blocking) == 0x000080, "Wrong size on BP_DoorBaseV2_C_Set_Actor_Start_Blocking");
static_assert(offsetof(BP_DoorBaseV2_C_Set_Actor_Start_Blocking, Actor) == 0x000000, "Member 'BP_DoorBaseV2_C_Set_Actor_Start_Blocking::Actor' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_Set_Actor_Start_Blocking, K2Node_DynamicCast_AsCACharacter_Main_Player) == 0x000008, "Member 'BP_DoorBaseV2_C_Set_Actor_Start_Blocking::K2Node_DynamicCast_AsCACharacter_Main_Player' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_Set_Actor_Start_Blocking, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_DoorBaseV2_C_Set_Actor_Start_Blocking::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_Set_Actor_Start_Blocking, CallFunc_GetVelocity_ReturnValue) == 0x000014, "Member 'BP_DoorBaseV2_C_Set_Actor_Start_Blocking::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_Set_Actor_Start_Blocking, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000020, "Member 'BP_DoorBaseV2_C_Set_Actor_Start_Blocking::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_Set_Actor_Start_Blocking, CallFunc_Conv_VectorToQuaternion_ReturnValue) == 0x000030, "Member 'BP_DoorBaseV2_C_Set_Actor_Start_Blocking::CallFunc_Conv_VectorToQuaternion_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_Set_Actor_Start_Blocking, CallFunc_Map_Find_Value) == 0x000040, "Member 'BP_DoorBaseV2_C_Set_Actor_Start_Blocking::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_Set_Actor_Start_Blocking, CallFunc_Map_Find_ReturnValue) == 0x00004C, "Member 'BP_DoorBaseV2_C_Set_Actor_Start_Blocking::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_Set_Actor_Start_Blocking, CallFunc_Quat_VectorForward_ReturnValue) == 0x000050, "Member 'BP_DoorBaseV2_C_Set_Actor_Start_Blocking::CallFunc_Quat_VectorForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_Set_Actor_Start_Blocking, CallFunc_Multiply_VectorInt_ReturnValue) == 0x00005C, "Member 'BP_DoorBaseV2_C_Set_Actor_Start_Blocking::CallFunc_Multiply_VectorInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_Set_Actor_Start_Blocking, CallFunc_Add_VectorVector_ReturnValue) == 0x000068, "Member 'BP_DoorBaseV2_C_Set_Actor_Start_Blocking::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");

// Function BP_DoorBaseV2.BP_DoorBaseV2_C.Set Actor End Blocking
// 0x0060 (0x0060 - 0x0000)
struct BP_DoorBaseV2_C_Set_Actor_End_Blocking final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACACharacter_MainPlayer*                K2Node_DynamicCast_AsCACharacter_Main_Player;      // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Remove_ReturnValue;                   // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Map_Find_Value;                           // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_DoorBaseV2_C_Set_Actor_End_Blocking) == 0x000008, "Wrong alignment on BP_DoorBaseV2_C_Set_Actor_End_Blocking");
static_assert(sizeof(BP_DoorBaseV2_C_Set_Actor_End_Blocking) == 0x000060, "Wrong size on BP_DoorBaseV2_C_Set_Actor_End_Blocking");
static_assert(offsetof(BP_DoorBaseV2_C_Set_Actor_End_Blocking, Actor) == 0x000000, "Member 'BP_DoorBaseV2_C_Set_Actor_End_Blocking::Actor' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_Set_Actor_End_Blocking, K2Node_DynamicCast_AsCACharacter_Main_Player) == 0x000008, "Member 'BP_DoorBaseV2_C_Set_Actor_End_Blocking::K2Node_DynamicCast_AsCACharacter_Main_Player' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_Set_Actor_End_Blocking, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_DoorBaseV2_C_Set_Actor_End_Blocking::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_Set_Actor_End_Blocking, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000014, "Member 'BP_DoorBaseV2_C_Set_Actor_End_Blocking::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_Set_Actor_End_Blocking, CallFunc_Map_Remove_ReturnValue) == 0x000020, "Member 'BP_DoorBaseV2_C_Set_Actor_End_Blocking::CallFunc_Map_Remove_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_Set_Actor_End_Blocking, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000024, "Member 'BP_DoorBaseV2_C_Set_Actor_End_Blocking::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_Set_Actor_End_Blocking, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000030, "Member 'BP_DoorBaseV2_C_Set_Actor_End_Blocking::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_Set_Actor_End_Blocking, CallFunc_Map_Find_Value) == 0x00003C, "Member 'BP_DoorBaseV2_C_Set_Actor_End_Blocking::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_Set_Actor_End_Blocking, CallFunc_Map_Find_ReturnValue) == 0x000048, "Member 'BP_DoorBaseV2_C_Set_Actor_End_Blocking::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_Set_Actor_End_Blocking, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x00004C, "Member 'BP_DoorBaseV2_C_Set_Actor_End_Blocking::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_Set_Actor_End_Blocking, CallFunc_Dot_VectorVector_ReturnValue) == 0x000058, "Member 'BP_DoorBaseV2_C_Set_Actor_End_Blocking::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_Set_Actor_End_Blocking, CallFunc_Less_FloatFloat_ReturnValue) == 0x00005C, "Member 'BP_DoorBaseV2_C_Set_Actor_End_Blocking::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_DoorBaseV2.BP_DoorBaseV2_C.UpdateDoorSwitchSide
// 0x01F0 (0x01F0 - 0x0000)
struct BP_DoorBaseV2_C_UpdateDoorSwitchSide final
{
public:
	struct FTransform                             WorldSwitchTransform;                              // 0x0000(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	struct FTransform                             CurrentDoorSwitchLocation;                         // 0x0030(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0063(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_92[0xE];                                       // 0x0092(0x000E)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetRelativeTransform_ReturnValue;         // 0x00A0(0x0030)(IsPlainOldData, NoDestructor)
	class FString                                 CallFunc_GetDisplayName_ReturnValue_1;             // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeRelativeTransform_ReturnValue;        // 0x00E0(0x0030)(IsPlainOldData, NoDestructor)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0110(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_122[0xE];                                      // 0x0122(0x000E)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             K2Node_Select_Default;                             // 0x0130(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeTransform_SweepHitResult;   // 0x0160(0x0090)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_DoorBaseV2_C_UpdateDoorSwitchSide) == 0x000010, "Wrong alignment on BP_DoorBaseV2_C_UpdateDoorSwitchSide");
static_assert(sizeof(BP_DoorBaseV2_C_UpdateDoorSwitchSide) == 0x0001F0, "Wrong size on BP_DoorBaseV2_C_UpdateDoorSwitchSide");
static_assert(offsetof(BP_DoorBaseV2_C_UpdateDoorSwitchSide, WorldSwitchTransform) == 0x000000, "Member 'BP_DoorBaseV2_C_UpdateDoorSwitchSide::WorldSwitchTransform' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_UpdateDoorSwitchSide, CurrentDoorSwitchLocation) == 0x000030, "Member 'BP_DoorBaseV2_C_UpdateDoorSwitchSide::CurrentDoorSwitchLocation' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_UpdateDoorSwitchSide, CallFunc_IsValid_ReturnValue) == 0x000060, "Member 'BP_DoorBaseV2_C_UpdateDoorSwitchSide::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_UpdateDoorSwitchSide, CallFunc_IsValid_ReturnValue_1) == 0x000061, "Member 'BP_DoorBaseV2_C_UpdateDoorSwitchSide::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_UpdateDoorSwitchSide, Temp_bool_Variable) == 0x000062, "Member 'BP_DoorBaseV2_C_UpdateDoorSwitchSide::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_UpdateDoorSwitchSide, CallFunc_Not_PreBool_ReturnValue) == 0x000063, "Member 'BP_DoorBaseV2_C_UpdateDoorSwitchSide::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_UpdateDoorSwitchSide, CallFunc_GetDisplayName_ReturnValue) == 0x000068, "Member 'BP_DoorBaseV2_C_UpdateDoorSwitchSide::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_UpdateDoorSwitchSide, CallFunc_Not_PreBool_ReturnValue_1) == 0x000078, "Member 'BP_DoorBaseV2_C_UpdateDoorSwitchSide::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_UpdateDoorSwitchSide, CallFunc_Concat_StrStr_ReturnValue) == 0x000080, "Member 'BP_DoorBaseV2_C_UpdateDoorSwitchSide::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_UpdateDoorSwitchSide, CallFunc_BooleanAND_ReturnValue) == 0x000090, "Member 'BP_DoorBaseV2_C_UpdateDoorSwitchSide::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_UpdateDoorSwitchSide, CallFunc_BooleanAND_ReturnValue_1) == 0x000091, "Member 'BP_DoorBaseV2_C_UpdateDoorSwitchSide::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_UpdateDoorSwitchSide, CallFunc_GetRelativeTransform_ReturnValue) == 0x0000A0, "Member 'BP_DoorBaseV2_C_UpdateDoorSwitchSide::CallFunc_GetRelativeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_UpdateDoorSwitchSide, CallFunc_GetDisplayName_ReturnValue_1) == 0x0000D0, "Member 'BP_DoorBaseV2_C_UpdateDoorSwitchSide::CallFunc_GetDisplayName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_UpdateDoorSwitchSide, CallFunc_MakeRelativeTransform_ReturnValue) == 0x0000E0, "Member 'BP_DoorBaseV2_C_UpdateDoorSwitchSide::CallFunc_MakeRelativeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_UpdateDoorSwitchSide, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000110, "Member 'BP_DoorBaseV2_C_UpdateDoorSwitchSide::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_UpdateDoorSwitchSide, CallFunc_BooleanAND_ReturnValue_2) == 0x000120, "Member 'BP_DoorBaseV2_C_UpdateDoorSwitchSide::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_UpdateDoorSwitchSide, CallFunc_Not_PreBool_ReturnValue_2) == 0x000121, "Member 'BP_DoorBaseV2_C_UpdateDoorSwitchSide::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_UpdateDoorSwitchSide, K2Node_Select_Default) == 0x000130, "Member 'BP_DoorBaseV2_C_UpdateDoorSwitchSide::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_UpdateDoorSwitchSide, CallFunc_K2_SetRelativeTransform_SweepHitResult) == 0x000160, "Member 'BP_DoorBaseV2_C_UpdateDoorSwitchSide::CallFunc_K2_SetRelativeTransform_SweepHitResult' has a wrong offset!");

// Function BP_DoorBaseV2.BP_DoorBaseV2_C.Update Door Switch Type
// 0x0030 (0x0030 - 0x0000)
struct BP_DoorBaseV2_C_Update_Door_Switch_Type final
{
public:
	struct FDataTableRowHandle                    DoorSwitchType;                                    // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FDoorSwitchStruct                      CallFunc_GetDataTableRowFromName_OutRow;           // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_DoorBaseV2_C_Update_Door_Switch_Type) == 0x000008, "Wrong alignment on BP_DoorBaseV2_C_Update_Door_Switch_Type");
static_assert(sizeof(BP_DoorBaseV2_C_Update_Door_Switch_Type) == 0x000030, "Wrong size on BP_DoorBaseV2_C_Update_Door_Switch_Type");
static_assert(offsetof(BP_DoorBaseV2_C_Update_Door_Switch_Type, DoorSwitchType) == 0x000000, "Member 'BP_DoorBaseV2_C_Update_Door_Switch_Type::DoorSwitchType' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_Update_Door_Switch_Type, CallFunc_GetDataTableRowFromName_OutRow) == 0x000018, "Member 'BP_DoorBaseV2_C_Update_Door_Switch_Type::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_Update_Door_Switch_Type, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000028, "Member 'BP_DoorBaseV2_C_Update_Door_Switch_Type::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");

// Function BP_DoorBaseV2.BP_DoorBaseV2_C.ResetDoorSwitchLocations
// 0x0120 (0x0120 - 0x0000)
struct BP_DoorBaseV2_C_ResetDoorSwitchLocations final
{
public:
	struct FHitResult                             CallFunc_K2_SetRelativeTransform_SweepHitResult;   // 0x0000(0x0090)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetRelativeTransform_SweepHitResult_1; // 0x0090(0x0090)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_DoorBaseV2_C_ResetDoorSwitchLocations) == 0x000004, "Wrong alignment on BP_DoorBaseV2_C_ResetDoorSwitchLocations");
static_assert(sizeof(BP_DoorBaseV2_C_ResetDoorSwitchLocations) == 0x000120, "Wrong size on BP_DoorBaseV2_C_ResetDoorSwitchLocations");
static_assert(offsetof(BP_DoorBaseV2_C_ResetDoorSwitchLocations, CallFunc_K2_SetRelativeTransform_SweepHitResult) == 0x000000, "Member 'BP_DoorBaseV2_C_ResetDoorSwitchLocations::CallFunc_K2_SetRelativeTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_ResetDoorSwitchLocations, CallFunc_K2_SetRelativeTransform_SweepHitResult_1) == 0x000090, "Member 'BP_DoorBaseV2_C_ResetDoorSwitchLocations::CallFunc_K2_SetRelativeTransform_SweepHitResult_1' has a wrong offset!");

// Function BP_DoorBaseV2.BP_DoorBaseV2_C.FindSnapTarget
// 0x0480 (0x0480 - 0x0000)
struct BP_DoorBaseV2_C_FindSnapTarget final
{
public:
	bool                                          Found;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0xF];                                        // 0x0001(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             NearestSnapPoint;                                  // 0x0010(0x0030)(Parm, OutParm, IsPlainOldData, NoDestructor)
	struct FBox                                   BoundsDebugBox;                                    // 0x0040(0x001C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FBox                                   RenderBounds;                                      // 0x005C(0x001C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          HasNearestSnapPoint;                               // 0x0078(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CurrentNearestSnapPoint;                           // 0x0080(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	TMap<class AActor*, struct FF_EditorActorSnapToData> FoundValidActors;                                  // 0x00B0(0x0050)(Edit, BlueprintVisible, DisableEditOnTemplate)
	TArray<struct FVector>                        FoundValidPosition;                                // 0x0100(0x0010)(Edit, BlueprintVisible)
	struct FVector                                TestPosition;                                      // 0x0110(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11C[0x4];                                      // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            ClassToCheck;                                      // 0x0120(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0158(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0164(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0170(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x017C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Vector_Distance_ReturnValue;              // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18C[0x4];                                      // 0x018C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0190(0x0010)(ConstParm, ReferenceParm)
	TArray<class AActor*>                         CallFunc_Map_Keys_Keys;                            // 0x01A0(0x0010)(ReferenceParm)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x01BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C9[0x7];                                      // 0x01C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x01D0(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FF_EditorActorSnapToData               CallFunc_Map_Find_Value;                           // 0x0200(0x0058)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_259[0x3];                                      // 0x0259(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBox                                   CallFunc_MakeBox_ReturnValue;                      // 0x025C(0x001C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FF_EditorActorSnapToData               CallFunc_Array_Get_Item_1;                         // 0x0278(0x0058)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x02D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D4[0x4];                                      // 0x02D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x02D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x02E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E1[0x7];                                      // 0x02E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            K2Node_DynamicCast_AsStatic_Mesh;                  // 0x02E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x02F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x02F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F2[0xE];                                      // 0x02F2(0x000E)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_Array_Get_Item_2;                         // 0x0300(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x0330(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x033C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x0348(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0354(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue;              // 0x0358(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0364(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_365[0x3];                                      // 0x0365(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0368(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_NegateVector_ReturnValue;                 // 0x0374(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x0380(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetUpVector_ReturnValue;                  // 0x0384(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0390(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_391[0x3];                                      // 0x0391(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotFromZX_ReturnValue;                // 0x0394(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_TransformLocation_ReturnValue;            // 0x03A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_SelectRotator_ReturnValue;                // 0x03AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Vector_Distance_ReturnValue_1;            // 0x03B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BC[0x4];                                      // 0x03BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x03C0(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x03F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_1;            // 0x03F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3F2[0x6];                                      // 0x03F2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x03F8(0x0010)(ConstParm, ReferenceParm)
	TArray<class AActor*>                         CallFunc_SphereOverlapActors_OutActors;            // 0x0408(0x0010)(ReferenceParm)
	bool                                          CallFunc_SphereOverlapActors_ReturnValue;          // 0x0418(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_419[0x7];                                      // 0x0419(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue_1;               // 0x0420(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_Array_Get_Item_3;                         // 0x0450(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_TransformLocation_ReturnValue_1;          // 0x0458(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_464[0x4];                                      // 0x0464(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   CallFunc_GetComponentByClass_ReturnValue;          // 0x0468(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0470(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0474(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x0475(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0476(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_DoorBaseV2_C_FindSnapTarget) == 0x000010, "Wrong alignment on BP_DoorBaseV2_C_FindSnapTarget");
static_assert(sizeof(BP_DoorBaseV2_C_FindSnapTarget) == 0x000480, "Wrong size on BP_DoorBaseV2_C_FindSnapTarget");
static_assert(offsetof(BP_DoorBaseV2_C_FindSnapTarget, Found) == 0x000000, "Member 'BP_DoorBaseV2_C_FindSnapTarget::Found' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_FindSnapTarget, NearestSnapPoint) == 0x000010, "Member 'BP_DoorBaseV2_C_FindSnapTarget::NearestSnapPoint' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_FindSnapTarget, BoundsDebugBox) == 0x000040, "Member 'BP_DoorBaseV2_C_FindSnapTarget::BoundsDebugBox' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_FindSnapTarget, RenderBounds) == 0x00005C, "Member 'BP_DoorBaseV2_C_FindSnapTarget::RenderBounds' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_FindSnapTarget, HasNearestSnapPoint) == 0x000078, "Member 'BP_DoorBaseV2_C_FindSnapTarget::HasNearestSnapPoint' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_FindSnapTarget, CurrentNearestSnapPoint) == 0x000080, "Member 'BP_DoorBaseV2_C_FindSnapTarget::CurrentNearestSnapPoint' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_FindSnapTarget, FoundValidActors) == 0x0000B0, "Member 'BP_DoorBaseV2_C_FindSnapTarget::FoundValidActors' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_FindSnapTarget, FoundValidPosition) == 0x000100, "Member 'BP_DoorBaseV2_C_FindSnapTarget::FoundValidPosition' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_FindSnapTarget, TestPosition) == 0x000110, "Member 'BP_DoorBaseV2_C_FindSnapTarget::TestPosition' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_FindSnapTarget, ClassToCheck) == 0x000120, "Member 'BP_DoorBaseV2_C_FindSnapTarget::ClassToCheck' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_FindSnapTarget, Temp_int_Loop_Counter_Variable) == 0x000128, "Member 'BP_DoorBaseV2_C_FindSnapTarget::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_FindSnapTarget, Temp_int_Loop_Counter_Variable_1) == 0x00012C, "Member 'BP_DoorBaseV2_C_FindSnapTarget::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_FindSnapTarget, CallFunc_Add_IntInt_ReturnValue) == 0x000130, "Member 'BP_DoorBaseV2_C_FindSnapTarget::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_FindSnapTarget, CallFunc_Add_IntInt_ReturnValue_1) == 0x000134, "Member 'BP_DoorBaseV2_C_FindSnapTarget::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_FindSnapTarget, Temp_int_Loop_Counter_Variable_2) == 0x000138, "Member 'BP_DoorBaseV2_C_FindSnapTarget::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_FindSnapTarget, CallFunc_Add_IntInt_ReturnValue_2) == 0x00013C, "Member 'BP_DoorBaseV2_C_FindSnapTarget::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_FindSnapTarget, Temp_int_Array_Index_Variable) == 0x000140, "Member 'BP_DoorBaseV2_C_FindSnapTarget::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_FindSnapTarget, Temp_int_Array_Index_Variable_1) == 0x000144, "Member 'BP_DoorBaseV2_C_FindSnapTarget::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_FindSnapTarget, Temp_int_Loop_Counter_Variable_3) == 0x000148, "Member 'BP_DoorBaseV2_C_FindSnapTarget::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_FindSnapTarget, CallFunc_Add_IntInt_ReturnValue_3) == 0x00014C, "Member 'BP_DoorBaseV2_C_FindSnapTarget::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_FindSnapTarget, Temp_int_Array_Index_Variable_2) == 0x000150, "Member 'BP_DoorBaseV2_C_FindSnapTarget::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_FindSnapTarget, Temp_int_Array_Index_Variable_3) == 0x000154, "Member 'BP_DoorBaseV2_C_FindSnapTarget::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_FindSnapTarget, CallFunc_GetActorForwardVector_ReturnValue) == 0x000158, "Member 'BP_DoorBaseV2_C_FindSnapTarget::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_FindSnapTarget, CallFunc_BreakTransform_Location) == 0x000164, "Member 'BP_DoorBaseV2_C_FindSnapTarget::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_FindSnapTarget, CallFunc_BreakTransform_Rotation) == 0x000170, "Member 'BP_DoorBaseV2_C_FindSnapTarget::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_FindSnapTarget, CallFunc_BreakTransform_Scale) == 0x00017C, "Member 'BP_DoorBaseV2_C_FindSnapTarget::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_FindSnapTarget, CallFunc_Vector_Distance_ReturnValue) == 0x000188, "Member 'BP_DoorBaseV2_C_FindSnapTarget::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_FindSnapTarget, Temp_object_Variable) == 0x000190, "Member 'BP_DoorBaseV2_C_FindSnapTarget::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_FindSnapTarget, CallFunc_Map_Keys_Keys) == 0x0001A0, "Member 'BP_DoorBaseV2_C_FindSnapTarget::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_FindSnapTarget, CallFunc_Array_Get_Item) == 0x0001B0, "Member 'BP_DoorBaseV2_C_FindSnapTarget::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_FindSnapTarget, CallFunc_Array_Length_ReturnValue) == 0x0001B8, "Member 'BP_DoorBaseV2_C_FindSnapTarget::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_FindSnapTarget, CallFunc_K2_GetActorRotation_ReturnValue) == 0x0001BC, "Member 'BP_DoorBaseV2_C_FindSnapTarget::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_FindSnapTarget, CallFunc_Less_IntInt_ReturnValue) == 0x0001C8, "Member 'BP_DoorBaseV2_C_FindSnapTarget::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_FindSnapTarget, CallFunc_GetTransform_ReturnValue) == 0x0001D0, "Member 'BP_DoorBaseV2_C_FindSnapTarget::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_FindSnapTarget, CallFunc_Map_Find_Value) == 0x000200, "Member 'BP_DoorBaseV2_C_FindSnapTarget::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_FindSnapTarget, CallFunc_Map_Find_ReturnValue) == 0x000258, "Member 'BP_DoorBaseV2_C_FindSnapTarget::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_FindSnapTarget, CallFunc_MakeBox_ReturnValue) == 0x00025C, "Member 'BP_DoorBaseV2_C_FindSnapTarget::CallFunc_MakeBox_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_FindSnapTarget, CallFunc_Array_Get_Item_1) == 0x000278, "Member 'BP_DoorBaseV2_C_FindSnapTarget::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_FindSnapTarget, CallFunc_Array_Length_ReturnValue_1) == 0x0002D0, "Member 'BP_DoorBaseV2_C_FindSnapTarget::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_FindSnapTarget, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x0002D8, "Member 'BP_DoorBaseV2_C_FindSnapTarget::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_FindSnapTarget, CallFunc_Less_IntInt_ReturnValue_1) == 0x0002E0, "Member 'BP_DoorBaseV2_C_FindSnapTarget::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_FindSnapTarget, K2Node_DynamicCast_AsStatic_Mesh) == 0x0002E8, "Member 'BP_DoorBaseV2_C_FindSnapTarget::K2Node_DynamicCast_AsStatic_Mesh' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_FindSnapTarget, K2Node_DynamicCast_bSuccess) == 0x0002F0, "Member 'BP_DoorBaseV2_C_FindSnapTarget::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_FindSnapTarget, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x0002F1, "Member 'BP_DoorBaseV2_C_FindSnapTarget::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_FindSnapTarget, CallFunc_Array_Get_Item_2) == 0x000300, "Member 'BP_DoorBaseV2_C_FindSnapTarget::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_FindSnapTarget, CallFunc_BreakTransform_Location_1) == 0x000330, "Member 'BP_DoorBaseV2_C_FindSnapTarget::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_FindSnapTarget, CallFunc_BreakTransform_Rotation_1) == 0x00033C, "Member 'BP_DoorBaseV2_C_FindSnapTarget::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_FindSnapTarget, CallFunc_BreakTransform_Scale_1) == 0x000348, "Member 'BP_DoorBaseV2_C_FindSnapTarget::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_FindSnapTarget, CallFunc_Array_Length_ReturnValue_2) == 0x000354, "Member 'BP_DoorBaseV2_C_FindSnapTarget::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_FindSnapTarget, CallFunc_ComposeRotators_ReturnValue) == 0x000358, "Member 'BP_DoorBaseV2_C_FindSnapTarget::CallFunc_ComposeRotators_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_FindSnapTarget, CallFunc_Less_IntInt_ReturnValue_2) == 0x000364, "Member 'BP_DoorBaseV2_C_FindSnapTarget::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_FindSnapTarget, CallFunc_GetForwardVector_ReturnValue) == 0x000368, "Member 'BP_DoorBaseV2_C_FindSnapTarget::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_FindSnapTarget, CallFunc_NegateVector_ReturnValue) == 0x000374, "Member 'BP_DoorBaseV2_C_FindSnapTarget::CallFunc_NegateVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_FindSnapTarget, CallFunc_Dot_VectorVector_ReturnValue) == 0x000380, "Member 'BP_DoorBaseV2_C_FindSnapTarget::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_FindSnapTarget, CallFunc_GetUpVector_ReturnValue) == 0x000384, "Member 'BP_DoorBaseV2_C_FindSnapTarget::CallFunc_GetUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_FindSnapTarget, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000390, "Member 'BP_DoorBaseV2_C_FindSnapTarget::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_FindSnapTarget, CallFunc_MakeRotFromZX_ReturnValue) == 0x000394, "Member 'BP_DoorBaseV2_C_FindSnapTarget::CallFunc_MakeRotFromZX_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_FindSnapTarget, CallFunc_TransformLocation_ReturnValue) == 0x0003A0, "Member 'BP_DoorBaseV2_C_FindSnapTarget::CallFunc_TransformLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_FindSnapTarget, CallFunc_SelectRotator_ReturnValue) == 0x0003AC, "Member 'BP_DoorBaseV2_C_FindSnapTarget::CallFunc_SelectRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_FindSnapTarget, CallFunc_Vector_Distance_ReturnValue_1) == 0x0003B8, "Member 'BP_DoorBaseV2_C_FindSnapTarget::CallFunc_Vector_Distance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_FindSnapTarget, CallFunc_MakeTransform_ReturnValue) == 0x0003C0, "Member 'BP_DoorBaseV2_C_FindSnapTarget::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_FindSnapTarget, CallFunc_Less_FloatFloat_ReturnValue) == 0x0003F0, "Member 'BP_DoorBaseV2_C_FindSnapTarget::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_FindSnapTarget, CallFunc_Less_FloatFloat_ReturnValue_1) == 0x0003F1, "Member 'BP_DoorBaseV2_C_FindSnapTarget::CallFunc_Less_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_FindSnapTarget, K2Node_MakeArray_Array) == 0x0003F8, "Member 'BP_DoorBaseV2_C_FindSnapTarget::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_FindSnapTarget, CallFunc_SphereOverlapActors_OutActors) == 0x000408, "Member 'BP_DoorBaseV2_C_FindSnapTarget::CallFunc_SphereOverlapActors_OutActors' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_FindSnapTarget, CallFunc_SphereOverlapActors_ReturnValue) == 0x000418, "Member 'BP_DoorBaseV2_C_FindSnapTarget::CallFunc_SphereOverlapActors_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_FindSnapTarget, CallFunc_GetTransform_ReturnValue_1) == 0x000420, "Member 'BP_DoorBaseV2_C_FindSnapTarget::CallFunc_GetTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_FindSnapTarget, CallFunc_Array_Get_Item_3) == 0x000450, "Member 'BP_DoorBaseV2_C_FindSnapTarget::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_FindSnapTarget, CallFunc_TransformLocation_ReturnValue_1) == 0x000458, "Member 'BP_DoorBaseV2_C_FindSnapTarget::CallFunc_TransformLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_FindSnapTarget, CallFunc_GetComponentByClass_ReturnValue) == 0x000468, "Member 'BP_DoorBaseV2_C_FindSnapTarget::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_FindSnapTarget, CallFunc_Array_Length_ReturnValue_3) == 0x000470, "Member 'BP_DoorBaseV2_C_FindSnapTarget::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_FindSnapTarget, CallFunc_IsValid_ReturnValue) == 0x000474, "Member 'BP_DoorBaseV2_C_FindSnapTarget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_FindSnapTarget, CallFunc_Less_IntInt_ReturnValue_3) == 0x000475, "Member 'BP_DoorBaseV2_C_FindSnapTarget::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_FindSnapTarget, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000476, "Member 'BP_DoorBaseV2_C_FindSnapTarget::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function BP_DoorBaseV2.BP_DoorBaseV2_C.Construct Snap to Frame
// 0x0170 (0x0170 - 0x0000)
struct BP_DoorBaseV2_C_Construct_Snap_to_Frame final
{
public:
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0000(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_GetTransform_ReturnValue_1;               // 0x0030(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetComponentBounds_Origin;                // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_BoxExtent;             // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetComponentBounds_SphereRadius;          // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindSnapTarget_Found;                     // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_FindSnapTarget_NearestSnapPoint;          // 0x0080(0x0030)(IsPlainOldData, NoDestructor)
	struct FBox                                   CallFunc_FindSnapTarget_BoundsDebugBox;            // 0x00B0(0x001C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_NegateVector_ReturnValue;                 // 0x00D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_TransformDirection_ReturnValue;           // 0x00E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x00F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x00FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0108(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0114(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_TransformTransform_ReturnValue; // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_121[0xF];                                      // 0x0121(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0130(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_TransformTransform_ReturnValue_1; // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_DoorBaseV2_C_Construct_Snap_to_Frame) == 0x000010, "Wrong alignment on BP_DoorBaseV2_C_Construct_Snap_to_Frame");
static_assert(sizeof(BP_DoorBaseV2_C_Construct_Snap_to_Frame) == 0x000170, "Wrong size on BP_DoorBaseV2_C_Construct_Snap_to_Frame");
static_assert(offsetof(BP_DoorBaseV2_C_Construct_Snap_to_Frame, CallFunc_GetTransform_ReturnValue) == 0x000000, "Member 'BP_DoorBaseV2_C_Construct_Snap_to_Frame::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_Construct_Snap_to_Frame, CallFunc_GetTransform_ReturnValue_1) == 0x000030, "Member 'BP_DoorBaseV2_C_Construct_Snap_to_Frame::CallFunc_GetTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_Construct_Snap_to_Frame, CallFunc_GetComponentBounds_Origin) == 0x000060, "Member 'BP_DoorBaseV2_C_Construct_Snap_to_Frame::CallFunc_GetComponentBounds_Origin' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_Construct_Snap_to_Frame, CallFunc_GetComponentBounds_BoxExtent) == 0x00006C, "Member 'BP_DoorBaseV2_C_Construct_Snap_to_Frame::CallFunc_GetComponentBounds_BoxExtent' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_Construct_Snap_to_Frame, CallFunc_GetComponentBounds_SphereRadius) == 0x000078, "Member 'BP_DoorBaseV2_C_Construct_Snap_to_Frame::CallFunc_GetComponentBounds_SphereRadius' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_Construct_Snap_to_Frame, CallFunc_FindSnapTarget_Found) == 0x00007C, "Member 'BP_DoorBaseV2_C_Construct_Snap_to_Frame::CallFunc_FindSnapTarget_Found' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_Construct_Snap_to_Frame, CallFunc_FindSnapTarget_NearestSnapPoint) == 0x000080, "Member 'BP_DoorBaseV2_C_Construct_Snap_to_Frame::CallFunc_FindSnapTarget_NearestSnapPoint' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_Construct_Snap_to_Frame, CallFunc_FindSnapTarget_BoundsDebugBox) == 0x0000B0, "Member 'BP_DoorBaseV2_C_Construct_Snap_to_Frame::CallFunc_FindSnapTarget_BoundsDebugBox' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_Construct_Snap_to_Frame, CallFunc_Add_VectorVector_ReturnValue) == 0x0000CC, "Member 'BP_DoorBaseV2_C_Construct_Snap_to_Frame::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_Construct_Snap_to_Frame, CallFunc_NegateVector_ReturnValue) == 0x0000D8, "Member 'BP_DoorBaseV2_C_Construct_Snap_to_Frame::CallFunc_NegateVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_Construct_Snap_to_Frame, CallFunc_TransformDirection_ReturnValue) == 0x0000E4, "Member 'BP_DoorBaseV2_C_Construct_Snap_to_Frame::CallFunc_TransformDirection_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_Construct_Snap_to_Frame, CallFunc_BreakTransform_Location) == 0x0000F0, "Member 'BP_DoorBaseV2_C_Construct_Snap_to_Frame::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_Construct_Snap_to_Frame, CallFunc_BreakTransform_Rotation) == 0x0000FC, "Member 'BP_DoorBaseV2_C_Construct_Snap_to_Frame::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_Construct_Snap_to_Frame, CallFunc_BreakTransform_Scale) == 0x000108, "Member 'BP_DoorBaseV2_C_Construct_Snap_to_Frame::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_Construct_Snap_to_Frame, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000114, "Member 'BP_DoorBaseV2_C_Construct_Snap_to_Frame::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_Construct_Snap_to_Frame, CallFunc_EqualEqual_TransformTransform_ReturnValue) == 0x000120, "Member 'BP_DoorBaseV2_C_Construct_Snap_to_Frame::CallFunc_EqualEqual_TransformTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_Construct_Snap_to_Frame, CallFunc_MakeTransform_ReturnValue) == 0x000130, "Member 'BP_DoorBaseV2_C_Construct_Snap_to_Frame::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_Construct_Snap_to_Frame, CallFunc_EqualEqual_TransformTransform_ReturnValue_1) == 0x000160, "Member 'BP_DoorBaseV2_C_Construct_Snap_to_Frame::CallFunc_EqualEqual_TransformTransform_ReturnValue_1' has a wrong offset!");

// Function BP_DoorBaseV2.BP_DoorBaseV2_C.SnapToFrame
// 0x0140 (0x0140 - 0x0000)
struct BP_DoorBaseV2_C_SnapToFrame final
{
public:
	int32                                         CallFunc_EndTransaction_ReturnValue;               // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BeginTransaction_ReturnValue;             // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindSnapTarget_Found;                     // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_FindSnapTarget_NearestSnapPoint;          // 0x0010(0x0030)(IsPlainOldData, NoDestructor)
	struct FBox                                   CallFunc_FindSnapTarget_BoundsDebugBox;            // 0x0040(0x001C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0074(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_NegateVector_ReturnValue;                 // 0x0080(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_TransformDirection_ReturnValue;           // 0x008C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0098(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocationAndRotation_SweepHitResult; // 0x00A4(0x0090)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocationAndRotation_ReturnValue; // 0x0134(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_DoorBaseV2_C_SnapToFrame) == 0x000010, "Wrong alignment on BP_DoorBaseV2_C_SnapToFrame");
static_assert(sizeof(BP_DoorBaseV2_C_SnapToFrame) == 0x000140, "Wrong size on BP_DoorBaseV2_C_SnapToFrame");
static_assert(offsetof(BP_DoorBaseV2_C_SnapToFrame, CallFunc_EndTransaction_ReturnValue) == 0x000000, "Member 'BP_DoorBaseV2_C_SnapToFrame::CallFunc_EndTransaction_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_SnapToFrame, CallFunc_BeginTransaction_ReturnValue) == 0x000004, "Member 'BP_DoorBaseV2_C_SnapToFrame::CallFunc_BeginTransaction_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_SnapToFrame, CallFunc_FindSnapTarget_Found) == 0x000008, "Member 'BP_DoorBaseV2_C_SnapToFrame::CallFunc_FindSnapTarget_Found' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_SnapToFrame, CallFunc_FindSnapTarget_NearestSnapPoint) == 0x000010, "Member 'BP_DoorBaseV2_C_SnapToFrame::CallFunc_FindSnapTarget_NearestSnapPoint' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_SnapToFrame, CallFunc_FindSnapTarget_BoundsDebugBox) == 0x000040, "Member 'BP_DoorBaseV2_C_SnapToFrame::CallFunc_FindSnapTarget_BoundsDebugBox' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_SnapToFrame, CallFunc_BreakTransform_Location) == 0x00005C, "Member 'BP_DoorBaseV2_C_SnapToFrame::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_SnapToFrame, CallFunc_BreakTransform_Rotation) == 0x000068, "Member 'BP_DoorBaseV2_C_SnapToFrame::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_SnapToFrame, CallFunc_BreakTransform_Scale) == 0x000074, "Member 'BP_DoorBaseV2_C_SnapToFrame::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_SnapToFrame, CallFunc_NegateVector_ReturnValue) == 0x000080, "Member 'BP_DoorBaseV2_C_SnapToFrame::CallFunc_NegateVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_SnapToFrame, CallFunc_TransformDirection_ReturnValue) == 0x00008C, "Member 'BP_DoorBaseV2_C_SnapToFrame::CallFunc_TransformDirection_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_SnapToFrame, CallFunc_Add_VectorVector_ReturnValue) == 0x000098, "Member 'BP_DoorBaseV2_C_SnapToFrame::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_SnapToFrame, CallFunc_K2_SetActorLocationAndRotation_SweepHitResult) == 0x0000A4, "Member 'BP_DoorBaseV2_C_SnapToFrame::CallFunc_K2_SetActorLocationAndRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_SnapToFrame, CallFunc_K2_SetActorLocationAndRotation_ReturnValue) == 0x000134, "Member 'BP_DoorBaseV2_C_SnapToFrame::CallFunc_K2_SetActorLocationAndRotation_ReturnValue' has a wrong offset!");

// Function BP_DoorBaseV2.BP_DoorBaseV2_C.Update Switch Unlocked Tag
// 0x0014 (0x0014 - 0x0000)
struct BP_DoorBaseV2_C_Update_Switch_Unlocked_Tag final
{
public:
	bool                                          Is_Locked;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           Unlocked_Switch_Tag;                               // 0x0004(0x000C)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasGameplayTag_ReturnValue;               // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasGameplayTag_ReturnValue_1;             // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_DoorBaseV2_C_Update_Switch_Unlocked_Tag) == 0x000004, "Wrong alignment on BP_DoorBaseV2_C_Update_Switch_Unlocked_Tag");
static_assert(sizeof(BP_DoorBaseV2_C_Update_Switch_Unlocked_Tag) == 0x000014, "Wrong size on BP_DoorBaseV2_C_Update_Switch_Unlocked_Tag");
static_assert(offsetof(BP_DoorBaseV2_C_Update_Switch_Unlocked_Tag, Is_Locked) == 0x000000, "Member 'BP_DoorBaseV2_C_Update_Switch_Unlocked_Tag::Is_Locked' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_Update_Switch_Unlocked_Tag, Unlocked_Switch_Tag) == 0x000004, "Member 'BP_DoorBaseV2_C_Update_Switch_Unlocked_Tag::Unlocked_Switch_Tag' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_Update_Switch_Unlocked_Tag, CallFunc_HasGameplayTag_ReturnValue) == 0x000010, "Member 'BP_DoorBaseV2_C_Update_Switch_Unlocked_Tag::CallFunc_HasGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_Update_Switch_Unlocked_Tag, CallFunc_HasGameplayTag_ReturnValue_1) == 0x000011, "Member 'BP_DoorBaseV2_C_Update_Switch_Unlocked_Tag::CallFunc_HasGameplayTag_ReturnValue_1' has a wrong offset!");

// Function BP_DoorBaseV2.BP_DoorBaseV2_C.RequiresAuthorization
// 0x0006 (0x0006 - 0x0000)
struct BP_DoorBaseV2_C_RequiresAuthorization final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasGameplayTag_ReturnValue;               // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasGameplayTag_ReturnValue_1;             // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasGameplayTag_ReturnValue_2;             // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_DoorBaseV2_C_RequiresAuthorization) == 0x000001, "Wrong alignment on BP_DoorBaseV2_C_RequiresAuthorization");
static_assert(sizeof(BP_DoorBaseV2_C_RequiresAuthorization) == 0x000006, "Wrong size on BP_DoorBaseV2_C_RequiresAuthorization");
static_assert(offsetof(BP_DoorBaseV2_C_RequiresAuthorization, ReturnValue) == 0x000000, "Member 'BP_DoorBaseV2_C_RequiresAuthorization::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_RequiresAuthorization, CallFunc_HasGameplayTag_ReturnValue) == 0x000001, "Member 'BP_DoorBaseV2_C_RequiresAuthorization::CallFunc_HasGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_RequiresAuthorization, CallFunc_HasGameplayTag_ReturnValue_1) == 0x000002, "Member 'BP_DoorBaseV2_C_RequiresAuthorization::CallFunc_HasGameplayTag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_RequiresAuthorization, CallFunc_HasGameplayTag_ReturnValue_2) == 0x000003, "Member 'BP_DoorBaseV2_C_RequiresAuthorization::CallFunc_HasGameplayTag_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_RequiresAuthorization, CallFunc_BooleanOR_ReturnValue) == 0x000004, "Member 'BP_DoorBaseV2_C_RequiresAuthorization::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_RequiresAuthorization, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000005, "Member 'BP_DoorBaseV2_C_RequiresAuthorization::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function BP_DoorBaseV2.BP_DoorBaseV2_C.HasAuthorization
// 0x0018 (0x0018 - 0x0000)
struct BP_DoorBaseV2_C_HasAuthorization final
{
public:
	class AActor*                                 User;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsOwningTeam_Result;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsUserNPC_Result;                         // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasGameplayTag_ReturnValue;               // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_RequiresAuthorization_ReturnValue;        // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_DoorBaseV2_C_HasAuthorization) == 0x000008, "Wrong alignment on BP_DoorBaseV2_C_HasAuthorization");
static_assert(sizeof(BP_DoorBaseV2_C_HasAuthorization) == 0x000018, "Wrong size on BP_DoorBaseV2_C_HasAuthorization");
static_assert(offsetof(BP_DoorBaseV2_C_HasAuthorization, User) == 0x000000, "Member 'BP_DoorBaseV2_C_HasAuthorization::User' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_HasAuthorization, ReturnValue) == 0x000008, "Member 'BP_DoorBaseV2_C_HasAuthorization::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_HasAuthorization, CallFunc_IsOwningTeam_Result) == 0x000009, "Member 'BP_DoorBaseV2_C_HasAuthorization::CallFunc_IsOwningTeam_Result' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_HasAuthorization, CallFunc_IsUserNPC_Result) == 0x00000A, "Member 'BP_DoorBaseV2_C_HasAuthorization::CallFunc_IsUserNPC_Result' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_HasAuthorization, CallFunc_HasGameplayTag_ReturnValue) == 0x00000B, "Member 'BP_DoorBaseV2_C_HasAuthorization::CallFunc_HasGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_HasAuthorization, CallFunc_RequiresAuthorization_ReturnValue) == 0x00000C, "Member 'BP_DoorBaseV2_C_HasAuthorization::CallFunc_RequiresAuthorization_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_HasAuthorization, CallFunc_BooleanOR_ReturnValue) == 0x00000D, "Member 'BP_DoorBaseV2_C_HasAuthorization::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_HasAuthorization, CallFunc_Not_PreBool_ReturnValue) == 0x00000E, "Member 'BP_DoorBaseV2_C_HasAuthorization::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_HasAuthorization, CallFunc_BooleanOR_ReturnValue_1) == 0x00000F, "Member 'BP_DoorBaseV2_C_HasAuthorization::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_HasAuthorization, CallFunc_BooleanOR_ReturnValue_2) == 0x000010, "Member 'BP_DoorBaseV2_C_HasAuthorization::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");

// Function BP_DoorBaseV2.BP_DoorBaseV2_C.IsOwningTeam
// 0x0018 (0x0018 - 0x0000)
struct BP_DoorBaseV2_C_IsOwningTeam final
{
public:
	class AActor*                                 User;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCATeamID                              CallFunc_GetTeamID_ReturnValue;                    // 0x000C(0x0004)(NoDestructor, HasGetValueTypeHash)
	struct FCATeamID                              CallFunc_GetCapturedTeam_ReturnValue;              // 0x0010(0x0004)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_TeamIDTeamID_ReturnValue;      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_DoorBaseV2_C_IsOwningTeam) == 0x000008, "Wrong alignment on BP_DoorBaseV2_C_IsOwningTeam");
static_assert(sizeof(BP_DoorBaseV2_C_IsOwningTeam) == 0x000018, "Wrong size on BP_DoorBaseV2_C_IsOwningTeam");
static_assert(offsetof(BP_DoorBaseV2_C_IsOwningTeam, User) == 0x000000, "Member 'BP_DoorBaseV2_C_IsOwningTeam::User' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_IsOwningTeam, Result) == 0x000008, "Member 'BP_DoorBaseV2_C_IsOwningTeam::Result' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_IsOwningTeam, CallFunc_GetTeamID_ReturnValue) == 0x00000C, "Member 'BP_DoorBaseV2_C_IsOwningTeam::CallFunc_GetTeamID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_IsOwningTeam, CallFunc_GetCapturedTeam_ReturnValue) == 0x000010, "Member 'BP_DoorBaseV2_C_IsOwningTeam::CallFunc_GetCapturedTeam_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_IsOwningTeam, CallFunc_EqualEqual_TeamIDTeamID_ReturnValue) == 0x000014, "Member 'BP_DoorBaseV2_C_IsOwningTeam::CallFunc_EqualEqual_TeamIDTeamID_ReturnValue' has a wrong offset!");

// Function BP_DoorBaseV2.BP_DoorBaseV2_C.GetObjectiveLoopElementComponent
// 0x0008 (0x0008 - 0x0000)
struct BP_DoorBaseV2_C_GetObjectiveLoopElementComponent final
{
public:
	class UObject*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DoorBaseV2_C_GetObjectiveLoopElementComponent) == 0x000008, "Wrong alignment on BP_DoorBaseV2_C_GetObjectiveLoopElementComponent");
static_assert(sizeof(BP_DoorBaseV2_C_GetObjectiveLoopElementComponent) == 0x000008, "Wrong size on BP_DoorBaseV2_C_GetObjectiveLoopElementComponent");
static_assert(offsetof(BP_DoorBaseV2_C_GetObjectiveLoopElementComponent, ReturnValue) == 0x000000, "Member 'BP_DoorBaseV2_C_GetObjectiveLoopElementComponent::ReturnValue' has a wrong offset!");

// Function BP_DoorBaseV2.BP_DoorBaseV2_C.IsAnySwitchLocked
// 0x0028 (0x0028 - 0x0000)
struct BP_DoorBaseV2_C_IsAnySwitchLocked final
{
public:
	bool                                          Locked;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_DoorSwitch_Lockable_C*              K2Node_DynamicCast_AsBP_Door_Switch_Lockable;      // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_DoorSwitch_Lockable_C*              K2Node_DynamicCast_AsBP_Door_Switch_Lockable_1;    // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_DoorBaseV2_C_IsAnySwitchLocked) == 0x000008, "Wrong alignment on BP_DoorBaseV2_C_IsAnySwitchLocked");
static_assert(sizeof(BP_DoorBaseV2_C_IsAnySwitchLocked) == 0x000028, "Wrong size on BP_DoorBaseV2_C_IsAnySwitchLocked");
static_assert(offsetof(BP_DoorBaseV2_C_IsAnySwitchLocked, Locked) == 0x000000, "Member 'BP_DoorBaseV2_C_IsAnySwitchLocked::Locked' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_IsAnySwitchLocked, CallFunc_HasAuthority_ReturnValue) == 0x000001, "Member 'BP_DoorBaseV2_C_IsAnySwitchLocked::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_IsAnySwitchLocked, K2Node_DynamicCast_AsBP_Door_Switch_Lockable) == 0x000008, "Member 'BP_DoorBaseV2_C_IsAnySwitchLocked::K2Node_DynamicCast_AsBP_Door_Switch_Lockable' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_IsAnySwitchLocked, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_DoorBaseV2_C_IsAnySwitchLocked::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_IsAnySwitchLocked, K2Node_DynamicCast_AsBP_Door_Switch_Lockable_1) == 0x000018, "Member 'BP_DoorBaseV2_C_IsAnySwitchLocked::K2Node_DynamicCast_AsBP_Door_Switch_Lockable_1' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_IsAnySwitchLocked, K2Node_DynamicCast_bSuccess_1) == 0x000020, "Member 'BP_DoorBaseV2_C_IsAnySwitchLocked::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function BP_DoorBaseV2.BP_DoorBaseV2_C.GetRelatedActorsToIgnoreLOSChecks
// 0x0120 (0x0120 - 0x0000)
struct BP_DoorBaseV2_C_GetRelatedActorsToIgnoreLOSChecks final
{
public:
	struct FVector                                Aoe_centre;                                        // 0x0000(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Aoe_radius;                                        // 0x000C(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class AActor*                           Instigator_0;                                      // 0x0010(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         ReturnValue;                                       // 0x0018(0x0010)(Parm, OutParm, ReturnParm)
	TArray<class AActor*>                         Switches;                                          // 0x0028(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	uint8                                         Pad_38[0x8];                                       // 0x0038(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Current_Switch_Transform;                          // 0x0040(0x0030)(Edit, BlueprintVisible, DisableEditOnTemplate, IsPlainOldData, NoDestructor)
	TArray<struct FTransform>                     Switch_Transforms;                                 // 0x0070(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0080(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0090(0x0010)(ReferenceParm)
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x00A0(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue_1;     // 0x00D0(0x0030)(IsPlainOldData, NoDestructor)
	TArray<struct FTransform>                     K2Node_MakeArray_Array_1;                          // 0x0100(0x0010)(ReferenceParm)
	TArray<class AActor*>                         CallFunc_GetSwitchesToIgnoreLOSChecksForAOE_ReturnValue; // 0x0110(0x0010)(ReferenceParm)
};
static_assert(alignof(BP_DoorBaseV2_C_GetRelatedActorsToIgnoreLOSChecks) == 0x000010, "Wrong alignment on BP_DoorBaseV2_C_GetRelatedActorsToIgnoreLOSChecks");
static_assert(sizeof(BP_DoorBaseV2_C_GetRelatedActorsToIgnoreLOSChecks) == 0x000120, "Wrong size on BP_DoorBaseV2_C_GetRelatedActorsToIgnoreLOSChecks");
static_assert(offsetof(BP_DoorBaseV2_C_GetRelatedActorsToIgnoreLOSChecks, Aoe_centre) == 0x000000, "Member 'BP_DoorBaseV2_C_GetRelatedActorsToIgnoreLOSChecks::Aoe_centre' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_GetRelatedActorsToIgnoreLOSChecks, Aoe_radius) == 0x00000C, "Member 'BP_DoorBaseV2_C_GetRelatedActorsToIgnoreLOSChecks::Aoe_radius' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_GetRelatedActorsToIgnoreLOSChecks, Instigator_0) == 0x000010, "Member 'BP_DoorBaseV2_C_GetRelatedActorsToIgnoreLOSChecks::Instigator_0' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_GetRelatedActorsToIgnoreLOSChecks, ReturnValue) == 0x000018, "Member 'BP_DoorBaseV2_C_GetRelatedActorsToIgnoreLOSChecks::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_GetRelatedActorsToIgnoreLOSChecks, Switches) == 0x000028, "Member 'BP_DoorBaseV2_C_GetRelatedActorsToIgnoreLOSChecks::Switches' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_GetRelatedActorsToIgnoreLOSChecks, Current_Switch_Transform) == 0x000040, "Member 'BP_DoorBaseV2_C_GetRelatedActorsToIgnoreLOSChecks::Current_Switch_Transform' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_GetRelatedActorsToIgnoreLOSChecks, Switch_Transforms) == 0x000070, "Member 'BP_DoorBaseV2_C_GetRelatedActorsToIgnoreLOSChecks::Switch_Transforms' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_GetRelatedActorsToIgnoreLOSChecks, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000080, "Member 'BP_DoorBaseV2_C_GetRelatedActorsToIgnoreLOSChecks::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_GetRelatedActorsToIgnoreLOSChecks, K2Node_MakeArray_Array) == 0x000090, "Member 'BP_DoorBaseV2_C_GetRelatedActorsToIgnoreLOSChecks::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_GetRelatedActorsToIgnoreLOSChecks, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x0000A0, "Member 'BP_DoorBaseV2_C_GetRelatedActorsToIgnoreLOSChecks::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_GetRelatedActorsToIgnoreLOSChecks, CallFunc_K2_GetComponentToWorld_ReturnValue_1) == 0x0000D0, "Member 'BP_DoorBaseV2_C_GetRelatedActorsToIgnoreLOSChecks::CallFunc_K2_GetComponentToWorld_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_GetRelatedActorsToIgnoreLOSChecks, K2Node_MakeArray_Array_1) == 0x000100, "Member 'BP_DoorBaseV2_C_GetRelatedActorsToIgnoreLOSChecks::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_DoorBaseV2_C_GetRelatedActorsToIgnoreLOSChecks, CallFunc_GetSwitchesToIgnoreLOSChecksForAOE_ReturnValue) == 0x000110, "Member 'BP_DoorBaseV2_C_GetRelatedActorsToIgnoreLOSChecks::CallFunc_GetSwitchesToIgnoreLOSChecksForAOE_ReturnValue' has a wrong offset!");

}

