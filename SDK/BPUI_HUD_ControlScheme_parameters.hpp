#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPUI_HUD_ControlScheme

#include "Basic.hpp"

#include "CAAudio_structs.hpp"


namespace SDK::Params
{

// Function BPUI_HUD_ControlScheme.BPUI_HUD_ControlScheme_C.ExecuteUbergraph_BPUI_HUD_ControlScheme
// 0x0080 (0x0080 - 0x0000)
struct BPUI_HUD_ControlScheme_C_ExecuteUbergraph_BPUI_HUD_ControlScheme final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FCAAudioEventType& Event_name)> Temp_delegate_Variable;                            // 0x0004(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	TDelegate<void(const struct FCAAudioEventType& Event_name)> Temp_delegate_Variable_1;                          // 0x0018(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACAHUD_InGameMain*                      CallFunc_GetCAHUD_As_CA_UI_HUD_in_Game;            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACAHUD_InGameMain*                      CallFunc_GetCAHUD_As_CA_UI_HUD_in_Game_1;          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCAAudioPlaybackInstance               CallFunc_PlayEvent_playback_instance;              // 0x0040(0x0010)()
	bool                                          CallFunc_PlayEvent_play_success;                   // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCAAudioPlaybackInstance               CallFunc_PlayEvent_playback_instance_1;            // 0x0058(0x0010)()
	bool                                          CallFunc_PlayEvent_play_success_1;                 // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCABaseUIElement*                       K2Node_ComponentBoundEvent_button_1;               // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCABaseUIElement*                       K2Node_ComponentBoundEvent_button;                 // 0x0078(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPUI_HUD_ControlScheme_C_ExecuteUbergraph_BPUI_HUD_ControlScheme) == 0x000008, "Wrong alignment on BPUI_HUD_ControlScheme_C_ExecuteUbergraph_BPUI_HUD_ControlScheme");
static_assert(sizeof(BPUI_HUD_ControlScheme_C_ExecuteUbergraph_BPUI_HUD_ControlScheme) == 0x000080, "Wrong size on BPUI_HUD_ControlScheme_C_ExecuteUbergraph_BPUI_HUD_ControlScheme");
static_assert(offsetof(BPUI_HUD_ControlScheme_C_ExecuteUbergraph_BPUI_HUD_ControlScheme, EntryPoint) == 0x000000, "Member 'BPUI_HUD_ControlScheme_C_ExecuteUbergraph_BPUI_HUD_ControlScheme::EntryPoint' has a wrong offset!");
static_assert(offsetof(BPUI_HUD_ControlScheme_C_ExecuteUbergraph_BPUI_HUD_ControlScheme, Temp_delegate_Variable) == 0x000004, "Member 'BPUI_HUD_ControlScheme_C_ExecuteUbergraph_BPUI_HUD_ControlScheme::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(BPUI_HUD_ControlScheme_C_ExecuteUbergraph_BPUI_HUD_ControlScheme, Temp_delegate_Variable_1) == 0x000018, "Member 'BPUI_HUD_ControlScheme_C_ExecuteUbergraph_BPUI_HUD_ControlScheme::Temp_delegate_Variable_1' has a wrong offset!");
static_assert(offsetof(BPUI_HUD_ControlScheme_C_ExecuteUbergraph_BPUI_HUD_ControlScheme, CallFunc_GetCAHUD_As_CA_UI_HUD_in_Game) == 0x000030, "Member 'BPUI_HUD_ControlScheme_C_ExecuteUbergraph_BPUI_HUD_ControlScheme::CallFunc_GetCAHUD_As_CA_UI_HUD_in_Game' has a wrong offset!");
static_assert(offsetof(BPUI_HUD_ControlScheme_C_ExecuteUbergraph_BPUI_HUD_ControlScheme, CallFunc_GetCAHUD_As_CA_UI_HUD_in_Game_1) == 0x000038, "Member 'BPUI_HUD_ControlScheme_C_ExecuteUbergraph_BPUI_HUD_ControlScheme::CallFunc_GetCAHUD_As_CA_UI_HUD_in_Game_1' has a wrong offset!");
static_assert(offsetof(BPUI_HUD_ControlScheme_C_ExecuteUbergraph_BPUI_HUD_ControlScheme, CallFunc_PlayEvent_playback_instance) == 0x000040, "Member 'BPUI_HUD_ControlScheme_C_ExecuteUbergraph_BPUI_HUD_ControlScheme::CallFunc_PlayEvent_playback_instance' has a wrong offset!");
static_assert(offsetof(BPUI_HUD_ControlScheme_C_ExecuteUbergraph_BPUI_HUD_ControlScheme, CallFunc_PlayEvent_play_success) == 0x000050, "Member 'BPUI_HUD_ControlScheme_C_ExecuteUbergraph_BPUI_HUD_ControlScheme::CallFunc_PlayEvent_play_success' has a wrong offset!");
static_assert(offsetof(BPUI_HUD_ControlScheme_C_ExecuteUbergraph_BPUI_HUD_ControlScheme, CallFunc_PlayEvent_playback_instance_1) == 0x000058, "Member 'BPUI_HUD_ControlScheme_C_ExecuteUbergraph_BPUI_HUD_ControlScheme::CallFunc_PlayEvent_playback_instance_1' has a wrong offset!");
static_assert(offsetof(BPUI_HUD_ControlScheme_C_ExecuteUbergraph_BPUI_HUD_ControlScheme, CallFunc_PlayEvent_play_success_1) == 0x000068, "Member 'BPUI_HUD_ControlScheme_C_ExecuteUbergraph_BPUI_HUD_ControlScheme::CallFunc_PlayEvent_play_success_1' has a wrong offset!");
static_assert(offsetof(BPUI_HUD_ControlScheme_C_ExecuteUbergraph_BPUI_HUD_ControlScheme, K2Node_ComponentBoundEvent_button_1) == 0x000070, "Member 'BPUI_HUD_ControlScheme_C_ExecuteUbergraph_BPUI_HUD_ControlScheme::K2Node_ComponentBoundEvent_button_1' has a wrong offset!");
static_assert(offsetof(BPUI_HUD_ControlScheme_C_ExecuteUbergraph_BPUI_HUD_ControlScheme, K2Node_ComponentBoundEvent_button) == 0x000078, "Member 'BPUI_HUD_ControlScheme_C_ExecuteUbergraph_BPUI_HUD_ControlScheme::K2Node_ComponentBoundEvent_button' has a wrong offset!");

// Function BPUI_HUD_ControlScheme.BPUI_HUD_ControlScheme_C.BndEvt__BTN_controller_1_K2Node_ComponentBoundEvent_3_UIElementSelected__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BPUI_HUD_ControlScheme_C_BndEvt__BTN_controller_1_K2Node_ComponentBoundEvent_3_UIElementSelected__DelegateSignature final
{
public:
	class UCABaseUIElement*                       button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPUI_HUD_ControlScheme_C_BndEvt__BTN_controller_1_K2Node_ComponentBoundEvent_3_UIElementSelected__DelegateSignature) == 0x000008, "Wrong alignment on BPUI_HUD_ControlScheme_C_BndEvt__BTN_controller_1_K2Node_ComponentBoundEvent_3_UIElementSelected__DelegateSignature");
static_assert(sizeof(BPUI_HUD_ControlScheme_C_BndEvt__BTN_controller_1_K2Node_ComponentBoundEvent_3_UIElementSelected__DelegateSignature) == 0x000008, "Wrong size on BPUI_HUD_ControlScheme_C_BndEvt__BTN_controller_1_K2Node_ComponentBoundEvent_3_UIElementSelected__DelegateSignature");
static_assert(offsetof(BPUI_HUD_ControlScheme_C_BndEvt__BTN_controller_1_K2Node_ComponentBoundEvent_3_UIElementSelected__DelegateSignature, button) == 0x000000, "Member 'BPUI_HUD_ControlScheme_C_BndEvt__BTN_controller_1_K2Node_ComponentBoundEvent_3_UIElementSelected__DelegateSignature::button' has a wrong offset!");

// Function BPUI_HUD_ControlScheme.BPUI_HUD_ControlScheme_C.BndEvt__options_btn_K2Node_ComponentBoundEvent_2_UIElementSelected__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BPUI_HUD_ControlScheme_C_BndEvt__options_btn_K2Node_ComponentBoundEvent_2_UIElementSelected__DelegateSignature final
{
public:
	class UCABaseUIElement*                       button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPUI_HUD_ControlScheme_C_BndEvt__options_btn_K2Node_ComponentBoundEvent_2_UIElementSelected__DelegateSignature) == 0x000008, "Wrong alignment on BPUI_HUD_ControlScheme_C_BndEvt__options_btn_K2Node_ComponentBoundEvent_2_UIElementSelected__DelegateSignature");
static_assert(sizeof(BPUI_HUD_ControlScheme_C_BndEvt__options_btn_K2Node_ComponentBoundEvent_2_UIElementSelected__DelegateSignature) == 0x000008, "Wrong size on BPUI_HUD_ControlScheme_C_BndEvt__options_btn_K2Node_ComponentBoundEvent_2_UIElementSelected__DelegateSignature");
static_assert(offsetof(BPUI_HUD_ControlScheme_C_BndEvt__options_btn_K2Node_ComponentBoundEvent_2_UIElementSelected__DelegateSignature, button) == 0x000000, "Member 'BPUI_HUD_ControlScheme_C_BndEvt__options_btn_K2Node_ComponentBoundEvent_2_UIElementSelected__DelegateSignature::button' has a wrong offset!");

// Function BPUI_HUD_ControlScheme.BPUI_HUD_ControlScheme_C.CaptureInput
// 0x0014 (0x0014 - 0x0000)
struct BPUI_HUD_ControlScheme_C_CaptureInput final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0014)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(BPUI_HUD_ControlScheme_C_CaptureInput) == 0x000004, "Wrong alignment on BPUI_HUD_ControlScheme_C_CaptureInput");
static_assert(sizeof(BPUI_HUD_ControlScheme_C_CaptureInput) == 0x000014, "Wrong size on BPUI_HUD_ControlScheme_C_CaptureInput");
static_assert(offsetof(BPUI_HUD_ControlScheme_C_CaptureInput, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'BPUI_HUD_ControlScheme_C_CaptureInput::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function BPUI_HUD_ControlScheme.BPUI_HUD_ControlScheme_C.UpdateGamepadIcons
// 0x0018 (0x0018 - 0x0000)
struct BPUI_HUD_ControlScheme_C_UpdateGamepadIcons final
{
public:
	class APawn*                                  CallFunc_GetOwningPlayerPawn_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACACharacter*                           K2Node_DynamicCast_AsCACharacter;                  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_WasLastInputGamepad_ReturnValue;          // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPUI_HUD_ControlScheme_C_UpdateGamepadIcons) == 0x000008, "Wrong alignment on BPUI_HUD_ControlScheme_C_UpdateGamepadIcons");
static_assert(sizeof(BPUI_HUD_ControlScheme_C_UpdateGamepadIcons) == 0x000018, "Wrong size on BPUI_HUD_ControlScheme_C_UpdateGamepadIcons");
static_assert(offsetof(BPUI_HUD_ControlScheme_C_UpdateGamepadIcons, CallFunc_GetOwningPlayerPawn_ReturnValue) == 0x000000, "Member 'BPUI_HUD_ControlScheme_C_UpdateGamepadIcons::CallFunc_GetOwningPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPUI_HUD_ControlScheme_C_UpdateGamepadIcons, K2Node_DynamicCast_AsCACharacter) == 0x000008, "Member 'BPUI_HUD_ControlScheme_C_UpdateGamepadIcons::K2Node_DynamicCast_AsCACharacter' has a wrong offset!");
static_assert(offsetof(BPUI_HUD_ControlScheme_C_UpdateGamepadIcons, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BPUI_HUD_ControlScheme_C_UpdateGamepadIcons::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPUI_HUD_ControlScheme_C_UpdateGamepadIcons, CallFunc_WasLastInputGamepad_ReturnValue) == 0x000011, "Member 'BPUI_HUD_ControlScheme_C_UpdateGamepadIcons::CallFunc_WasLastInputGamepad_ReturnValue' has a wrong offset!");

// Function BPUI_HUD_ControlScheme.BPUI_HUD_ControlScheme_C.UpdateVisibility
// 0x0001 (0x0001 - 0x0000)
struct BPUI_HUD_ControlScheme_C_UpdateVisibility final
{
public:
	bool                                          Is_visible;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPUI_HUD_ControlScheme_C_UpdateVisibility) == 0x000001, "Wrong alignment on BPUI_HUD_ControlScheme_C_UpdateVisibility");
static_assert(sizeof(BPUI_HUD_ControlScheme_C_UpdateVisibility) == 0x000001, "Wrong size on BPUI_HUD_ControlScheme_C_UpdateVisibility");
static_assert(offsetof(BPUI_HUD_ControlScheme_C_UpdateVisibility, Is_visible) == 0x000000, "Member 'BPUI_HUD_ControlScheme_C_UpdateVisibility::Is_visible' has a wrong offset!");

}

