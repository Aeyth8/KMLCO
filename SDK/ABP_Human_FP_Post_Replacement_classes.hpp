#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_Human_FP_Post_Replacement

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Keaton_classes.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_Human_FP_Post_Replacement.ABP_Human_FP_Post_Replacement_C
// 0x20F0 (0x3210 - 0x1120)
class UABP_Human_FP_Post_Replacement_C final : public UCAAnimInstance_Player_FP
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x1120(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x1128(0x0020)()
	uint8                                         Pad_1148[0x8];                                     // 0x1148(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimNode_TwoBoneIK                    AnimGraphNode_TwoBoneIK_3;                         // 0x1150(0x0210)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_15;                       // 0x1360(0x0110)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_14;                       // 0x1470(0x0110)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_13;                       // 0x1580(0x0110)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone_2;                          // 0x1690(0x0100)()
	struct FAnimNode_TwoBoneIK                    AnimGraphNode_TwoBoneIK_2;                         // 0x1790(0x0210)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone_1;                          // 0x19A0(0x0100)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x1AA0(0x0020)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_12;                       // 0x1AC0(0x0110)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone;                            // 0x1BD0(0x0100)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_11;                       // 0x1CD0(0x0110)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_10;                       // 0x1DE0(0x0110)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_9;                        // 0x1EF0(0x0110)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_SubInput;                            // 0x2000(0x0120)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_8;                        // 0x2120(0x0110)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x2230(0x0038)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_7;                        // 0x2268(0x0110)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_6;                        // 0x2378(0x0110)()
	uint8                                         Pad_2488[0x8];                                     // 0x2488(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimNode_TwoBoneIK                    AnimGraphNode_TwoBoneIK_1;                         // 0x2490(0x0210)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_5;                        // 0x26A0(0x0110)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x27B0(0x00A0)()
	struct FAnimNode_RefPose                      AnimGraphNode_LocalRefPose;                        // 0x2850(0x0018)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_4;                        // 0x2868(0x0110)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_3;                        // 0x2978(0x0110)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_2;                        // 0x2A88(0x0110)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_1;                        // 0x2B98(0x0110)()
	uint8                                         Pad_2CA8[0x8];                                     // 0x2CA8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimNode_TwoBoneIK                    AnimGraphNode_TwoBoneIK;                           // 0x2CB0(0x0210)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone;                          // 0x2EC0(0x0110)()
	float                                         HandIkStrengthWeapon;                              // 0x2FD0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HandIkStrengthWorldSpace;                          // 0x2FD4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HandIKNormalWorldSpace;                            // 0x2FD8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HandIKTargetWorldSpace;                            // 0x2FE4(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               HandIKWorldRotator;                                // 0x2FF0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FVector                                InertialAimRotationOffset;                         // 0x2FFC(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FP_Mesh_ScaleDown;                                 // 0x3008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                FP_Camera_Offset;                                  // 0x300C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SmoothedAcceleration;                              // 0x3018(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               UpVectorRotator;                                   // 0x3024(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsServer;                                          // 0x3030(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3031[0x7];                                     // 0x3031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACACharacter_MainPlayer*                CACharacterMainPlayer;                             // 0x3038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCACharacterAnimationComponent*         CharacterAnimationComponent;                       // 0x3040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ShoulderOffset;                                    // 0x3048(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HandToGripTrim;                                    // 0x3054(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GripTightnessCorrection;                           // 0x3060(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaTimeX;                                        // 0x3064(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                YawPitchVel;                                       // 0x3068(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TP_RootBone;                                       // 0x3074(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             ProcFire_Transform;                                // 0x3080(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FTransform                             ProcFire_KickBack;                                 // 0x30B0(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FTransform                             ProcFire_PushBack;                                 // 0x30E0(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FTransform                             ProcFire_Wobble;                                   // 0x3110(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         ProcFire_KickBackTime;                             // 0x3140(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ProcFire_PushBackTime;                             // 0x3144(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ADS_scale;                                         // 0x3148(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsProcFireActive;                                  // 0x314C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_314D[0x3];                                     // 0x314D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             IdentityTransform;                                 // 0x3150(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         KickBackLimiter;                                   // 0x3180(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3184[0x4];                                     // 0x3184(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDebugFloatHistory                     DebugFloatHistory;                                 // 0x3188(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	class ACAWeapon*                              CurrentWeapon;                                     // 0x31A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SwayRotationOffset;                                // 0x31B0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               SwayRotator;                                       // 0x31BC(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                SwayOffset;                                        // 0x31C8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                WeaponHeldRotationOffset;                          // 0x31D4(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               WeaponHeldRotation;                                // 0x31E0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                WeaponHeldOffset;                                  // 0x31EC(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SwayZGScale;                                       // 0x31F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               UpVectorRotatorHandIK;                             // 0x31FC(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         SmoothingOffset;                                   // 0x3208(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_ABP_Human_FP_Post_Replacement(int32 EntryPoint);
	void BlueprintInitializeAnimation();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Human_FP_Post_Replacement_AnimGraphNode_ModifyBone_51A51BA345152486116EC292154A6EB0();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Human_FP_Post_Replacement_AnimGraphNode_ModifyBone_062AA994465F6B5F07B8A589F210C189();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Human_FP_Post_Replacement_AnimGraphNode_ModifyBone_1D2D1B7F448205229E7FACA1A5D2FDB1();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Human_FP_Post_Replacement_AnimGraphNode_ModifyBone_C44731E1499D74870B636094C05D1FB1();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Human_FP_Post_Replacement_AnimGraphNode_TwoBoneIK_8A2CDAB04BA0B28CFF535B861C3E617E();
	void BlueprintUpdateAnimation(float DeltaTimeX_0);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Human_FP_Post_Replacement_AnimGraphNode_ModifyBone_9CB3752941FFD66239B369B778118118();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Human_FP_Post_Replacement_AnimGraphNode_CopyBone_7FF80C884B06AD74ED01B4AF87D53678();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Human_FP_Post_Replacement_AnimGraphNode_ModifyBone_3A9BC5ED44CC2CECF417D88C4E242C8A();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Human_FP_Post_Replacement_AnimGraphNode_ModifyBone_02D8725F48D3DF1ACD6A038AFD80DEBF();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Human_FP_Post_Replacement_AnimGraphNode_ModifyBone_F356BED545789294DD3D0AB748AD5A63();
	void AnimGraph(const struct FPoseLink& InPose, struct FPoseLink* AnimGraph_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_Human_FP_Post_Replacement_C">();
	}
	static class UABP_Human_FP_Post_Replacement_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_Human_FP_Post_Replacement_C>();
	}
};
static_assert(alignof(UABP_Human_FP_Post_Replacement_C) == 0x000010, "Wrong alignment on UABP_Human_FP_Post_Replacement_C");
static_assert(sizeof(UABP_Human_FP_Post_Replacement_C) == 0x003210, "Wrong size on UABP_Human_FP_Post_Replacement_C");
static_assert(offsetof(UABP_Human_FP_Post_Replacement_C, UberGraphFrame) == 0x001120, "Member 'UABP_Human_FP_Post_Replacement_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_Human_FP_Post_Replacement_C, AnimGraphNode_ComponentToLocalSpace) == 0x001128, "Member 'UABP_Human_FP_Post_Replacement_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UABP_Human_FP_Post_Replacement_C, AnimGraphNode_TwoBoneIK_3) == 0x001150, "Member 'UABP_Human_FP_Post_Replacement_C::AnimGraphNode_TwoBoneIK_3' has a wrong offset!");
static_assert(offsetof(UABP_Human_FP_Post_Replacement_C, AnimGraphNode_ModifyBone_15) == 0x001360, "Member 'UABP_Human_FP_Post_Replacement_C::AnimGraphNode_ModifyBone_15' has a wrong offset!");
static_assert(offsetof(UABP_Human_FP_Post_Replacement_C, AnimGraphNode_ModifyBone_14) == 0x001470, "Member 'UABP_Human_FP_Post_Replacement_C::AnimGraphNode_ModifyBone_14' has a wrong offset!");
static_assert(offsetof(UABP_Human_FP_Post_Replacement_C, AnimGraphNode_ModifyBone_13) == 0x001580, "Member 'UABP_Human_FP_Post_Replacement_C::AnimGraphNode_ModifyBone_13' has a wrong offset!");
static_assert(offsetof(UABP_Human_FP_Post_Replacement_C, AnimGraphNode_CopyBone_2) == 0x001690, "Member 'UABP_Human_FP_Post_Replacement_C::AnimGraphNode_CopyBone_2' has a wrong offset!");
static_assert(offsetof(UABP_Human_FP_Post_Replacement_C, AnimGraphNode_TwoBoneIK_2) == 0x001790, "Member 'UABP_Human_FP_Post_Replacement_C::AnimGraphNode_TwoBoneIK_2' has a wrong offset!");
static_assert(offsetof(UABP_Human_FP_Post_Replacement_C, AnimGraphNode_CopyBone_1) == 0x0019A0, "Member 'UABP_Human_FP_Post_Replacement_C::AnimGraphNode_CopyBone_1' has a wrong offset!");
static_assert(offsetof(UABP_Human_FP_Post_Replacement_C, AnimGraphNode_LocalToComponentSpace) == 0x001AA0, "Member 'UABP_Human_FP_Post_Replacement_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UABP_Human_FP_Post_Replacement_C, AnimGraphNode_ModifyBone_12) == 0x001AC0, "Member 'UABP_Human_FP_Post_Replacement_C::AnimGraphNode_ModifyBone_12' has a wrong offset!");
static_assert(offsetof(UABP_Human_FP_Post_Replacement_C, AnimGraphNode_CopyBone) == 0x001BD0, "Member 'UABP_Human_FP_Post_Replacement_C::AnimGraphNode_CopyBone' has a wrong offset!");
static_assert(offsetof(UABP_Human_FP_Post_Replacement_C, AnimGraphNode_ModifyBone_11) == 0x001CD0, "Member 'UABP_Human_FP_Post_Replacement_C::AnimGraphNode_ModifyBone_11' has a wrong offset!");
static_assert(offsetof(UABP_Human_FP_Post_Replacement_C, AnimGraphNode_ModifyBone_10) == 0x001DE0, "Member 'UABP_Human_FP_Post_Replacement_C::AnimGraphNode_ModifyBone_10' has a wrong offset!");
static_assert(offsetof(UABP_Human_FP_Post_Replacement_C, AnimGraphNode_ModifyBone_9) == 0x001EF0, "Member 'UABP_Human_FP_Post_Replacement_C::AnimGraphNode_ModifyBone_9' has a wrong offset!");
static_assert(offsetof(UABP_Human_FP_Post_Replacement_C, AnimGraphNode_SubInput) == 0x002000, "Member 'UABP_Human_FP_Post_Replacement_C::AnimGraphNode_SubInput' has a wrong offset!");
static_assert(offsetof(UABP_Human_FP_Post_Replacement_C, AnimGraphNode_ModifyBone_8) == 0x002120, "Member 'UABP_Human_FP_Post_Replacement_C::AnimGraphNode_ModifyBone_8' has a wrong offset!");
static_assert(offsetof(UABP_Human_FP_Post_Replacement_C, AnimGraphNode_Root) == 0x002230, "Member 'UABP_Human_FP_Post_Replacement_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_Human_FP_Post_Replacement_C, AnimGraphNode_ModifyBone_7) == 0x002268, "Member 'UABP_Human_FP_Post_Replacement_C::AnimGraphNode_ModifyBone_7' has a wrong offset!");
static_assert(offsetof(UABP_Human_FP_Post_Replacement_C, AnimGraphNode_ModifyBone_6) == 0x002378, "Member 'UABP_Human_FP_Post_Replacement_C::AnimGraphNode_ModifyBone_6' has a wrong offset!");
static_assert(offsetof(UABP_Human_FP_Post_Replacement_C, AnimGraphNode_TwoBoneIK_1) == 0x002490, "Member 'UABP_Human_FP_Post_Replacement_C::AnimGraphNode_TwoBoneIK_1' has a wrong offset!");
static_assert(offsetof(UABP_Human_FP_Post_Replacement_C, AnimGraphNode_ModifyBone_5) == 0x0026A0, "Member 'UABP_Human_FP_Post_Replacement_C::AnimGraphNode_ModifyBone_5' has a wrong offset!");
static_assert(offsetof(UABP_Human_FP_Post_Replacement_C, AnimGraphNode_BlendListByBool) == 0x0027B0, "Member 'UABP_Human_FP_Post_Replacement_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UABP_Human_FP_Post_Replacement_C, AnimGraphNode_LocalRefPose) == 0x002850, "Member 'UABP_Human_FP_Post_Replacement_C::AnimGraphNode_LocalRefPose' has a wrong offset!");
static_assert(offsetof(UABP_Human_FP_Post_Replacement_C, AnimGraphNode_ModifyBone_4) == 0x002868, "Member 'UABP_Human_FP_Post_Replacement_C::AnimGraphNode_ModifyBone_4' has a wrong offset!");
static_assert(offsetof(UABP_Human_FP_Post_Replacement_C, AnimGraphNode_ModifyBone_3) == 0x002978, "Member 'UABP_Human_FP_Post_Replacement_C::AnimGraphNode_ModifyBone_3' has a wrong offset!");
static_assert(offsetof(UABP_Human_FP_Post_Replacement_C, AnimGraphNode_ModifyBone_2) == 0x002A88, "Member 'UABP_Human_FP_Post_Replacement_C::AnimGraphNode_ModifyBone_2' has a wrong offset!");
static_assert(offsetof(UABP_Human_FP_Post_Replacement_C, AnimGraphNode_ModifyBone_1) == 0x002B98, "Member 'UABP_Human_FP_Post_Replacement_C::AnimGraphNode_ModifyBone_1' has a wrong offset!");
static_assert(offsetof(UABP_Human_FP_Post_Replacement_C, AnimGraphNode_TwoBoneIK) == 0x002CB0, "Member 'UABP_Human_FP_Post_Replacement_C::AnimGraphNode_TwoBoneIK' has a wrong offset!");
static_assert(offsetof(UABP_Human_FP_Post_Replacement_C, AnimGraphNode_ModifyBone) == 0x002EC0, "Member 'UABP_Human_FP_Post_Replacement_C::AnimGraphNode_ModifyBone' has a wrong offset!");
static_assert(offsetof(UABP_Human_FP_Post_Replacement_C, HandIkStrengthWeapon) == 0x002FD0, "Member 'UABP_Human_FP_Post_Replacement_C::HandIkStrengthWeapon' has a wrong offset!");
static_assert(offsetof(UABP_Human_FP_Post_Replacement_C, HandIkStrengthWorldSpace) == 0x002FD4, "Member 'UABP_Human_FP_Post_Replacement_C::HandIkStrengthWorldSpace' has a wrong offset!");
static_assert(offsetof(UABP_Human_FP_Post_Replacement_C, HandIKNormalWorldSpace) == 0x002FD8, "Member 'UABP_Human_FP_Post_Replacement_C::HandIKNormalWorldSpace' has a wrong offset!");
static_assert(offsetof(UABP_Human_FP_Post_Replacement_C, HandIKTargetWorldSpace) == 0x002FE4, "Member 'UABP_Human_FP_Post_Replacement_C::HandIKTargetWorldSpace' has a wrong offset!");
static_assert(offsetof(UABP_Human_FP_Post_Replacement_C, HandIKWorldRotator) == 0x002FF0, "Member 'UABP_Human_FP_Post_Replacement_C::HandIKWorldRotator' has a wrong offset!");
static_assert(offsetof(UABP_Human_FP_Post_Replacement_C, InertialAimRotationOffset) == 0x002FFC, "Member 'UABP_Human_FP_Post_Replacement_C::InertialAimRotationOffset' has a wrong offset!");
static_assert(offsetof(UABP_Human_FP_Post_Replacement_C, FP_Mesh_ScaleDown) == 0x003008, "Member 'UABP_Human_FP_Post_Replacement_C::FP_Mesh_ScaleDown' has a wrong offset!");
static_assert(offsetof(UABP_Human_FP_Post_Replacement_C, FP_Camera_Offset) == 0x00300C, "Member 'UABP_Human_FP_Post_Replacement_C::FP_Camera_Offset' has a wrong offset!");
static_assert(offsetof(UABP_Human_FP_Post_Replacement_C, SmoothedAcceleration) == 0x003018, "Member 'UABP_Human_FP_Post_Replacement_C::SmoothedAcceleration' has a wrong offset!");
static_assert(offsetof(UABP_Human_FP_Post_Replacement_C, UpVectorRotator) == 0x003024, "Member 'UABP_Human_FP_Post_Replacement_C::UpVectorRotator' has a wrong offset!");
static_assert(offsetof(UABP_Human_FP_Post_Replacement_C, IsServer) == 0x003030, "Member 'UABP_Human_FP_Post_Replacement_C::IsServer' has a wrong offset!");
static_assert(offsetof(UABP_Human_FP_Post_Replacement_C, CACharacterMainPlayer) == 0x003038, "Member 'UABP_Human_FP_Post_Replacement_C::CACharacterMainPlayer' has a wrong offset!");
static_assert(offsetof(UABP_Human_FP_Post_Replacement_C, CharacterAnimationComponent) == 0x003040, "Member 'UABP_Human_FP_Post_Replacement_C::CharacterAnimationComponent' has a wrong offset!");
static_assert(offsetof(UABP_Human_FP_Post_Replacement_C, ShoulderOffset) == 0x003048, "Member 'UABP_Human_FP_Post_Replacement_C::ShoulderOffset' has a wrong offset!");
static_assert(offsetof(UABP_Human_FP_Post_Replacement_C, HandToGripTrim) == 0x003054, "Member 'UABP_Human_FP_Post_Replacement_C::HandToGripTrim' has a wrong offset!");
static_assert(offsetof(UABP_Human_FP_Post_Replacement_C, GripTightnessCorrection) == 0x003060, "Member 'UABP_Human_FP_Post_Replacement_C::GripTightnessCorrection' has a wrong offset!");
static_assert(offsetof(UABP_Human_FP_Post_Replacement_C, DeltaTimeX) == 0x003064, "Member 'UABP_Human_FP_Post_Replacement_C::DeltaTimeX' has a wrong offset!");
static_assert(offsetof(UABP_Human_FP_Post_Replacement_C, YawPitchVel) == 0x003068, "Member 'UABP_Human_FP_Post_Replacement_C::YawPitchVel' has a wrong offset!");
static_assert(offsetof(UABP_Human_FP_Post_Replacement_C, TP_RootBone) == 0x003074, "Member 'UABP_Human_FP_Post_Replacement_C::TP_RootBone' has a wrong offset!");
static_assert(offsetof(UABP_Human_FP_Post_Replacement_C, ProcFire_Transform) == 0x003080, "Member 'UABP_Human_FP_Post_Replacement_C::ProcFire_Transform' has a wrong offset!");
static_assert(offsetof(UABP_Human_FP_Post_Replacement_C, ProcFire_KickBack) == 0x0030B0, "Member 'UABP_Human_FP_Post_Replacement_C::ProcFire_KickBack' has a wrong offset!");
static_assert(offsetof(UABP_Human_FP_Post_Replacement_C, ProcFire_PushBack) == 0x0030E0, "Member 'UABP_Human_FP_Post_Replacement_C::ProcFire_PushBack' has a wrong offset!");
static_assert(offsetof(UABP_Human_FP_Post_Replacement_C, ProcFire_Wobble) == 0x003110, "Member 'UABP_Human_FP_Post_Replacement_C::ProcFire_Wobble' has a wrong offset!");
static_assert(offsetof(UABP_Human_FP_Post_Replacement_C, ProcFire_KickBackTime) == 0x003140, "Member 'UABP_Human_FP_Post_Replacement_C::ProcFire_KickBackTime' has a wrong offset!");
static_assert(offsetof(UABP_Human_FP_Post_Replacement_C, ProcFire_PushBackTime) == 0x003144, "Member 'UABP_Human_FP_Post_Replacement_C::ProcFire_PushBackTime' has a wrong offset!");
static_assert(offsetof(UABP_Human_FP_Post_Replacement_C, ADS_scale) == 0x003148, "Member 'UABP_Human_FP_Post_Replacement_C::ADS_scale' has a wrong offset!");
static_assert(offsetof(UABP_Human_FP_Post_Replacement_C, IsProcFireActive) == 0x00314C, "Member 'UABP_Human_FP_Post_Replacement_C::IsProcFireActive' has a wrong offset!");
static_assert(offsetof(UABP_Human_FP_Post_Replacement_C, IdentityTransform) == 0x003150, "Member 'UABP_Human_FP_Post_Replacement_C::IdentityTransform' has a wrong offset!");
static_assert(offsetof(UABP_Human_FP_Post_Replacement_C, KickBackLimiter) == 0x003180, "Member 'UABP_Human_FP_Post_Replacement_C::KickBackLimiter' has a wrong offset!");
static_assert(offsetof(UABP_Human_FP_Post_Replacement_C, DebugFloatHistory) == 0x003188, "Member 'UABP_Human_FP_Post_Replacement_C::DebugFloatHistory' has a wrong offset!");
static_assert(offsetof(UABP_Human_FP_Post_Replacement_C, CurrentWeapon) == 0x0031A8, "Member 'UABP_Human_FP_Post_Replacement_C::CurrentWeapon' has a wrong offset!");
static_assert(offsetof(UABP_Human_FP_Post_Replacement_C, SwayRotationOffset) == 0x0031B0, "Member 'UABP_Human_FP_Post_Replacement_C::SwayRotationOffset' has a wrong offset!");
static_assert(offsetof(UABP_Human_FP_Post_Replacement_C, SwayRotator) == 0x0031BC, "Member 'UABP_Human_FP_Post_Replacement_C::SwayRotator' has a wrong offset!");
static_assert(offsetof(UABP_Human_FP_Post_Replacement_C, SwayOffset) == 0x0031C8, "Member 'UABP_Human_FP_Post_Replacement_C::SwayOffset' has a wrong offset!");
static_assert(offsetof(UABP_Human_FP_Post_Replacement_C, WeaponHeldRotationOffset) == 0x0031D4, "Member 'UABP_Human_FP_Post_Replacement_C::WeaponHeldRotationOffset' has a wrong offset!");
static_assert(offsetof(UABP_Human_FP_Post_Replacement_C, WeaponHeldRotation) == 0x0031E0, "Member 'UABP_Human_FP_Post_Replacement_C::WeaponHeldRotation' has a wrong offset!");
static_assert(offsetof(UABP_Human_FP_Post_Replacement_C, WeaponHeldOffset) == 0x0031EC, "Member 'UABP_Human_FP_Post_Replacement_C::WeaponHeldOffset' has a wrong offset!");
static_assert(offsetof(UABP_Human_FP_Post_Replacement_C, SwayZGScale) == 0x0031F8, "Member 'UABP_Human_FP_Post_Replacement_C::SwayZGScale' has a wrong offset!");
static_assert(offsetof(UABP_Human_FP_Post_Replacement_C, UpVectorRotatorHandIK) == 0x0031FC, "Member 'UABP_Human_FP_Post_Replacement_C::UpVectorRotatorHandIK' has a wrong offset!");
static_assert(offsetof(UABP_Human_FP_Post_Replacement_C, SmoothingOffset) == 0x003208, "Member 'UABP_Human_FP_Post_Replacement_C::SmoothingOffset' has a wrong offset!");

}

