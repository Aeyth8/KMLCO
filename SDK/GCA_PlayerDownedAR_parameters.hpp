#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GCA_PlayerDownedAR

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "CAAudio_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function GCA_PlayerDownedAR.GCA_PlayerDownedAR_C.ExecuteUbergraph_GCA_PlayerDownedAR
// 0x0004 (0x0004 - 0x0000)
struct GCA_PlayerDownedAR_C_ExecuteUbergraph_GCA_PlayerDownedAR final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GCA_PlayerDownedAR_C_ExecuteUbergraph_GCA_PlayerDownedAR) == 0x000004, "Wrong alignment on GCA_PlayerDownedAR_C_ExecuteUbergraph_GCA_PlayerDownedAR");
static_assert(sizeof(GCA_PlayerDownedAR_C_ExecuteUbergraph_GCA_PlayerDownedAR) == 0x000004, "Wrong size on GCA_PlayerDownedAR_C_ExecuteUbergraph_GCA_PlayerDownedAR");
static_assert(offsetof(GCA_PlayerDownedAR_C_ExecuteUbergraph_GCA_PlayerDownedAR, EntryPoint) == 0x000000, "Member 'GCA_PlayerDownedAR_C_ExecuteUbergraph_GCA_PlayerDownedAR::EntryPoint' has a wrong offset!");

// Function GCA_PlayerDownedAR.GCA_PlayerDownedAR_C.OnActive
// 0x0288 (0x0288 - 0x0000)
struct GCA_PlayerDownedAR_C_OnActive final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x00F0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	bool                                          ReturnValue;                                       // 0x00F8(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F9[0x3];                                       // 0x00F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakGameplayCueParameters_NormalizedMagnitude; // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakGameplayCueParameters_RawMagnitude;  // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectContextHandle           CallFunc_BreakGameplayCueParameters_EffectContext; // 0x0108(0x0018)()
	struct FGameplayTag                           CallFunc_BreakGameplayCueParameters_MatchedTagName; // 0x0120(0x000C)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_BreakGameplayCueParameters_OriginalTag;   // 0x012C(0x000C)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  CallFunc_BreakGameplayCueParameters_AggregatedSourceTags; // 0x0138(0x0020)()
	struct FGameplayTagContainer                  CallFunc_BreakGameplayCueParameters_AggregatedTargetTags; // 0x0158(0x0020)()
	struct FVector                                CallFunc_BreakGameplayCueParameters_Location;      // 0x0178(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakGameplayCueParameters_Normal;        // 0x0184(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakGameplayCueParameters_Instigator;    // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakGameplayCueParameters_EffectCauser;  // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_BreakGameplayCueParameters_SourceObject;  // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakGameplayCueParameters_PhysicalMaterial; // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakGameplayCueParameters_GameplayEffectLevel; // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakGameplayCueParameters_AbilityLevel;  // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_BreakGameplayCueParameters_TargetAttachComponent; // 0x01B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakGameplayCueParameters_bReplicateLocationWhenUsingMinimalRepProxy; // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C1[0x7];                                      // 0x01C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACACharacter_MainPlayer*                K2Node_DynamicCast_AsCACharacter_Main_Player;      // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D1[0x7];                                      // 0x01D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGameplayTag>                   CallFunc_BreakGameplayTagContainer_GameplayTags;   // 0x01D8(0x0010)(ReferenceParm)
	struct FGameplayTag                           CallFunc_Array_Get_Item;                           // 0x01E8(0x000C)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x01F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MatchesTag_ReturnValue;                   // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F9[0x7];                                      // 0x01F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_DownedAR_Character_C*               CallFunc_Spawn_Downed_AR_Player_Mesh_Downed_Mesh;  // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0209(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x020A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_20B[0x5];                                      // 0x020B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetInstigator_ReturnValue;                // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetInstigator_ReturnValue_1;              // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue;       // 0x0221(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_222[0x6];                                      // 0x0222(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetLocalPlayerPawn_ReturnValue;           // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetLocalPlayerPawn_ReturnValue_1;         // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x023C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x023D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23E[0x2];                                      // 0x023E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0244(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_245[0x3];                                      // 0x0245(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const struct FCAAudioEventType& Event_name)> Temp_delegate_Variable;                            // 0x0248(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	struct FCAAudioEventType                      Temp_struct_Variable;                              // 0x025C(0x0004)(NoDestructor)
	struct FCAAudioEventType                      Temp_struct_Variable_1;                            // 0x0260(0x0004)(NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0264(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_265[0x3];                                      // 0x0265(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCAAudioEventType                      K2Node_Select_Default;                             // 0x0268(0x0004)(NoDestructor)
	uint8                                         Pad_26C[0x4];                                      // 0x026C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCAAudioPlaybackInstance               CallFunc_PlayEvent_playback_instance;              // 0x0270(0x0010)()
	bool                                          CallFunc_PlayEvent_play_success;                   // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GCA_PlayerDownedAR_C_OnActive) == 0x000008, "Wrong alignment on GCA_PlayerDownedAR_C_OnActive");
static_assert(sizeof(GCA_PlayerDownedAR_C_OnActive) == 0x000288, "Wrong size on GCA_PlayerDownedAR_C_OnActive");
static_assert(offsetof(GCA_PlayerDownedAR_C_OnActive, MyTarget) == 0x000000, "Member 'GCA_PlayerDownedAR_C_OnActive::MyTarget' has a wrong offset!");
static_assert(offsetof(GCA_PlayerDownedAR_C_OnActive, Parameters) == 0x000008, "Member 'GCA_PlayerDownedAR_C_OnActive::Parameters' has a wrong offset!");
static_assert(offsetof(GCA_PlayerDownedAR_C_OnActive, ReturnValue) == 0x0000F8, "Member 'GCA_PlayerDownedAR_C_OnActive::ReturnValue' has a wrong offset!");
static_assert(offsetof(GCA_PlayerDownedAR_C_OnActive, Temp_int_Array_Index_Variable) == 0x0000FC, "Member 'GCA_PlayerDownedAR_C_OnActive::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GCA_PlayerDownedAR_C_OnActive, CallFunc_BreakGameplayCueParameters_NormalizedMagnitude) == 0x000100, "Member 'GCA_PlayerDownedAR_C_OnActive::CallFunc_BreakGameplayCueParameters_NormalizedMagnitude' has a wrong offset!");
static_assert(offsetof(GCA_PlayerDownedAR_C_OnActive, CallFunc_BreakGameplayCueParameters_RawMagnitude) == 0x000104, "Member 'GCA_PlayerDownedAR_C_OnActive::CallFunc_BreakGameplayCueParameters_RawMagnitude' has a wrong offset!");
static_assert(offsetof(GCA_PlayerDownedAR_C_OnActive, CallFunc_BreakGameplayCueParameters_EffectContext) == 0x000108, "Member 'GCA_PlayerDownedAR_C_OnActive::CallFunc_BreakGameplayCueParameters_EffectContext' has a wrong offset!");
static_assert(offsetof(GCA_PlayerDownedAR_C_OnActive, CallFunc_BreakGameplayCueParameters_MatchedTagName) == 0x000120, "Member 'GCA_PlayerDownedAR_C_OnActive::CallFunc_BreakGameplayCueParameters_MatchedTagName' has a wrong offset!");
static_assert(offsetof(GCA_PlayerDownedAR_C_OnActive, CallFunc_BreakGameplayCueParameters_OriginalTag) == 0x00012C, "Member 'GCA_PlayerDownedAR_C_OnActive::CallFunc_BreakGameplayCueParameters_OriginalTag' has a wrong offset!");
static_assert(offsetof(GCA_PlayerDownedAR_C_OnActive, CallFunc_BreakGameplayCueParameters_AggregatedSourceTags) == 0x000138, "Member 'GCA_PlayerDownedAR_C_OnActive::CallFunc_BreakGameplayCueParameters_AggregatedSourceTags' has a wrong offset!");
static_assert(offsetof(GCA_PlayerDownedAR_C_OnActive, CallFunc_BreakGameplayCueParameters_AggregatedTargetTags) == 0x000158, "Member 'GCA_PlayerDownedAR_C_OnActive::CallFunc_BreakGameplayCueParameters_AggregatedTargetTags' has a wrong offset!");
static_assert(offsetof(GCA_PlayerDownedAR_C_OnActive, CallFunc_BreakGameplayCueParameters_Location) == 0x000178, "Member 'GCA_PlayerDownedAR_C_OnActive::CallFunc_BreakGameplayCueParameters_Location' has a wrong offset!");
static_assert(offsetof(GCA_PlayerDownedAR_C_OnActive, CallFunc_BreakGameplayCueParameters_Normal) == 0x000184, "Member 'GCA_PlayerDownedAR_C_OnActive::CallFunc_BreakGameplayCueParameters_Normal' has a wrong offset!");
static_assert(offsetof(GCA_PlayerDownedAR_C_OnActive, CallFunc_BreakGameplayCueParameters_Instigator) == 0x000190, "Member 'GCA_PlayerDownedAR_C_OnActive::CallFunc_BreakGameplayCueParameters_Instigator' has a wrong offset!");
static_assert(offsetof(GCA_PlayerDownedAR_C_OnActive, CallFunc_BreakGameplayCueParameters_EffectCauser) == 0x000198, "Member 'GCA_PlayerDownedAR_C_OnActive::CallFunc_BreakGameplayCueParameters_EffectCauser' has a wrong offset!");
static_assert(offsetof(GCA_PlayerDownedAR_C_OnActive, CallFunc_BreakGameplayCueParameters_SourceObject) == 0x0001A0, "Member 'GCA_PlayerDownedAR_C_OnActive::CallFunc_BreakGameplayCueParameters_SourceObject' has a wrong offset!");
static_assert(offsetof(GCA_PlayerDownedAR_C_OnActive, CallFunc_BreakGameplayCueParameters_PhysicalMaterial) == 0x0001A8, "Member 'GCA_PlayerDownedAR_C_OnActive::CallFunc_BreakGameplayCueParameters_PhysicalMaterial' has a wrong offset!");
static_assert(offsetof(GCA_PlayerDownedAR_C_OnActive, CallFunc_BreakGameplayCueParameters_GameplayEffectLevel) == 0x0001B0, "Member 'GCA_PlayerDownedAR_C_OnActive::CallFunc_BreakGameplayCueParameters_GameplayEffectLevel' has a wrong offset!");
static_assert(offsetof(GCA_PlayerDownedAR_C_OnActive, CallFunc_BreakGameplayCueParameters_AbilityLevel) == 0x0001B4, "Member 'GCA_PlayerDownedAR_C_OnActive::CallFunc_BreakGameplayCueParameters_AbilityLevel' has a wrong offset!");
static_assert(offsetof(GCA_PlayerDownedAR_C_OnActive, CallFunc_BreakGameplayCueParameters_TargetAttachComponent) == 0x0001B8, "Member 'GCA_PlayerDownedAR_C_OnActive::CallFunc_BreakGameplayCueParameters_TargetAttachComponent' has a wrong offset!");
static_assert(offsetof(GCA_PlayerDownedAR_C_OnActive, CallFunc_BreakGameplayCueParameters_bReplicateLocationWhenUsingMinimalRepProxy) == 0x0001C0, "Member 'GCA_PlayerDownedAR_C_OnActive::CallFunc_BreakGameplayCueParameters_bReplicateLocationWhenUsingMinimalRepProxy' has a wrong offset!");
static_assert(offsetof(GCA_PlayerDownedAR_C_OnActive, K2Node_DynamicCast_AsCACharacter_Main_Player) == 0x0001C8, "Member 'GCA_PlayerDownedAR_C_OnActive::K2Node_DynamicCast_AsCACharacter_Main_Player' has a wrong offset!");
static_assert(offsetof(GCA_PlayerDownedAR_C_OnActive, K2Node_DynamicCast_bSuccess) == 0x0001D0, "Member 'GCA_PlayerDownedAR_C_OnActive::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GCA_PlayerDownedAR_C_OnActive, CallFunc_BreakGameplayTagContainer_GameplayTags) == 0x0001D8, "Member 'GCA_PlayerDownedAR_C_OnActive::CallFunc_BreakGameplayTagContainer_GameplayTags' has a wrong offset!");
static_assert(offsetof(GCA_PlayerDownedAR_C_OnActive, CallFunc_Array_Get_Item) == 0x0001E8, "Member 'GCA_PlayerDownedAR_C_OnActive::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GCA_PlayerDownedAR_C_OnActive, CallFunc_Array_Length_ReturnValue) == 0x0001F4, "Member 'GCA_PlayerDownedAR_C_OnActive::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCA_PlayerDownedAR_C_OnActive, CallFunc_MatchesTag_ReturnValue) == 0x0001F8, "Member 'GCA_PlayerDownedAR_C_OnActive::CallFunc_MatchesTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCA_PlayerDownedAR_C_OnActive, CallFunc_Spawn_Downed_AR_Player_Mesh_Downed_Mesh) == 0x000200, "Member 'GCA_PlayerDownedAR_C_OnActive::CallFunc_Spawn_Downed_AR_Player_Mesh_Downed_Mesh' has a wrong offset!");
static_assert(offsetof(GCA_PlayerDownedAR_C_OnActive, CallFunc_IsDedicatedServer_ReturnValue) == 0x000208, "Member 'GCA_PlayerDownedAR_C_OnActive::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCA_PlayerDownedAR_C_OnActive, Temp_bool_True_if_break_was_hit_Variable) == 0x000209, "Member 'GCA_PlayerDownedAR_C_OnActive::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(GCA_PlayerDownedAR_C_OnActive, CallFunc_Not_PreBool_ReturnValue) == 0x00020A, "Member 'GCA_PlayerDownedAR_C_OnActive::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCA_PlayerDownedAR_C_OnActive, CallFunc_GetInstigator_ReturnValue) == 0x000210, "Member 'GCA_PlayerDownedAR_C_OnActive::CallFunc_GetInstigator_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCA_PlayerDownedAR_C_OnActive, CallFunc_GetInstigator_ReturnValue_1) == 0x000218, "Member 'GCA_PlayerDownedAR_C_OnActive::CallFunc_GetInstigator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GCA_PlayerDownedAR_C_OnActive, CallFunc_IsValid_ReturnValue) == 0x000220, "Member 'GCA_PlayerDownedAR_C_OnActive::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCA_PlayerDownedAR_C_OnActive, CallFunc_EqualEqual_GameplayTag_ReturnValue) == 0x000221, "Member 'GCA_PlayerDownedAR_C_OnActive::CallFunc_EqualEqual_GameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCA_PlayerDownedAR_C_OnActive, CallFunc_GetLocalPlayerPawn_ReturnValue) == 0x000228, "Member 'GCA_PlayerDownedAR_C_OnActive::CallFunc_GetLocalPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCA_PlayerDownedAR_C_OnActive, CallFunc_GetLocalPlayerPawn_ReturnValue_1) == 0x000230, "Member 'GCA_PlayerDownedAR_C_OnActive::CallFunc_GetLocalPlayerPawn_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GCA_PlayerDownedAR_C_OnActive, Temp_int_Loop_Counter_Variable) == 0x000238, "Member 'GCA_PlayerDownedAR_C_OnActive::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GCA_PlayerDownedAR_C_OnActive, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x00023C, "Member 'GCA_PlayerDownedAR_C_OnActive::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCA_PlayerDownedAR_C_OnActive, CallFunc_Less_IntInt_ReturnValue) == 0x00023D, "Member 'GCA_PlayerDownedAR_C_OnActive::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCA_PlayerDownedAR_C_OnActive, CallFunc_Add_IntInt_ReturnValue) == 0x000240, "Member 'GCA_PlayerDownedAR_C_OnActive::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCA_PlayerDownedAR_C_OnActive, CallFunc_BooleanAND_ReturnValue) == 0x000244, "Member 'GCA_PlayerDownedAR_C_OnActive::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCA_PlayerDownedAR_C_OnActive, Temp_delegate_Variable) == 0x000248, "Member 'GCA_PlayerDownedAR_C_OnActive::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(GCA_PlayerDownedAR_C_OnActive, Temp_struct_Variable) == 0x00025C, "Member 'GCA_PlayerDownedAR_C_OnActive::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(GCA_PlayerDownedAR_C_OnActive, Temp_struct_Variable_1) == 0x000260, "Member 'GCA_PlayerDownedAR_C_OnActive::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(GCA_PlayerDownedAR_C_OnActive, Temp_bool_Variable) == 0x000264, "Member 'GCA_PlayerDownedAR_C_OnActive::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(GCA_PlayerDownedAR_C_OnActive, K2Node_Select_Default) == 0x000268, "Member 'GCA_PlayerDownedAR_C_OnActive::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(GCA_PlayerDownedAR_C_OnActive, CallFunc_PlayEvent_playback_instance) == 0x000270, "Member 'GCA_PlayerDownedAR_C_OnActive::CallFunc_PlayEvent_playback_instance' has a wrong offset!");
static_assert(offsetof(GCA_PlayerDownedAR_C_OnActive, CallFunc_PlayEvent_play_success) == 0x000280, "Member 'GCA_PlayerDownedAR_C_OnActive::CallFunc_PlayEvent_play_success' has a wrong offset!");

// Function GCA_PlayerDownedAR.GCA_PlayerDownedAR_C.Spawn Downed AR Shot
// 0x0040 (0x0040 - 0x0000)
struct GCA_PlayerDownedAR_C_Spawn_Downed_AR_Shot final
{
public:
	class ACACharacter_MainPlayer*                Downed_Player;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Hit_Location;                                      // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Hit_Direction;                                     // 0x0014(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_GetPawnMesh_ReturnValue;                  // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACAAttachedEffect*                      CallFunc_SpawnCAAttachedEffectByRow_ReturnValue;   // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerDown_AR_C*                    K2Node_DynamicCast_AsBP_Player_Down_AR;            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GCA_PlayerDownedAR_C_Spawn_Downed_AR_Shot) == 0x000008, "Wrong alignment on GCA_PlayerDownedAR_C_Spawn_Downed_AR_Shot");
static_assert(sizeof(GCA_PlayerDownedAR_C_Spawn_Downed_AR_Shot) == 0x000040, "Wrong size on GCA_PlayerDownedAR_C_Spawn_Downed_AR_Shot");
static_assert(offsetof(GCA_PlayerDownedAR_C_Spawn_Downed_AR_Shot, Downed_Player) == 0x000000, "Member 'GCA_PlayerDownedAR_C_Spawn_Downed_AR_Shot::Downed_Player' has a wrong offset!");
static_assert(offsetof(GCA_PlayerDownedAR_C_Spawn_Downed_AR_Shot, Hit_Location) == 0x000008, "Member 'GCA_PlayerDownedAR_C_Spawn_Downed_AR_Shot::Hit_Location' has a wrong offset!");
static_assert(offsetof(GCA_PlayerDownedAR_C_Spawn_Downed_AR_Shot, Hit_Direction) == 0x000014, "Member 'GCA_PlayerDownedAR_C_Spawn_Downed_AR_Shot::Hit_Direction' has a wrong offset!");
static_assert(offsetof(GCA_PlayerDownedAR_C_Spawn_Downed_AR_Shot, CallFunc_GetPawnMesh_ReturnValue) == 0x000020, "Member 'GCA_PlayerDownedAR_C_Spawn_Downed_AR_Shot::CallFunc_GetPawnMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCA_PlayerDownedAR_C_Spawn_Downed_AR_Shot, CallFunc_SpawnCAAttachedEffectByRow_ReturnValue) == 0x000028, "Member 'GCA_PlayerDownedAR_C_Spawn_Downed_AR_Shot::CallFunc_SpawnCAAttachedEffectByRow_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCA_PlayerDownedAR_C_Spawn_Downed_AR_Shot, K2Node_DynamicCast_AsBP_Player_Down_AR) == 0x000030, "Member 'GCA_PlayerDownedAR_C_Spawn_Downed_AR_Shot::K2Node_DynamicCast_AsBP_Player_Down_AR' has a wrong offset!");
static_assert(offsetof(GCA_PlayerDownedAR_C_Spawn_Downed_AR_Shot, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'GCA_PlayerDownedAR_C_Spawn_Downed_AR_Shot::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function GCA_PlayerDownedAR.GCA_PlayerDownedAR_C.Spawn Downed AR Player Mesh
// 0x00B0 (0x00B0 - 0x0000)
struct GCA_PlayerDownedAR_C_Spawn_Downed_AR_Player_Mesh final
{
public:
	class ACACharacter_MainPlayer*                Downed_Player;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_DownedAR_Character_C*               Downed_Mesh;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                FVector;                                           // 0x0010(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FCAAudioEventType& Event_name)> Temp_delegate_Variable;                            // 0x001C(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsBeingViewed_ReturnValue;                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCAAudioPlaybackInstance               CallFunc_PlayEvent_playback_instance;              // 0x0038(0x0010)()
	bool                                          CallFunc_PlayEvent_play_success;                   // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_GetTPRotation_ReturnValue;                // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0xC];                                       // 0x0064(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0070(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_DownedAR_Character_C*               CallFunc_FinishSpawningActor_ReturnValue;          // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GCA_PlayerDownedAR_C_Spawn_Downed_AR_Player_Mesh) == 0x000010, "Wrong alignment on GCA_PlayerDownedAR_C_Spawn_Downed_AR_Player_Mesh");
static_assert(sizeof(GCA_PlayerDownedAR_C_Spawn_Downed_AR_Player_Mesh) == 0x0000B0, "Wrong size on GCA_PlayerDownedAR_C_Spawn_Downed_AR_Player_Mesh");
static_assert(offsetof(GCA_PlayerDownedAR_C_Spawn_Downed_AR_Player_Mesh, Downed_Player) == 0x000000, "Member 'GCA_PlayerDownedAR_C_Spawn_Downed_AR_Player_Mesh::Downed_Player' has a wrong offset!");
static_assert(offsetof(GCA_PlayerDownedAR_C_Spawn_Downed_AR_Player_Mesh, Downed_Mesh) == 0x000008, "Member 'GCA_PlayerDownedAR_C_Spawn_Downed_AR_Player_Mesh::Downed_Mesh' has a wrong offset!");
static_assert(offsetof(GCA_PlayerDownedAR_C_Spawn_Downed_AR_Player_Mesh, FVector) == 0x000010, "Member 'GCA_PlayerDownedAR_C_Spawn_Downed_AR_Player_Mesh::FVector' has a wrong offset!");
static_assert(offsetof(GCA_PlayerDownedAR_C_Spawn_Downed_AR_Player_Mesh, Temp_delegate_Variable) == 0x00001C, "Member 'GCA_PlayerDownedAR_C_Spawn_Downed_AR_Player_Mesh::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(GCA_PlayerDownedAR_C_Spawn_Downed_AR_Player_Mesh, CallFunc_IsBeingViewed_ReturnValue) == 0x000030, "Member 'GCA_PlayerDownedAR_C_Spawn_Downed_AR_Player_Mesh::CallFunc_IsBeingViewed_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCA_PlayerDownedAR_C_Spawn_Downed_AR_Player_Mesh, CallFunc_PlayEvent_playback_instance) == 0x000038, "Member 'GCA_PlayerDownedAR_C_Spawn_Downed_AR_Player_Mesh::CallFunc_PlayEvent_playback_instance' has a wrong offset!");
static_assert(offsetof(GCA_PlayerDownedAR_C_Spawn_Downed_AR_Player_Mesh, CallFunc_PlayEvent_play_success) == 0x000048, "Member 'GCA_PlayerDownedAR_C_Spawn_Downed_AR_Player_Mesh::CallFunc_PlayEvent_play_success' has a wrong offset!");
static_assert(offsetof(GCA_PlayerDownedAR_C_Spawn_Downed_AR_Player_Mesh, CallFunc_GetTPRotation_ReturnValue) == 0x00004C, "Member 'GCA_PlayerDownedAR_C_Spawn_Downed_AR_Player_Mesh::CallFunc_GetTPRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCA_PlayerDownedAR_C_Spawn_Downed_AR_Player_Mesh, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000058, "Member 'GCA_PlayerDownedAR_C_Spawn_Downed_AR_Player_Mesh::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCA_PlayerDownedAR_C_Spawn_Downed_AR_Player_Mesh, CallFunc_MakeTransform_ReturnValue) == 0x000070, "Member 'GCA_PlayerDownedAR_C_Spawn_Downed_AR_Player_Mesh::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCA_PlayerDownedAR_C_Spawn_Downed_AR_Player_Mesh, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0000A0, "Member 'GCA_PlayerDownedAR_C_Spawn_Downed_AR_Player_Mesh::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCA_PlayerDownedAR_C_Spawn_Downed_AR_Player_Mesh, CallFunc_FinishSpawningActor_ReturnValue) == 0x0000A8, "Member 'GCA_PlayerDownedAR_C_Spawn_Downed_AR_Player_Mesh::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");

}

