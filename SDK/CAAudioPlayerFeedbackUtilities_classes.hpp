#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CAAudioPlayerFeedbackUtilities

#include "Basic.hpp"

#include "Engine_classes.hpp"
#include "Keaton_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass CAAudioPlayerFeedbackUtilities.CAAudioPlayerFeedbackUtilities_C
// 0x0000 (0x0030 - 0x0030)
class UCAAudioPlayerFeedbackUtilities_C final : public UBlueprintFunctionLibrary
{
public:
	static void Player_Taken_Damage_SFX(const struct FNetworkedHit& Hit, class ACACharacter_MainPlayer* Character, class UObject* __WorldContext, bool* Has_an_impact_SFX_event_fired);
	static void Player_Armour_Broken_SFX(class AActor* Local_Player, class UObject* __WorldContext);
	static void NPC_Armour_Broken_SFX(class AActor* Local_Player, const struct FGameplayTag& Hit_NPC_Identifier_Tag, class UObject* __WorldContext);
	static void Critical_Hit_Player_Headshot_SFX(class AActor* Local_Player, float HIgh_Crit_Damage_Threshold, float HIt_Damage, class UObject* __WorldContext);
	static void Critical_Hit_NPC_SFX(class AActor* Hit_NPC_Actor, class AActor* Local_Player, const struct FGameplayTag& Hit_NPC_Identifier_Tag, class UObject* __WorldContext);
	static void Player_Killed_Target_SFX(class AActor* Local_Player, class UObject* __WorldContext);
	static void Player_Damaged_Armour_SFX(class AActor* Hit_Actor, const struct FCAPlayerHitUIData& Hit_Data, class AActor* Local_Player, const struct FGameplayTag& Hit_NPC_Identifier_Tag, float HighHitDamageThreshold, class UObject* __WorldContext);
	static void Destroyed_NPC_Weak_Point_SFX(class AActor* Local_Player, const struct FGameplayTag& Hit_NPC_Indentifier_Tag, class UObject* __WorldContext);
	static void Killed_NPC_SFX(class AActor* Local_Player, const struct FGameplayTag& Identifier_Tag, class AActor* Hit_Actor, float Kill_Shot_Damage_Threshold, const struct FCAPlayerHitUIData& Hit_Data, class UObject* __WorldContext);
	static void Critical_Hit_NPC_Headshot_SFX(class AActor* Local_Player, const struct FCAPlayerHitUIData& Hit_Data, float High_Crit_Damage_Threshold, class UObject* __WorldContext);
	static void Player_Downed_Target_SFX(class AActor* Local_Player, const struct FCAPlayerHitUIData& Hit_Data, class UObject* __WorldContext);
	static void Player_Health_State_SFX(EHealthState Health_State_, class ACACharacter_MainPlayer* Character, class UObject* __WorldContext);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"CAAudioPlayerFeedbackUtilities_C">();
	}
	static class UCAAudioPlayerFeedbackUtilities_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCAAudioPlayerFeedbackUtilities_C>();
	}
};
static_assert(alignof(UCAAudioPlayerFeedbackUtilities_C) == 0x000008, "Wrong alignment on UCAAudioPlayerFeedbackUtilities_C");
static_assert(sizeof(UCAAudioPlayerFeedbackUtilities_C) == 0x000030, "Wrong size on UCAAudioPlayerFeedbackUtilities_C");

}

