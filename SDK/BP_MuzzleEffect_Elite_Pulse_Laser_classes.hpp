#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MuzzleEffect_Elite_Pulse_Laser

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CAAudio_structs.hpp"
#include "Keaton_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_MuzzleEffect_Elite_Pulse_Laser.BP_MuzzleEffect_Elite_Pulse_Laser_C
// 0x0030 (0x0340 - 0x0310)
class ABP_MuzzleEffect_Elite_Pulse_Laser_C final : public ACAMuzzleEffect
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0310(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UNiagaraComponent*                      NS_EliteLaser_Projectile_Charge;                   // 0x0318(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0320(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FCAAudioPlaybackInstance               Playback_Instance;                                 // 0x0328(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         ChargeAudioGap;                                    // 0x0338(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_MuzzleEffect_Elite_Pulse_Laser(int32 EntryPoint);
	void StopChargeAudio();
	void OnStartCharging(float Duration);
	void OnPrimaryAction();
	void OnEndCharging();
	void OnFire();
	void OnEquip();
	void OnReload();
	void OnIdle();
	void OnSecondaryAction();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_MuzzleEffect_Elite_Pulse_Laser_C">();
	}
	static class ABP_MuzzleEffect_Elite_Pulse_Laser_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_MuzzleEffect_Elite_Pulse_Laser_C>();
	}
};
static_assert(alignof(ABP_MuzzleEffect_Elite_Pulse_Laser_C) == 0x000008, "Wrong alignment on ABP_MuzzleEffect_Elite_Pulse_Laser_C");
static_assert(sizeof(ABP_MuzzleEffect_Elite_Pulse_Laser_C) == 0x000340, "Wrong size on ABP_MuzzleEffect_Elite_Pulse_Laser_C");
static_assert(offsetof(ABP_MuzzleEffect_Elite_Pulse_Laser_C, UberGraphFrame) == 0x000310, "Member 'ABP_MuzzleEffect_Elite_Pulse_Laser_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_MuzzleEffect_Elite_Pulse_Laser_C, NS_EliteLaser_Projectile_Charge) == 0x000318, "Member 'ABP_MuzzleEffect_Elite_Pulse_Laser_C::NS_EliteLaser_Projectile_Charge' has a wrong offset!");
static_assert(offsetof(ABP_MuzzleEffect_Elite_Pulse_Laser_C, DefaultSceneRoot) == 0x000320, "Member 'ABP_MuzzleEffect_Elite_Pulse_Laser_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_MuzzleEffect_Elite_Pulse_Laser_C, Playback_Instance) == 0x000328, "Member 'ABP_MuzzleEffect_Elite_Pulse_Laser_C::Playback_Instance' has a wrong offset!");
static_assert(offsetof(ABP_MuzzleEffect_Elite_Pulse_Laser_C, ChargeAudioGap) == 0x000338, "Member 'ABP_MuzzleEffect_Elite_Pulse_Laser_C::ChargeAudioGap' has a wrong offset!");

}

