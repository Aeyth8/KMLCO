#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SwitchStateMachine

#include "Basic.hpp"

#include "BP_SwitchStateMachine_classes.hpp"
#include "BP_SwitchStateMachine_parameters.hpp"


namespace SDK
{

// Function BP_SwitchStateMachine.BP_SwitchStateMachine_C.EventAvailable__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UBP_SwitchStateMachine_C::EventAvailable__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SwitchStateMachine_C", "EventAvailable__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SwitchStateMachine.BP_SwitchStateMachine_C.EventUsed__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UBP_SwitchStateMachine_C::EventUsed__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SwitchStateMachine_C", "EventUsed__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SwitchStateMachine.BP_SwitchStateMachine_C.EventDisabled__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UBP_SwitchStateMachine_C::EventDisabled__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SwitchStateMachine_C", "EventDisabled__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SwitchStateMachine.BP_SwitchStateMachine_C.EventSwitchedOn__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UBP_SwitchStateMachine_C::EventSwitchedOn__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SwitchStateMachine_C", "EventSwitchedOn__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SwitchStateMachine.BP_SwitchStateMachine_C.EventSwitchedOff__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UBP_SwitchStateMachine_C::EventSwitchedOff__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SwitchStateMachine_C", "EventSwitchedOff__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SwitchStateMachine.BP_SwitchStateMachine_C.EventCooldownToOn__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UBP_SwitchStateMachine_C::EventCooldownToOn__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SwitchStateMachine_C", "EventCooldownToOn__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SwitchStateMachine.BP_SwitchStateMachine_C.EventCooldownToOff__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UBP_SwitchStateMachine_C::EventCooldownToOff__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SwitchStateMachine_C", "EventCooldownToOff__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SwitchStateMachine.BP_SwitchStateMachine_C.EventEnabled__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UBP_SwitchStateMachine_C::EventEnabled__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SwitchStateMachine_C", "EventEnabled__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SwitchStateMachine.BP_SwitchStateMachine_C.ExecuteUbergraph_BP_SwitchStateMachine
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SwitchStateMachine_C::ExecuteUbergraph_BP_SwitchStateMachine(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SwitchStateMachine_C", "ExecuteUbergraph_BP_SwitchStateMachine");

	Params::BP_SwitchStateMachine_C_ExecuteUbergraph_BP_SwitchStateMachine Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SwitchStateMachine.BP_SwitchStateMachine_C.Enabled
// (BlueprintCallable, BlueprintEvent)

void UBP_SwitchStateMachine_C::Enabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SwitchStateMachine_C", "Enabled");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SwitchStateMachine.BP_SwitchStateMachine_C.Disabled
// (BlueprintCallable, BlueprintEvent)

void UBP_SwitchStateMachine_C::Disabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SwitchStateMachine_C", "Disabled");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SwitchStateMachine.BP_SwitchStateMachine_C.CooldownToOff
// (BlueprintCallable, BlueprintEvent)

void UBP_SwitchStateMachine_C::CooldownToOff()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SwitchStateMachine_C", "CooldownToOff");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SwitchStateMachine.BP_SwitchStateMachine_C.CooldownToOn
// (BlueprintCallable, BlueprintEvent)

void UBP_SwitchStateMachine_C::CooldownToOn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SwitchStateMachine_C", "CooldownToOn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SwitchStateMachine.BP_SwitchStateMachine_C.SwitchedOff
// (BlueprintCallable, BlueprintEvent)

void UBP_SwitchStateMachine_C::SwitchedOff()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SwitchStateMachine_C", "SwitchedOff");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SwitchStateMachine.BP_SwitchStateMachine_C.SwitchedOn
// (BlueprintCallable, BlueprintEvent)

void UBP_SwitchStateMachine_C::SwitchedOn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SwitchStateMachine_C", "SwitchedOn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SwitchStateMachine.BP_SwitchStateMachine_C.BindDelegates
// (Event, Public, BlueprintEvent)

void UBP_SwitchStateMachine_C::BindDelegates()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SwitchStateMachine_C", "BindDelegates");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SwitchStateMachine.BP_SwitchStateMachine_C.SetHitTarget
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UStaticMeshComponent*             HitTarget_0                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SwitchStateMachine_C::SetHitTarget(class UStaticMeshComponent* HitTarget_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SwitchStateMachine_C", "SetHitTarget");

	Params::BP_SwitchStateMachine_C_SetHitTarget Parms{};

	Parms.HitTarget_0 = HitTarget_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SwitchStateMachine.BP_SwitchStateMachine_C.CanProcessHit
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FGameplayEffectSpec              Effect_spec                                            (BlueprintVisible, BlueprintReadOnly, Parm)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_SwitchStateMachine_C::CanProcessHit(const struct FGameplayEffectSpec& Effect_spec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SwitchStateMachine_C", "CanProcessHit");

	Params::BP_SwitchStateMachine_C_CanProcessHit Parms{};

	Parms.Effect_spec = std::move(Effect_spec);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_SwitchStateMachine.BP_SwitchStateMachine_C.SetLastNonDisabledState
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UCAFiniteState*                   State                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SwitchStateMachine_C::SetLastNonDisabledState(class UCAFiniteState* State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SwitchStateMachine_C", "SetLastNonDisabledState");

	Params::BP_SwitchStateMachine_C_SetLastNonDisabledState Parms{};

	Parms.State = State;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SwitchStateMachine.BP_SwitchStateMachine_C.GetLastNonDisabledState
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UCAFiniteState*                   LastNonDisabledState_0                                 (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SwitchStateMachine_C::GetLastNonDisabledState(class UCAFiniteState** LastNonDisabledState_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SwitchStateMachine_C", "GetLastNonDisabledState");

	Params::BP_SwitchStateMachine_C_GetLastNonDisabledState Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (LastNonDisabledState_0 != nullptr)
		*LastNonDisabledState_0 = Parms.LastNonDisabledState_0;
}

}

