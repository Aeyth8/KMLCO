#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BaseDestructiblePanel

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CAAudio_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Keaton_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_BaseDestructiblePanel.BP_BaseDestructiblePanel_C
// 0x00B0 (0x0428 - 0x0378)
class ABP_BaseDestructiblePanel_C final : public ACAObjectiveLoopActorWithAbilities
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0378(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   AR1;                                               // 0x0380(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   AR;                                                // 0x0388(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCACollisionComponent*                  TargetObjectCACollision;                           // 0x0390(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_GravityBarrierComponent_C*          BP_GravityBarrierComponent;                        // 0x0398(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_DestructibleActorStateMachine_C*    BP_DestructibleActorStateMachine;                  // 0x03A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   HitPointMesh;                                      // 0x03A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        HitPointLocation;                                  // 0x03B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   NavModifierMesh;                                   // 0x03B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCAAudioSpatialLinkComponent*           CASPr_Link;                                        // 0x03C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          CASPr_Link_Box;                                    // 0x03C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        SceneRoot;                                         // 0x03D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCANavModifierComponent*                CANavModifier;                                     // 0x03D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCAHitPointComponent*                   CAHitPoint;                                        // 0x03E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ExplosionNormal;                                   // 0x03E8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F4[0x4];                                      // 0x03F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            DestroyedMesh;                                     // 0x03F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ExplosionEffectRowName;                            // 0x0400(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCAAudioEventType                      ExplosionAudioEvent;                               // 0x040C(0x0004)(Edit, BlueprintVisible, NoDestructor)
	struct FDataTableRowHandle                    DestructibleActorData;                             // 0x0410(0x0018)(Edit, BlueprintVisible, NoDestructor)

public:
	void ExecuteUbergraph_BP_BaseDestructiblePanel(int32 EntryPoint);
	void BndEvt__BP_BaseDestructiblePanel_BP_DestructibleActorStateMachine_K2Node_ComponentBoundEvent_1_EventIntact__DelegateSignature();
	void BndEvt__BP_BaseDestructiblePanel_BP_DestructibleActorStateMachine_K2Node_ComponentBoundEvent_0_EventDestroyed__DelegateSignature();
	void ReceiveBeginPlay();
	void UserConstructionScript();
	void SetUpDestructibleActorComponent();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_BaseDestructiblePanel_C">();
	}
	static class ABP_BaseDestructiblePanel_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_BaseDestructiblePanel_C>();
	}
};
static_assert(alignof(ABP_BaseDestructiblePanel_C) == 0x000008, "Wrong alignment on ABP_BaseDestructiblePanel_C");
static_assert(sizeof(ABP_BaseDestructiblePanel_C) == 0x000428, "Wrong size on ABP_BaseDestructiblePanel_C");
static_assert(offsetof(ABP_BaseDestructiblePanel_C, UberGraphFrame) == 0x000378, "Member 'ABP_BaseDestructiblePanel_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_BaseDestructiblePanel_C, AR1) == 0x000380, "Member 'ABP_BaseDestructiblePanel_C::AR1' has a wrong offset!");
static_assert(offsetof(ABP_BaseDestructiblePanel_C, AR) == 0x000388, "Member 'ABP_BaseDestructiblePanel_C::AR' has a wrong offset!");
static_assert(offsetof(ABP_BaseDestructiblePanel_C, TargetObjectCACollision) == 0x000390, "Member 'ABP_BaseDestructiblePanel_C::TargetObjectCACollision' has a wrong offset!");
static_assert(offsetof(ABP_BaseDestructiblePanel_C, BP_GravityBarrierComponent) == 0x000398, "Member 'ABP_BaseDestructiblePanel_C::BP_GravityBarrierComponent' has a wrong offset!");
static_assert(offsetof(ABP_BaseDestructiblePanel_C, BP_DestructibleActorStateMachine) == 0x0003A0, "Member 'ABP_BaseDestructiblePanel_C::BP_DestructibleActorStateMachine' has a wrong offset!");
static_assert(offsetof(ABP_BaseDestructiblePanel_C, HitPointMesh) == 0x0003A8, "Member 'ABP_BaseDestructiblePanel_C::HitPointMesh' has a wrong offset!");
static_assert(offsetof(ABP_BaseDestructiblePanel_C, HitPointLocation) == 0x0003B0, "Member 'ABP_BaseDestructiblePanel_C::HitPointLocation' has a wrong offset!");
static_assert(offsetof(ABP_BaseDestructiblePanel_C, NavModifierMesh) == 0x0003B8, "Member 'ABP_BaseDestructiblePanel_C::NavModifierMesh' has a wrong offset!");
static_assert(offsetof(ABP_BaseDestructiblePanel_C, CASPr_Link) == 0x0003C0, "Member 'ABP_BaseDestructiblePanel_C::CASPr_Link' has a wrong offset!");
static_assert(offsetof(ABP_BaseDestructiblePanel_C, CASPr_Link_Box) == 0x0003C8, "Member 'ABP_BaseDestructiblePanel_C::CASPr_Link_Box' has a wrong offset!");
static_assert(offsetof(ABP_BaseDestructiblePanel_C, SceneRoot) == 0x0003D0, "Member 'ABP_BaseDestructiblePanel_C::SceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_BaseDestructiblePanel_C, CANavModifier) == 0x0003D8, "Member 'ABP_BaseDestructiblePanel_C::CANavModifier' has a wrong offset!");
static_assert(offsetof(ABP_BaseDestructiblePanel_C, CAHitPoint) == 0x0003E0, "Member 'ABP_BaseDestructiblePanel_C::CAHitPoint' has a wrong offset!");
static_assert(offsetof(ABP_BaseDestructiblePanel_C, ExplosionNormal) == 0x0003E8, "Member 'ABP_BaseDestructiblePanel_C::ExplosionNormal' has a wrong offset!");
static_assert(offsetof(ABP_BaseDestructiblePanel_C, DestroyedMesh) == 0x0003F8, "Member 'ABP_BaseDestructiblePanel_C::DestroyedMesh' has a wrong offset!");
static_assert(offsetof(ABP_BaseDestructiblePanel_C, ExplosionEffectRowName) == 0x000400, "Member 'ABP_BaseDestructiblePanel_C::ExplosionEffectRowName' has a wrong offset!");
static_assert(offsetof(ABP_BaseDestructiblePanel_C, ExplosionAudioEvent) == 0x00040C, "Member 'ABP_BaseDestructiblePanel_C::ExplosionAudioEvent' has a wrong offset!");
static_assert(offsetof(ABP_BaseDestructiblePanel_C, DestructibleActorData) == 0x000410, "Member 'ABP_BaseDestructiblePanel_C::DestructibleActorData' has a wrong offset!");

}

