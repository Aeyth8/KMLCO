#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CAMediaSourceRuntime

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// Class CAMediaSourceRuntime.CAMediaSourceDefinitions
// 0x00A8 (0x00E0 - 0x0038)
class UCAMediaSourceDefinitions final : public UDataAsset
{
public:
	struct FDataTableRowHandle                    M_splash_logos;                                    // 0x0038(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FDataTableRowHandle                    M_splash_screen;                                   // 0x0050(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FDataTableRowHandle                    M_sync_screen;                                     // 0x0068(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FDataTableRowHandle                    M_splash_punch_in;                                 // 0x0080(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FDataTableRowHandle                    M_splash_punch_out;                                // 0x0098(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FDataTableRowHandle                    M_onboarding;                                      // 0x00B0(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FDataTableRowHandle                    M_ftue_conversion;                                 // 0x00C8(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)

public:
	TSoftObjectPtr<class UBinkMediaSource> GetMediaSource(const struct FDataTableRowHandle& Handle);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CAMediaSourceDefinitions">();
	}
	static class UCAMediaSourceDefinitions* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCAMediaSourceDefinitions>();
	}
};
static_assert(alignof(UCAMediaSourceDefinitions) == 0x000008, "Wrong alignment on UCAMediaSourceDefinitions");
static_assert(sizeof(UCAMediaSourceDefinitions) == 0x0000E0, "Wrong size on UCAMediaSourceDefinitions");
static_assert(offsetof(UCAMediaSourceDefinitions, M_splash_logos) == 0x000038, "Member 'UCAMediaSourceDefinitions::M_splash_logos' has a wrong offset!");
static_assert(offsetof(UCAMediaSourceDefinitions, M_splash_screen) == 0x000050, "Member 'UCAMediaSourceDefinitions::M_splash_screen' has a wrong offset!");
static_assert(offsetof(UCAMediaSourceDefinitions, M_sync_screen) == 0x000068, "Member 'UCAMediaSourceDefinitions::M_sync_screen' has a wrong offset!");
static_assert(offsetof(UCAMediaSourceDefinitions, M_splash_punch_in) == 0x000080, "Member 'UCAMediaSourceDefinitions::M_splash_punch_in' has a wrong offset!");
static_assert(offsetof(UCAMediaSourceDefinitions, M_splash_punch_out) == 0x000098, "Member 'UCAMediaSourceDefinitions::M_splash_punch_out' has a wrong offset!");
static_assert(offsetof(UCAMediaSourceDefinitions, M_onboarding) == 0x0000B0, "Member 'UCAMediaSourceDefinitions::M_onboarding' has a wrong offset!");
static_assert(offsetof(UCAMediaSourceDefinitions, M_ftue_conversion) == 0x0000C8, "Member 'UCAMediaSourceDefinitions::M_ftue_conversion' has a wrong offset!");

}

