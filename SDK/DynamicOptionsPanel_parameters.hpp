#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DynamicOptionsPanel

#include "Basic.hpp"

#include "CALocalisationRuntime_structs.hpp"


namespace SDK::Params
{

// Function DynamicOptionsPanel.DynamicOptionsPanel_C.SendMessage_0__DelegateSignature
// 0x000C (0x000C - 0x0000)
struct DynamicOptionsPanel_C_SendMessage_0__DelegateSignature final
{
public:
	class FName                                   Msg;                                               // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DynamicOptionsPanel_C_SendMessage_0__DelegateSignature) == 0x000004, "Wrong alignment on DynamicOptionsPanel_C_SendMessage_0__DelegateSignature");
static_assert(sizeof(DynamicOptionsPanel_C_SendMessage_0__DelegateSignature) == 0x00000C, "Wrong size on DynamicOptionsPanel_C_SendMessage_0__DelegateSignature");
static_assert(offsetof(DynamicOptionsPanel_C_SendMessage_0__DelegateSignature, Msg) == 0x000000, "Member 'DynamicOptionsPanel_C_SendMessage_0__DelegateSignature::Msg' has a wrong offset!");

// Function DynamicOptionsPanel.DynamicOptionsPanel_C.ExecuteUbergraph_DynamicOptionsPanel
// 0x0068 (0x0068 - 0x0000)
struct DynamicOptionsPanel_C_ExecuteUbergraph_DynamicOptionsPanel final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCAText                                K2Node_CustomEvent_Parent_Title;                   // 0x0008(0x0030)()
	struct FCAText                                K2Node_CustomEvent_Screen_Title;                   // 0x0038(0x0030)()
};
static_assert(alignof(DynamicOptionsPanel_C_ExecuteUbergraph_DynamicOptionsPanel) == 0x000008, "Wrong alignment on DynamicOptionsPanel_C_ExecuteUbergraph_DynamicOptionsPanel");
static_assert(sizeof(DynamicOptionsPanel_C_ExecuteUbergraph_DynamicOptionsPanel) == 0x000068, "Wrong size on DynamicOptionsPanel_C_ExecuteUbergraph_DynamicOptionsPanel");
static_assert(offsetof(DynamicOptionsPanel_C_ExecuteUbergraph_DynamicOptionsPanel, EntryPoint) == 0x000000, "Member 'DynamicOptionsPanel_C_ExecuteUbergraph_DynamicOptionsPanel::EntryPoint' has a wrong offset!");
static_assert(offsetof(DynamicOptionsPanel_C_ExecuteUbergraph_DynamicOptionsPanel, K2Node_CustomEvent_Parent_Title) == 0x000008, "Member 'DynamicOptionsPanel_C_ExecuteUbergraph_DynamicOptionsPanel::K2Node_CustomEvent_Parent_Title' has a wrong offset!");
static_assert(offsetof(DynamicOptionsPanel_C_ExecuteUbergraph_DynamicOptionsPanel, K2Node_CustomEvent_Screen_Title) == 0x000038, "Member 'DynamicOptionsPanel_C_ExecuteUbergraph_DynamicOptionsPanel::K2Node_CustomEvent_Screen_Title' has a wrong offset!");

// Function DynamicOptionsPanel.DynamicOptionsPanel_C.SetTitles
// 0x0060 (0x0060 - 0x0000)
struct DynamicOptionsPanel_C_SetTitles final
{
public:
	struct FCAText                                Parent_Title;                                      // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FCAText                                Screen_Title;                                      // 0x0030(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(DynamicOptionsPanel_C_SetTitles) == 0x000008, "Wrong alignment on DynamicOptionsPanel_C_SetTitles");
static_assert(sizeof(DynamicOptionsPanel_C_SetTitles) == 0x000060, "Wrong size on DynamicOptionsPanel_C_SetTitles");
static_assert(offsetof(DynamicOptionsPanel_C_SetTitles, Parent_Title) == 0x000000, "Member 'DynamicOptionsPanel_C_SetTitles::Parent_Title' has a wrong offset!");
static_assert(offsetof(DynamicOptionsPanel_C_SetTitles, Screen_Title) == 0x000030, "Member 'DynamicOptionsPanel_C_SetTitles::Screen_Title' has a wrong offset!");

}

