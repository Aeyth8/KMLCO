#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPUI_InventoryContainer

#include "Basic.hpp"

#include "BPUI_InventoryContainer_classes.hpp"
#include "BPUI_InventoryContainer_parameters.hpp"


namespace SDK
{

// Function BPUI_InventoryContainer.BPUI_InventoryContainer_C.ExecuteUbergraph_BPUI_InventoryContainer
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPUI_InventoryContainer_C::ExecuteUbergraph_BPUI_InventoryContainer(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPUI_InventoryContainer_C", "ExecuteUbergraph_BPUI_InventoryContainer");

	Params::BPUI_InventoryContainer_C_ExecuteUbergraph_BPUI_InventoryContainer Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPUI_InventoryContainer.BPUI_InventoryContainer_C.BlockInputEvent
// (BlueprintCallable, BlueprintEvent)

void UBPUI_InventoryContainer_C::BlockInputEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPUI_InventoryContainer_C", "BlockInputEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPUI_InventoryContainer.BPUI_InventoryContainer_C.OnHide
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UBPUI_InventoryContainer_C::OnHide()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPUI_InventoryContainer_C", "OnHide");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPUI_InventoryContainer.BPUI_InventoryContainer_C.Refresh
// (Event, Protected, BlueprintEvent)

void UBPUI_InventoryContainer_C::Refresh()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPUI_InventoryContainer_C", "Refresh");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPUI_InventoryContainer.BPUI_InventoryContainer_C.OnShow
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UBPUI_InventoryContainer_C::OnShow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPUI_InventoryContainer_C", "OnShow");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPUI_InventoryContainer.BPUI_InventoryContainer_C.CaptureInput
// (Public, BlueprintCallable, BlueprintEvent)

void UBPUI_InventoryContainer_C::CaptureInput()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPUI_InventoryContainer_C", "CaptureInput");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPUI_InventoryContainer.BPUI_InventoryContainer_C.ReleaseInput
// (Public, BlueprintCallable, BlueprintEvent)

void UBPUI_InventoryContainer_C::ReleaseInput()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPUI_InventoryContainer_C", "ReleaseInput");

	UObject::ProcessEvent(Func, nullptr);
}

}

