#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GC_LaserBeam

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CAAudio_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayAbilities_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GC_LaserBeam.GC_LaserBeam_C
// 0x00D8 (0x0398 - 0x02C0)
class AGC_LaserBeam_C final : public AGameplayCueNotify_Actor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCAAudioBeamComponent*                  CAAudioBeam_WeaponLaser;                           // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class ABP_Weapon_Laser_C*                     LaserWeapon;                                       // 0x02D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NextPredictedPosition;                             // 0x02E0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CurrentPredictedPosition;                          // 0x02EC(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FirstDelayFinished;                                // 0x02F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F9[0x7];                                      // 0x02F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCAAudioPlaybackInstance               BeamEndPlaybackInstance;                           // 0x0300(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FVector                                MuzzlePreviousLocation;                            // 0x0310(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                BeamEndPreviousLocation;                           // 0x031C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AudioComponentMovementInterpolation;               // 0x0328(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CurrentlyPlaying2DSound;                           // 0x032C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32D[0x3];                                      // 0x032D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Delta_Seconds;                                     // 0x0330(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_334[0x4];                                      // 0x0334(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraComponent*                      Laser_Beam;                                        // 0x0338(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Muzzle_Location;                                   // 0x0340(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Current_Laser_Beam_End;                            // 0x034C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Interp_Beam_Location;                              // 0x0358(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_364[0x4];                                      // 0x0364(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Current_Laser_Target;                              // 0x0368(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Current_Charge_Time;                               // 0x0370(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_374[0x4];                                      // 0x0374(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACACharacter_MainPlayer*                Current_Laser_Target_Player;                       // 0x0378(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Blocked_Beam_End_Vs_Torso;                         // 0x0380(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          First_Beam_Client_Update;                          // 0x038C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38D[0x3];                                      // 0x038D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         StopEventPercent;                                  // 0x0390(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          StoppedonPercentage;                               // 0x0394(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_GC_LaserBeam(int32 EntryPoint);
	void ReceiveTick(float DeltaSeconds);
	bool OnActive(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters);
	bool OnRemove(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters);
	void On_Laser_Target_Changed(class AActor* LaserTarget);
	bool WhileActive(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters);
	bool CleanUp();
	void AudioStopEventOnChargePercentage(float ChangeDuration);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GC_LaserBeam_C">();
	}
	static class AGC_LaserBeam_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AGC_LaserBeam_C>();
	}
};
static_assert(alignof(AGC_LaserBeam_C) == 0x000008, "Wrong alignment on AGC_LaserBeam_C");
static_assert(sizeof(AGC_LaserBeam_C) == 0x000398, "Wrong size on AGC_LaserBeam_C");
static_assert(offsetof(AGC_LaserBeam_C, UberGraphFrame) == 0x0002C0, "Member 'AGC_LaserBeam_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AGC_LaserBeam_C, CAAudioBeam_WeaponLaser) == 0x0002C8, "Member 'AGC_LaserBeam_C::CAAudioBeam_WeaponLaser' has a wrong offset!");
static_assert(offsetof(AGC_LaserBeam_C, DefaultSceneRoot) == 0x0002D0, "Member 'AGC_LaserBeam_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(AGC_LaserBeam_C, LaserWeapon) == 0x0002D8, "Member 'AGC_LaserBeam_C::LaserWeapon' has a wrong offset!");
static_assert(offsetof(AGC_LaserBeam_C, NextPredictedPosition) == 0x0002E0, "Member 'AGC_LaserBeam_C::NextPredictedPosition' has a wrong offset!");
static_assert(offsetof(AGC_LaserBeam_C, CurrentPredictedPosition) == 0x0002EC, "Member 'AGC_LaserBeam_C::CurrentPredictedPosition' has a wrong offset!");
static_assert(offsetof(AGC_LaserBeam_C, FirstDelayFinished) == 0x0002F8, "Member 'AGC_LaserBeam_C::FirstDelayFinished' has a wrong offset!");
static_assert(offsetof(AGC_LaserBeam_C, BeamEndPlaybackInstance) == 0x000300, "Member 'AGC_LaserBeam_C::BeamEndPlaybackInstance' has a wrong offset!");
static_assert(offsetof(AGC_LaserBeam_C, MuzzlePreviousLocation) == 0x000310, "Member 'AGC_LaserBeam_C::MuzzlePreviousLocation' has a wrong offset!");
static_assert(offsetof(AGC_LaserBeam_C, BeamEndPreviousLocation) == 0x00031C, "Member 'AGC_LaserBeam_C::BeamEndPreviousLocation' has a wrong offset!");
static_assert(offsetof(AGC_LaserBeam_C, AudioComponentMovementInterpolation) == 0x000328, "Member 'AGC_LaserBeam_C::AudioComponentMovementInterpolation' has a wrong offset!");
static_assert(offsetof(AGC_LaserBeam_C, CurrentlyPlaying2DSound) == 0x00032C, "Member 'AGC_LaserBeam_C::CurrentlyPlaying2DSound' has a wrong offset!");
static_assert(offsetof(AGC_LaserBeam_C, Delta_Seconds) == 0x000330, "Member 'AGC_LaserBeam_C::Delta_Seconds' has a wrong offset!");
static_assert(offsetof(AGC_LaserBeam_C, Laser_Beam) == 0x000338, "Member 'AGC_LaserBeam_C::Laser_Beam' has a wrong offset!");
static_assert(offsetof(AGC_LaserBeam_C, Muzzle_Location) == 0x000340, "Member 'AGC_LaserBeam_C::Muzzle_Location' has a wrong offset!");
static_assert(offsetof(AGC_LaserBeam_C, Current_Laser_Beam_End) == 0x00034C, "Member 'AGC_LaserBeam_C::Current_Laser_Beam_End' has a wrong offset!");
static_assert(offsetof(AGC_LaserBeam_C, Interp_Beam_Location) == 0x000358, "Member 'AGC_LaserBeam_C::Interp_Beam_Location' has a wrong offset!");
static_assert(offsetof(AGC_LaserBeam_C, Current_Laser_Target) == 0x000368, "Member 'AGC_LaserBeam_C::Current_Laser_Target' has a wrong offset!");
static_assert(offsetof(AGC_LaserBeam_C, Current_Charge_Time) == 0x000370, "Member 'AGC_LaserBeam_C::Current_Charge_Time' has a wrong offset!");
static_assert(offsetof(AGC_LaserBeam_C, Current_Laser_Target_Player) == 0x000378, "Member 'AGC_LaserBeam_C::Current_Laser_Target_Player' has a wrong offset!");
static_assert(offsetof(AGC_LaserBeam_C, Blocked_Beam_End_Vs_Torso) == 0x000380, "Member 'AGC_LaserBeam_C::Blocked_Beam_End_Vs_Torso' has a wrong offset!");
static_assert(offsetof(AGC_LaserBeam_C, First_Beam_Client_Update) == 0x00038C, "Member 'AGC_LaserBeam_C::First_Beam_Client_Update' has a wrong offset!");
static_assert(offsetof(AGC_LaserBeam_C, StopEventPercent) == 0x000390, "Member 'AGC_LaserBeam_C::StopEventPercent' has a wrong offset!");
static_assert(offsetof(AGC_LaserBeam_C, StoppedonPercentage) == 0x000394, "Member 'AGC_LaserBeam_C::StoppedonPercentage' has a wrong offset!");

}

