#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FE_screenTitle

#include "Basic.hpp"

#include "CALocalisationRuntime_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function FE_screenTitle.FE_screenTitle_C.ExecuteUbergraph_FE_screenTitle
// 0x01D0 (0x01D0 - 0x0000)
struct FE_screenTitle_C_ExecuteUbergraph_FE_screenTitle final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCAText                                K2Node_CustomEvent_Parent_Title;                   // 0x0008(0x0030)()
	struct FCAText                                K2Node_CustomEvent_Screen_Title;                   // 0x0038(0x0030)()
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_82[0x2];                                       // 0x0082(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0098(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCAText                                K2Node_CustomEvent_ca_text_1;                      // 0x00D8(0x0030)(ConstParm)
	struct FCAText                                K2Node_CustomEvent_ca_text;                        // 0x0108(0x0030)(ConstParm)
	bool                                          CallFunc_IsCATextValid_ReturnValue;                // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsCATextValid_ReturnValue_1;              // 0x0139(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_13A[0x6];                                      // 0x013A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCAText                                K2Node_Select_Default;                             // 0x0140(0x0030)()
	struct FCAText                                K2Node_Select_Default_1;                           // 0x0170(0x0030)()
	class FText                                   K2Node_CustomEvent_text_1;                         // 0x01A0(0x0018)(ConstParm)
	class FText                                   K2Node_CustomEvent_text;                           // 0x01B8(0x0018)(ConstParm)
};
static_assert(alignof(FE_screenTitle_C_ExecuteUbergraph_FE_screenTitle) == 0x000008, "Wrong alignment on FE_screenTitle_C_ExecuteUbergraph_FE_screenTitle");
static_assert(sizeof(FE_screenTitle_C_ExecuteUbergraph_FE_screenTitle) == 0x0001D0, "Wrong size on FE_screenTitle_C_ExecuteUbergraph_FE_screenTitle");
static_assert(offsetof(FE_screenTitle_C_ExecuteUbergraph_FE_screenTitle, EntryPoint) == 0x000000, "Member 'FE_screenTitle_C_ExecuteUbergraph_FE_screenTitle::EntryPoint' has a wrong offset!");
static_assert(offsetof(FE_screenTitle_C_ExecuteUbergraph_FE_screenTitle, Temp_bool_Variable) == 0x000004, "Member 'FE_screenTitle_C_ExecuteUbergraph_FE_screenTitle::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(FE_screenTitle_C_ExecuteUbergraph_FE_screenTitle, K2Node_CustomEvent_Parent_Title) == 0x000008, "Member 'FE_screenTitle_C_ExecuteUbergraph_FE_screenTitle::K2Node_CustomEvent_Parent_Title' has a wrong offset!");
static_assert(offsetof(FE_screenTitle_C_ExecuteUbergraph_FE_screenTitle, K2Node_CustomEvent_Screen_Title) == 0x000038, "Member 'FE_screenTitle_C_ExecuteUbergraph_FE_screenTitle::K2Node_CustomEvent_Screen_Title' has a wrong offset!");
static_assert(offsetof(FE_screenTitle_C_ExecuteUbergraph_FE_screenTitle, K2Node_Event_IsDesignTime) == 0x000068, "Member 'FE_screenTitle_C_ExecuteUbergraph_FE_screenTitle::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(FE_screenTitle_C_ExecuteUbergraph_FE_screenTitle, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000070, "Member 'FE_screenTitle_C_ExecuteUbergraph_FE_screenTitle::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(FE_screenTitle_C_ExecuteUbergraph_FE_screenTitle, CallFunc_PlayAnimation_ReturnValue) == 0x000078, "Member 'FE_screenTitle_C_ExecuteUbergraph_FE_screenTitle::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(FE_screenTitle_C_ExecuteUbergraph_FE_screenTitle, Temp_bool_Variable_1) == 0x000080, "Member 'FE_screenTitle_C_ExecuteUbergraph_FE_screenTitle::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(FE_screenTitle_C_ExecuteUbergraph_FE_screenTitle, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000081, "Member 'FE_screenTitle_C_ExecuteUbergraph_FE_screenTitle::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(FE_screenTitle_C_ExecuteUbergraph_FE_screenTitle, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000084, "Member 'FE_screenTitle_C_ExecuteUbergraph_FE_screenTitle::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(FE_screenTitle_C_ExecuteUbergraph_FE_screenTitle, CallFunc_FClamp_ReturnValue) == 0x000088, "Member 'FE_screenTitle_C_ExecuteUbergraph_FE_screenTitle::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(FE_screenTitle_C_ExecuteUbergraph_FE_screenTitle, CallFunc_PlayAnimation_ReturnValue_1) == 0x000090, "Member 'FE_screenTitle_C_ExecuteUbergraph_FE_screenTitle::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FE_screenTitle_C_ExecuteUbergraph_FE_screenTitle, K2Node_Event_MyGeometry) == 0x000098, "Member 'FE_screenTitle_C_ExecuteUbergraph_FE_screenTitle::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(FE_screenTitle_C_ExecuteUbergraph_FE_screenTitle, K2Node_Event_InDeltaTime) == 0x0000D0, "Member 'FE_screenTitle_C_ExecuteUbergraph_FE_screenTitle::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(FE_screenTitle_C_ExecuteUbergraph_FE_screenTitle, K2Node_CustomEvent_ca_text_1) == 0x0000D8, "Member 'FE_screenTitle_C_ExecuteUbergraph_FE_screenTitle::K2Node_CustomEvent_ca_text_1' has a wrong offset!");
static_assert(offsetof(FE_screenTitle_C_ExecuteUbergraph_FE_screenTitle, K2Node_CustomEvent_ca_text) == 0x000108, "Member 'FE_screenTitle_C_ExecuteUbergraph_FE_screenTitle::K2Node_CustomEvent_ca_text' has a wrong offset!");
static_assert(offsetof(FE_screenTitle_C_ExecuteUbergraph_FE_screenTitle, CallFunc_IsCATextValid_ReturnValue) == 0x000138, "Member 'FE_screenTitle_C_ExecuteUbergraph_FE_screenTitle::CallFunc_IsCATextValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(FE_screenTitle_C_ExecuteUbergraph_FE_screenTitle, CallFunc_IsCATextValid_ReturnValue_1) == 0x000139, "Member 'FE_screenTitle_C_ExecuteUbergraph_FE_screenTitle::CallFunc_IsCATextValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FE_screenTitle_C_ExecuteUbergraph_FE_screenTitle, K2Node_Select_Default) == 0x000140, "Member 'FE_screenTitle_C_ExecuteUbergraph_FE_screenTitle::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(FE_screenTitle_C_ExecuteUbergraph_FE_screenTitle, K2Node_Select_Default_1) == 0x000170, "Member 'FE_screenTitle_C_ExecuteUbergraph_FE_screenTitle::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(FE_screenTitle_C_ExecuteUbergraph_FE_screenTitle, K2Node_CustomEvent_text_1) == 0x0001A0, "Member 'FE_screenTitle_C_ExecuteUbergraph_FE_screenTitle::K2Node_CustomEvent_text_1' has a wrong offset!");
static_assert(offsetof(FE_screenTitle_C_ExecuteUbergraph_FE_screenTitle, K2Node_CustomEvent_text) == 0x0001B8, "Member 'FE_screenTitle_C_ExecuteUbergraph_FE_screenTitle::K2Node_CustomEvent_text' has a wrong offset!");

// Function FE_screenTitle.FE_screenTitle_C.SetParentTitleText
// 0x0018 (0x0018 - 0x0000)
struct FE_screenTitle_C_SetParentTitleText final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(FE_screenTitle_C_SetParentTitleText) == 0x000008, "Wrong alignment on FE_screenTitle_C_SetParentTitleText");
static_assert(sizeof(FE_screenTitle_C_SetParentTitleText) == 0x000018, "Wrong size on FE_screenTitle_C_SetParentTitleText");
static_assert(offsetof(FE_screenTitle_C_SetParentTitleText, Text) == 0x000000, "Member 'FE_screenTitle_C_SetParentTitleText::Text' has a wrong offset!");

// Function FE_screenTitle.FE_screenTitle_C.SetScreenTitleText
// 0x0018 (0x0018 - 0x0000)
struct FE_screenTitle_C_SetScreenTitleText final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(FE_screenTitle_C_SetScreenTitleText) == 0x000008, "Wrong alignment on FE_screenTitle_C_SetScreenTitleText");
static_assert(sizeof(FE_screenTitle_C_SetScreenTitleText) == 0x000018, "Wrong size on FE_screenTitle_C_SetScreenTitleText");
static_assert(offsetof(FE_screenTitle_C_SetScreenTitleText, Text) == 0x000000, "Member 'FE_screenTitle_C_SetScreenTitleText::Text' has a wrong offset!");

// Function FE_screenTitle.FE_screenTitle_C.SetScreenTitle
// 0x0030 (0x0030 - 0x0000)
struct FE_screenTitle_C_SetScreenTitle final
{
public:
	struct FCAText                                Ca_text;                                           // 0x0000(0x0030)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(FE_screenTitle_C_SetScreenTitle) == 0x000008, "Wrong alignment on FE_screenTitle_C_SetScreenTitle");
static_assert(sizeof(FE_screenTitle_C_SetScreenTitle) == 0x000030, "Wrong size on FE_screenTitle_C_SetScreenTitle");
static_assert(offsetof(FE_screenTitle_C_SetScreenTitle, Ca_text) == 0x000000, "Member 'FE_screenTitle_C_SetScreenTitle::Ca_text' has a wrong offset!");

// Function FE_screenTitle.FE_screenTitle_C.SetParentTitle
// 0x0030 (0x0030 - 0x0000)
struct FE_screenTitle_C_SetParentTitle final
{
public:
	struct FCAText                                Ca_text;                                           // 0x0000(0x0030)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(FE_screenTitle_C_SetParentTitle) == 0x000008, "Wrong alignment on FE_screenTitle_C_SetParentTitle");
static_assert(sizeof(FE_screenTitle_C_SetParentTitle) == 0x000030, "Wrong size on FE_screenTitle_C_SetParentTitle");
static_assert(offsetof(FE_screenTitle_C_SetParentTitle, Ca_text) == 0x000000, "Member 'FE_screenTitle_C_SetParentTitle::Ca_text' has a wrong offset!");

// Function FE_screenTitle.FE_screenTitle_C.Tick
// 0x003C (0x003C - 0x0000)
struct FE_screenTitle_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FE_screenTitle_C_Tick) == 0x000004, "Wrong alignment on FE_screenTitle_C_Tick");
static_assert(sizeof(FE_screenTitle_C_Tick) == 0x00003C, "Wrong size on FE_screenTitle_C_Tick");
static_assert(offsetof(FE_screenTitle_C_Tick, MyGeometry) == 0x000000, "Member 'FE_screenTitle_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(FE_screenTitle_C_Tick, InDeltaTime) == 0x000038, "Member 'FE_screenTitle_C_Tick::InDeltaTime' has a wrong offset!");

// Function FE_screenTitle.FE_screenTitle_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct FE_screenTitle_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FE_screenTitle_C_PreConstruct) == 0x000001, "Wrong alignment on FE_screenTitle_C_PreConstruct");
static_assert(sizeof(FE_screenTitle_C_PreConstruct) == 0x000001, "Wrong size on FE_screenTitle_C_PreConstruct");
static_assert(offsetof(FE_screenTitle_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'FE_screenTitle_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function FE_screenTitle.FE_screenTitle_C.SetTitles
// 0x0060 (0x0060 - 0x0000)
struct FE_screenTitle_C_SetTitles final
{
public:
	struct FCAText                                Parent_Title;                                      // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FCAText                                Screen_Title;                                      // 0x0030(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(FE_screenTitle_C_SetTitles) == 0x000008, "Wrong alignment on FE_screenTitle_C_SetTitles");
static_assert(sizeof(FE_screenTitle_C_SetTitles) == 0x000060, "Wrong size on FE_screenTitle_C_SetTitles");
static_assert(offsetof(FE_screenTitle_C_SetTitles, Parent_Title) == 0x000000, "Member 'FE_screenTitle_C_SetTitles::Parent_Title' has a wrong offset!");
static_assert(offsetof(FE_screenTitle_C_SetTitles, Screen_Title) == 0x000030, "Member 'FE_screenTitle_C_SetTitles::Screen_Title' has a wrong offset!");

}

