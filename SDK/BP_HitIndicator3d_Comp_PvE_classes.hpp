#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_HitIndicator3d_Comp_PvE

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Keaton_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_HitIndicator3d_Comp_PvE.BP_HitIndicator3d_Comp_PvE_C
// 0x0030 (0x0630 - 0x0600)
class UBP_HitIndicator3d_Comp_PvE_C final : public UCAHitIndicator3D_SC
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0600(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UMaterialInstanceDynamic*               MaterialInstance;                                  // 0x0608(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentAlpha;                                      // 0x0610(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_614[0x4];                                      // 0x0614(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           FadeOutTimer;                                      // 0x0618(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         IncrementAmount;                                   // 0x0620(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_HitIndicator3d_Comp_PvE(int32 EntryPoint);
	void FadeOutEvent();
	void CustomEvent_2();
	void CustomEvent_1();
	void CustomEvent_0(bool Is_restart);
	void ReceiveBeginPlay();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_HitIndicator3d_Comp_PvE_C">();
	}
	static class UBP_HitIndicator3d_Comp_PvE_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_HitIndicator3d_Comp_PvE_C>();
	}
};
static_assert(alignof(UBP_HitIndicator3d_Comp_PvE_C) == 0x000010, "Wrong alignment on UBP_HitIndicator3d_Comp_PvE_C");
static_assert(sizeof(UBP_HitIndicator3d_Comp_PvE_C) == 0x000630, "Wrong size on UBP_HitIndicator3d_Comp_PvE_C");
static_assert(offsetof(UBP_HitIndicator3d_Comp_PvE_C, UberGraphFrame) == 0x000600, "Member 'UBP_HitIndicator3d_Comp_PvE_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_HitIndicator3d_Comp_PvE_C, MaterialInstance) == 0x000608, "Member 'UBP_HitIndicator3d_Comp_PvE_C::MaterialInstance' has a wrong offset!");
static_assert(offsetof(UBP_HitIndicator3d_Comp_PvE_C, CurrentAlpha) == 0x000610, "Member 'UBP_HitIndicator3d_Comp_PvE_C::CurrentAlpha' has a wrong offset!");
static_assert(offsetof(UBP_HitIndicator3d_Comp_PvE_C, FadeOutTimer) == 0x000618, "Member 'UBP_HitIndicator3d_Comp_PvE_C::FadeOutTimer' has a wrong offset!");
static_assert(offsetof(UBP_HitIndicator3d_Comp_PvE_C, IncrementAmount) == 0x000620, "Member 'UBP_HitIndicator3d_Comp_PvE_C::IncrementAmount' has a wrong offset!");

}

