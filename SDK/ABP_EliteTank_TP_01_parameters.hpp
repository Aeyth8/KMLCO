#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_EliteTank_TP_01

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "Keaton_structs.hpp"


namespace SDK::Params
{

// Function ABP_EliteTank_TP_01.ABP_EliteTank_TP_01_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct ABP_EliteTank_TP_01_C_AnimGraph final
{
public:
	struct FPoseLink                              AnimGraph_0;                                       // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABP_EliteTank_TP_01_C_AnimGraph) == 0x000008, "Wrong alignment on ABP_EliteTank_TP_01_C_AnimGraph");
static_assert(sizeof(ABP_EliteTank_TP_01_C_AnimGraph) == 0x000010, "Wrong size on ABP_EliteTank_TP_01_C_AnimGraph");
static_assert(offsetof(ABP_EliteTank_TP_01_C_AnimGraph, AnimGraph_0) == 0x000000, "Member 'ABP_EliteTank_TP_01_C_AnimGraph::AnimGraph_0' has a wrong offset!");

// Function ABP_EliteTank_TP_01.ABP_EliteTank_TP_01_C.Get Death Anim Yaw Offset
// 0x0190 (0x0190 - 0x0000)
struct ABP_EliteTank_TP_01_C_Get_Death_Anim_Yaw_Offset final
{
public:
	float                                         Yaw;                                               // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwningActor_ReturnValue;               // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue;              // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0020(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_InverseTransformRotation_ReturnValue;     // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue_1;            // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwningActor_ReturnValue_1;             // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetTransform_ReturnValue_1;               // 0x0080(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_InverseTransformRotation_ReturnValue_1;   // 0x00B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue_2;            // 0x00BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwningActor_ReturnValue_2;             // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetTransform_ReturnValue_2;               // 0x00E0(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_InverseTransformRotation_ReturnValue_2;   // 0x0110(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue_3;            // 0x011C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll_2;                      // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_2;                     // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_2;                       // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_134[0x4];                                      // 0x0134(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwningActor_ReturnValue_3;             // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetTransform_ReturnValue_3;               // 0x0140(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_InverseTransformRotation_ReturnValue_3;   // 0x0170(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x017C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_17D[0x3];                                      // 0x017D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakRotator_Roll_3;                      // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_3;                     // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_3;                       // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_EliteTank_TP_01_C_Get_Death_Anim_Yaw_Offset) == 0x000010, "Wrong alignment on ABP_EliteTank_TP_01_C_Get_Death_Anim_Yaw_Offset");
static_assert(sizeof(ABP_EliteTank_TP_01_C_Get_Death_Anim_Yaw_Offset) == 0x000190, "Wrong size on ABP_EliteTank_TP_01_C_Get_Death_Anim_Yaw_Offset");
static_assert(offsetof(ABP_EliteTank_TP_01_C_Get_Death_Anim_Yaw_Offset, Yaw) == 0x000000, "Member 'ABP_EliteTank_TP_01_C_Get_Death_Anim_Yaw_Offset::Yaw' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_Get_Death_Anim_Yaw_Offset, CallFunc_GetOwningActor_ReturnValue) == 0x000008, "Member 'ABP_EliteTank_TP_01_C_Get_Death_Anim_Yaw_Offset::CallFunc_GetOwningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_Get_Death_Anim_Yaw_Offset, CallFunc_ComposeRotators_ReturnValue) == 0x000010, "Member 'ABP_EliteTank_TP_01_C_Get_Death_Anim_Yaw_Offset::CallFunc_ComposeRotators_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_Get_Death_Anim_Yaw_Offset, CallFunc_GetTransform_ReturnValue) == 0x000020, "Member 'ABP_EliteTank_TP_01_C_Get_Death_Anim_Yaw_Offset::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_Get_Death_Anim_Yaw_Offset, CallFunc_InverseTransformRotation_ReturnValue) == 0x000050, "Member 'ABP_EliteTank_TP_01_C_Get_Death_Anim_Yaw_Offset::CallFunc_InverseTransformRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_Get_Death_Anim_Yaw_Offset, CallFunc_ComposeRotators_ReturnValue_1) == 0x00005C, "Member 'ABP_EliteTank_TP_01_C_Get_Death_Anim_Yaw_Offset::CallFunc_ComposeRotators_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_Get_Death_Anim_Yaw_Offset, CallFunc_BreakRotator_Roll) == 0x000068, "Member 'ABP_EliteTank_TP_01_C_Get_Death_Anim_Yaw_Offset::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_Get_Death_Anim_Yaw_Offset, CallFunc_BreakRotator_Pitch) == 0x00006C, "Member 'ABP_EliteTank_TP_01_C_Get_Death_Anim_Yaw_Offset::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_Get_Death_Anim_Yaw_Offset, CallFunc_BreakRotator_Yaw) == 0x000070, "Member 'ABP_EliteTank_TP_01_C_Get_Death_Anim_Yaw_Offset::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_Get_Death_Anim_Yaw_Offset, CallFunc_GetOwningActor_ReturnValue_1) == 0x000078, "Member 'ABP_EliteTank_TP_01_C_Get_Death_Anim_Yaw_Offset::CallFunc_GetOwningActor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_Get_Death_Anim_Yaw_Offset, CallFunc_GetTransform_ReturnValue_1) == 0x000080, "Member 'ABP_EliteTank_TP_01_C_Get_Death_Anim_Yaw_Offset::CallFunc_GetTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_Get_Death_Anim_Yaw_Offset, CallFunc_InverseTransformRotation_ReturnValue_1) == 0x0000B0, "Member 'ABP_EliteTank_TP_01_C_Get_Death_Anim_Yaw_Offset::CallFunc_InverseTransformRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_Get_Death_Anim_Yaw_Offset, CallFunc_ComposeRotators_ReturnValue_2) == 0x0000BC, "Member 'ABP_EliteTank_TP_01_C_Get_Death_Anim_Yaw_Offset::CallFunc_ComposeRotators_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_Get_Death_Anim_Yaw_Offset, CallFunc_BreakRotator_Roll_1) == 0x0000C8, "Member 'ABP_EliteTank_TP_01_C_Get_Death_Anim_Yaw_Offset::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_Get_Death_Anim_Yaw_Offset, CallFunc_BreakRotator_Pitch_1) == 0x0000CC, "Member 'ABP_EliteTank_TP_01_C_Get_Death_Anim_Yaw_Offset::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_Get_Death_Anim_Yaw_Offset, CallFunc_BreakRotator_Yaw_1) == 0x0000D0, "Member 'ABP_EliteTank_TP_01_C_Get_Death_Anim_Yaw_Offset::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_Get_Death_Anim_Yaw_Offset, CallFunc_GetOwningActor_ReturnValue_2) == 0x0000D8, "Member 'ABP_EliteTank_TP_01_C_Get_Death_Anim_Yaw_Offset::CallFunc_GetOwningActor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_Get_Death_Anim_Yaw_Offset, CallFunc_GetTransform_ReturnValue_2) == 0x0000E0, "Member 'ABP_EliteTank_TP_01_C_Get_Death_Anim_Yaw_Offset::CallFunc_GetTransform_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_Get_Death_Anim_Yaw_Offset, CallFunc_InverseTransformRotation_ReturnValue_2) == 0x000110, "Member 'ABP_EliteTank_TP_01_C_Get_Death_Anim_Yaw_Offset::CallFunc_InverseTransformRotation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_Get_Death_Anim_Yaw_Offset, CallFunc_ComposeRotators_ReturnValue_3) == 0x00011C, "Member 'ABP_EliteTank_TP_01_C_Get_Death_Anim_Yaw_Offset::CallFunc_ComposeRotators_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_Get_Death_Anim_Yaw_Offset, CallFunc_BreakRotator_Roll_2) == 0x000128, "Member 'ABP_EliteTank_TP_01_C_Get_Death_Anim_Yaw_Offset::CallFunc_BreakRotator_Roll_2' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_Get_Death_Anim_Yaw_Offset, CallFunc_BreakRotator_Pitch_2) == 0x00012C, "Member 'ABP_EliteTank_TP_01_C_Get_Death_Anim_Yaw_Offset::CallFunc_BreakRotator_Pitch_2' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_Get_Death_Anim_Yaw_Offset, CallFunc_BreakRotator_Yaw_2) == 0x000130, "Member 'ABP_EliteTank_TP_01_C_Get_Death_Anim_Yaw_Offset::CallFunc_BreakRotator_Yaw_2' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_Get_Death_Anim_Yaw_Offset, CallFunc_GetOwningActor_ReturnValue_3) == 0x000138, "Member 'ABP_EliteTank_TP_01_C_Get_Death_Anim_Yaw_Offset::CallFunc_GetOwningActor_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_Get_Death_Anim_Yaw_Offset, CallFunc_GetTransform_ReturnValue_3) == 0x000140, "Member 'ABP_EliteTank_TP_01_C_Get_Death_Anim_Yaw_Offset::CallFunc_GetTransform_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_Get_Death_Anim_Yaw_Offset, CallFunc_InverseTransformRotation_ReturnValue_3) == 0x000170, "Member 'ABP_EliteTank_TP_01_C_Get_Death_Anim_Yaw_Offset::CallFunc_InverseTransformRotation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_Get_Death_Anim_Yaw_Offset, K2Node_SwitchInteger_CmpSuccess) == 0x00017C, "Member 'ABP_EliteTank_TP_01_C_Get_Death_Anim_Yaw_Offset::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_Get_Death_Anim_Yaw_Offset, CallFunc_BreakRotator_Roll_3) == 0x000180, "Member 'ABP_EliteTank_TP_01_C_Get_Death_Anim_Yaw_Offset::CallFunc_BreakRotator_Roll_3' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_Get_Death_Anim_Yaw_Offset, CallFunc_BreakRotator_Pitch_3) == 0x000184, "Member 'ABP_EliteTank_TP_01_C_Get_Death_Anim_Yaw_Offset::CallFunc_BreakRotator_Pitch_3' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_Get_Death_Anim_Yaw_Offset, CallFunc_BreakRotator_Yaw_3) == 0x000188, "Member 'ABP_EliteTank_TP_01_C_Get_Death_Anim_Yaw_Offset::CallFunc_BreakRotator_Yaw_3' has a wrong offset!");

// Function ABP_EliteTank_TP_01.ABP_EliteTank_TP_01_C.OnHitReaction
// 0x01A0 (0x01A0 - 0x0000)
struct ABP_EliteTank_TP_01_C_OnHitReaction final
{
public:
	struct FNetworkedHit                          Hit;                                               // 0x0000(0x0068)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	class UAnimSequenceBase*                      HitReactionAnim;                                   // 0x0068(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBodyPart                                     Temp_byte_Variable;                                // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UAnimSequenceBase*>              Temp_object_Variable;                              // 0x0078(0x0010)(ReferenceParm)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_RotatorToVector_ReturnValue;         // 0x008C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBodyPart                                     Temp_byte_Variable_1;                              // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UAnimSequenceBase*>              Temp_object_Variable_1;                            // 0x00A0(0x0010)(ReferenceParm)
	class UAnimMontage*                           K2Node_DynamicCast_AsAnim_Montage;                 // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Montage_Play_ReturnValue;                 // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UAnimSequenceBase*>              K2Node_Select_Default;                             // 0x00C0(0x0010)(ReferenceParm)
	TArray<class UAnimSequenceBase*>              K2Node_Select_Default_1;                           // 0x00D0(0x0010)(ReferenceParm)
	TArray<class UAnimSequenceBase*>              Temp_object_Variable_2;                            // 0x00E0(0x0010)(ReferenceParm)
	EBodyPart                                     Temp_byte_Variable_2;                              // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UAnimSequenceBase*>              Temp_object_Variable_3;                            // 0x00F8(0x0010)(ReferenceParm)
	EBodyPart                                     Temp_byte_Variable_3;                              // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_109[0x7];                                      // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UAnimSequenceBase*>              K2Node_Select_Default_2;                           // 0x0110(0x0010)(ReferenceParm)
	TArray<class UAnimSequenceBase*>              Temp_object_Variable_4;                            // 0x0120(0x0010)(ReferenceParm)
	TArray<class UAnimSequenceBase*>              K2Node_Select_Default_3;                           // 0x0130(0x0010)(ReferenceParm)
	EBodyPart                                     Temp_byte_Variable_4;                              // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_141[0x3];                                      // 0x0141(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0144(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class UAnimSequenceBase*>              K2Node_Select_Default_4;                           // 0x0150(0x0010)(ReferenceParm)
	struct FVector                                CallFunc_LessLess_VectorRotator_ReturnValue;       // 0x0160(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get4DirectionIndex_ReturnValue;           // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      CallFunc_Array_Get_Item;                           // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      CallFunc_Array_Get_Item_1;                         // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      CallFunc_Array_Get_Item_2;                         // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      CallFunc_Array_Get_Item_3;                         // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      CallFunc_Array_Get_Item_4;                         // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ABP_EliteTank_TP_01_C_OnHitReaction) == 0x000008, "Wrong alignment on ABP_EliteTank_TP_01_C_OnHitReaction");
static_assert(sizeof(ABP_EliteTank_TP_01_C_OnHitReaction) == 0x0001A0, "Wrong size on ABP_EliteTank_TP_01_C_OnHitReaction");
static_assert(offsetof(ABP_EliteTank_TP_01_C_OnHitReaction, Hit) == 0x000000, "Member 'ABP_EliteTank_TP_01_C_OnHitReaction::Hit' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_OnHitReaction, HitReactionAnim) == 0x000068, "Member 'ABP_EliteTank_TP_01_C_OnHitReaction::HitReactionAnim' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_OnHitReaction, Temp_byte_Variable) == 0x000070, "Member 'ABP_EliteTank_TP_01_C_OnHitReaction::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_OnHitReaction, Temp_object_Variable) == 0x000078, "Member 'ABP_EliteTank_TP_01_C_OnHitReaction::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_OnHitReaction, K2Node_SwitchEnum_CmpSuccess) == 0x000088, "Member 'ABP_EliteTank_TP_01_C_OnHitReaction::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_OnHitReaction, CallFunc_Conv_RotatorToVector_ReturnValue) == 0x00008C, "Member 'ABP_EliteTank_TP_01_C_OnHitReaction::CallFunc_Conv_RotatorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_OnHitReaction, Temp_byte_Variable_1) == 0x000098, "Member 'ABP_EliteTank_TP_01_C_OnHitReaction::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_OnHitReaction, Temp_object_Variable_1) == 0x0000A0, "Member 'ABP_EliteTank_TP_01_C_OnHitReaction::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_OnHitReaction, K2Node_DynamicCast_AsAnim_Montage) == 0x0000B0, "Member 'ABP_EliteTank_TP_01_C_OnHitReaction::K2Node_DynamicCast_AsAnim_Montage' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_OnHitReaction, K2Node_DynamicCast_bSuccess) == 0x0000B8, "Member 'ABP_EliteTank_TP_01_C_OnHitReaction::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_OnHitReaction, CallFunc_Montage_Play_ReturnValue) == 0x0000BC, "Member 'ABP_EliteTank_TP_01_C_OnHitReaction::CallFunc_Montage_Play_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_OnHitReaction, K2Node_Select_Default) == 0x0000C0, "Member 'ABP_EliteTank_TP_01_C_OnHitReaction::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_OnHitReaction, K2Node_Select_Default_1) == 0x0000D0, "Member 'ABP_EliteTank_TP_01_C_OnHitReaction::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_OnHitReaction, Temp_object_Variable_2) == 0x0000E0, "Member 'ABP_EliteTank_TP_01_C_OnHitReaction::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_OnHitReaction, Temp_byte_Variable_2) == 0x0000F0, "Member 'ABP_EliteTank_TP_01_C_OnHitReaction::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_OnHitReaction, Temp_object_Variable_3) == 0x0000F8, "Member 'ABP_EliteTank_TP_01_C_OnHitReaction::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_OnHitReaction, Temp_byte_Variable_3) == 0x000108, "Member 'ABP_EliteTank_TP_01_C_OnHitReaction::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_OnHitReaction, K2Node_Select_Default_2) == 0x000110, "Member 'ABP_EliteTank_TP_01_C_OnHitReaction::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_OnHitReaction, Temp_object_Variable_4) == 0x000120, "Member 'ABP_EliteTank_TP_01_C_OnHitReaction::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_OnHitReaction, K2Node_Select_Default_3) == 0x000130, "Member 'ABP_EliteTank_TP_01_C_OnHitReaction::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_OnHitReaction, Temp_byte_Variable_4) == 0x000140, "Member 'ABP_EliteTank_TP_01_C_OnHitReaction::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_OnHitReaction, CallFunc_MakeRotator_ReturnValue) == 0x000144, "Member 'ABP_EliteTank_TP_01_C_OnHitReaction::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_OnHitReaction, K2Node_Select_Default_4) == 0x000150, "Member 'ABP_EliteTank_TP_01_C_OnHitReaction::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_OnHitReaction, CallFunc_LessLess_VectorRotator_ReturnValue) == 0x000160, "Member 'ABP_EliteTank_TP_01_C_OnHitReaction::CallFunc_LessLess_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_OnHitReaction, CallFunc_Get4DirectionIndex_ReturnValue) == 0x00016C, "Member 'ABP_EliteTank_TP_01_C_OnHitReaction::CallFunc_Get4DirectionIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_OnHitReaction, CallFunc_Array_Get_Item) == 0x000170, "Member 'ABP_EliteTank_TP_01_C_OnHitReaction::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_OnHitReaction, CallFunc_Array_Get_Item_1) == 0x000178, "Member 'ABP_EliteTank_TP_01_C_OnHitReaction::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_OnHitReaction, CallFunc_Array_Get_Item_2) == 0x000180, "Member 'ABP_EliteTank_TP_01_C_OnHitReaction::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_OnHitReaction, CallFunc_Array_Get_Item_3) == 0x000188, "Member 'ABP_EliteTank_TP_01_C_OnHitReaction::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_OnHitReaction, CallFunc_Array_Get_Item_4) == 0x000190, "Member 'ABP_EliteTank_TP_01_C_OnHitReaction::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_OnHitReaction, CallFunc_IsValid_ReturnValue) == 0x000198, "Member 'ABP_EliteTank_TP_01_C_OnHitReaction::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function ABP_EliteTank_TP_01.ABP_EliteTank_TP_01_C.SelectDeathAnimSequence
// 0x0620 (0x0620 - 0x0000)
struct ABP_EliteTank_TP_01_C_SelectDeathAnimSequence final
{
public:
	class ACACharacter*                           Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectSpec                    DeathGameplayEffectSpec;                           // 0x0008(0x0298)(BlueprintVisible, BlueprintReadOnly, Parm)
	float                                         DamageMagnitude;                                   // 0x02A0(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A4[0x4];                                      // 0x02A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FNetworkedHit                          NetworkedHit;                                      // 0x02A8(0x0068)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	TArray<class FString>                         DirNames;                                          // 0x0310(0x0010)(Edit, BlueprintVisible)
	class FString                                 DeathAnimType;                                     // 0x0320(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	EBodyPart                                     Temp_byte_Variable;                                // 0x0330(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_331[0x7];                                      // 0x0331(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UAnimSequenceBase*>              Temp_object_Variable;                              // 0x0338(0x0010)(ReferenceParm)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0348(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_349[0x3];                                      // 0x0349(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x034C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0358(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_359[0x3];                                      // 0x0359(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_RotatorToVector_ReturnValue;         // 0x035C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBodyPart                                     Temp_byte_Variable_1;                              // 0x0368(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_369[0x7];                                      // 0x0369(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UAnimSequenceBase*>              Temp_object_Variable_1;                            // 0x0370(0x0010)(ReferenceParm)
	EBodyPart                                     Temp_byte_Variable_2;                              // 0x0380(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_381[0x7];                                      // 0x0381(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UAnimSequenceBase*>              Temp_object_Variable_2;                            // 0x0388(0x0010)(ReferenceParm)
	EBodyPart                                     Temp_byte_Variable_3;                              // 0x0398(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_399[0x7];                                      // 0x0399(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UAnimSequenceBase*>              Temp_object_Variable_3;                            // 0x03A0(0x0010)(ReferenceParm)
	EBodyPart                                     Temp_byte_Variable_4;                              // 0x03B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B1[0x7];                                      // 0x03B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UAnimSequenceBase*>              Temp_object_Variable_4;                            // 0x03B8(0x0010)(ReferenceParm)
	EBodyPart                                     Temp_byte_Variable_5;                              // 0x03C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C9[0x7];                                      // 0x03C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UAnimSequenceBase*>              Temp_object_Variable_5;                            // 0x03D0(0x0010)(ReferenceParm)
	EBodyPart                                     Temp_byte_Variable_6;                              // 0x03E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E1[0x7];                                      // 0x03E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UAnimSequenceBase*>              Temp_object_Variable_6;                            // 0x03E8(0x0010)(ReferenceParm)
	TArray<class FString>                         K2Node_MakeArray_Array;                            // 0x03F8(0x0010)(ReferenceParm)
	class USkeletalMeshComponent*                 CallFunc_GetOwningComponent_ReturnValue;           // 0x0408(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue;           // 0x0410(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0440(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x044C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0458(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue;              // 0x0464(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0470(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x047C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0480(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0484(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0488(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0494(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotFromX_ReturnValue;                 // 0x04A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x04AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4AD[0x3];                                      // 0x04AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               K2Node_Select_Default;                             // 0x04B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x04BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4BD[0x3];                                      // 0x04BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UAnimSequenceBase*>              K2Node_Select_Default_1;                           // 0x04C0(0x0010)(ReferenceParm)
	struct FVector                                K2Node_Select_Default_2;                           // 0x04D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4DC[0x4];                                      // 0x04DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequenceBase*                      CallFunc_Array_Get_Item;                           // 0x04E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_LessLess_VectorRotator_ReturnValue;       // 0x04E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get4DirectionIndex_ReturnValue;           // 0x04F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UAnimSequenceBase*>              K2Node_Select_Default_3;                           // 0x04F8(0x0010)(ReferenceParm)
	TArray<class UAnimSequenceBase*>              Temp_object_Variable_7;                            // 0x0508(0x0010)(ReferenceParm)
	class UAnimSequenceBase*                      CallFunc_Array_Get_Item_1;                         // 0x0518(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBodyPart                                     Temp_byte_Variable_7;                              // 0x0520(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_521[0x7];                                      // 0x0521(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UAnimSequenceBase*>              Temp_object_Variable_8;                            // 0x0528(0x0010)(ReferenceParm)
	EBodyPart                                     Temp_byte_Variable_8;                              // 0x0538(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_539[0x7];                                      // 0x0539(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UAnimSequenceBase*>              K2Node_Select_Default_4;                           // 0x0540(0x0010)(ReferenceParm)
	class UAnimSequenceBase*                      CallFunc_Array_Get_Item_2;                         // 0x0550(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UAnimSequenceBase*>              K2Node_Select_Default_5;                           // 0x0558(0x0010)(ReferenceParm)
	class UAnimSequenceBase*                      CallFunc_Array_Get_Item_3;                         // 0x0568(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UAnimSequenceBase*>              K2Node_Select_Default_6;                           // 0x0570(0x0010)(ReferenceParm)
	class UAnimSequenceBase*                      CallFunc_Array_Get_Item_4;                         // 0x0580(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UAnimSequenceBase*>              Temp_object_Variable_9;                            // 0x0588(0x0010)(ReferenceParm)
	TArray<class UAnimSequenceBase*>              K2Node_Select_Default_7;                           // 0x0598(0x0010)(ReferenceParm)
	class UAnimSequenceBase*                      CallFunc_Array_Get_Item_5;                         // 0x05A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UAnimSequenceBase*>              K2Node_Select_Default_8;                           // 0x05B0(0x0010)(ReferenceParm)
	class UAnimSequenceBase*                      CallFunc_Array_Get_Item_6;                         // 0x05C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBodyPart                                     Temp_byte_Variable_9;                              // 0x05C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C9[0x7];                                      // 0x05C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UAnimSequenceBase*>              K2Node_Select_Default_9;                           // 0x05D0(0x0010)(ReferenceParm)
	class UAnimSequenceBase*                      CallFunc_Array_Get_Item_7;                         // 0x05E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UAnimSequenceBase*>              K2Node_Select_Default_10;                          // 0x05E8(0x0010)(ReferenceParm)
	class UAnimSequenceBase*                      CallFunc_Array_Get_Item_8;                         // 0x05F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0600(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_601[0x7];                                      // 0x0601(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UAnimSequenceBase*>              K2Node_Select_Default_11;                          // 0x0608(0x0010)(ReferenceParm)
	class UAnimSequenceBase*                      CallFunc_Array_Get_Item_9;                         // 0x0618(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_EliteTank_TP_01_C_SelectDeathAnimSequence) == 0x000010, "Wrong alignment on ABP_EliteTank_TP_01_C_SelectDeathAnimSequence");
static_assert(sizeof(ABP_EliteTank_TP_01_C_SelectDeathAnimSequence) == 0x000620, "Wrong size on ABP_EliteTank_TP_01_C_SelectDeathAnimSequence");
static_assert(offsetof(ABP_EliteTank_TP_01_C_SelectDeathAnimSequence, Character) == 0x000000, "Member 'ABP_EliteTank_TP_01_C_SelectDeathAnimSequence::Character' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_SelectDeathAnimSequence, DeathGameplayEffectSpec) == 0x000008, "Member 'ABP_EliteTank_TP_01_C_SelectDeathAnimSequence::DeathGameplayEffectSpec' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_SelectDeathAnimSequence, DamageMagnitude) == 0x0002A0, "Member 'ABP_EliteTank_TP_01_C_SelectDeathAnimSequence::DamageMagnitude' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_SelectDeathAnimSequence, NetworkedHit) == 0x0002A8, "Member 'ABP_EliteTank_TP_01_C_SelectDeathAnimSequence::NetworkedHit' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_SelectDeathAnimSequence, DirNames) == 0x000310, "Member 'ABP_EliteTank_TP_01_C_SelectDeathAnimSequence::DirNames' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_SelectDeathAnimSequence, DeathAnimType) == 0x000320, "Member 'ABP_EliteTank_TP_01_C_SelectDeathAnimSequence::DeathAnimType' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_SelectDeathAnimSequence, Temp_byte_Variable) == 0x000330, "Member 'ABP_EliteTank_TP_01_C_SelectDeathAnimSequence::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_SelectDeathAnimSequence, Temp_object_Variable) == 0x000338, "Member 'ABP_EliteTank_TP_01_C_SelectDeathAnimSequence::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_SelectDeathAnimSequence, K2Node_SwitchEnum_CmpSuccess) == 0x000348, "Member 'ABP_EliteTank_TP_01_C_SelectDeathAnimSequence::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_SelectDeathAnimSequence, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00034C, "Member 'ABP_EliteTank_TP_01_C_SelectDeathAnimSequence::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_SelectDeathAnimSequence, CallFunc_IsValid_ReturnValue) == 0x000358, "Member 'ABP_EliteTank_TP_01_C_SelectDeathAnimSequence::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_SelectDeathAnimSequence, CallFunc_Conv_RotatorToVector_ReturnValue) == 0x00035C, "Member 'ABP_EliteTank_TP_01_C_SelectDeathAnimSequence::CallFunc_Conv_RotatorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_SelectDeathAnimSequence, Temp_byte_Variable_1) == 0x000368, "Member 'ABP_EliteTank_TP_01_C_SelectDeathAnimSequence::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_SelectDeathAnimSequence, Temp_object_Variable_1) == 0x000370, "Member 'ABP_EliteTank_TP_01_C_SelectDeathAnimSequence::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_SelectDeathAnimSequence, Temp_byte_Variable_2) == 0x000380, "Member 'ABP_EliteTank_TP_01_C_SelectDeathAnimSequence::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_SelectDeathAnimSequence, Temp_object_Variable_2) == 0x000388, "Member 'ABP_EliteTank_TP_01_C_SelectDeathAnimSequence::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_SelectDeathAnimSequence, Temp_byte_Variable_3) == 0x000398, "Member 'ABP_EliteTank_TP_01_C_SelectDeathAnimSequence::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_SelectDeathAnimSequence, Temp_object_Variable_3) == 0x0003A0, "Member 'ABP_EliteTank_TP_01_C_SelectDeathAnimSequence::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_SelectDeathAnimSequence, Temp_byte_Variable_4) == 0x0003B0, "Member 'ABP_EliteTank_TP_01_C_SelectDeathAnimSequence::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_SelectDeathAnimSequence, Temp_object_Variable_4) == 0x0003B8, "Member 'ABP_EliteTank_TP_01_C_SelectDeathAnimSequence::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_SelectDeathAnimSequence, Temp_byte_Variable_5) == 0x0003C8, "Member 'ABP_EliteTank_TP_01_C_SelectDeathAnimSequence::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_SelectDeathAnimSequence, Temp_object_Variable_5) == 0x0003D0, "Member 'ABP_EliteTank_TP_01_C_SelectDeathAnimSequence::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_SelectDeathAnimSequence, Temp_byte_Variable_6) == 0x0003E0, "Member 'ABP_EliteTank_TP_01_C_SelectDeathAnimSequence::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_SelectDeathAnimSequence, Temp_object_Variable_6) == 0x0003E8, "Member 'ABP_EliteTank_TP_01_C_SelectDeathAnimSequence::Temp_object_Variable_6' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_SelectDeathAnimSequence, K2Node_MakeArray_Array) == 0x0003F8, "Member 'ABP_EliteTank_TP_01_C_SelectDeathAnimSequence::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_SelectDeathAnimSequence, CallFunc_GetOwningComponent_ReturnValue) == 0x000408, "Member 'ABP_EliteTank_TP_01_C_SelectDeathAnimSequence::CallFunc_GetOwningComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_SelectDeathAnimSequence, CallFunc_GetSocketTransform_ReturnValue) == 0x000410, "Member 'ABP_EliteTank_TP_01_C_SelectDeathAnimSequence::CallFunc_GetSocketTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_SelectDeathAnimSequence, CallFunc_BreakTransform_Location) == 0x000440, "Member 'ABP_EliteTank_TP_01_C_SelectDeathAnimSequence::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_SelectDeathAnimSequence, CallFunc_BreakTransform_Rotation) == 0x00044C, "Member 'ABP_EliteTank_TP_01_C_SelectDeathAnimSequence::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_SelectDeathAnimSequence, CallFunc_BreakTransform_Scale) == 0x000458, "Member 'ABP_EliteTank_TP_01_C_SelectDeathAnimSequence::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_SelectDeathAnimSequence, CallFunc_ComposeRotators_ReturnValue) == 0x000464, "Member 'ABP_EliteTank_TP_01_C_SelectDeathAnimSequence::CallFunc_ComposeRotators_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_SelectDeathAnimSequence, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000470, "Member 'ABP_EliteTank_TP_01_C_SelectDeathAnimSequence::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_SelectDeathAnimSequence, CallFunc_BreakRotator_Roll) == 0x00047C, "Member 'ABP_EliteTank_TP_01_C_SelectDeathAnimSequence::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_SelectDeathAnimSequence, CallFunc_BreakRotator_Pitch) == 0x000480, "Member 'ABP_EliteTank_TP_01_C_SelectDeathAnimSequence::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_SelectDeathAnimSequence, CallFunc_BreakRotator_Yaw) == 0x000484, "Member 'ABP_EliteTank_TP_01_C_SelectDeathAnimSequence::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_SelectDeathAnimSequence, CallFunc_Normal_ReturnValue) == 0x000488, "Member 'ABP_EliteTank_TP_01_C_SelectDeathAnimSequence::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_SelectDeathAnimSequence, CallFunc_MakeRotator_ReturnValue) == 0x000494, "Member 'ABP_EliteTank_TP_01_C_SelectDeathAnimSequence::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_SelectDeathAnimSequence, CallFunc_MakeRotFromX_ReturnValue) == 0x0004A0, "Member 'ABP_EliteTank_TP_01_C_SelectDeathAnimSequence::CallFunc_MakeRotFromX_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_SelectDeathAnimSequence, Temp_bool_Variable) == 0x0004AC, "Member 'ABP_EliteTank_TP_01_C_SelectDeathAnimSequence::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_SelectDeathAnimSequence, K2Node_Select_Default) == 0x0004B0, "Member 'ABP_EliteTank_TP_01_C_SelectDeathAnimSequence::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_SelectDeathAnimSequence, Temp_bool_Variable_1) == 0x0004BC, "Member 'ABP_EliteTank_TP_01_C_SelectDeathAnimSequence::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_SelectDeathAnimSequence, K2Node_Select_Default_1) == 0x0004C0, "Member 'ABP_EliteTank_TP_01_C_SelectDeathAnimSequence::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_SelectDeathAnimSequence, K2Node_Select_Default_2) == 0x0004D0, "Member 'ABP_EliteTank_TP_01_C_SelectDeathAnimSequence::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_SelectDeathAnimSequence, CallFunc_Array_Get_Item) == 0x0004E0, "Member 'ABP_EliteTank_TP_01_C_SelectDeathAnimSequence::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_SelectDeathAnimSequence, CallFunc_LessLess_VectorRotator_ReturnValue) == 0x0004E8, "Member 'ABP_EliteTank_TP_01_C_SelectDeathAnimSequence::CallFunc_LessLess_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_SelectDeathAnimSequence, CallFunc_Get4DirectionIndex_ReturnValue) == 0x0004F4, "Member 'ABP_EliteTank_TP_01_C_SelectDeathAnimSequence::CallFunc_Get4DirectionIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_SelectDeathAnimSequence, K2Node_Select_Default_3) == 0x0004F8, "Member 'ABP_EliteTank_TP_01_C_SelectDeathAnimSequence::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_SelectDeathAnimSequence, Temp_object_Variable_7) == 0x000508, "Member 'ABP_EliteTank_TP_01_C_SelectDeathAnimSequence::Temp_object_Variable_7' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_SelectDeathAnimSequence, CallFunc_Array_Get_Item_1) == 0x000518, "Member 'ABP_EliteTank_TP_01_C_SelectDeathAnimSequence::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_SelectDeathAnimSequence, Temp_byte_Variable_7) == 0x000520, "Member 'ABP_EliteTank_TP_01_C_SelectDeathAnimSequence::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_SelectDeathAnimSequence, Temp_object_Variable_8) == 0x000528, "Member 'ABP_EliteTank_TP_01_C_SelectDeathAnimSequence::Temp_object_Variable_8' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_SelectDeathAnimSequence, Temp_byte_Variable_8) == 0x000538, "Member 'ABP_EliteTank_TP_01_C_SelectDeathAnimSequence::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_SelectDeathAnimSequence, K2Node_Select_Default_4) == 0x000540, "Member 'ABP_EliteTank_TP_01_C_SelectDeathAnimSequence::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_SelectDeathAnimSequence, CallFunc_Array_Get_Item_2) == 0x000550, "Member 'ABP_EliteTank_TP_01_C_SelectDeathAnimSequence::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_SelectDeathAnimSequence, K2Node_Select_Default_5) == 0x000558, "Member 'ABP_EliteTank_TP_01_C_SelectDeathAnimSequence::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_SelectDeathAnimSequence, CallFunc_Array_Get_Item_3) == 0x000568, "Member 'ABP_EliteTank_TP_01_C_SelectDeathAnimSequence::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_SelectDeathAnimSequence, K2Node_Select_Default_6) == 0x000570, "Member 'ABP_EliteTank_TP_01_C_SelectDeathAnimSequence::K2Node_Select_Default_6' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_SelectDeathAnimSequence, CallFunc_Array_Get_Item_4) == 0x000580, "Member 'ABP_EliteTank_TP_01_C_SelectDeathAnimSequence::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_SelectDeathAnimSequence, Temp_object_Variable_9) == 0x000588, "Member 'ABP_EliteTank_TP_01_C_SelectDeathAnimSequence::Temp_object_Variable_9' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_SelectDeathAnimSequence, K2Node_Select_Default_7) == 0x000598, "Member 'ABP_EliteTank_TP_01_C_SelectDeathAnimSequence::K2Node_Select_Default_7' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_SelectDeathAnimSequence, CallFunc_Array_Get_Item_5) == 0x0005A8, "Member 'ABP_EliteTank_TP_01_C_SelectDeathAnimSequence::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_SelectDeathAnimSequence, K2Node_Select_Default_8) == 0x0005B0, "Member 'ABP_EliteTank_TP_01_C_SelectDeathAnimSequence::K2Node_Select_Default_8' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_SelectDeathAnimSequence, CallFunc_Array_Get_Item_6) == 0x0005C0, "Member 'ABP_EliteTank_TP_01_C_SelectDeathAnimSequence::CallFunc_Array_Get_Item_6' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_SelectDeathAnimSequence, Temp_byte_Variable_9) == 0x0005C8, "Member 'ABP_EliteTank_TP_01_C_SelectDeathAnimSequence::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_SelectDeathAnimSequence, K2Node_Select_Default_9) == 0x0005D0, "Member 'ABP_EliteTank_TP_01_C_SelectDeathAnimSequence::K2Node_Select_Default_9' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_SelectDeathAnimSequence, CallFunc_Array_Get_Item_7) == 0x0005E0, "Member 'ABP_EliteTank_TP_01_C_SelectDeathAnimSequence::CallFunc_Array_Get_Item_7' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_SelectDeathAnimSequence, K2Node_Select_Default_10) == 0x0005E8, "Member 'ABP_EliteTank_TP_01_C_SelectDeathAnimSequence::K2Node_Select_Default_10' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_SelectDeathAnimSequence, CallFunc_Array_Get_Item_8) == 0x0005F8, "Member 'ABP_EliteTank_TP_01_C_SelectDeathAnimSequence::CallFunc_Array_Get_Item_8' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_SelectDeathAnimSequence, CallFunc_IsValid_ReturnValue_1) == 0x000600, "Member 'ABP_EliteTank_TP_01_C_SelectDeathAnimSequence::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_SelectDeathAnimSequence, K2Node_Select_Default_11) == 0x000608, "Member 'ABP_EliteTank_TP_01_C_SelectDeathAnimSequence::K2Node_Select_Default_11' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_SelectDeathAnimSequence, CallFunc_Array_Get_Item_9) == 0x000618, "Member 'ABP_EliteTank_TP_01_C_SelectDeathAnimSequence::CallFunc_Array_Get_Item_9' has a wrong offset!");

// Function ABP_EliteTank_TP_01.ABP_EliteTank_TP_01_C.BlueprintUpdateAnimation
// 0x0004 (0x0004 - 0x0000)
struct ABP_EliteTank_TP_01_C_BlueprintUpdateAnimation final
{
public:
	float                                         DeltaTimeX;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_EliteTank_TP_01_C_BlueprintUpdateAnimation) == 0x000004, "Wrong alignment on ABP_EliteTank_TP_01_C_BlueprintUpdateAnimation");
static_assert(sizeof(ABP_EliteTank_TP_01_C_BlueprintUpdateAnimation) == 0x000004, "Wrong size on ABP_EliteTank_TP_01_C_BlueprintUpdateAnimation");
static_assert(offsetof(ABP_EliteTank_TP_01_C_BlueprintUpdateAnimation, DeltaTimeX) == 0x000000, "Member 'ABP_EliteTank_TP_01_C_BlueprintUpdateAnimation::DeltaTimeX' has a wrong offset!");

// Function ABP_EliteTank_TP_01.ABP_EliteTank_TP_01_C.OnDeath
// 0x0318 (0x0318 - 0x0000)
struct ABP_EliteTank_TP_01_C_OnDeath final
{
public:
	class ACACharacter*                           Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectSpec                    Death_gameplay_effect_spec;                        // 0x0008(0x0298)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	float                                         Damage_magnitude;                                  // 0x02A0(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A4[0x4];                                      // 0x02A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FNetworkedHit                          Networked_hit;                                     // 0x02A8(0x0068)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	const class AActor*                           Killer;                                            // 0x0310(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_EliteTank_TP_01_C_OnDeath) == 0x000008, "Wrong alignment on ABP_EliteTank_TP_01_C_OnDeath");
static_assert(sizeof(ABP_EliteTank_TP_01_C_OnDeath) == 0x000318, "Wrong size on ABP_EliteTank_TP_01_C_OnDeath");
static_assert(offsetof(ABP_EliteTank_TP_01_C_OnDeath, Character) == 0x000000, "Member 'ABP_EliteTank_TP_01_C_OnDeath::Character' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_OnDeath, Death_gameplay_effect_spec) == 0x000008, "Member 'ABP_EliteTank_TP_01_C_OnDeath::Death_gameplay_effect_spec' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_OnDeath, Damage_magnitude) == 0x0002A0, "Member 'ABP_EliteTank_TP_01_C_OnDeath::Damage_magnitude' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_OnDeath, Networked_hit) == 0x0002A8, "Member 'ABP_EliteTank_TP_01_C_OnDeath::Networked_hit' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_OnDeath, Killer) == 0x000310, "Member 'ABP_EliteTank_TP_01_C_OnDeath::Killer' has a wrong offset!");

// Function ABP_EliteTank_TP_01.ABP_EliteTank_TP_01_C.OnHitRecievedEvent
// 0x0068 (0x0068 - 0x0000)
struct ABP_EliteTank_TP_01_C_OnHitRecievedEvent final
{
public:
	struct FNetworkedHit                          Hit;                                               // 0x0000(0x0068)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(ABP_EliteTank_TP_01_C_OnHitRecievedEvent) == 0x000008, "Wrong alignment on ABP_EliteTank_TP_01_C_OnHitRecievedEvent");
static_assert(sizeof(ABP_EliteTank_TP_01_C_OnHitRecievedEvent) == 0x000068, "Wrong size on ABP_EliteTank_TP_01_C_OnHitRecievedEvent");
static_assert(offsetof(ABP_EliteTank_TP_01_C_OnHitRecievedEvent, Hit) == 0x000000, "Member 'ABP_EliteTank_TP_01_C_OnHitRecievedEvent::Hit' has a wrong offset!");

// Function ABP_EliteTank_TP_01.ABP_EliteTank_TP_01_C.OnLocalHitReceivedEvent
// 0x0068 (0x0068 - 0x0000)
struct ABP_EliteTank_TP_01_C_OnLocalHitReceivedEvent final
{
public:
	struct FNetworkedHit                          Hit;                                               // 0x0000(0x0068)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(ABP_EliteTank_TP_01_C_OnLocalHitReceivedEvent) == 0x000008, "Wrong alignment on ABP_EliteTank_TP_01_C_OnLocalHitReceivedEvent");
static_assert(sizeof(ABP_EliteTank_TP_01_C_OnLocalHitReceivedEvent) == 0x000068, "Wrong size on ABP_EliteTank_TP_01_C_OnLocalHitReceivedEvent");
static_assert(offsetof(ABP_EliteTank_TP_01_C_OnLocalHitReceivedEvent, Hit) == 0x000000, "Member 'ABP_EliteTank_TP_01_C_OnLocalHitReceivedEvent::Hit' has a wrong offset!");

// Function ABP_EliteTank_TP_01.ABP_EliteTank_TP_01_C.OnPoolStateChanged
// 0x0001 (0x0001 - 0x0000)
struct ABP_EliteTank_TP_01_C_OnPoolStateChanged final
{
public:
	bool                                          Is_in_pool;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ABP_EliteTank_TP_01_C_OnPoolStateChanged) == 0x000001, "Wrong alignment on ABP_EliteTank_TP_01_C_OnPoolStateChanged");
static_assert(sizeof(ABP_EliteTank_TP_01_C_OnPoolStateChanged) == 0x000001, "Wrong size on ABP_EliteTank_TP_01_C_OnPoolStateChanged");
static_assert(offsetof(ABP_EliteTank_TP_01_C_OnPoolStateChanged, Is_in_pool) == 0x000000, "Member 'ABP_EliteTank_TP_01_C_OnPoolStateChanged::Is_in_pool' has a wrong offset!");

// Function ABP_EliteTank_TP_01.ABP_EliteTank_TP_01_C.OnMovementModeChanged
// 0x0010 (0x0010 - 0x0000)
struct ABP_EliteTank_TP_01_C_OnMovementModeChanged final
{
public:
	class ACharacter*                             Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMovementMode                                 PrevMovementMode;                                  // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         PreviousCustomMode;                                // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_EliteTank_TP_01_C_OnMovementModeChanged) == 0x000008, "Wrong alignment on ABP_EliteTank_TP_01_C_OnMovementModeChanged");
static_assert(sizeof(ABP_EliteTank_TP_01_C_OnMovementModeChanged) == 0x000010, "Wrong size on ABP_EliteTank_TP_01_C_OnMovementModeChanged");
static_assert(offsetof(ABP_EliteTank_TP_01_C_OnMovementModeChanged, Character) == 0x000000, "Member 'ABP_EliteTank_TP_01_C_OnMovementModeChanged::Character' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_OnMovementModeChanged, PrevMovementMode) == 0x000008, "Member 'ABP_EliteTank_TP_01_C_OnMovementModeChanged::PrevMovementMode' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_OnMovementModeChanged, PreviousCustomMode) == 0x000009, "Member 'ABP_EliteTank_TP_01_C_OnMovementModeChanged::PreviousCustomMode' has a wrong offset!");

// Function ABP_EliteTank_TP_01.ABP_EliteTank_TP_01_C.ExecuteUbergraph_ABP_EliteTank_TP_01
// 0x0A10 (0x0A10 - 0x0000)
struct ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01 final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECAAwarenessState                             CallFunc_GetAwarenessState_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0008(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue;          // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Vector_Distance_ReturnValue;              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_LessLess_VectorRotator_ReturnValue;       // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotFromX_ReturnValue;                 // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACACharacter*                           K2Node_CustomEvent_character_1;                    // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectSpec                    K2Node_CustomEvent_death_gameplay_effect_spec;     // 0x0050(0x0298)(ConstParm)
	float                                         K2Node_CustomEvent_damage_magnitude;               // 0x02E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2EC[0x4];                                      // 0x02EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FNetworkedHit                          K2Node_CustomEvent_networked_hit;                  // 0x02F0(0x0068)(ConstParm, NoDestructor)
	const class AActor*                           K2Node_CustomEvent_killer;                         // 0x0358(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0360(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_361[0x3];                                      // 0x0361(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X;                            // 0x0364(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0368(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x036C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0370(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37C[0x4];                                      // 0x037C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPawnMovementComponent*                 CallFunc_GetMovementComponent_ReturnValue;         // 0x0380(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNearestVectorIndex_ReturnValue;        // 0x0388(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38C[0x4];                                      // 0x038C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCACharacterMovementComponent*          K2Node_DynamicCast_AsCACharacter_Movement_Component; // 0x0390(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0398(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0399(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39A[0x2];                                      // 0x039A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetPredictedCurrentVelocity_ReturnValue;  // 0x039C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_LessLess_VectorRotator_ReturnValue_1;     // 0x03A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B4[0x4];                                      // 0x03B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FNetworkedHit                          K2Node_CustomEvent_hit_1;                          // 0x03B8(0x0068)(ConstParm, NoDestructor)
	float                                         CallFunc_GetRelevantAnimTime_ReturnValue;          // 0x0420(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_1;    // 0x0424(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_425[0x3];                                      // 0x0425(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FNetworkedHit                          K2Node_CustomEvent_hit;                            // 0x0428(0x0068)(ConstParm, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0490(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_491[0x7];                                      // 0x0491(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_GetOwningComponent_ReturnValue;           // 0x0498(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasGameplayTag_ReturnValue;               // 0x04A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x04A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x04A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A3[0x5];                                      // 0x04A3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue;              // 0x04A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x04B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4B1[0x7];                                      // 0x04B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACACharacter_NPC*                       K2Node_DynamicCast_AsCACharacter_NPC;              // 0x04B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x04C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4C1[0x3];                                      // 0x04C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetInstanceAssetPlayerTimeFromEndFraction_ReturnValue; // 0x04C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x04C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4C9[0x7];                                      // 0x04C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwningActor_ReturnValue;               // 0x04D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_NPC_EliteTank_C*                    K2Node_DynamicCast_AsBP_NPC_Elite_Tank;            // 0x04D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x04E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4E1[0x3];                                      // 0x04E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x04E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetTPLocation_ReturnValue;                // 0x04F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x04FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0500(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0504(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_GetOwningComponent_ReturnValue_1;         // 0x0508(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetTPCapsuleBottom_ReturnValue;           // 0x0510(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51C[0x4];                                      // 0x051C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue;           // 0x0520(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0550(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0580(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0581(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_582[0x2];                                      // 0x0582(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0584(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0588(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x058C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0598(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x05A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x05B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5BC[0x4];                                      // 0x05BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x05C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x05C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x05D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x05D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x05E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x05E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x05EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x05F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x05FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0608(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_609[0x3];                                      // 0x0609(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X_2;                          // 0x060C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x0610(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x0614(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0618(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_619[0x3];                                      // 0x0619(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x061C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_3;                          // 0x0620(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_3;                          // 0x0624(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_3;                          // 0x0628(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x062C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetTPRotation_ReturnValue;                // 0x0638(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0644(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0648(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x064C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0650(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetTPLocation_ReturnValue_1;              // 0x0654(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_4;                          // 0x0660(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_4;                          // 0x0664(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_4;                          // 0x0668(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x066C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNearestVectorIndex_ReturnValue_1;      // 0x0678(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetCapsuleBottom_ReturnValue;             // 0x067C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLastGoalLocation_ReturnValue;          // 0x0688(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Vector_Distance2D_ReturnValue;            // 0x0694(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInNPCSpawnPool_ReturnValue;             // 0x0698(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0699(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsInAudibleRange_ReturnValue;             // 0x069A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_WasRecentlyRendered_ReturnValue;          // 0x069B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x069C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x069D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69E[0x2];                                      // 0x069E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurveValue_ReturnValue;                // 0x06A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_2;    // 0x06A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x06A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6A6[0x2];                                      // 0x06A6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurveValue_ReturnValue_1;              // 0x06A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValue_ReturnValue_2;              // 0x06AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x06B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue;                         // 0x06B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x06B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_1;            // 0x06BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6BD[0x3];                                      // 0x06BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue_3;                 // 0x06C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x06CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x06D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x06D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6D2[0x2];                                      // 0x06D2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SignedAngleDifference_ReturnValue;        // 0x06D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x06D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x06E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x06F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x06FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromZX_ReturnValue;                // 0x0708(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_is_in_pool;                     // 0x0714(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_715[0x3];                                      // 0x0715(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_InverseTransformRotation_ReturnValue;     // 0x0718(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_724[0xC];                                      // 0x0724(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x0730(0x0030)(IsPlainOldData, NoDestructor)
	class USkeletalMeshComponent*                 CallFunc_GetOwningComponent_ReturnValue_2;         // 0x0760(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_4;                 // 0x0768(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Vector_IsNearlyZero_ReturnValue;          // 0x0774(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_5;                // 0x0775(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_776[0x2];                                      // 0x0776(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwningActor_ReturnValue_1;             // 0x0778(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACACharacter_NPC*                       K2Node_DynamicCast_AsCACharacter_NPC_1;            // 0x0780(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0788(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0789(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x078A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x078B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TDelegate<void(class ACharacter* Character, EMovementMode PrevMovementMode, uint8 PreviousCustomMode)> K2Node_CreateDelegate_OutputDelegate;              // 0x078C(0x0014)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_6;                // 0x07A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_7;                // 0x07A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_6;                 // 0x07A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7A3[0x1];                                      // 0x07A3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x07A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x07A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x07AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7AD[0x3];                                      // 0x07AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x07B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7B4[0x4];                                      // 0x07B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             K2Node_CustomEvent_Character;                      // 0x07B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMovementMode                                 K2Node_CustomEvent_PrevMovementMode;               // 0x07C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         K2Node_CustomEvent_PreviousCustomMode;             // 0x07C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_5;                  // 0x07C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x07C3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_SelectFloat_ReturnValue_1;                // 0x07C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetInstanceStateWeight_ReturnValue;       // 0x07C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_3;    // 0x07CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EMovementMode                                 CallFunc_GetMovementMode_ReturnValue;              // 0x07CD(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x07CE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_7;                 // 0x07CF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_6;                  // 0x07D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D1[0x3];                                      // 0x07D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetInstanceAssetPlayerTimeFromEndFraction_ReturnValue_1; // 0x07D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_8;                 // 0x07D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_2;            // 0x07D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7DA[0x2];                                      // 0x07DA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRelevantAnimTimeFraction_ReturnValue;  // 0x07DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_4;    // 0x07E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E1[0x3];                                      // 0x07E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(bool Is_in_pool)>              K2Node_CreateDelegate_OutputDelegate_1;            // 0x07E4(0x0014)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_1;          // 0x07F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_5;    // 0x07F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7FA[0x2];                                      // 0x07FA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetServerTimeSeconds_ReturnValue;         // 0x07FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_5;                          // 0x0800(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_5;                          // 0x0804(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_5;                          // 0x0808(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_5;                 // 0x080C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNearestVectorIndex_ReturnValue_2;      // 0x0818(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_7;                  // 0x081C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_8;                  // 0x081D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_8;                // 0x081E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81F[0x1];                                      // 0x081F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurveValue_ReturnValue_3;              // 0x0820(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAIHeading_ReturnValue;                 // 0x0824(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0828(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_82C[0x4];                                      // 0x082C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwningActor_ReturnValue_2;             // 0x0830(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAIHeading_ReturnValue_1;               // 0x0838(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_83C[0x4];                                      // 0x083C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACACharacter*                           K2Node_DynamicCast_AsCACharacter;                  // 0x0840(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0848(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_849[0x3];                                      // 0x0849(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x084C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x0858(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x085C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x0860(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaTimeX;                           // 0x0864(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_9;                // 0x0868(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_869[0x3];                                      // 0x0869(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(struct FNetworkedHit& Hit)>    K2Node_CreateDelegate_OutputDelegate_2;            // 0x086C(0x0014)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_10;               // 0x0880(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_9;                  // 0x0881(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_10;                 // 0x0882(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_9;                 // 0x0883(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_SignedAngleDifference_ReturnValue_1;      // 0x0884(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_2;                // 0x0888(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FInterpTo_Constant_ReturnValue;           // 0x088C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetCapsuleBottom_ReturnValue_1;           // 0x0890(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLastGoalLocation_ReturnValue_1;        // 0x089C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Vector_Distance2D_ReturnValue_1;          // 0x08A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_11;               // 0x08AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8AD[0x3];                                      // 0x08AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(struct FNetworkedHit& Hit)>    K2Node_CreateDelegate_OutputDelegate_3;            // 0x08B0(0x0014)(ZeroConstructor, NoDestructor)
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue;             // 0x08C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_12;               // 0x08C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_10;                // 0x08C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_11;                // 0x08CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_11;                 // 0x08CB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_12;                // 0x08CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8CD[0x3];                                      // 0x08CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMarkerSyncAnimPosition                CallFunc_GetSyncGroupPosition_ReturnValue;         // 0x08D0(0x001C)(NoDestructor)
	float                                         CallFunc_GetInstanceStateWeight_ReturnValue_1;     // 0x08EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetSyncGroupNextMarkerName_ReturnValue;   // 0x08F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_6;    // 0x08FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x08FD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_13;                // 0x08FE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8FF[0x1];                                      // 0x08FF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue_3;                // 0x0900(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetSyncGroupPhase_ReturnValue;            // 0x0904(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0908(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x090C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_4;                // 0x0910(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_1;       // 0x0914(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_915[0x3];                                      // 0x0915(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x0918(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetYawPitchFromVector_Yaw;                // 0x0924(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetYawPitchFromVector_Pitch;              // 0x0928(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_5;                // 0x092C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_13;               // 0x0930(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_931[0x3];                                      // 0x0931(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue_6;                // 0x0934(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_14;                // 0x0938(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_939[0x3];                                      // 0x0939(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRelevantAnimTime_ReturnValue_1;        // 0x093C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_7;    // 0x0940(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_14;               // 0x0941(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_942[0x2];                                      // 0x0942(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRelevantAnimTime_ReturnValue_2;        // 0x0944(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_15;               // 0x0948(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_8;    // 0x0949(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_15;                // 0x094A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_16;               // 0x094B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_12;                 // 0x094C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_94D[0x3];                                      // 0x094D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue_6;                 // 0x0950(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Vector_HeadingAngle_ReturnValue;          // 0x095C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_LessLess_VectorRotator_ReturnValue_2;     // 0x0960(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RadiansToDegrees_ReturnValue;             // 0x096C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SignedAngleDifference_ReturnValue_2;      // 0x0970(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SignedAngleDifference_ReturnValue_3;      // 0x0974(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue_1;                        // 0x0978(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x097C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_97D[0x3];                                      // 0x097D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x0980(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0984(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x0985(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_16;                // 0x0986(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_17;                // 0x0987(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_SignedAngleDifference_ReturnValue_4;      // 0x0988(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class ACACharacter* Character, struct FGameplayEffectSpec& Death_gameplay_effect_spec, float Damage_magnitude, struct FNetworkedHit& Networked_hit, class AActor* Killer)> K2Node_CreateDelegate_OutputDelegate_4;            // 0x098C(0x0014)(ZeroConstructor, NoDestructor)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x09A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_4;        // 0x09A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue_2;                        // 0x09A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FInterpTo_Constant_ReturnValue_1;         // 0x09AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_ClampAngle_ReturnValue;                   // 0x09B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_2;             // 0x09B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_NormalizeAxis_ReturnValue;                // 0x09B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Get_Death_Anim_Yaw_Offset_Yaw;            // 0x09BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_2;                // 0x09C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_17;               // 0x09CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9CD[0x3];                                      // 0x09CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRelevantAnimTimeFraction_ReturnValue_1; // 0x09D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_9;    // 0x09D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_18;                // 0x09D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_19;                // 0x09D6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9D7[0x1];                                      // 0x09D7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRelevantAnimTimeFraction_ReturnValue_2; // 0x09D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_10;   // 0x09DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_20;                // 0x09DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_21;                // 0x09DE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_13;                 // 0x09DF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_14;                 // 0x09E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_18;               // 0x09E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9E2[0x2];                                      // 0x09E2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x09E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x09F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x09FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_22;                // 0x0A08(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01) == 0x000010, "Wrong alignment on ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01");
static_assert(sizeof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01) == 0x000A10, "Wrong size on ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, EntryPoint) == 0x000000, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::EntryPoint' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_GetAwarenessState_ReturnValue) == 0x000004, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_GetAwarenessState_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000005, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000006, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_Not_PreBool_ReturnValue) == 0x000007, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_MakeRotator_ReturnValue) == 0x000008, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000014, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_NotEqual_FloatFloat_ReturnValue) == 0x000015, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_NotEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_BooleanAND_ReturnValue) == 0x000016, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000017, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000018, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_Vector_Distance_ReturnValue) == 0x000024, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_LessLess_VectorRotator_ReturnValue) == 0x000028, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_LessLess_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000034, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_MakeRotFromX_ReturnValue) == 0x000038, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_MakeRotFromX_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, K2Node_CustomEvent_character_1) == 0x000048, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::K2Node_CustomEvent_character_1' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, K2Node_CustomEvent_death_gameplay_effect_spec) == 0x000050, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::K2Node_CustomEvent_death_gameplay_effect_spec' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, K2Node_CustomEvent_damage_magnitude) == 0x0002E8, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::K2Node_CustomEvent_damage_magnitude' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, K2Node_CustomEvent_networked_hit) == 0x0002F0, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::K2Node_CustomEvent_networked_hit' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, K2Node_CustomEvent_killer) == 0x000358, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::K2Node_CustomEvent_killer' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_IsDedicatedServer_ReturnValue) == 0x000360, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_BreakVector_X) == 0x000364, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_BreakVector_Y) == 0x000368, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_BreakVector_Z) == 0x00036C, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_MakeVector_ReturnValue) == 0x000370, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_GetMovementComponent_ReturnValue) == 0x000380, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_GetMovementComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_GetNearestVectorIndex_ReturnValue) == 0x000388, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_GetNearestVectorIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, K2Node_DynamicCast_AsCACharacter_Movement_Component) == 0x000390, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::K2Node_DynamicCast_AsCACharacter_Movement_Component' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, K2Node_DynamicCast_bSuccess) == 0x000398, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_HasAuthority_ReturnValue) == 0x000399, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_GetPredictedCurrentVelocity_ReturnValue) == 0x00039C, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_GetPredictedCurrentVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_LessLess_VectorRotator_ReturnValue_1) == 0x0003A8, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_LessLess_VectorRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, K2Node_CustomEvent_hit_1) == 0x0003B8, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::K2Node_CustomEvent_hit_1' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_GetRelevantAnimTime_ReturnValue) == 0x000420, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_GetRelevantAnimTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_GreaterEqual_FloatFloat_ReturnValue_1) == 0x000424, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_GreaterEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, K2Node_CustomEvent_hit) == 0x000428, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::K2Node_CustomEvent_hit' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_BooleanAND_ReturnValue_1) == 0x000490, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_GetOwningComponent_ReturnValue) == 0x000498, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_GetOwningComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_HasGameplayTag_ReturnValue) == 0x0004A0, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_HasGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_Not_PreBool_ReturnValue_1) == 0x0004A1, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_BooleanAND_ReturnValue_2) == 0x0004A2, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_TryGetPawnOwner_ReturnValue) == 0x0004A8, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_TryGetPawnOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_IsValid_ReturnValue) == 0x0004B0, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, K2Node_DynamicCast_AsCACharacter_NPC) == 0x0004B8, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::K2Node_DynamicCast_AsCACharacter_NPC' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, K2Node_DynamicCast_bSuccess_1) == 0x0004C0, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_GetInstanceAssetPlayerTimeFromEndFraction_ReturnValue) == 0x0004C4, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_GetInstanceAssetPlayerTimeFromEndFraction_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_Less_FloatFloat_ReturnValue) == 0x0004C8, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_GetOwningActor_ReturnValue) == 0x0004D0, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_GetOwningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, K2Node_DynamicCast_AsBP_NPC_Elite_Tank) == 0x0004D8, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::K2Node_DynamicCast_AsBP_NPC_Elite_Tank' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, K2Node_DynamicCast_bSuccess_2) == 0x0004E0, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_MakeRotator_ReturnValue_1) == 0x0004E4, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_GetTPLocation_ReturnValue) == 0x0004F0, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_GetTPLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_BreakVector_X_1) == 0x0004FC, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_BreakVector_Y_1) == 0x000500, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_BreakVector_Z_1) == 0x000504, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_GetOwningComponent_ReturnValue_1) == 0x000508, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_GetOwningComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_GetTPCapsuleBottom_ReturnValue) == 0x000510, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_GetTPCapsuleBottom_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_GetSocketTransform_ReturnValue) == 0x000520, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_GetSocketTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_MakeTransform_ReturnValue) == 0x000550, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_BreakHitResult_bBlockingHit) == 0x000580, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_BreakHitResult_bInitialOverlap) == 0x000581, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_BreakHitResult_Time) == 0x000584, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_BreakHitResult_Distance) == 0x000588, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_BreakHitResult_Location) == 0x00058C, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_BreakHitResult_ImpactPoint) == 0x000598, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_BreakHitResult_Normal) == 0x0005A4, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_BreakHitResult_ImpactNormal) == 0x0005B0, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_BreakHitResult_PhysMat) == 0x0005C0, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_BreakHitResult_HitActor) == 0x0005C8, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_BreakHitResult_HitComponent) == 0x0005D0, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_BreakHitResult_HitBoneName) == 0x0005D8, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_BreakHitResult_HitItem) == 0x0005E4, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_BreakHitResult_ElementIndex) == 0x0005E8, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_BreakHitResult_FaceIndex) == 0x0005EC, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_BreakHitResult_TraceStart) == 0x0005F0, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_BreakHitResult_TraceEnd) == 0x0005FC, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_Not_PreBool_ReturnValue_2) == 0x000608, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_BreakVector_X_2) == 0x00060C, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_BreakVector_Y_2) == 0x000610, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_BreakVector_Z_2) == 0x000614, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_BooleanAND_ReturnValue_3) == 0x000618, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_MapRangeClamped_ReturnValue) == 0x00061C, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_BreakVector_X_3) == 0x000620, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_BreakVector_Y_3) == 0x000624, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_BreakVector_Z_3) == 0x000628, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_MakeVector_ReturnValue_1) == 0x00062C, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_GetTPRotation_ReturnValue) == 0x000638, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_GetTPRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000644, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_BreakRotator_Roll) == 0x000648, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_BreakRotator_Pitch) == 0x00064C, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_BreakRotator_Yaw) == 0x000650, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_GetTPLocation_ReturnValue_1) == 0x000654, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_GetTPLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_BreakVector_X_4) == 0x000660, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_BreakVector_X_4' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_BreakVector_Y_4) == 0x000664, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_BreakVector_Y_4' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_BreakVector_Z_4) == 0x000668, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_BreakVector_Z_4' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_MakeVector_ReturnValue_2) == 0x00066C, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_GetNearestVectorIndex_ReturnValue_1) == 0x000678, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_GetNearestVectorIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_GetCapsuleBottom_ReturnValue) == 0x00067C, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_GetCapsuleBottom_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_GetLastGoalLocation_ReturnValue) == 0x000688, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_GetLastGoalLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_Vector_Distance2D_ReturnValue) == 0x000694, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_Vector_Distance2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_IsInNPCSpawnPool_ReturnValue) == 0x000698, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_IsInNPCSpawnPool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_Not_PreBool_ReturnValue_3) == 0x000699, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_IsInAudibleRange_ReturnValue) == 0x00069A, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_IsInAudibleRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_WasRecentlyRendered_ReturnValue) == 0x00069B, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_WasRecentlyRendered_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_BooleanOR_ReturnValue) == 0x00069C, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_BooleanAND_ReturnValue_4) == 0x00069D, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_GetCurveValue_ReturnValue) == 0x0006A0, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_GetCurveValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_GreaterEqual_FloatFloat_ReturnValue_2) == 0x0006A4, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_GreaterEqual_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x0006A5, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_GetCurveValue_ReturnValue_1) == 0x0006A8, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_GetCurveValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_GetCurveValue_ReturnValue_2) == 0x0006AC, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_GetCurveValue_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_Lerp_ReturnValue) == 0x0006B0, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_FMin_ReturnValue) == 0x0006B4, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_FMax_ReturnValue) == 0x0006B8, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_Less_FloatFloat_ReturnValue_1) == 0x0006BC, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_Less_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_MakeVector_ReturnValue_3) == 0x0006C0, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_MakeVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_Abs_ReturnValue) == 0x0006CC, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_Not_PreBool_ReturnValue_4) == 0x0006D0, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_BooleanAND_ReturnValue_5) == 0x0006D1, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_SignedAngleDifference_ReturnValue) == 0x0006D4, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_SignedAngleDifference_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_BreakTransform_Location) == 0x0006D8, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_BreakTransform_Rotation) == 0x0006E4, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_BreakTransform_Scale) == 0x0006F0, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_GetForwardVector_ReturnValue) == 0x0006FC, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_MakeRotFromZX_ReturnValue) == 0x000708, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_MakeRotFromZX_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, K2Node_CustomEvent_is_in_pool) == 0x000714, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::K2Node_CustomEvent_is_in_pool' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_InverseTransformRotation_ReturnValue) == 0x000718, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_InverseTransformRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_MakeTransform_ReturnValue_1) == 0x000730, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_GetOwningComponent_ReturnValue_2) == 0x000760, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_GetOwningComponent_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_MakeVector_ReturnValue_4) == 0x000768, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_MakeVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_Vector_IsNearlyZero_ReturnValue) == 0x000774, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_Vector_IsNearlyZero_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_Not_PreBool_ReturnValue_5) == 0x000775, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_Not_PreBool_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_GetOwningActor_ReturnValue_1) == 0x000778, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_GetOwningActor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, K2Node_DynamicCast_AsCACharacter_NPC_1) == 0x000780, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::K2Node_DynamicCast_AsCACharacter_NPC_1' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, K2Node_DynamicCast_bSuccess_3) == 0x000788, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_BooleanOR_ReturnValue_1) == 0x000789, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_BooleanOR_ReturnValue_2) == 0x00078A, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_BooleanOR_ReturnValue_3) == 0x00078B, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, K2Node_CreateDelegate_OutputDelegate) == 0x00078C, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_Not_PreBool_ReturnValue_6) == 0x0007A0, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_Not_PreBool_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_Not_PreBool_ReturnValue_7) == 0x0007A1, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_Not_PreBool_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_BooleanAND_ReturnValue_6) == 0x0007A2, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_BooleanAND_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x0007A4, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_Add_FloatFloat_ReturnValue) == 0x0007A8, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_BooleanOR_ReturnValue_4) == 0x0007AC, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_SelectFloat_ReturnValue) == 0x0007B0, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, K2Node_CustomEvent_Character) == 0x0007B8, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::K2Node_CustomEvent_Character' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, K2Node_CustomEvent_PrevMovementMode) == 0x0007C0, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::K2Node_CustomEvent_PrevMovementMode' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, K2Node_CustomEvent_PreviousCustomMode) == 0x0007C1, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::K2Node_CustomEvent_PreviousCustomMode' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_BooleanOR_ReturnValue_5) == 0x0007C2, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_BooleanOR_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x0007C3, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_SelectFloat_ReturnValue_1) == 0x0007C4, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_GetInstanceStateWeight_ReturnValue) == 0x0007C8, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_GetInstanceStateWeight_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_GreaterEqual_FloatFloat_ReturnValue_3) == 0x0007CC, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_GreaterEqual_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_GetMovementMode_ReturnValue) == 0x0007CD, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_GetMovementMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x0007CE, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_BooleanAND_ReturnValue_7) == 0x0007CF, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_BooleanAND_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_BooleanOR_ReturnValue_6) == 0x0007D0, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_BooleanOR_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_GetInstanceAssetPlayerTimeFromEndFraction_ReturnValue_1) == 0x0007D4, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_GetInstanceAssetPlayerTimeFromEndFraction_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_BooleanAND_ReturnValue_8) == 0x0007D8, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_BooleanAND_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_Less_FloatFloat_ReturnValue_2) == 0x0007D9, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_Less_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_GetRelevantAnimTimeFraction_ReturnValue) == 0x0007DC, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_GetRelevantAnimTimeFraction_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_GreaterEqual_FloatFloat_ReturnValue_4) == 0x0007E0, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_GreaterEqual_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, K2Node_CreateDelegate_OutputDelegate_1) == 0x0007E4, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_IsDedicatedServer_ReturnValue_1) == 0x0007F8, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_IsDedicatedServer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_GreaterEqual_FloatFloat_ReturnValue_5) == 0x0007F9, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_GreaterEqual_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_GetServerTimeSeconds_ReturnValue) == 0x0007FC, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_GetServerTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_BreakVector_X_5) == 0x000800, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_BreakVector_X_5' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_BreakVector_Y_5) == 0x000804, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_BreakVector_Y_5' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_BreakVector_Z_5) == 0x000808, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_BreakVector_Z_5' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_MakeVector_ReturnValue_5) == 0x00080C, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_MakeVector_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_GetNearestVectorIndex_ReturnValue_2) == 0x000818, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_GetNearestVectorIndex_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_BooleanOR_ReturnValue_7) == 0x00081C, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_BooleanOR_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_BooleanOR_ReturnValue_8) == 0x00081D, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_BooleanOR_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_Not_PreBool_ReturnValue_8) == 0x00081E, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_Not_PreBool_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_GetCurveValue_ReturnValue_3) == 0x000820, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_GetCurveValue_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_GetAIHeading_ReturnValue) == 0x000824, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_GetAIHeading_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000828, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_GetOwningActor_ReturnValue_2) == 0x000830, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_GetOwningActor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_GetAIHeading_ReturnValue_1) == 0x000838, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_GetAIHeading_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, K2Node_DynamicCast_AsCACharacter) == 0x000840, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::K2Node_DynamicCast_AsCACharacter' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, K2Node_DynamicCast_bSuccess_4) == 0x000848, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x00084C, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_BreakRotator_Roll_1) == 0x000858, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_BreakRotator_Pitch_1) == 0x00085C, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_BreakRotator_Yaw_1) == 0x000860, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, K2Node_Event_DeltaTimeX) == 0x000864, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::K2Node_Event_DeltaTimeX' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_Not_PreBool_ReturnValue_9) == 0x000868, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_Not_PreBool_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, K2Node_CreateDelegate_OutputDelegate_2) == 0x00086C, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_Not_PreBool_ReturnValue_10) == 0x000880, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_Not_PreBool_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_BooleanOR_ReturnValue_9) == 0x000881, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_BooleanOR_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_BooleanOR_ReturnValue_10) == 0x000882, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_BooleanOR_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_BooleanAND_ReturnValue_9) == 0x000883, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_BooleanAND_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_SignedAngleDifference_ReturnValue_1) == 0x000884, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_SignedAngleDifference_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_SelectFloat_ReturnValue_2) == 0x000888, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_FInterpTo_Constant_ReturnValue) == 0x00088C, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_FInterpTo_Constant_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_GetCapsuleBottom_ReturnValue_1) == 0x000890, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_GetCapsuleBottom_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_GetLastGoalLocation_ReturnValue_1) == 0x00089C, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_GetLastGoalLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_Vector_Distance2D_ReturnValue_1) == 0x0008A8, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_Vector_Distance2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_Not_PreBool_ReturnValue_11) == 0x0008AC, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_Not_PreBool_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, K2Node_CreateDelegate_OutputDelegate_3) == 0x0008B0, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_Conv_BoolToFloat_ReturnValue) == 0x0008C4, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_Conv_BoolToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_Not_PreBool_ReturnValue_12) == 0x0008C8, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_Not_PreBool_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_BooleanAND_ReturnValue_10) == 0x0008C9, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_BooleanAND_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_BooleanAND_ReturnValue_11) == 0x0008CA, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_BooleanAND_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_BooleanOR_ReturnValue_11) == 0x0008CB, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_BooleanOR_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_BooleanAND_ReturnValue_12) == 0x0008CC, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_BooleanAND_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_GetSyncGroupPosition_ReturnValue) == 0x0008D0, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_GetSyncGroupPosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_GetInstanceStateWeight_ReturnValue_1) == 0x0008EC, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_GetInstanceStateWeight_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_GetSyncGroupNextMarkerName_ReturnValue) == 0x0008F0, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_GetSyncGroupNextMarkerName_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_GreaterEqual_FloatFloat_ReturnValue_6) == 0x0008FC, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_GreaterEqual_FloatFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_NotEqual_NameName_ReturnValue) == 0x0008FD, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_BooleanAND_ReturnValue_13) == 0x0008FE, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_BooleanAND_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_SelectFloat_ReturnValue_3) == 0x000900, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_SelectFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_GetSyncGroupPhase_ReturnValue) == 0x000904, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_GetSyncGroupPhase_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000908, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x00090C, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_SelectFloat_ReturnValue_4) == 0x000910, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_SelectFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_LessEqual_FloatFloat_ReturnValue_1) == 0x000914, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_LessEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x000918, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_GetYawPitchFromVector_Yaw) == 0x000924, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_GetYawPitchFromVector_Yaw' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_GetYawPitchFromVector_Pitch) == 0x000928, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_GetYawPitchFromVector_Pitch' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_SelectFloat_ReturnValue_5) == 0x00092C, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_SelectFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_Not_PreBool_ReturnValue_13) == 0x000930, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_Not_PreBool_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_SelectFloat_ReturnValue_6) == 0x000934, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_SelectFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_BooleanAND_ReturnValue_14) == 0x000938, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_BooleanAND_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_GetRelevantAnimTime_ReturnValue_1) == 0x00093C, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_GetRelevantAnimTime_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_GreaterEqual_FloatFloat_ReturnValue_7) == 0x000940, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_GreaterEqual_FloatFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_Not_PreBool_ReturnValue_14) == 0x000941, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_Not_PreBool_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_GetRelevantAnimTime_ReturnValue_2) == 0x000944, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_GetRelevantAnimTime_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_Not_PreBool_ReturnValue_15) == 0x000948, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_Not_PreBool_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_GreaterEqual_FloatFloat_ReturnValue_8) == 0x000949, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_GreaterEqual_FloatFloat_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_BooleanAND_ReturnValue_15) == 0x00094A, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_BooleanAND_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_Not_PreBool_ReturnValue_16) == 0x00094B, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_Not_PreBool_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_BooleanOR_ReturnValue_12) == 0x00094C, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_BooleanOR_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_MakeVector_ReturnValue_6) == 0x000950, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_MakeVector_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_Vector_HeadingAngle_ReturnValue) == 0x00095C, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_Vector_HeadingAngle_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_LessLess_VectorRotator_ReturnValue_2) == 0x000960, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_LessLess_VectorRotator_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_RadiansToDegrees_ReturnValue) == 0x00096C, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_RadiansToDegrees_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_SignedAngleDifference_ReturnValue_2) == 0x000970, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_SignedAngleDifference_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_SignedAngleDifference_ReturnValue_3) == 0x000974, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_SignedAngleDifference_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_Abs_ReturnValue_1) == 0x000978, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_Abs_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00097C, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x000980, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000984, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x000985, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_BooleanAND_ReturnValue_16) == 0x000986, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_BooleanAND_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_BooleanAND_ReturnValue_17) == 0x000987, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_BooleanAND_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_SignedAngleDifference_ReturnValue_4) == 0x000988, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_SignedAngleDifference_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, K2Node_CreateDelegate_OutputDelegate_4) == 0x00098C, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_FClamp_ReturnValue) == 0x0009A0, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_Multiply_FloatFloat_ReturnValue_4) == 0x0009A4, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_Multiply_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_Abs_ReturnValue_2) == 0x0009A8, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_Abs_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_FInterpTo_Constant_ReturnValue_1) == 0x0009AC, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_FInterpTo_Constant_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_ClampAngle_ReturnValue) == 0x0009B0, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_ClampAngle_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_Add_FloatFloat_ReturnValue_2) == 0x0009B4, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_Add_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_NormalizeAxis_ReturnValue) == 0x0009B8, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_NormalizeAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_Get_Death_Anim_Yaw_Offset_Yaw) == 0x0009BC, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_Get_Death_Anim_Yaw_Offset_Yaw' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_MakeRotator_ReturnValue_2) == 0x0009C0, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_MakeRotator_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_Not_PreBool_ReturnValue_17) == 0x0009CC, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_Not_PreBool_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_GetRelevantAnimTimeFraction_ReturnValue_1) == 0x0009D0, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_GetRelevantAnimTimeFraction_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_GreaterEqual_FloatFloat_ReturnValue_9) == 0x0009D4, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_GreaterEqual_FloatFloat_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_BooleanAND_ReturnValue_18) == 0x0009D5, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_BooleanAND_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_BooleanAND_ReturnValue_19) == 0x0009D6, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_BooleanAND_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_GetRelevantAnimTimeFraction_ReturnValue_2) == 0x0009D8, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_GetRelevantAnimTimeFraction_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_GreaterEqual_FloatFloat_ReturnValue_10) == 0x0009DC, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_GreaterEqual_FloatFloat_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_BooleanAND_ReturnValue_20) == 0x0009DD, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_BooleanAND_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_BooleanAND_ReturnValue_21) == 0x0009DE, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_BooleanAND_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_BooleanOR_ReturnValue_13) == 0x0009DF, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_BooleanOR_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_BooleanOR_ReturnValue_14) == 0x0009E0, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_BooleanOR_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_Not_PreBool_ReturnValue_18) == 0x0009E1, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_Not_PreBool_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_BreakTransform_Location_1) == 0x0009E4, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_BreakTransform_Rotation_1) == 0x0009F0, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_BreakTransform_Scale_1) == 0x0009FC, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01, CallFunc_BooleanAND_ReturnValue_22) == 0x000A08, "Member 'ABP_EliteTank_TP_01_C_ExecuteUbergraph_ABP_EliteTank_TP_01::CallFunc_BooleanAND_ReturnValue_22' has a wrong offset!");

}

