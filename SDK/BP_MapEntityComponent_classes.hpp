#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MapEntityComponent

#include "Basic.hpp"

#include "CALocalisationRuntime_structs.hpp"
#include "Engine_structs.hpp"
#include "Keaton_structs.hpp"
#include "Keaton_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_MapEntityComponent.BP_MapEntityComponent_C
// 0x0078 (0x0578 - 0x0500)
class UBP_MapEntityComponent_C final : public UCABaseMapEntityComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0500(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	int32                                         Level;                                             // 0x0508(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECAUIHUDEntityId                              HudEntityID;                                       // 0x050C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Registered;                                        // 0x050D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_50E[0x2];                                      // 0x050E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCAText                                Name_0;                                            // 0x0510(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FVector                                Location;                                          // 0x0540(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RegisteredMapEntityID;                             // 0x054C(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	int32                                         MapOrder;                                          // 0x0550(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_554[0x4];                                      // 0x0554(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Actor;                                             // 0x0558(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 RegisteredPlayers;                                 // 0x0560(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         CaptureTeamID;                                     // 0x0570(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsBreached;                                        // 0x0574(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsInLockdown;                                      // 0x0575(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BP_MapEntityComponent(int32 EntryPoint);
	void UpdateTeam(const TArray<struct FCATeamID>& Teams_to_notify);
	void Update(int32 Player_to_notify);
	void SetTeamCaptureID(const struct FCATeamID& Value);
	void SetActorOnPayload(const int32 Player_id, class AActor* Actor_0);
	void SetupDataOnly(const struct FCAText& Name_0, ECAUIHUDEntityId HudEntityID_0, const struct FVector& Location_0, int32 MapOrder_0);
	void Setup(const struct FCAText& Name_0, ECAUIHUDEntityId Entity_ID, const struct FVector& Location_0, int32 MapOrder_0, bool ShouldHaveMarker);
	void Update_Marker_Flags(bool IsBreached_0, bool IsInLockdown_0);
	void RegisterMarker(const struct FCAMapEntityPayload& Map_Entity_Payload);
	void UnregisterMarker();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_MapEntityComponent_C">();
	}
	static class UBP_MapEntityComponent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_MapEntityComponent_C>();
	}
};
static_assert(alignof(UBP_MapEntityComponent_C) == 0x000008, "Wrong alignment on UBP_MapEntityComponent_C");
static_assert(sizeof(UBP_MapEntityComponent_C) == 0x000578, "Wrong size on UBP_MapEntityComponent_C");
static_assert(offsetof(UBP_MapEntityComponent_C, UberGraphFrame) == 0x000500, "Member 'UBP_MapEntityComponent_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_MapEntityComponent_C, Level) == 0x000508, "Member 'UBP_MapEntityComponent_C::Level' has a wrong offset!");
static_assert(offsetof(UBP_MapEntityComponent_C, HudEntityID) == 0x00050C, "Member 'UBP_MapEntityComponent_C::HudEntityID' has a wrong offset!");
static_assert(offsetof(UBP_MapEntityComponent_C, Registered) == 0x00050D, "Member 'UBP_MapEntityComponent_C::Registered' has a wrong offset!");
static_assert(offsetof(UBP_MapEntityComponent_C, Name_0) == 0x000510, "Member 'UBP_MapEntityComponent_C::Name_0' has a wrong offset!");
static_assert(offsetof(UBP_MapEntityComponent_C, Location) == 0x000540, "Member 'UBP_MapEntityComponent_C::Location' has a wrong offset!");
static_assert(offsetof(UBP_MapEntityComponent_C, RegisteredMapEntityID) == 0x00054C, "Member 'UBP_MapEntityComponent_C::RegisteredMapEntityID' has a wrong offset!");
static_assert(offsetof(UBP_MapEntityComponent_C, MapOrder) == 0x000550, "Member 'UBP_MapEntityComponent_C::MapOrder' has a wrong offset!");
static_assert(offsetof(UBP_MapEntityComponent_C, Actor) == 0x000558, "Member 'UBP_MapEntityComponent_C::Actor' has a wrong offset!");
static_assert(offsetof(UBP_MapEntityComponent_C, RegisteredPlayers) == 0x000560, "Member 'UBP_MapEntityComponent_C::RegisteredPlayers' has a wrong offset!");
static_assert(offsetof(UBP_MapEntityComponent_C, CaptureTeamID) == 0x000570, "Member 'UBP_MapEntityComponent_C::CaptureTeamID' has a wrong offset!");
static_assert(offsetof(UBP_MapEntityComponent_C, IsBreached) == 0x000574, "Member 'UBP_MapEntityComponent_C::IsBreached' has a wrong offset!");
static_assert(offsetof(UBP_MapEntityComponent_C, IsInLockdown) == 0x000575, "Member 'UBP_MapEntityComponent_C::IsInLockdown' has a wrong offset!");

}

