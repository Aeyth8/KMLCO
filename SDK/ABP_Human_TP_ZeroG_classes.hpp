#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_Human_TP_ZeroG

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "Keaton_structs.hpp"
#include "Keaton_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "CAAudio_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_Human_TP_ZeroG.ABP_Human_TP_ZeroG_C
// 0x4650 (0x4910 - 0x02C0)
class UABP_Human_TP_ZeroG_C final : public UCAAnimInstance_SubGraph
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_RotateRootBone               AnimGraphNode_RotateRootBone;                      // 0x02C8(0x00E0)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_49;                 // 0x03A8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_48;                 // 0x03D0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_47;                 // 0x03F8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_46;                 // 0x0420(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_45;                 // 0x0448(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_44;                 // 0x0470(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_43;                 // 0x0498(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_42;                 // 0x04C0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_41;                 // 0x04E8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_40;                 // 0x0510(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_39;                 // 0x0538(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_38;                 // 0x0560(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_37;                 // 0x0588(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_36;                 // 0x05B0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_35;                 // 0x05D8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_34;                 // 0x0600(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_33;                 // 0x0628(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_32;                 // 0x0650(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_31;                 // 0x0678(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_30;                 // 0x06A0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_29;                 // 0x06C8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_28;                 // 0x06F0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_27;                 // 0x0718(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_26;                 // 0x0740(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_25;                 // 0x0768(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_24;                 // 0x0790(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_23;                 // 0x07B8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_22;                 // 0x07E0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_21;                 // 0x0808(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_20;                 // 0x0830(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_19;                 // 0x0858(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_18;                 // 0x0880(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_17;                 // 0x08A8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_16;                 // 0x08D0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_15;                 // 0x08F8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_14;                 // 0x0920(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_13;                 // 0x0948(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_12;                 // 0x0970(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_11;                 // 0x0998(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_10;                 // 0x09C0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_9;                  // 0x09E8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_8;                  // 0x0A10(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_7;                  // 0x0A38(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_6;                  // 0x0A60(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_5;                  // 0x0A88(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x0AB0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x0AD8(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_6;                    // 0x0B00(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_14;                      // 0x0B80(0x0038)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_2;             // 0x0BB8(0x0020)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_2;             // 0x0BD8(0x0020)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_2;                        // 0x0BF8(0x0110)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_5;                    // 0x0D08(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_13;                      // 0x0D88(0x0038)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_23;                 // 0x0DC0(0x00E8)()
	struct FAnimNode_ModifyCurve                  AnimGraphNode_ModifyCurve_8;                       // 0x0EA8(0x0058)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_12;                      // 0x0F00(0x0038)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_22;                 // 0x0F38(0x00E8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_11;                      // 0x1020(0x0038)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_21;                 // 0x1058(0x00E8)()
	struct FAnimNode_ModifyCurve                  AnimGraphNode_ModifyCurve_7;                       // 0x1140(0x0058)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_20;                 // 0x1198(0x00E8)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_4;                   // 0x1280(0x00A0)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_10;                      // 0x1320(0x0038)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend_4;                       // 0x1358(0x00C8)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_19;                 // 0x1420(0x00E8)()
	struct FAnimNode_ModifyCurve                  AnimGraphNode_ModifyCurve_6;                       // 0x1508(0x0058)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_1;                        // 0x1560(0x0110)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_1;             // 0x1670(0x0020)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_1;             // 0x1690(0x0020)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_18;                 // 0x16B0(0x00E8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_9;                       // 0x1798(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x17D0(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_8;                       // 0x1850(0x0038)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_17;                 // 0x1888(0x00E8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_7;                       // 0x1970(0x0038)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x19A8(0x0020)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x19C8(0x0020)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone;                          // 0x19E8(0x0110)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x1AF8(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_6;                       // 0x1B78(0x0038)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_16;                 // 0x1BB0(0x00E8)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend_3;                       // 0x1C98(0x00C8)()
	struct FAnimNode_ModifyCurve                  AnimGraphNode_ModifyCurve_5;                       // 0x1D60(0x0058)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_15;                 // 0x1DB8(0x00E8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_5;                       // 0x1EA0(0x0038)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x1ED8(0x0028)()
	struct FAnimNode_ModifyCurve                  AnimGraphNode_ModifyCurve_4;                       // 0x1F00(0x0058)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x1F58(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x1F80(0x0028)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_2;                     // 0x1FA8(0x00D0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x2078(0x0080)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_14;                 // 0x20F8(0x00E8)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_13;                 // 0x21E0(0x00E8)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend_2;                       // 0x22C8(0x00C8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x2390(0x0080)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_1;                     // 0x2410(0x00D0)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_12;                 // 0x24E0(0x00E8)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend;                    // 0x25C8(0x00C0)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_11;                 // 0x2688(0x00E8)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_3;                   // 0x2770(0x00A0)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_4;                       // 0x2810(0x0038)()
	struct FAnimNode_ModifyCurve                  AnimGraphNode_ModifyCurve_3;                       // 0x2848(0x0058)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_10;                 // 0x28A0(0x00E8)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_2;                   // 0x2988(0x00A0)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend_1;                       // 0x2A28(0x00C8)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_9;                  // 0x2AF0(0x00E8)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_8;                  // 0x2BD8(0x00E8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x2CC0(0x0038)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_1;                      // 0x2CF8(0x00B0)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x2DA8(0x0038)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_7;                  // 0x2DE0(0x00E8)()
	struct FAnimNode_ModifyCurve                  AnimGraphNode_ModifyCurve_2;                       // 0x2EC8(0x0058)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_6;                  // 0x2F20(0x00E8)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_5;                  // 0x3008(0x00E8)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_1;                   // 0x30F0(0x00A0)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x3190(0x00A0)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x3230(0x0038)()
	struct FAnimNode_BlendSpaceEvaluator          AnimGraphNode_BlendSpaceEvaluator;                 // 0x3268(0x00F0)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend;                         // 0x3358(0x00C8)()
	struct FAnimNode_ModifyCurve                  AnimGraphNode_ModifyCurve_1;                       // 0x3420(0x0058)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x3478(0x0080)()
	struct FAnimNode_ModifyCurve                  AnimGraphNode_ModifyCurve;                         // 0x34F8(0x0058)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive;                       // 0x3550(0x00D0)()
	struct FAnimNode_MultiWayBlend                AnimGraphNode_MultiWayBlend;                       // 0x3620(0x0050)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_4;                  // 0x3670(0x00E8)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_3;                  // 0x3758(0x00E8)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_2;                  // 0x3840(0x00E8)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_1;                  // 0x3928(0x00E8)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer;                    // 0x3A10(0x00E8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x3AF8(0x0038)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x3B30(0x00B0)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x3BE0(0x0038)()
	ECAPlayerMovementMode                         PrevPlayerMovementMode;                            // 0x3C18(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECAPlayerMovementMode                         CurrentPlayerMovementMode;                         // 0x3C19(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECAPlayerMovementMetaMode                     PrevPlayerMovementMetaMode;                        // 0x3C1A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECAPlayerMovementMetaMode                     CurrentPlayerMovementMetaMode;                     // 0x3C1B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELocomotionClass                              LocomotionClass;                                   // 0x3C1C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsEnteringZeroG;                                   // 0x3C1D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          NotInZeroGAnymore;                                 // 0x3C1E(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          HasLanded;                                         // 0x3C1F(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsMoving;                                          // 0x3C20(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsNearSurface;                                     // 0x3C21(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsFacingWall;                                      // 0x3C22(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsInCeiling;                                       // 0x3C23(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsOnFloor;                                         // 0x3C24(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C25[0x3];                                     // 0x3C25(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                AttachNormal;                                      // 0x3C28(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                AttachLocation;                                    // 0x3C34(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         WallHorizontalSpeed;                               // 0x3C40(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         WallVerticalSpeed;                                 // 0x3C44(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SurfaceLongitudinalSpeed;                          // 0x3C48(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SurfaceLateralSpeed;                               // 0x3C4C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SurfaceMovementInterpSpeed;                        // 0x3C50(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         WallMovementBlendTime;                             // 0x3C54(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         D_LookPitch;                                       // 0x3C58(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         D_MovePitch;                                       // 0x3C5C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         D_MoveYaw;                                         // 0x3C60(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         D_MoveYaw_INV;                                     // 0x3C64(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                D_MoveVelocity;                                    // 0x3C68(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsWallCrawling;                                    // 0x3C74(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C75[0x3];                                     // 0x3C75(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               D_SmoothRotation;                                  // 0x3C78(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FVector                                D_SmoothPosition;                                  // 0x3C84(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               ZerogFlyDeltaRotator;                              // 0x3C90(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         DistanceToImpact;                                  // 0x3C9C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TimeToImpact;                                      // 0x3CA0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsPushingOff;                                      // 0x3CA4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          PredictedImpactValid;                              // 0x3CA5(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3CA6[0x2];                                     // 0x3CA6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                WallNormal_CapsuleSpace;                           // 0x3CA8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                WallLocation_MeshSpace;                            // 0x3CB4(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         WallYaw_CapsuleSpace;                              // 0x3CC0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         WallPitch_CapsuleSpace;                            // 0x3CC4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Hand_IK_Target_WorldSpace;                         // 0x3CC8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Hand_IK_Reach_Centre_Local;                        // 0x3CD4(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Hand_Rotation_Y;                                   // 0x3CE0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Hand_IK_Target_Local;                              // 0x3CEC(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Hand_IK_Strength;                                  // 0x3CF8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Delta_time;                                        // 0x3CFC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ReachingForwardsTime_Left;                         // 0x3D00(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MinusCosine30Degrees;                              // 0x3D04(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Cosine30Degrees;                                   // 0x3D08(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Aim_Strength;                                      // 0x3D0C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Hand_IK_Phase;                                     // 0x3D10(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsPoseBeingUsed;                                   // 0x3D14(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D15[0x3];                                     // 0x3D15(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Predicted_Impact_Point;                            // 0x3D18(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsMovingOnWall;                                    // 0x3D24(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          PredictedCeiling;                                  // 0x3D25(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          PredictedFloor;                                    // 0x3D26(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D27[0x1];                                     // 0x3D27(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Hand_IK_Normal_World_Space;                        // 0x3D28(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Last_Flight_Speed;                                 // 0x3D34(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LastLandingVelocity;                               // 0x3D38(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D44[0x4];                                     // 0x3D44(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACACharacter_MainPlayer*                CharacterActor;                                    // 0x3D48(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsLocallyControlled;                               // 0x3D50(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D51[0x3];                                     // 0x3D51(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                PredictedImpactNormal;                             // 0x3D54(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          PushoffFromSameSurface;                            // 0x3D60(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D61[0x3];                                     // 0x3D61(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               SmoothedAimRotation;                               // 0x3D64(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         MeshPositionOffset;                                // 0x3D70(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaYaw;                                          // 0x3D74(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsWallCrawlingSlideAudioActive;                    // 0x3D78(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D79[0x3];                                     // 0x3D79(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         GroundToZeroGBlend;                                // 0x3D7C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TakeOffMeshPos;                                    // 0x3D80(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TakeOff_Offset;                                    // 0x3D84(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MeshPosition;                                      // 0x3D88(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PreLandTimeThreshold;                              // 0x3D8C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          PushoffFromWall;                                   // 0x3D90(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	ECAPlayerMovementMode                         FormerMovementMode;                                // 0x3D91(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D92[0x6];                                     // 0x3D92(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UCACharacterAnimationComponent*         CACharAnimComp;                                    // 0x3D98(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TakeoffYaw;                                        // 0x3DA0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TakeoffPitch;                                      // 0x3DA4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               AimRotation;                                       // 0x3DA8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          WasPushingOff;                                     // 0x3DB4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsADS;                                             // 0x3DB5(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DB6[0x2];                                     // 0x3DB6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCAAudioPlaybackInstance               WallCrawlingAudioRef;                              // 0x3DB8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         MaxSpeed;                                          // 0x3DC8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NeedsReset;                                        // 0x3DCC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsBallerinaBoost;                                  // 0x3DCD(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DCE[0x2];                                     // 0x3DCE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TwoHandedFiring;                                   // 0x3DD0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ZGFly_WeaponEffort;                                // 0x3DD4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCAAnimInstance_Component_Equipment    Equipment_Component;                               // 0x3DD8(0x0AF8)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          AllowZGBoost;                                      // 0x48D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_48D1[0x3];                                     // 0x48D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ZGBoostYawDelta;                                   // 0x48D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ZGBoostPitchDelta;                                 // 0x48D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Zero_G_Boost_Alpha;                                // 0x48DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Zero_G_Boost_Normalized_Time;                      // 0x48E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Zero_G_Boost_Duration;                             // 0x48E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ZGBoostTimer1_active;                              // 0x48E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_48E9[0x3];                                     // 0x48E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ZGBoostTimer1_elapsed;                             // 0x48EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ZGBoostTimer1;                                     // 0x48F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Charmovecomp_Input;                                // 0x48F4(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ZGBoostInput;                                      // 0x4900(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_ABP_Human_TP_ZeroG(int32 EntryPoint);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Human_TP_ZeroG_AnimGraphNode_TransitionResult_321805E14017967C1DD9BDBDD4D7E98F();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Human_TP_ZeroG_AnimGraphNode_TransitionResult_2ADCF4A14A0E8A9F8D8D4A83D7759C67();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Human_TP_ZeroG_AnimGraphNode_TransitionResult_35856FCC47AB91FBB9EB4691312A629D();
	void OnZGBoostStartedEvent(bool Successful, float New_speed, float Speed_delta, float Yaw_delta, float Pitch_delta, int32 boosts_remaining);
	void AnimNotify_Exit_Zero_G_Flying();
	void TriggerPushOffAudio();
	void AnimNotify_OnEnterWallLoco();
	void AnimNotify_OnEnterWallCrawling();
	void AnimNotify_OnEnterWallIdle();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Human_TP_ZeroG_AnimGraphNode_TransitionResult_7D798A264BB785F84AC193B66B262520();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Human_TP_ZeroG_AnimGraphNode_TransitionResult_2C2A090D41B091E95F0CBBA113C2C612();
	void AnimNotify_Exit_Wall_Crawling();
	void AnimNotify_Enter_Zero_G_Flying();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Human_TP_ZeroG_AnimGraphNode_TransitionResult_13B8EB6445B860C361BA608317962600();
	void AnimNotify_SND_Hand_Placement_Right();
	void AnimNotify_SND_Hand_Placement_Left();
	void AnimNotify_SND_Hand_Placement_Front();
	void AnimNotify_SND_Hand_Placement_Back();
	void AnimNotify_SND_Hand_Placement_Above();
	void AnimNotify_SND_ZeroGLand();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Human_TP_ZeroG_AnimGraphNode_TransitionResult_E78D60FE493C6C7408AD1D8C2AFBB4B0();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Human_TP_ZeroG_AnimGraphNode_TransitionResult_222027DD47AA9A3186502F9980889D10();
	void BlueprintInitializeAnimation();
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Human_TP_ZeroG_AnimGraphNode_TransitionResult_9FADEC984E2D52C5DA680DBE5464E448();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Human_TP_ZeroG_AnimGraphNode_TransitionResult_83226F884F0511616395128F1BEAE44D();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Human_TP_ZeroG_AnimGraphNode_TransitionResult_365B93CB4EA46C0974639E81CB68394D();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Human_TP_ZeroG_AnimGraphNode_TransitionResult_3686DC96423BBEAE421B56ACAFD1714F();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Human_TP_ZeroG_AnimGraphNode_TransitionResult_DFDA0FB146BD64EC516677A7014F8F65();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Human_TP_ZeroG_AnimGraphNode_TransitionResult_A36EB31A49A58C949826CCA0814B1BA4();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Human_TP_ZeroG_AnimGraphNode_TransitionResult_5368E2394B8BC8D0CF51979CE37B8681();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Human_TP_ZeroG_AnimGraphNode_TransitionResult_337E8B6A4BD53A8894EE618D8447CB0F();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Human_TP_ZeroG_AnimGraphNode_TransitionResult_3C62A54D4CF579F345B07493829D668D();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Human_TP_ZeroG_AnimGraphNode_TransitionResult_DFB425824A8C17D531451186DC76FFEC();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Human_TP_ZeroG_AnimGraphNode_TransitionResult_60A3188C4BCA5555AFC7BCB3EFD73C23();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Human_TP_ZeroG_AnimGraphNode_TransitionResult_52971A8343F1EA16277E19858548E3BE();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Human_TP_ZeroG_AnimGraphNode_ModifyBone_F83CF8844AB8A1974022D4B637CBD0F7();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Human_TP_ZeroG_AnimGraphNode_BlendSpacePlayer_A8BF8425447ABE66D04E999FE091B4F5();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Human_TP_ZeroG_AnimGraphNode_BlendSpacePlayer_24BFAF17463FF1AD0C9FA8A0A360E34D();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Human_TP_ZeroG_AnimGraphNode_ModifyBone_2FDAC6ED47AEF7C9EC1A99BE9C59A1EC();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Human_TP_ZeroG_AnimGraphNode_BlendSpacePlayer_FF03301142324BAF6BC10D8EE20F466C();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Human_TP_ZeroG_AnimGraphNode_TwoWayBlend_7673C8404A859FC259685C81ACFCC0E7();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Human_TP_ZeroG_AnimGraphNode_TransitionResult_CF1CA3864C0830A79B0BCAB75E91E76B();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Human_TP_ZeroG_AnimGraphNode_ModifyBone_35D76F3E4BCC561170F089A0EC465323();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Human_TP_ZeroG_AnimGraphNode_LayeredBoneBlend_04268FFF43084B077268068E370C1B1B();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Human_TP_ZeroG_AnimGraphNode_TwoWayBlend_C33F4F0E4581ED3C39A832B20794AFAE();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Human_TP_ZeroG_AnimGraphNode_MultiWayBlend_4405EF3C4E3A8D21AAC1609D955B1EC6();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Human_TP_ZeroG_AnimGraphNode_ModifyCurve_2806F83040D9C9450299A18B4B14BE62();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Human_TP_ZeroG_AnimGraphNode_TransitionResult_EB58D369431C35F3A1D17BB0960255DB();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Human_TP_ZeroG_AnimGraphNode_TransitionResult_AAEB65DF4EB3BE9FF33837ADD0D166FE();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Human_TP_ZeroG_AnimGraphNode_TransitionResult_013830594754F86C09FE19A1BAC9C195();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Human_TP_ZeroG_AnimGraphNode_TransitionResult_015E6C63487505E1979FC3A1732D3C73();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Human_TP_ZeroG_AnimGraphNode_TransitionResult_9C09DFF1423C6DA4C4C5A9A1AE33B06F();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Human_TP_ZeroG_AnimGraphNode_TransitionResult_EEC6668D43BAB8D00A1BC2A1B77E03B2();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Human_TP_ZeroG_AnimGraphNode_TransitionResult_180DCE784DC0C6362FE4078B7658A47B();
	void UpdateWallCrawlingHand(float DeltaTime);
	void UpdateStateVariables();
	void CopyValuesFromSpecialist();
	void AnimGraph(struct FPoseLink* AnimGraph_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_Human_TP_ZeroG_C">();
	}
	static class UABP_Human_TP_ZeroG_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_Human_TP_ZeroG_C>();
	}
};
static_assert(alignof(UABP_Human_TP_ZeroG_C) == 0x000010, "Wrong alignment on UABP_Human_TP_ZeroG_C");
static_assert(sizeof(UABP_Human_TP_ZeroG_C) == 0x004910, "Wrong size on UABP_Human_TP_ZeroG_C");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, UberGraphFrame) == 0x0002C0, "Member 'UABP_Human_TP_ZeroG_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, AnimGraphNode_RotateRootBone) == 0x0002C8, "Member 'UABP_Human_TP_ZeroG_C::AnimGraphNode_RotateRootBone' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, AnimGraphNode_TransitionResult_49) == 0x0003A8, "Member 'UABP_Human_TP_ZeroG_C::AnimGraphNode_TransitionResult_49' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, AnimGraphNode_TransitionResult_48) == 0x0003D0, "Member 'UABP_Human_TP_ZeroG_C::AnimGraphNode_TransitionResult_48' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, AnimGraphNode_TransitionResult_47) == 0x0003F8, "Member 'UABP_Human_TP_ZeroG_C::AnimGraphNode_TransitionResult_47' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, AnimGraphNode_TransitionResult_46) == 0x000420, "Member 'UABP_Human_TP_ZeroG_C::AnimGraphNode_TransitionResult_46' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, AnimGraphNode_TransitionResult_45) == 0x000448, "Member 'UABP_Human_TP_ZeroG_C::AnimGraphNode_TransitionResult_45' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, AnimGraphNode_TransitionResult_44) == 0x000470, "Member 'UABP_Human_TP_ZeroG_C::AnimGraphNode_TransitionResult_44' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, AnimGraphNode_TransitionResult_43) == 0x000498, "Member 'UABP_Human_TP_ZeroG_C::AnimGraphNode_TransitionResult_43' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, AnimGraphNode_TransitionResult_42) == 0x0004C0, "Member 'UABP_Human_TP_ZeroG_C::AnimGraphNode_TransitionResult_42' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, AnimGraphNode_TransitionResult_41) == 0x0004E8, "Member 'UABP_Human_TP_ZeroG_C::AnimGraphNode_TransitionResult_41' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, AnimGraphNode_TransitionResult_40) == 0x000510, "Member 'UABP_Human_TP_ZeroG_C::AnimGraphNode_TransitionResult_40' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, AnimGraphNode_TransitionResult_39) == 0x000538, "Member 'UABP_Human_TP_ZeroG_C::AnimGraphNode_TransitionResult_39' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, AnimGraphNode_TransitionResult_38) == 0x000560, "Member 'UABP_Human_TP_ZeroG_C::AnimGraphNode_TransitionResult_38' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, AnimGraphNode_TransitionResult_37) == 0x000588, "Member 'UABP_Human_TP_ZeroG_C::AnimGraphNode_TransitionResult_37' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, AnimGraphNode_TransitionResult_36) == 0x0005B0, "Member 'UABP_Human_TP_ZeroG_C::AnimGraphNode_TransitionResult_36' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, AnimGraphNode_TransitionResult_35) == 0x0005D8, "Member 'UABP_Human_TP_ZeroG_C::AnimGraphNode_TransitionResult_35' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, AnimGraphNode_TransitionResult_34) == 0x000600, "Member 'UABP_Human_TP_ZeroG_C::AnimGraphNode_TransitionResult_34' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, AnimGraphNode_TransitionResult_33) == 0x000628, "Member 'UABP_Human_TP_ZeroG_C::AnimGraphNode_TransitionResult_33' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, AnimGraphNode_TransitionResult_32) == 0x000650, "Member 'UABP_Human_TP_ZeroG_C::AnimGraphNode_TransitionResult_32' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, AnimGraphNode_TransitionResult_31) == 0x000678, "Member 'UABP_Human_TP_ZeroG_C::AnimGraphNode_TransitionResult_31' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, AnimGraphNode_TransitionResult_30) == 0x0006A0, "Member 'UABP_Human_TP_ZeroG_C::AnimGraphNode_TransitionResult_30' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, AnimGraphNode_TransitionResult_29) == 0x0006C8, "Member 'UABP_Human_TP_ZeroG_C::AnimGraphNode_TransitionResult_29' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, AnimGraphNode_TransitionResult_28) == 0x0006F0, "Member 'UABP_Human_TP_ZeroG_C::AnimGraphNode_TransitionResult_28' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, AnimGraphNode_TransitionResult_27) == 0x000718, "Member 'UABP_Human_TP_ZeroG_C::AnimGraphNode_TransitionResult_27' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, AnimGraphNode_TransitionResult_26) == 0x000740, "Member 'UABP_Human_TP_ZeroG_C::AnimGraphNode_TransitionResult_26' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, AnimGraphNode_TransitionResult_25) == 0x000768, "Member 'UABP_Human_TP_ZeroG_C::AnimGraphNode_TransitionResult_25' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, AnimGraphNode_TransitionResult_24) == 0x000790, "Member 'UABP_Human_TP_ZeroG_C::AnimGraphNode_TransitionResult_24' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, AnimGraphNode_TransitionResult_23) == 0x0007B8, "Member 'UABP_Human_TP_ZeroG_C::AnimGraphNode_TransitionResult_23' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, AnimGraphNode_TransitionResult_22) == 0x0007E0, "Member 'UABP_Human_TP_ZeroG_C::AnimGraphNode_TransitionResult_22' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, AnimGraphNode_TransitionResult_21) == 0x000808, "Member 'UABP_Human_TP_ZeroG_C::AnimGraphNode_TransitionResult_21' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, AnimGraphNode_TransitionResult_20) == 0x000830, "Member 'UABP_Human_TP_ZeroG_C::AnimGraphNode_TransitionResult_20' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, AnimGraphNode_TransitionResult_19) == 0x000858, "Member 'UABP_Human_TP_ZeroG_C::AnimGraphNode_TransitionResult_19' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, AnimGraphNode_TransitionResult_18) == 0x000880, "Member 'UABP_Human_TP_ZeroG_C::AnimGraphNode_TransitionResult_18' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, AnimGraphNode_TransitionResult_17) == 0x0008A8, "Member 'UABP_Human_TP_ZeroG_C::AnimGraphNode_TransitionResult_17' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, AnimGraphNode_TransitionResult_16) == 0x0008D0, "Member 'UABP_Human_TP_ZeroG_C::AnimGraphNode_TransitionResult_16' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, AnimGraphNode_TransitionResult_15) == 0x0008F8, "Member 'UABP_Human_TP_ZeroG_C::AnimGraphNode_TransitionResult_15' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, AnimGraphNode_TransitionResult_14) == 0x000920, "Member 'UABP_Human_TP_ZeroG_C::AnimGraphNode_TransitionResult_14' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, AnimGraphNode_TransitionResult_13) == 0x000948, "Member 'UABP_Human_TP_ZeroG_C::AnimGraphNode_TransitionResult_13' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, AnimGraphNode_TransitionResult_12) == 0x000970, "Member 'UABP_Human_TP_ZeroG_C::AnimGraphNode_TransitionResult_12' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, AnimGraphNode_TransitionResult_11) == 0x000998, "Member 'UABP_Human_TP_ZeroG_C::AnimGraphNode_TransitionResult_11' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, AnimGraphNode_TransitionResult_10) == 0x0009C0, "Member 'UABP_Human_TP_ZeroG_C::AnimGraphNode_TransitionResult_10' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, AnimGraphNode_TransitionResult_9) == 0x0009E8, "Member 'UABP_Human_TP_ZeroG_C::AnimGraphNode_TransitionResult_9' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, AnimGraphNode_TransitionResult_8) == 0x000A10, "Member 'UABP_Human_TP_ZeroG_C::AnimGraphNode_TransitionResult_8' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, AnimGraphNode_TransitionResult_7) == 0x000A38, "Member 'UABP_Human_TP_ZeroG_C::AnimGraphNode_TransitionResult_7' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, AnimGraphNode_TransitionResult_6) == 0x000A60, "Member 'UABP_Human_TP_ZeroG_C::AnimGraphNode_TransitionResult_6' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, AnimGraphNode_TransitionResult_5) == 0x000A88, "Member 'UABP_Human_TP_ZeroG_C::AnimGraphNode_TransitionResult_5' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, AnimGraphNode_TransitionResult_4) == 0x000AB0, "Member 'UABP_Human_TP_ZeroG_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, AnimGraphNode_TransitionResult_3) == 0x000AD8, "Member 'UABP_Human_TP_ZeroG_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, AnimGraphNode_SequencePlayer_6) == 0x000B00, "Member 'UABP_Human_TP_ZeroG_C::AnimGraphNode_SequencePlayer_6' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, AnimGraphNode_StateResult_14) == 0x000B80, "Member 'UABP_Human_TP_ZeroG_C::AnimGraphNode_StateResult_14' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, AnimGraphNode_ComponentToLocalSpace_2) == 0x000BB8, "Member 'UABP_Human_TP_ZeroG_C::AnimGraphNode_ComponentToLocalSpace_2' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, AnimGraphNode_LocalToComponentSpace_2) == 0x000BD8, "Member 'UABP_Human_TP_ZeroG_C::AnimGraphNode_LocalToComponentSpace_2' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, AnimGraphNode_ModifyBone_2) == 0x000BF8, "Member 'UABP_Human_TP_ZeroG_C::AnimGraphNode_ModifyBone_2' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, AnimGraphNode_SequencePlayer_5) == 0x000D08, "Member 'UABP_Human_TP_ZeroG_C::AnimGraphNode_SequencePlayer_5' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, AnimGraphNode_StateResult_13) == 0x000D88, "Member 'UABP_Human_TP_ZeroG_C::AnimGraphNode_StateResult_13' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, AnimGraphNode_BlendSpacePlayer_23) == 0x000DC0, "Member 'UABP_Human_TP_ZeroG_C::AnimGraphNode_BlendSpacePlayer_23' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, AnimGraphNode_ModifyCurve_8) == 0x000EA8, "Member 'UABP_Human_TP_ZeroG_C::AnimGraphNode_ModifyCurve_8' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, AnimGraphNode_StateResult_12) == 0x000F00, "Member 'UABP_Human_TP_ZeroG_C::AnimGraphNode_StateResult_12' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, AnimGraphNode_BlendSpacePlayer_22) == 0x000F38, "Member 'UABP_Human_TP_ZeroG_C::AnimGraphNode_BlendSpacePlayer_22' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, AnimGraphNode_StateResult_11) == 0x001020, "Member 'UABP_Human_TP_ZeroG_C::AnimGraphNode_StateResult_11' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, AnimGraphNode_BlendSpacePlayer_21) == 0x001058, "Member 'UABP_Human_TP_ZeroG_C::AnimGraphNode_BlendSpacePlayer_21' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, AnimGraphNode_ModifyCurve_7) == 0x001140, "Member 'UABP_Human_TP_ZeroG_C::AnimGraphNode_ModifyCurve_7' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, AnimGraphNode_BlendSpacePlayer_20) == 0x001198, "Member 'UABP_Human_TP_ZeroG_C::AnimGraphNode_BlendSpacePlayer_20' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, AnimGraphNode_BlendListByBool_4) == 0x001280, "Member 'UABP_Human_TP_ZeroG_C::AnimGraphNode_BlendListByBool_4' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, AnimGraphNode_StateResult_10) == 0x001320, "Member 'UABP_Human_TP_ZeroG_C::AnimGraphNode_StateResult_10' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, AnimGraphNode_TwoWayBlend_4) == 0x001358, "Member 'UABP_Human_TP_ZeroG_C::AnimGraphNode_TwoWayBlend_4' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, AnimGraphNode_BlendSpacePlayer_19) == 0x001420, "Member 'UABP_Human_TP_ZeroG_C::AnimGraphNode_BlendSpacePlayer_19' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, AnimGraphNode_ModifyCurve_6) == 0x001508, "Member 'UABP_Human_TP_ZeroG_C::AnimGraphNode_ModifyCurve_6' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, AnimGraphNode_ModifyBone_1) == 0x001560, "Member 'UABP_Human_TP_ZeroG_C::AnimGraphNode_ModifyBone_1' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, AnimGraphNode_ComponentToLocalSpace_1) == 0x001670, "Member 'UABP_Human_TP_ZeroG_C::AnimGraphNode_ComponentToLocalSpace_1' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, AnimGraphNode_LocalToComponentSpace_1) == 0x001690, "Member 'UABP_Human_TP_ZeroG_C::AnimGraphNode_LocalToComponentSpace_1' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, AnimGraphNode_BlendSpacePlayer_18) == 0x0016B0, "Member 'UABP_Human_TP_ZeroG_C::AnimGraphNode_BlendSpacePlayer_18' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, AnimGraphNode_StateResult_9) == 0x001798, "Member 'UABP_Human_TP_ZeroG_C::AnimGraphNode_StateResult_9' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, AnimGraphNode_SequencePlayer_4) == 0x0017D0, "Member 'UABP_Human_TP_ZeroG_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, AnimGraphNode_StateResult_8) == 0x001850, "Member 'UABP_Human_TP_ZeroG_C::AnimGraphNode_StateResult_8' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, AnimGraphNode_BlendSpacePlayer_17) == 0x001888, "Member 'UABP_Human_TP_ZeroG_C::AnimGraphNode_BlendSpacePlayer_17' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, AnimGraphNode_StateResult_7) == 0x001970, "Member 'UABP_Human_TP_ZeroG_C::AnimGraphNode_StateResult_7' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, AnimGraphNode_ComponentToLocalSpace) == 0x0019A8, "Member 'UABP_Human_TP_ZeroG_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, AnimGraphNode_LocalToComponentSpace) == 0x0019C8, "Member 'UABP_Human_TP_ZeroG_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, AnimGraphNode_ModifyBone) == 0x0019E8, "Member 'UABP_Human_TP_ZeroG_C::AnimGraphNode_ModifyBone' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, AnimGraphNode_SequencePlayer_3) == 0x001AF8, "Member 'UABP_Human_TP_ZeroG_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, AnimGraphNode_StateResult_6) == 0x001B78, "Member 'UABP_Human_TP_ZeroG_C::AnimGraphNode_StateResult_6' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, AnimGraphNode_BlendSpacePlayer_16) == 0x001BB0, "Member 'UABP_Human_TP_ZeroG_C::AnimGraphNode_BlendSpacePlayer_16' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, AnimGraphNode_TwoWayBlend_3) == 0x001C98, "Member 'UABP_Human_TP_ZeroG_C::AnimGraphNode_TwoWayBlend_3' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, AnimGraphNode_ModifyCurve_5) == 0x001D60, "Member 'UABP_Human_TP_ZeroG_C::AnimGraphNode_ModifyCurve_5' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, AnimGraphNode_BlendSpacePlayer_15) == 0x001DB8, "Member 'UABP_Human_TP_ZeroG_C::AnimGraphNode_BlendSpacePlayer_15' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, AnimGraphNode_StateResult_5) == 0x001EA0, "Member 'UABP_Human_TP_ZeroG_C::AnimGraphNode_StateResult_5' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, AnimGraphNode_TransitionResult_2) == 0x001ED8, "Member 'UABP_Human_TP_ZeroG_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, AnimGraphNode_ModifyCurve_4) == 0x001F00, "Member 'UABP_Human_TP_ZeroG_C::AnimGraphNode_ModifyCurve_4' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, AnimGraphNode_TransitionResult_1) == 0x001F58, "Member 'UABP_Human_TP_ZeroG_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, AnimGraphNode_TransitionResult) == 0x001F80, "Member 'UABP_Human_TP_ZeroG_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, AnimGraphNode_ApplyAdditive_2) == 0x001FA8, "Member 'UABP_Human_TP_ZeroG_C::AnimGraphNode_ApplyAdditive_2' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, AnimGraphNode_SequencePlayer_2) == 0x002078, "Member 'UABP_Human_TP_ZeroG_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, AnimGraphNode_BlendSpacePlayer_14) == 0x0020F8, "Member 'UABP_Human_TP_ZeroG_C::AnimGraphNode_BlendSpacePlayer_14' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, AnimGraphNode_BlendSpacePlayer_13) == 0x0021E0, "Member 'UABP_Human_TP_ZeroG_C::AnimGraphNode_BlendSpacePlayer_13' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, AnimGraphNode_TwoWayBlend_2) == 0x0022C8, "Member 'UABP_Human_TP_ZeroG_C::AnimGraphNode_TwoWayBlend_2' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, AnimGraphNode_SequencePlayer_1) == 0x002390, "Member 'UABP_Human_TP_ZeroG_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, AnimGraphNode_ApplyAdditive_1) == 0x002410, "Member 'UABP_Human_TP_ZeroG_C::AnimGraphNode_ApplyAdditive_1' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, AnimGraphNode_BlendSpacePlayer_12) == 0x0024E0, "Member 'UABP_Human_TP_ZeroG_C::AnimGraphNode_BlendSpacePlayer_12' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, AnimGraphNode_LayeredBoneBlend) == 0x0025C8, "Member 'UABP_Human_TP_ZeroG_C::AnimGraphNode_LayeredBoneBlend' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, AnimGraphNode_BlendSpacePlayer_11) == 0x002688, "Member 'UABP_Human_TP_ZeroG_C::AnimGraphNode_BlendSpacePlayer_11' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, AnimGraphNode_BlendListByBool_3) == 0x002770, "Member 'UABP_Human_TP_ZeroG_C::AnimGraphNode_BlendListByBool_3' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, AnimGraphNode_StateResult_4) == 0x002810, "Member 'UABP_Human_TP_ZeroG_C::AnimGraphNode_StateResult_4' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, AnimGraphNode_ModifyCurve_3) == 0x002848, "Member 'UABP_Human_TP_ZeroG_C::AnimGraphNode_ModifyCurve_3' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, AnimGraphNode_BlendSpacePlayer_10) == 0x0028A0, "Member 'UABP_Human_TP_ZeroG_C::AnimGraphNode_BlendSpacePlayer_10' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, AnimGraphNode_BlendListByBool_2) == 0x002988, "Member 'UABP_Human_TP_ZeroG_C::AnimGraphNode_BlendListByBool_2' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, AnimGraphNode_TwoWayBlend_1) == 0x002A28, "Member 'UABP_Human_TP_ZeroG_C::AnimGraphNode_TwoWayBlend_1' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, AnimGraphNode_BlendSpacePlayer_9) == 0x002AF0, "Member 'UABP_Human_TP_ZeroG_C::AnimGraphNode_BlendSpacePlayer_9' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, AnimGraphNode_BlendSpacePlayer_8) == 0x002BD8, "Member 'UABP_Human_TP_ZeroG_C::AnimGraphNode_BlendSpacePlayer_8' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, AnimGraphNode_StateResult_3) == 0x002CC0, "Member 'UABP_Human_TP_ZeroG_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, AnimGraphNode_StateMachine_1) == 0x002CF8, "Member 'UABP_Human_TP_ZeroG_C::AnimGraphNode_StateMachine_1' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, AnimGraphNode_StateResult_2) == 0x002DA8, "Member 'UABP_Human_TP_ZeroG_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, AnimGraphNode_BlendSpacePlayer_7) == 0x002DE0, "Member 'UABP_Human_TP_ZeroG_C::AnimGraphNode_BlendSpacePlayer_7' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, AnimGraphNode_ModifyCurve_2) == 0x002EC8, "Member 'UABP_Human_TP_ZeroG_C::AnimGraphNode_ModifyCurve_2' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, AnimGraphNode_BlendSpacePlayer_6) == 0x002F20, "Member 'UABP_Human_TP_ZeroG_C::AnimGraphNode_BlendSpacePlayer_6' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, AnimGraphNode_BlendSpacePlayer_5) == 0x003008, "Member 'UABP_Human_TP_ZeroG_C::AnimGraphNode_BlendSpacePlayer_5' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, AnimGraphNode_BlendListByBool_1) == 0x0030F0, "Member 'UABP_Human_TP_ZeroG_C::AnimGraphNode_BlendListByBool_1' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, AnimGraphNode_BlendListByBool) == 0x003190, "Member 'UABP_Human_TP_ZeroG_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, AnimGraphNode_StateResult_1) == 0x003230, "Member 'UABP_Human_TP_ZeroG_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, AnimGraphNode_BlendSpaceEvaluator) == 0x003268, "Member 'UABP_Human_TP_ZeroG_C::AnimGraphNode_BlendSpaceEvaluator' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, AnimGraphNode_TwoWayBlend) == 0x003358, "Member 'UABP_Human_TP_ZeroG_C::AnimGraphNode_TwoWayBlend' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, AnimGraphNode_ModifyCurve_1) == 0x003420, "Member 'UABP_Human_TP_ZeroG_C::AnimGraphNode_ModifyCurve_1' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, AnimGraphNode_SequencePlayer) == 0x003478, "Member 'UABP_Human_TP_ZeroG_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, AnimGraphNode_ModifyCurve) == 0x0034F8, "Member 'UABP_Human_TP_ZeroG_C::AnimGraphNode_ModifyCurve' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, AnimGraphNode_ApplyAdditive) == 0x003550, "Member 'UABP_Human_TP_ZeroG_C::AnimGraphNode_ApplyAdditive' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, AnimGraphNode_MultiWayBlend) == 0x003620, "Member 'UABP_Human_TP_ZeroG_C::AnimGraphNode_MultiWayBlend' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, AnimGraphNode_BlendSpacePlayer_4) == 0x003670, "Member 'UABP_Human_TP_ZeroG_C::AnimGraphNode_BlendSpacePlayer_4' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, AnimGraphNode_BlendSpacePlayer_3) == 0x003758, "Member 'UABP_Human_TP_ZeroG_C::AnimGraphNode_BlendSpacePlayer_3' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, AnimGraphNode_BlendSpacePlayer_2) == 0x003840, "Member 'UABP_Human_TP_ZeroG_C::AnimGraphNode_BlendSpacePlayer_2' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, AnimGraphNode_BlendSpacePlayer_1) == 0x003928, "Member 'UABP_Human_TP_ZeroG_C::AnimGraphNode_BlendSpacePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, AnimGraphNode_BlendSpacePlayer) == 0x003A10, "Member 'UABP_Human_TP_ZeroG_C::AnimGraphNode_BlendSpacePlayer' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, AnimGraphNode_StateResult) == 0x003AF8, "Member 'UABP_Human_TP_ZeroG_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, AnimGraphNode_StateMachine) == 0x003B30, "Member 'UABP_Human_TP_ZeroG_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, AnimGraphNode_Root) == 0x003BE0, "Member 'UABP_Human_TP_ZeroG_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, PrevPlayerMovementMode) == 0x003C18, "Member 'UABP_Human_TP_ZeroG_C::PrevPlayerMovementMode' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, CurrentPlayerMovementMode) == 0x003C19, "Member 'UABP_Human_TP_ZeroG_C::CurrentPlayerMovementMode' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, PrevPlayerMovementMetaMode) == 0x003C1A, "Member 'UABP_Human_TP_ZeroG_C::PrevPlayerMovementMetaMode' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, CurrentPlayerMovementMetaMode) == 0x003C1B, "Member 'UABP_Human_TP_ZeroG_C::CurrentPlayerMovementMetaMode' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, LocomotionClass) == 0x003C1C, "Member 'UABP_Human_TP_ZeroG_C::LocomotionClass' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, IsEnteringZeroG) == 0x003C1D, "Member 'UABP_Human_TP_ZeroG_C::IsEnteringZeroG' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, NotInZeroGAnymore) == 0x003C1E, "Member 'UABP_Human_TP_ZeroG_C::NotInZeroGAnymore' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, HasLanded) == 0x003C1F, "Member 'UABP_Human_TP_ZeroG_C::HasLanded' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, IsMoving) == 0x003C20, "Member 'UABP_Human_TP_ZeroG_C::IsMoving' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, IsNearSurface) == 0x003C21, "Member 'UABP_Human_TP_ZeroG_C::IsNearSurface' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, IsFacingWall) == 0x003C22, "Member 'UABP_Human_TP_ZeroG_C::IsFacingWall' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, IsInCeiling) == 0x003C23, "Member 'UABP_Human_TP_ZeroG_C::IsInCeiling' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, IsOnFloor) == 0x003C24, "Member 'UABP_Human_TP_ZeroG_C::IsOnFloor' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, AttachNormal) == 0x003C28, "Member 'UABP_Human_TP_ZeroG_C::AttachNormal' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, AttachLocation) == 0x003C34, "Member 'UABP_Human_TP_ZeroG_C::AttachLocation' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, WallHorizontalSpeed) == 0x003C40, "Member 'UABP_Human_TP_ZeroG_C::WallHorizontalSpeed' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, WallVerticalSpeed) == 0x003C44, "Member 'UABP_Human_TP_ZeroG_C::WallVerticalSpeed' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, SurfaceLongitudinalSpeed) == 0x003C48, "Member 'UABP_Human_TP_ZeroG_C::SurfaceLongitudinalSpeed' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, SurfaceLateralSpeed) == 0x003C4C, "Member 'UABP_Human_TP_ZeroG_C::SurfaceLateralSpeed' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, SurfaceMovementInterpSpeed) == 0x003C50, "Member 'UABP_Human_TP_ZeroG_C::SurfaceMovementInterpSpeed' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, WallMovementBlendTime) == 0x003C54, "Member 'UABP_Human_TP_ZeroG_C::WallMovementBlendTime' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, D_LookPitch) == 0x003C58, "Member 'UABP_Human_TP_ZeroG_C::D_LookPitch' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, D_MovePitch) == 0x003C5C, "Member 'UABP_Human_TP_ZeroG_C::D_MovePitch' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, D_MoveYaw) == 0x003C60, "Member 'UABP_Human_TP_ZeroG_C::D_MoveYaw' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, D_MoveYaw_INV) == 0x003C64, "Member 'UABP_Human_TP_ZeroG_C::D_MoveYaw_INV' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, D_MoveVelocity) == 0x003C68, "Member 'UABP_Human_TP_ZeroG_C::D_MoveVelocity' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, IsWallCrawling) == 0x003C74, "Member 'UABP_Human_TP_ZeroG_C::IsWallCrawling' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, D_SmoothRotation) == 0x003C78, "Member 'UABP_Human_TP_ZeroG_C::D_SmoothRotation' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, D_SmoothPosition) == 0x003C84, "Member 'UABP_Human_TP_ZeroG_C::D_SmoothPosition' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, ZerogFlyDeltaRotator) == 0x003C90, "Member 'UABP_Human_TP_ZeroG_C::ZerogFlyDeltaRotator' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, DistanceToImpact) == 0x003C9C, "Member 'UABP_Human_TP_ZeroG_C::DistanceToImpact' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, TimeToImpact) == 0x003CA0, "Member 'UABP_Human_TP_ZeroG_C::TimeToImpact' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, IsPushingOff) == 0x003CA4, "Member 'UABP_Human_TP_ZeroG_C::IsPushingOff' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, PredictedImpactValid) == 0x003CA5, "Member 'UABP_Human_TP_ZeroG_C::PredictedImpactValid' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, WallNormal_CapsuleSpace) == 0x003CA8, "Member 'UABP_Human_TP_ZeroG_C::WallNormal_CapsuleSpace' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, WallLocation_MeshSpace) == 0x003CB4, "Member 'UABP_Human_TP_ZeroG_C::WallLocation_MeshSpace' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, WallYaw_CapsuleSpace) == 0x003CC0, "Member 'UABP_Human_TP_ZeroG_C::WallYaw_CapsuleSpace' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, WallPitch_CapsuleSpace) == 0x003CC4, "Member 'UABP_Human_TP_ZeroG_C::WallPitch_CapsuleSpace' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, Hand_IK_Target_WorldSpace) == 0x003CC8, "Member 'UABP_Human_TP_ZeroG_C::Hand_IK_Target_WorldSpace' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, Hand_IK_Reach_Centre_Local) == 0x003CD4, "Member 'UABP_Human_TP_ZeroG_C::Hand_IK_Reach_Centre_Local' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, Hand_Rotation_Y) == 0x003CE0, "Member 'UABP_Human_TP_ZeroG_C::Hand_Rotation_Y' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, Hand_IK_Target_Local) == 0x003CEC, "Member 'UABP_Human_TP_ZeroG_C::Hand_IK_Target_Local' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, Hand_IK_Strength) == 0x003CF8, "Member 'UABP_Human_TP_ZeroG_C::Hand_IK_Strength' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, Delta_time) == 0x003CFC, "Member 'UABP_Human_TP_ZeroG_C::Delta_time' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, ReachingForwardsTime_Left) == 0x003D00, "Member 'UABP_Human_TP_ZeroG_C::ReachingForwardsTime_Left' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, MinusCosine30Degrees) == 0x003D04, "Member 'UABP_Human_TP_ZeroG_C::MinusCosine30Degrees' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, Cosine30Degrees) == 0x003D08, "Member 'UABP_Human_TP_ZeroG_C::Cosine30Degrees' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, Aim_Strength) == 0x003D0C, "Member 'UABP_Human_TP_ZeroG_C::Aim_Strength' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, Hand_IK_Phase) == 0x003D10, "Member 'UABP_Human_TP_ZeroG_C::Hand_IK_Phase' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, IsPoseBeingUsed) == 0x003D14, "Member 'UABP_Human_TP_ZeroG_C::IsPoseBeingUsed' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, Predicted_Impact_Point) == 0x003D18, "Member 'UABP_Human_TP_ZeroG_C::Predicted_Impact_Point' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, IsMovingOnWall) == 0x003D24, "Member 'UABP_Human_TP_ZeroG_C::IsMovingOnWall' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, PredictedCeiling) == 0x003D25, "Member 'UABP_Human_TP_ZeroG_C::PredictedCeiling' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, PredictedFloor) == 0x003D26, "Member 'UABP_Human_TP_ZeroG_C::PredictedFloor' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, Hand_IK_Normal_World_Space) == 0x003D28, "Member 'UABP_Human_TP_ZeroG_C::Hand_IK_Normal_World_Space' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, Last_Flight_Speed) == 0x003D34, "Member 'UABP_Human_TP_ZeroG_C::Last_Flight_Speed' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, LastLandingVelocity) == 0x003D38, "Member 'UABP_Human_TP_ZeroG_C::LastLandingVelocity' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, CharacterActor) == 0x003D48, "Member 'UABP_Human_TP_ZeroG_C::CharacterActor' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, IsLocallyControlled) == 0x003D50, "Member 'UABP_Human_TP_ZeroG_C::IsLocallyControlled' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, PredictedImpactNormal) == 0x003D54, "Member 'UABP_Human_TP_ZeroG_C::PredictedImpactNormal' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, PushoffFromSameSurface) == 0x003D60, "Member 'UABP_Human_TP_ZeroG_C::PushoffFromSameSurface' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, SmoothedAimRotation) == 0x003D64, "Member 'UABP_Human_TP_ZeroG_C::SmoothedAimRotation' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, MeshPositionOffset) == 0x003D70, "Member 'UABP_Human_TP_ZeroG_C::MeshPositionOffset' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, DeltaYaw) == 0x003D74, "Member 'UABP_Human_TP_ZeroG_C::DeltaYaw' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, IsWallCrawlingSlideAudioActive) == 0x003D78, "Member 'UABP_Human_TP_ZeroG_C::IsWallCrawlingSlideAudioActive' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, GroundToZeroGBlend) == 0x003D7C, "Member 'UABP_Human_TP_ZeroG_C::GroundToZeroGBlend' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, TakeOffMeshPos) == 0x003D80, "Member 'UABP_Human_TP_ZeroG_C::TakeOffMeshPos' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, TakeOff_Offset) == 0x003D84, "Member 'UABP_Human_TP_ZeroG_C::TakeOff_Offset' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, MeshPosition) == 0x003D88, "Member 'UABP_Human_TP_ZeroG_C::MeshPosition' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, PreLandTimeThreshold) == 0x003D8C, "Member 'UABP_Human_TP_ZeroG_C::PreLandTimeThreshold' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, PushoffFromWall) == 0x003D90, "Member 'UABP_Human_TP_ZeroG_C::PushoffFromWall' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, FormerMovementMode) == 0x003D91, "Member 'UABP_Human_TP_ZeroG_C::FormerMovementMode' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, CACharAnimComp) == 0x003D98, "Member 'UABP_Human_TP_ZeroG_C::CACharAnimComp' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, TakeoffYaw) == 0x003DA0, "Member 'UABP_Human_TP_ZeroG_C::TakeoffYaw' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, TakeoffPitch) == 0x003DA4, "Member 'UABP_Human_TP_ZeroG_C::TakeoffPitch' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, AimRotation) == 0x003DA8, "Member 'UABP_Human_TP_ZeroG_C::AimRotation' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, WasPushingOff) == 0x003DB4, "Member 'UABP_Human_TP_ZeroG_C::WasPushingOff' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, IsADS) == 0x003DB5, "Member 'UABP_Human_TP_ZeroG_C::IsADS' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, WallCrawlingAudioRef) == 0x003DB8, "Member 'UABP_Human_TP_ZeroG_C::WallCrawlingAudioRef' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, MaxSpeed) == 0x003DC8, "Member 'UABP_Human_TP_ZeroG_C::MaxSpeed' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, NeedsReset) == 0x003DCC, "Member 'UABP_Human_TP_ZeroG_C::NeedsReset' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, IsBallerinaBoost) == 0x003DCD, "Member 'UABP_Human_TP_ZeroG_C::IsBallerinaBoost' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, TwoHandedFiring) == 0x003DD0, "Member 'UABP_Human_TP_ZeroG_C::TwoHandedFiring' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, ZGFly_WeaponEffort) == 0x003DD4, "Member 'UABP_Human_TP_ZeroG_C::ZGFly_WeaponEffort' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, Equipment_Component) == 0x003DD8, "Member 'UABP_Human_TP_ZeroG_C::Equipment_Component' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, AllowZGBoost) == 0x0048D0, "Member 'UABP_Human_TP_ZeroG_C::AllowZGBoost' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, ZGBoostYawDelta) == 0x0048D4, "Member 'UABP_Human_TP_ZeroG_C::ZGBoostYawDelta' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, ZGBoostPitchDelta) == 0x0048D8, "Member 'UABP_Human_TP_ZeroG_C::ZGBoostPitchDelta' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, Zero_G_Boost_Alpha) == 0x0048DC, "Member 'UABP_Human_TP_ZeroG_C::Zero_G_Boost_Alpha' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, Zero_G_Boost_Normalized_Time) == 0x0048E0, "Member 'UABP_Human_TP_ZeroG_C::Zero_G_Boost_Normalized_Time' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, Zero_G_Boost_Duration) == 0x0048E4, "Member 'UABP_Human_TP_ZeroG_C::Zero_G_Boost_Duration' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, ZGBoostTimer1_active) == 0x0048E8, "Member 'UABP_Human_TP_ZeroG_C::ZGBoostTimer1_active' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, ZGBoostTimer1_elapsed) == 0x0048EC, "Member 'UABP_Human_TP_ZeroG_C::ZGBoostTimer1_elapsed' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, ZGBoostTimer1) == 0x0048F0, "Member 'UABP_Human_TP_ZeroG_C::ZGBoostTimer1' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, Charmovecomp_Input) == 0x0048F4, "Member 'UABP_Human_TP_ZeroG_C::Charmovecomp_Input' has a wrong offset!");
static_assert(offsetof(UABP_Human_TP_ZeroG_C, ZGBoostInput) == 0x004900, "Member 'UABP_Human_TP_ZeroG_C::ZGBoostInput' has a wrong offset!");

}

