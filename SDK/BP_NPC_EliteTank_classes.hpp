#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_NPC_EliteTank

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "BP_NPC_Character_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_NPC_EliteTank.BP_NPC_EliteTank_C
// 0x0090 (0x2100 - 0x2070)
class ABP_NPC_EliteTank_C final : public ABP_NPC_Character_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_NPC_EliteTank_C;                 // 0x2070(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   Projectile_Collision_Leg_Left;                     // 0x2078(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Projectile_Collision_Leg_Right;                    // 0x2080(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Projectile_Collision_Gun_R;                        // 0x2088(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Projectile_Collision_Arm_R;                        // 0x2090(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Projectile_Collision_Arm_L;                        // 0x2098(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Projectile_Collision_Shoulder_Left;                // 0x20A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Projectile_Collision_Shoulder_Right;               // 0x20A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCapsuleComponent*                      WeaponTraceOverlapCapsule;                         // 0x20B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCapsuleComponent*                      ProjectileOverlapCapsule;                          // 0x20B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   BP_Shield_Invis;                                   // 0x20C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPhysicalAnimationComponent*            PhysicalAnimation;                                 // 0x20C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBPC_NPCLootSpawner_C*                  BPC_NPCLootSpawner;                                // 0x20D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      Cooldown_Indicator_VFX;                            // 0x20D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RetryCounter;                                      // 0x20E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionEnabled                             CollisionType;                                     // 0x20E4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_20E5[0x3];                                     // 0x20E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CachedShieldInvisLocation;                         // 0x20E8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void UserConstructionScript();
	void ReceiveBeginPlay();
	void OnDeath(class ACACharacter* Character, const struct FGameplayEffectSpec& Death_gameplay_effect_spec, float Damage_magnitude, const struct FNetworkedHit& Networked_hit, const class AActor* Killer);
	void OnHitReceived(const struct FCADamageEffectInfo& Damage_effect_info);
	void Special_Ability_State_Changed(bool Is_active);
	void Hide_Shield();
	void OnCollisionStateChanged(bool Enabled);
	void TryEnableShieldCollision(bool bEnabled);
	void ReceiveTick(float DeltaSeconds);
	void ExecuteUbergraph_BP_NPC_EliteTank(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_NPC_EliteTank_C">();
	}
	static class ABP_NPC_EliteTank_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_NPC_EliteTank_C>();
	}
};
static_assert(alignof(ABP_NPC_EliteTank_C) == 0x000010, "Wrong alignment on ABP_NPC_EliteTank_C");
static_assert(sizeof(ABP_NPC_EliteTank_C) == 0x002100, "Wrong size on ABP_NPC_EliteTank_C");
static_assert(offsetof(ABP_NPC_EliteTank_C, UberGraphFrame_BP_NPC_EliteTank_C) == 0x002070, "Member 'ABP_NPC_EliteTank_C::UberGraphFrame_BP_NPC_EliteTank_C' has a wrong offset!");
static_assert(offsetof(ABP_NPC_EliteTank_C, Projectile_Collision_Leg_Left) == 0x002078, "Member 'ABP_NPC_EliteTank_C::Projectile_Collision_Leg_Left' has a wrong offset!");
static_assert(offsetof(ABP_NPC_EliteTank_C, Projectile_Collision_Leg_Right) == 0x002080, "Member 'ABP_NPC_EliteTank_C::Projectile_Collision_Leg_Right' has a wrong offset!");
static_assert(offsetof(ABP_NPC_EliteTank_C, Projectile_Collision_Gun_R) == 0x002088, "Member 'ABP_NPC_EliteTank_C::Projectile_Collision_Gun_R' has a wrong offset!");
static_assert(offsetof(ABP_NPC_EliteTank_C, Projectile_Collision_Arm_R) == 0x002090, "Member 'ABP_NPC_EliteTank_C::Projectile_Collision_Arm_R' has a wrong offset!");
static_assert(offsetof(ABP_NPC_EliteTank_C, Projectile_Collision_Arm_L) == 0x002098, "Member 'ABP_NPC_EliteTank_C::Projectile_Collision_Arm_L' has a wrong offset!");
static_assert(offsetof(ABP_NPC_EliteTank_C, Projectile_Collision_Shoulder_Left) == 0x0020A0, "Member 'ABP_NPC_EliteTank_C::Projectile_Collision_Shoulder_Left' has a wrong offset!");
static_assert(offsetof(ABP_NPC_EliteTank_C, Projectile_Collision_Shoulder_Right) == 0x0020A8, "Member 'ABP_NPC_EliteTank_C::Projectile_Collision_Shoulder_Right' has a wrong offset!");
static_assert(offsetof(ABP_NPC_EliteTank_C, WeaponTraceOverlapCapsule) == 0x0020B0, "Member 'ABP_NPC_EliteTank_C::WeaponTraceOverlapCapsule' has a wrong offset!");
static_assert(offsetof(ABP_NPC_EliteTank_C, ProjectileOverlapCapsule) == 0x0020B8, "Member 'ABP_NPC_EliteTank_C::ProjectileOverlapCapsule' has a wrong offset!");
static_assert(offsetof(ABP_NPC_EliteTank_C, BP_Shield_Invis) == 0x0020C0, "Member 'ABP_NPC_EliteTank_C::BP_Shield_Invis' has a wrong offset!");
static_assert(offsetof(ABP_NPC_EliteTank_C, PhysicalAnimation) == 0x0020C8, "Member 'ABP_NPC_EliteTank_C::PhysicalAnimation' has a wrong offset!");
static_assert(offsetof(ABP_NPC_EliteTank_C, BPC_NPCLootSpawner) == 0x0020D0, "Member 'ABP_NPC_EliteTank_C::BPC_NPCLootSpawner' has a wrong offset!");
static_assert(offsetof(ABP_NPC_EliteTank_C, Cooldown_Indicator_VFX) == 0x0020D8, "Member 'ABP_NPC_EliteTank_C::Cooldown_Indicator_VFX' has a wrong offset!");
static_assert(offsetof(ABP_NPC_EliteTank_C, RetryCounter) == 0x0020E0, "Member 'ABP_NPC_EliteTank_C::RetryCounter' has a wrong offset!");
static_assert(offsetof(ABP_NPC_EliteTank_C, CollisionType) == 0x0020E4, "Member 'ABP_NPC_EliteTank_C::CollisionType' has a wrong offset!");
static_assert(offsetof(ABP_NPC_EliteTank_C, CachedShieldInvisLocation) == 0x0020E8, "Member 'ABP_NPC_EliteTank_C::CachedShieldInvisLocation' has a wrong offset!");

}

