#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_Elite_TP_01

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Keaton_structs.hpp"
#include "Keaton_classes.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_Elite_TP_01.ABP_Elite_TP_01_C
// 0x5710 (0x5B20 - 0x0410)
class UABP_Elite_TP_01_C final : public UCAAnimInstance_NPC
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0410(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_Slot                         AnimGraphNode_Slot_5;                              // 0x0418(0x00E8)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_4;                              // 0x0500(0x00E8)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_3;                              // 0x05E8(0x00E8)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive;                       // 0x06D0(0x00D0)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_2;                              // 0x07A0(0x00E8)()
	struct FAnimNode_RefPose                      AnimGraphNode_IdentityPose;                        // 0x0888(0x0018)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_2;                  // 0x08A0(0x00C0)()
	struct FAnimNode_RotateRootBone               AnimGraphNode_RotateRootBone_3;                    // 0x0960(0x00E0)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_5;                    // 0x0A40(0x0158)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_12;                  // 0x0B98(0x00A0)()
	struct FAnimNode_RefPose                      AnimGraphNode_LocalRefPose;                        // 0x0C38(0x0018)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_11;                  // 0x0C50(0x00A0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_21;                   // 0x0CF0(0x0080)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_1;                              // 0x0D70(0x00E8)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_1;                        // 0x0E58(0x0110)()
	struct FAnimNode_LegIK                        AnimGraphNode_LegIK;                               // 0x0F68(0x0100)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_11;                    // 0x1068(0x0030)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone;                          // 0x1098(0x0110)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x11A8(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x11C8(0x0020)()
	struct FCAAnimNode_DrivenLookBones            CAAnimGraphNode_DrivenLookBones;                   // 0x11E8(0x0050)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_10;                 // 0x1238(0x00E8)()
	struct FAnimNode_LookAt                       AnimGraphNode_LookAt;                              // 0x1320(0x01D0)()
	struct FAnimNode_RotationOffsetBlendSpace     AnimGraphNode_RotationOffsetBlendSpace_2;          // 0x14F0(0x0198)()
	struct FAnimNode_RotationOffsetBlendSpace     AnimGraphNode_RotationOffsetBlendSpace_1;          // 0x1688(0x0198)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_10;                  // 0x1820(0x00A0)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_10;                    // 0x18C0(0x0030)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_4;                    // 0x18F0(0x0158)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_9;                     // 0x1A48(0x0030)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_8;                     // 0x1A78(0x0030)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_37;                 // 0x1AA8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_36;                 // 0x1AD0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_35;                 // 0x1AF8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_34;                 // 0x1B20(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_33;                 // 0x1B48(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_32;                 // 0x1B70(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_31;                 // 0x1B98(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_30;                 // 0x1BC0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_29;                 // 0x1BE8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_28;                 // 0x1C10(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_27;                 // 0x1C38(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_26;                 // 0x1C60(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_25;                 // 0x1C88(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_24;                 // 0x1CB0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_23;                 // 0x1CD8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_22;                 // 0x1D00(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_21;                 // 0x1D28(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_20;                 // 0x1D50(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_19;                 // 0x1D78(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_18;                 // 0x1DA0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_17;                 // 0x1DC8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_16;                 // 0x1DF0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_15;                 // 0x1E18(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_14;                 // 0x1E40(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_13;                 // 0x1E68(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_12;                 // 0x1E90(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_11;                 // 0x1EB8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_10;                 // 0x1EE0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_9;                  // 0x1F08(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_8;                  // 0x1F30(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_7;                  // 0x1F58(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_6;                  // 0x1F80(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_5;                  // 0x1FA8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x1FD0(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_20;                   // 0x1FF8(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_24;                      // 0x2078(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_19;                   // 0x20B0(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_23;                      // 0x2130(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_18;                   // 0x2168(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_22;                      // 0x21E8(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_17;                   // 0x2220(0x0080)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_9;                   // 0x22A0(0x00A0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_16;                   // 0x2340(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_21;                      // 0x23C0(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_15;                   // 0x23F8(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_20;                      // 0x2478(0x0038)()
	struct FAnimNode_BlendListByInt               AnimGraphNode_BlendListByInt_2;                    // 0x24B0(0x00A0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_14;                   // 0x2550(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_13;                   // 0x25D0(0x0080)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_8;                   // 0x2650(0x00A0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_12;                   // 0x26F0(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_19;                      // 0x2770(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_11;                   // 0x27A8(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_18;                      // 0x2828(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_10;                   // 0x2860(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_17;                      // 0x28E0(0x0038)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_9;                  // 0x2918(0x00E8)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_7;                   // 0x2A00(0x00A0)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_8;                  // 0x2AA0(0x00E8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_16;                      // 0x2B88(0x0038)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_7;                  // 0x2BC0(0x00E8)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_6;                   // 0x2CA8(0x00A0)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_6;                  // 0x2D48(0x00E8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_15;                      // 0x2E30(0x0038)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_5;                  // 0x2E68(0x00E8)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_5;                   // 0x2F50(0x00A0)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_4;                  // 0x2FF0(0x00E8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_14;                      // 0x30D8(0x0038)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_3;                  // 0x3110(0x00E8)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_4;                   // 0x31F8(0x00A0)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_2;                  // 0x3298(0x00E8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_13;                      // 0x3380(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_9;                    // 0x33B8(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_12;                      // 0x3438(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_8;                    // 0x3470(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_11;                      // 0x34F0(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_7;                    // 0x3528(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_10;                      // 0x35A8(0x0038)()
	struct FAnimNode_BlendListByInt               AnimGraphNode_BlendListByInt_1;                    // 0x35E0(0x00A0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_6;                    // 0x3680(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_5;                    // 0x3700(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_9;                       // 0x3780(0x0038)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator_2;                 // 0x37B8(0x0050)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator_1;                 // 0x3808(0x0050)()
	struct FAnimNode_BlendListByInt               AnimGraphNode_BlendListByInt;                      // 0x3858(0x00A0)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator;                   // 0x38F8(0x0050)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_8;                       // 0x3948(0x0038)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_7;                     // 0x3980(0x0030)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_7;                       // 0x39B0(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x39E8(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_6;                       // 0x3A68(0x0038)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_3;                   // 0x3AA0(0x00A0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x3B40(0x0080)()
	struct FAnimNode_ModifyCurve                  AnimGraphNode_ModifyCurve_7;                       // 0x3BC0(0x0058)()
	struct FAnimNode_RandomPlayer                 AnimGraphNode_RandomPlayer_1;                      // 0x3C18(0x0078)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_5;                       // 0x3C90(0x0038)()
	struct FAnimNode_ModifyCurve                  AnimGraphNode_ModifyCurve_6;                       // 0x3CC8(0x0058)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x3D20(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_4;                       // 0x3DA0(0x0038)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_6;                     // 0x3DD8(0x0030)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x3E08(0x0038)()
	struct FAnimNode_ModifyCurve                  AnimGraphNode_ModifyCurve_5;                       // 0x3E40(0x0058)()
	struct FAnimNode_RandomPlayer                 AnimGraphNode_RandomPlayer;                        // 0x3E98(0x0078)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x3F10(0x0038)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_1;                      // 0x3F48(0x00B0)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_3;                    // 0x3FF8(0x0158)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_2;                    // 0x4150(0x0158)()
	struct FAnimNode_ModifyCurve                  AnimGraphNode_ModifyCurve_4;                       // 0x42A8(0x0058)()
	struct FAnimNode_RotateRootBone               AnimGraphNode_RotateRootBone_2;                    // 0x4300(0x00E0)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x43E0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x4408(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x4430(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x4458(0x0028)()
	struct FAnimNode_RotateRootBone               AnimGraphNode_RotateRootBone_1;                    // 0x4480(0x00E0)()
	struct FAnimNode_ModifyCurve                  AnimGraphNode_ModifyCurve_3;                       // 0x4560(0x0058)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_1;                  // 0x45B8(0x00E8)()
	struct FAnimNode_RotateRootBone               AnimGraphNode_RotateRootBone;                      // 0x46A0(0x00E0)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x4780(0x0038)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_5;                     // 0x47B8(0x0030)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x47E8(0x0038)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x4820(0x00B0)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_1;                    // 0x48D0(0x0158)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_4;                     // 0x4A28(0x0030)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_3;                     // 0x4A58(0x0030)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x4A88(0x0158)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_2;                     // 0x4BE0(0x0030)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_1;                     // 0x4C10(0x0030)()
	struct FAnimNode_ModifyCurve                  AnimGraphNode_ModifyCurve_2;                       // 0x4C40(0x0058)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x4C98(0x00E8)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_1;                  // 0x4D80(0x00C0)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_2;                   // 0x4E40(0x00A0)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer;                    // 0x4EE0(0x00E8)()
	struct FAnimNode_RotationOffsetBlendSpace     AnimGraphNode_RotationOffsetBlendSpace;            // 0x4FC8(0x0198)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x5160(0x0030)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_1;                   // 0x5190(0x00A0)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x5230(0x0038)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend;                    // 0x5268(0x00C0)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x5328(0x00A0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x53C8(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x5448(0x0080)()
	struct FAnimNode_ModifyCurve                  AnimGraphNode_ModifyCurve_1;                       // 0x54C8(0x0058)()
	struct FAnimNode_PoseBlendNode                AnimGraphNode_PoseBlendNode;                       // 0x5520(0x00A0)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend;                         // 0x55C0(0x00C8)()
	struct FAnimNode_ModifyCurve                  AnimGraphNode_ModifyCurve;                         // 0x5688(0x0058)()
	bool                                          IsAware;                                           // 0x56E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsInCombat;                                        // 0x56E1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsFiring;                                          // 0x56E2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsDead;                                            // 0x56E3(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsMoving;                                          // 0x56E4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_56E5[0x3];                                     // 0x56E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               AimOffsetRotator;                                  // 0x56E8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_56F4[0x4];                                     // 0x56F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACACharacter_NPC*                       CACharacter_NPC;                                   // 0x56F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         _DEBUG_ForwardSpeed;                               // 0x5700(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         _DEBUG_LateralSpeed;                               // 0x5704(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         _DEBUG_Pitch;                                      // 0x5708(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         _DEBUG_Yaw;                                        // 0x570C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                AimLocationLocal;                                  // 0x5710(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_571C[0x4];                                     // 0x571C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequenceBase*                      DeathAnimation;                                    // 0x5720(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsInZeroG;                                         // 0x5728(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsUsingMagboots;                                   // 0x5729(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_572A[0x2];                                     // 0x572A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         AudioFadeTime;                                     // 0x572C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LastKnownTargetPos;                                // 0x5730(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StepPhase;                                         // 0x573C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          StepToLeft;                                        // 0x5740(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5741[0xF];                                     // 0x5741(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             FootIkTarget_RT;                                   // 0x5750(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FTransform                             FootIkTarget_LF;                                   // 0x5780(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         TargetHeading;                                     // 0x57B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentHeading;                                    // 0x57B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CapsuleHeading;                                    // 0x57B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AIHeading;                                         // 0x57BC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         WeaponAimHeading;                                  // 0x57C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LookAtLocationWorld;                               // 0x57C4(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TurnRate;                                          // 0x57D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TurnAlpha;                                         // 0x57D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TimeDelta;                                         // 0x57D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HeadingDelta;                                      // 0x57DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LocalVelocity;                                     // 0x57E0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StrafeAngle;                                       // 0x57EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               ApparentActorRotation;                             // 0x57F0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class FName                                   Bone_PhysAnim;                                     // 0x57FC(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsOnscreenOrAudible;                               // 0x5808(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsDedicatedServer;                                 // 0x5809(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_580A[0x2];                                     // 0x580A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                PreLandingVelocity;                                // 0x580C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         _DEBUG_TurnRate;                                   // 0x5818(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsLaunching;                                       // 0x581C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsSurprised;                                       // 0x581D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsStunned;                                         // 0x581E(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_581F[0x1];                                     // 0x581F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           HitReactionFireDamage;                             // 0x5820(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalAnimationComponent*            PhysAnimComp;                                      // 0x5828(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsRagdoll;                                         // 0x5830(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5831[0x7];                                     // 0x5831(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UAnimSequenceBase*>              HeadDeathAnims;                                    // 0x5838(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         StoppingThresholdSpeed;                            // 0x5848(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_584C[0x4];                                     // 0x584C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UAnimSequenceBase*>              ChestDeathAnims;                                   // 0x5850(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UAnimSequenceBase*>              GutDeathAnims;                                     // 0x5860(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UAnimSequenceBase*>              LegDeathAnims;                                     // 0x5870(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UAnimSequenceBase*>              ChestDeathAnims_Auto;                              // 0x5880(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FTransform                             RootBoneTransform;                                 // 0x5890(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FTransform                             FeetRootTransform;                                 // 0x58C0(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         SlopeHeightOffset;                                 // 0x58F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58F4[0x4];                                     // 0x58F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UAnimSequenceBase*>              HeadHitAnims;                                      // 0x58F8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UAnimSequenceBase*>              ChestHitAnims;                                     // 0x5908(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UAnimSequenceBase*>              GutHitAnims;                                       // 0x5918(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UAnimSequenceBase*>              LegHitAnims;                                       // 0x5928(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          NeedsFacingAim;                                    // 0x5938(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsFloating;                                        // 0x5939(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsFoamed;                                          // 0x593A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsFoamedOut;                                       // 0x593B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         FoamPercentage;                                    // 0x593C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                MoveToLocationWorld;                               // 0x5940(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DistanceToMoveTarget;                              // 0x594C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TurnTargetHeading;                                 // 0x5950(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          WasMovingRecently;                                 // 0x5954(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5955[0x3];                                     // 0x5955(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         FootToTargetMin;                                   // 0x5958(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TurnDeltaAngle;                                    // 0x595C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Haste;                                             // 0x5960(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TurnSourceHeading;                                 // 0x5964(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          TurnIsFadingOut;                                   // 0x5968(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5969[0x3];                                     // 0x5969(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MinTurnAngle;                                      // 0x596C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsInAir;                                           // 0x5970(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5971[0x7];                                     // 0x5971(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UAnimSequenceBase*>              HeadHitAnimsZG;                                    // 0x5978(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UAnimSequenceBase*>              ChestHitAnimsZG;                                   // 0x5988(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UAnimSequenceBase*>              GutHitAnimsZG;                                     // 0x5998(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UAnimSequenceBase*>              LegHitAnimsZG;                                     // 0x59A8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UAnimSequenceBase*>              DeathAnims_Explosion;                              // 0x59B8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UAnimSequenceBase*>              HeadDeathAnims_ZG;                                 // 0x59C8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UAnimSequenceBase*>              ChestDeathAnims_ZG;                                // 0x59D8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UAnimSequenceBase*>              GutDeathAnims_ZG;                                  // 0x59E8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UBlendSpaceBase*                        TurnBlendSpace;                                    // 0x59F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector>                        JumpDiffVectors;                                   // 0x5A00(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UAnimSequenceBase*>              LegDeathAnims_ZG;                                  // 0x5A10(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UAnimSequenceBase*>              ChestDeathAnims_Moving;                            // 0x5A20(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UAnimSequenceBase*>              GutDeathAnims_Moving;                              // 0x5A30(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UAnimSequenceBase*>              GutDeathAnims_SG;                                  // 0x5A40(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UAnimSequenceBase*>              ChestDeathAnims_SG;                                // 0x5A50(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UAnimSequenceBase*>              ChestDeathAnims_Jumping;                           // 0x5A60(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UAnimSequenceBase*>              DeathAnims_ZGMB;                                   // 0x5A70(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         UseProceduralFace;                                 // 0x5A80(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StoppingTriggerDistance;                           // 0x5A84(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsIdle;                                            // 0x5A88(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A89[0x3];                                     // 0x5A89(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           DebugColor;                                        // 0x5A8C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DebugTime0;                                        // 0x5A9C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                DebugPos0;                                         // 0x5AA0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                _DEBUG_CachedVelocity;                             // 0x5AAC(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                _DEBUG_Velocity;                                   // 0x5AB8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5AC4[0x4];                                     // 0x5AC4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UAnimSequenceBase*>              FireDeathAnims;                                    // 0x5AC8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UAnimSequenceBase*>              FireDeathAnims_TEST;                               // 0x5AD8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UAnimSequenceBase*>              DeathAnims_BBQ;                                    // 0x5AE8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRotator                               DeathDirectionRotator;                             // 0x5AF8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	int32                                         DeathDirectionIndex;                               // 0x5B04(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               DeathAttackDirection;                              // 0x5B08(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_ABP_Elite_TP_01(int32 EntryPoint);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Elite_TP_01_AnimGraphNode_BlendListByBool_AC3663DF48CC4630272BDE9FF6E419FF();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Elite_TP_01_AnimGraphNode_BlendListByBool_C3A61B3B4FC4BD4A6D34DFA5107BD2A8();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Elite_TP_01_AnimGraphNode_BlendListByBool_B9F0920B4C09FF6321E3F0B1E1408F59();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Elite_TP_01_AnimGraphNode_BlendListByBool_E81AEF9C42C68095AB2259A226C63854();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Elite_TP_01_AnimGraphNode_BlendListByInt_2F6F57414146967A808E2AA9910833A9();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Elite_TP_01_AnimGraphNode_BlendListByInt_7435554743A376EBE60391BC0D356DE0();
	void AnimNotify_EnterStarting();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Elite_TP_01_AnimGraphNode_TransitionResult_60AE983941A2361449E202A422DCE7DF();
	void AnimNotify_EnterStopping();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Elite_TP_01_AnimGraphNode_TransitionResult_740244384C9ADF122EAE5DB7E6987928();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Elite_TP_01_AnimGraphNode_TransitionResult_82B3C1E941828FC339965488F3DB8DD0();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Elite_TP_01_AnimGraphNode_TransitionResult_4FCBDA2449DF9F6A3A8A5FB545ACCDCD();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Elite_TP_01_AnimGraphNode_BlendListByInt_FC6163E94002E78EA37B4B91A3293339();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Elite_TP_01_AnimGraphNode_ModifyBone_6D2DE9F64D107F839194CBA7F48C5743();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Elite_TP_01_AnimGraphNode_ModifyBone_E28439C7431416D9F6D60BAD9B1BA07B();
	void OnPoolStateChanged(bool Is_in_pool);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Elite_TP_01_AnimGraphNode_BlendListByBool_5572B1C8492CFA6BCFA637B12D536F6F();
	void AnimNotify_TurnFadeOutStarted();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Elite_TP_01_AnimGraphNode_ModifyCurve_E6EC77D840829A7A2872EEBE0E768A17();
	void OnLocalHitReceived(const struct FNetworkedHit& Hit);
	void OnHitRecievedEvent(const struct FNetworkedHit& Hit);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Elite_TP_01_AnimGraphNode_LayeredBoneBlend_FA53AF124B9E2694D345AD8AF59E5C2E();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Elite_TP_01_AnimGraphNode_BlendListByBool_7C6966B34B0943538263FBB11E733A67();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Elite_TP_01_AnimGraphNode_ModifyCurve_180646A14EBA06401228EE8A3A5B8501();
	void AnimNotify_EnableRagdoll();
	void BlueprintBeginPlay();
	void OnDeath(class ACACharacter* Character, const struct FGameplayEffectSpec& Death_gameplay_effect_spec, float Damage_magnitude, const struct FNetworkedHit& Networked_hit, const class AActor* Killer);
	void BlueprintInitializeAnimation();
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Elite_TP_01_AnimGraphNode_TransitionResult_035896A24C0C42EA39B85DA3BAA5B301();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Elite_TP_01_AnimGraphNode_TransitionResult_01D84C104F58184CC259688F23AD6150();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Elite_TP_01_AnimGraphNode_TransitionResult_146C9078453509511B7240B514DF06B2();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Elite_TP_01_AnimGraphNode_TransitionResult_8A55D7BE457C2EF368B3278866BDB1AF();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Elite_TP_01_AnimGraphNode_TransitionResult_EE4109944B2320DC8877C0B3471D7101();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Elite_TP_01_AnimGraphNode_TransitionResult_82451BE24CEC30F1A363218793C2F6E0();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Elite_TP_01_AnimGraphNode_TransitionResult_860A43B8478182FC0EFBFCA2BAF3C5C3();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Elite_TP_01_AnimGraphNode_TransitionResult_05E35B404A6C83BEFD68118C2D293758();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Elite_TP_01_AnimGraphNode_TransitionResult_28422A454A6D799C835F3EA9CAF41E93();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Elite_TP_01_AnimGraphNode_TransitionResult_520FF17643D1F363A7C12BA648A7B9B6();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Elite_TP_01_AnimGraphNode_TransitionResult_3E10C2434B7E79F7618029A465DCCE92();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Elite_TP_01_AnimGraphNode_TransitionResult_4BFBB8FF453DE5321C19468AD4BE1443();
	void OnHitReaction(const struct FNetworkedHit& Hit);
	void SelectDeathAnimSequence(const struct FGameplayEffectSpec& GameplayEffectSpec, float DamageMagnitude, const struct FNetworkedHit& NetworkedHit);
	void Get_Death_Anim_Yaw_Offset(float* Yaw);
	void AnimGraph(struct FPoseLink* AnimGraph_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_Elite_TP_01_C">();
	}
	static class UABP_Elite_TP_01_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_Elite_TP_01_C>();
	}
};
static_assert(alignof(UABP_Elite_TP_01_C) == 0x000010, "Wrong alignment on UABP_Elite_TP_01_C");
static_assert(sizeof(UABP_Elite_TP_01_C) == 0x005B20, "Wrong size on UABP_Elite_TP_01_C");
static_assert(offsetof(UABP_Elite_TP_01_C, UberGraphFrame) == 0x000410, "Member 'UABP_Elite_TP_01_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_Slot_5) == 0x000418, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_Slot_5' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_Slot_4) == 0x000500, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_Slot_4' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_Slot_3) == 0x0005E8, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_Slot_3' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_ApplyAdditive) == 0x0006D0, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_ApplyAdditive' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_Slot_2) == 0x0007A0, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_Slot_2' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_IdentityPose) == 0x000888, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_IdentityPose' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_LayeredBoneBlend_2) == 0x0008A0, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_LayeredBoneBlend_2' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_RotateRootBone_3) == 0x000960, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_RotateRootBone_3' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_SaveCachedPose_5) == 0x000A40, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_SaveCachedPose_5' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_BlendListByBool_12) == 0x000B98, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_BlendListByBool_12' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_LocalRefPose) == 0x000C38, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_LocalRefPose' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_BlendListByBool_11) == 0x000C50, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_BlendListByBool_11' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_SequencePlayer_21) == 0x000CF0, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_SequencePlayer_21' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_Slot_1) == 0x000D70, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_Slot_1' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_ModifyBone_1) == 0x000E58, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_ModifyBone_1' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_LegIK) == 0x000F68, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_LegIK' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_UseCachedPose_11) == 0x001068, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_UseCachedPose_11' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_ModifyBone) == 0x001098, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_ModifyBone' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_LocalToComponentSpace) == 0x0011A8, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_ComponentToLocalSpace) == 0x0011C8, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, CAAnimGraphNode_DrivenLookBones) == 0x0011E8, "Member 'UABP_Elite_TP_01_C::CAAnimGraphNode_DrivenLookBones' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_BlendSpacePlayer_10) == 0x001238, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_BlendSpacePlayer_10' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_LookAt) == 0x001320, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_LookAt' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_RotationOffsetBlendSpace_2) == 0x0014F0, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_RotationOffsetBlendSpace_2' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_RotationOffsetBlendSpace_1) == 0x001688, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_RotationOffsetBlendSpace_1' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_BlendListByBool_10) == 0x001820, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_BlendListByBool_10' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_UseCachedPose_10) == 0x0018C0, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_UseCachedPose_10' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_SaveCachedPose_4) == 0x0018F0, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_SaveCachedPose_4' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_UseCachedPose_9) == 0x001A48, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_UseCachedPose_9' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_UseCachedPose_8) == 0x001A78, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_UseCachedPose_8' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_TransitionResult_37) == 0x001AA8, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_TransitionResult_37' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_TransitionResult_36) == 0x001AD0, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_TransitionResult_36' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_TransitionResult_35) == 0x001AF8, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_TransitionResult_35' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_TransitionResult_34) == 0x001B20, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_TransitionResult_34' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_TransitionResult_33) == 0x001B48, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_TransitionResult_33' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_TransitionResult_32) == 0x001B70, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_TransitionResult_32' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_TransitionResult_31) == 0x001B98, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_TransitionResult_31' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_TransitionResult_30) == 0x001BC0, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_TransitionResult_30' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_TransitionResult_29) == 0x001BE8, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_TransitionResult_29' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_TransitionResult_28) == 0x001C10, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_TransitionResult_28' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_TransitionResult_27) == 0x001C38, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_TransitionResult_27' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_TransitionResult_26) == 0x001C60, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_TransitionResult_26' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_TransitionResult_25) == 0x001C88, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_TransitionResult_25' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_TransitionResult_24) == 0x001CB0, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_TransitionResult_24' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_TransitionResult_23) == 0x001CD8, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_TransitionResult_23' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_TransitionResult_22) == 0x001D00, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_TransitionResult_22' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_TransitionResult_21) == 0x001D28, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_TransitionResult_21' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_TransitionResult_20) == 0x001D50, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_TransitionResult_20' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_TransitionResult_19) == 0x001D78, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_TransitionResult_19' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_TransitionResult_18) == 0x001DA0, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_TransitionResult_18' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_TransitionResult_17) == 0x001DC8, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_TransitionResult_17' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_TransitionResult_16) == 0x001DF0, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_TransitionResult_16' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_TransitionResult_15) == 0x001E18, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_TransitionResult_15' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_TransitionResult_14) == 0x001E40, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_TransitionResult_14' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_TransitionResult_13) == 0x001E68, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_TransitionResult_13' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_TransitionResult_12) == 0x001E90, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_TransitionResult_12' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_TransitionResult_11) == 0x001EB8, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_TransitionResult_11' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_TransitionResult_10) == 0x001EE0, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_TransitionResult_10' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_TransitionResult_9) == 0x001F08, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_TransitionResult_9' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_TransitionResult_8) == 0x001F30, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_TransitionResult_8' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_TransitionResult_7) == 0x001F58, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_TransitionResult_7' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_TransitionResult_6) == 0x001F80, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_TransitionResult_6' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_TransitionResult_5) == 0x001FA8, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_TransitionResult_5' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_TransitionResult_4) == 0x001FD0, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_SequencePlayer_20) == 0x001FF8, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_SequencePlayer_20' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_StateResult_24) == 0x002078, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_StateResult_24' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_SequencePlayer_19) == 0x0020B0, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_SequencePlayer_19' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_StateResult_23) == 0x002130, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_StateResult_23' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_SequencePlayer_18) == 0x002168, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_SequencePlayer_18' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_StateResult_22) == 0x0021E8, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_StateResult_22' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_SequencePlayer_17) == 0x002220, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_SequencePlayer_17' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_BlendListByBool_9) == 0x0022A0, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_BlendListByBool_9' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_SequencePlayer_16) == 0x002340, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_SequencePlayer_16' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_StateResult_21) == 0x0023C0, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_StateResult_21' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_SequencePlayer_15) == 0x0023F8, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_SequencePlayer_15' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_StateResult_20) == 0x002478, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_StateResult_20' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_BlendListByInt_2) == 0x0024B0, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_BlendListByInt_2' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_SequencePlayer_14) == 0x002550, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_SequencePlayer_14' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_SequencePlayer_13) == 0x0025D0, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_SequencePlayer_13' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_BlendListByBool_8) == 0x002650, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_BlendListByBool_8' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_SequencePlayer_12) == 0x0026F0, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_SequencePlayer_12' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_StateResult_19) == 0x002770, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_StateResult_19' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_SequencePlayer_11) == 0x0027A8, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_SequencePlayer_11' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_StateResult_18) == 0x002828, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_StateResult_18' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_SequencePlayer_10) == 0x002860, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_SequencePlayer_10' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_StateResult_17) == 0x0028E0, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_StateResult_17' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_BlendSpacePlayer_9) == 0x002918, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_BlendSpacePlayer_9' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_BlendListByBool_7) == 0x002A00, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_BlendListByBool_7' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_BlendSpacePlayer_8) == 0x002AA0, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_BlendSpacePlayer_8' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_StateResult_16) == 0x002B88, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_StateResult_16' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_BlendSpacePlayer_7) == 0x002BC0, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_BlendSpacePlayer_7' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_BlendListByBool_6) == 0x002CA8, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_BlendListByBool_6' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_BlendSpacePlayer_6) == 0x002D48, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_BlendSpacePlayer_6' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_StateResult_15) == 0x002E30, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_StateResult_15' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_BlendSpacePlayer_5) == 0x002E68, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_BlendSpacePlayer_5' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_BlendListByBool_5) == 0x002F50, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_BlendListByBool_5' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_BlendSpacePlayer_4) == 0x002FF0, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_BlendSpacePlayer_4' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_StateResult_14) == 0x0030D8, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_StateResult_14' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_BlendSpacePlayer_3) == 0x003110, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_BlendSpacePlayer_3' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_BlendListByBool_4) == 0x0031F8, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_BlendListByBool_4' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_BlendSpacePlayer_2) == 0x003298, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_BlendSpacePlayer_2' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_StateResult_13) == 0x003380, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_StateResult_13' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_SequencePlayer_9) == 0x0033B8, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_SequencePlayer_9' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_StateResult_12) == 0x003438, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_StateResult_12' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_SequencePlayer_8) == 0x003470, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_SequencePlayer_8' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_StateResult_11) == 0x0034F0, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_StateResult_11' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_SequencePlayer_7) == 0x003528, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_SequencePlayer_7' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_StateResult_10) == 0x0035A8, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_StateResult_10' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_BlendListByInt_1) == 0x0035E0, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_BlendListByInt_1' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_SequencePlayer_6) == 0x003680, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_SequencePlayer_6' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_SequencePlayer_5) == 0x003700, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_SequencePlayer_5' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_StateResult_9) == 0x003780, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_StateResult_9' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_SequenceEvaluator_2) == 0x0037B8, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_SequenceEvaluator_2' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_SequenceEvaluator_1) == 0x003808, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_SequenceEvaluator_1' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_BlendListByInt) == 0x003858, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_BlendListByInt' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_SequenceEvaluator) == 0x0038F8, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_SequenceEvaluator' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_StateResult_8) == 0x003948, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_StateResult_8' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_UseCachedPose_7) == 0x003980, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_UseCachedPose_7' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_StateResult_7) == 0x0039B0, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_StateResult_7' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_SequencePlayer_4) == 0x0039E8, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_StateResult_6) == 0x003A68, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_StateResult_6' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_BlendListByBool_3) == 0x003AA0, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_BlendListByBool_3' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_SequencePlayer_3) == 0x003B40, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_ModifyCurve_7) == 0x003BC0, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_ModifyCurve_7' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_RandomPlayer_1) == 0x003C18, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_RandomPlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_StateResult_5) == 0x003C90, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_StateResult_5' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_ModifyCurve_6) == 0x003CC8, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_ModifyCurve_6' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_SequencePlayer_2) == 0x003D20, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_StateResult_4) == 0x003DA0, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_StateResult_4' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_UseCachedPose_6) == 0x003DD8, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_UseCachedPose_6' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_StateResult_3) == 0x003E08, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_ModifyCurve_5) == 0x003E40, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_ModifyCurve_5' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_RandomPlayer) == 0x003E98, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_RandomPlayer' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_StateResult_2) == 0x003F10, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_StateMachine_1) == 0x003F48, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_StateMachine_1' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_SaveCachedPose_3) == 0x003FF8, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_SaveCachedPose_3' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_SaveCachedPose_2) == 0x004150, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_SaveCachedPose_2' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_ModifyCurve_4) == 0x0042A8, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_ModifyCurve_4' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_RotateRootBone_2) == 0x004300, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_RotateRootBone_2' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_TransitionResult_3) == 0x0043E0, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_TransitionResult_2) == 0x004408, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_TransitionResult_1) == 0x004430, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_TransitionResult) == 0x004458, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_RotateRootBone_1) == 0x004480, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_RotateRootBone_1' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_ModifyCurve_3) == 0x004560, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_ModifyCurve_3' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_BlendSpacePlayer_1) == 0x0045B8, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_BlendSpacePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_RotateRootBone) == 0x0046A0, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_RotateRootBone' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_StateResult_1) == 0x004780, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_UseCachedPose_5) == 0x0047B8, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_UseCachedPose_5' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_StateResult) == 0x0047E8, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_StateMachine) == 0x004820, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_SaveCachedPose_1) == 0x0048D0, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_SaveCachedPose_1' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_UseCachedPose_4) == 0x004A28, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_UseCachedPose_4' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_UseCachedPose_3) == 0x004A58, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_UseCachedPose_3' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_SaveCachedPose) == 0x004A88, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_UseCachedPose_2) == 0x004BE0, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_UseCachedPose_2' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_UseCachedPose_1) == 0x004C10, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_UseCachedPose_1' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_ModifyCurve_2) == 0x004C40, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_ModifyCurve_2' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_Slot) == 0x004C98, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_LayeredBoneBlend_1) == 0x004D80, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_LayeredBoneBlend_1' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_BlendListByBool_2) == 0x004E40, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_BlendListByBool_2' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_BlendSpacePlayer) == 0x004EE0, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_BlendSpacePlayer' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_RotationOffsetBlendSpace) == 0x004FC8, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_RotationOffsetBlendSpace' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_UseCachedPose) == 0x005160, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_BlendListByBool_1) == 0x005190, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_BlendListByBool_1' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_Root) == 0x005230, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_LayeredBoneBlend) == 0x005268, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_LayeredBoneBlend' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_BlendListByBool) == 0x005328, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_SequencePlayer_1) == 0x0053C8, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_SequencePlayer) == 0x005448, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_ModifyCurve_1) == 0x0054C8, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_ModifyCurve_1' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_PoseBlendNode) == 0x005520, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_PoseBlendNode' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_TwoWayBlend) == 0x0055C0, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_TwoWayBlend' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AnimGraphNode_ModifyCurve) == 0x005688, "Member 'UABP_Elite_TP_01_C::AnimGraphNode_ModifyCurve' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, IsAware) == 0x0056E0, "Member 'UABP_Elite_TP_01_C::IsAware' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, IsInCombat) == 0x0056E1, "Member 'UABP_Elite_TP_01_C::IsInCombat' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, IsFiring) == 0x0056E2, "Member 'UABP_Elite_TP_01_C::IsFiring' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, IsDead) == 0x0056E3, "Member 'UABP_Elite_TP_01_C::IsDead' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, IsMoving) == 0x0056E4, "Member 'UABP_Elite_TP_01_C::IsMoving' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AimOffsetRotator) == 0x0056E8, "Member 'UABP_Elite_TP_01_C::AimOffsetRotator' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, CACharacter_NPC) == 0x0056F8, "Member 'UABP_Elite_TP_01_C::CACharacter_NPC' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, _DEBUG_ForwardSpeed) == 0x005700, "Member 'UABP_Elite_TP_01_C::_DEBUG_ForwardSpeed' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, _DEBUG_LateralSpeed) == 0x005704, "Member 'UABP_Elite_TP_01_C::_DEBUG_LateralSpeed' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, _DEBUG_Pitch) == 0x005708, "Member 'UABP_Elite_TP_01_C::_DEBUG_Pitch' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, _DEBUG_Yaw) == 0x00570C, "Member 'UABP_Elite_TP_01_C::_DEBUG_Yaw' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AimLocationLocal) == 0x005710, "Member 'UABP_Elite_TP_01_C::AimLocationLocal' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, DeathAnimation) == 0x005720, "Member 'UABP_Elite_TP_01_C::DeathAnimation' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, IsInZeroG) == 0x005728, "Member 'UABP_Elite_TP_01_C::IsInZeroG' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, IsUsingMagboots) == 0x005729, "Member 'UABP_Elite_TP_01_C::IsUsingMagboots' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AudioFadeTime) == 0x00572C, "Member 'UABP_Elite_TP_01_C::AudioFadeTime' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, LastKnownTargetPos) == 0x005730, "Member 'UABP_Elite_TP_01_C::LastKnownTargetPos' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, StepPhase) == 0x00573C, "Member 'UABP_Elite_TP_01_C::StepPhase' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, StepToLeft) == 0x005740, "Member 'UABP_Elite_TP_01_C::StepToLeft' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, FootIkTarget_RT) == 0x005750, "Member 'UABP_Elite_TP_01_C::FootIkTarget_RT' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, FootIkTarget_LF) == 0x005780, "Member 'UABP_Elite_TP_01_C::FootIkTarget_LF' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, TargetHeading) == 0x0057B0, "Member 'UABP_Elite_TP_01_C::TargetHeading' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, CurrentHeading) == 0x0057B4, "Member 'UABP_Elite_TP_01_C::CurrentHeading' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, CapsuleHeading) == 0x0057B8, "Member 'UABP_Elite_TP_01_C::CapsuleHeading' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, AIHeading) == 0x0057BC, "Member 'UABP_Elite_TP_01_C::AIHeading' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, WeaponAimHeading) == 0x0057C0, "Member 'UABP_Elite_TP_01_C::WeaponAimHeading' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, LookAtLocationWorld) == 0x0057C4, "Member 'UABP_Elite_TP_01_C::LookAtLocationWorld' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, TurnRate) == 0x0057D0, "Member 'UABP_Elite_TP_01_C::TurnRate' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, TurnAlpha) == 0x0057D4, "Member 'UABP_Elite_TP_01_C::TurnAlpha' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, TimeDelta) == 0x0057D8, "Member 'UABP_Elite_TP_01_C::TimeDelta' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, HeadingDelta) == 0x0057DC, "Member 'UABP_Elite_TP_01_C::HeadingDelta' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, LocalVelocity) == 0x0057E0, "Member 'UABP_Elite_TP_01_C::LocalVelocity' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, StrafeAngle) == 0x0057EC, "Member 'UABP_Elite_TP_01_C::StrafeAngle' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, ApparentActorRotation) == 0x0057F0, "Member 'UABP_Elite_TP_01_C::ApparentActorRotation' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, Bone_PhysAnim) == 0x0057FC, "Member 'UABP_Elite_TP_01_C::Bone_PhysAnim' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, IsOnscreenOrAudible) == 0x005808, "Member 'UABP_Elite_TP_01_C::IsOnscreenOrAudible' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, IsDedicatedServer) == 0x005809, "Member 'UABP_Elite_TP_01_C::IsDedicatedServer' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, PreLandingVelocity) == 0x00580C, "Member 'UABP_Elite_TP_01_C::PreLandingVelocity' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, _DEBUG_TurnRate) == 0x005818, "Member 'UABP_Elite_TP_01_C::_DEBUG_TurnRate' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, IsLaunching) == 0x00581C, "Member 'UABP_Elite_TP_01_C::IsLaunching' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, IsSurprised) == 0x00581D, "Member 'UABP_Elite_TP_01_C::IsSurprised' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, IsStunned) == 0x00581E, "Member 'UABP_Elite_TP_01_C::IsStunned' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, HitReactionFireDamage) == 0x005820, "Member 'UABP_Elite_TP_01_C::HitReactionFireDamage' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, PhysAnimComp) == 0x005828, "Member 'UABP_Elite_TP_01_C::PhysAnimComp' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, IsRagdoll) == 0x005830, "Member 'UABP_Elite_TP_01_C::IsRagdoll' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, HeadDeathAnims) == 0x005838, "Member 'UABP_Elite_TP_01_C::HeadDeathAnims' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, StoppingThresholdSpeed) == 0x005848, "Member 'UABP_Elite_TP_01_C::StoppingThresholdSpeed' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, ChestDeathAnims) == 0x005850, "Member 'UABP_Elite_TP_01_C::ChestDeathAnims' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, GutDeathAnims) == 0x005860, "Member 'UABP_Elite_TP_01_C::GutDeathAnims' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, LegDeathAnims) == 0x005870, "Member 'UABP_Elite_TP_01_C::LegDeathAnims' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, ChestDeathAnims_Auto) == 0x005880, "Member 'UABP_Elite_TP_01_C::ChestDeathAnims_Auto' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, RootBoneTransform) == 0x005890, "Member 'UABP_Elite_TP_01_C::RootBoneTransform' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, FeetRootTransform) == 0x0058C0, "Member 'UABP_Elite_TP_01_C::FeetRootTransform' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, SlopeHeightOffset) == 0x0058F0, "Member 'UABP_Elite_TP_01_C::SlopeHeightOffset' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, HeadHitAnims) == 0x0058F8, "Member 'UABP_Elite_TP_01_C::HeadHitAnims' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, ChestHitAnims) == 0x005908, "Member 'UABP_Elite_TP_01_C::ChestHitAnims' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, GutHitAnims) == 0x005918, "Member 'UABP_Elite_TP_01_C::GutHitAnims' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, LegHitAnims) == 0x005928, "Member 'UABP_Elite_TP_01_C::LegHitAnims' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, NeedsFacingAim) == 0x005938, "Member 'UABP_Elite_TP_01_C::NeedsFacingAim' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, IsFloating) == 0x005939, "Member 'UABP_Elite_TP_01_C::IsFloating' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, IsFoamed) == 0x00593A, "Member 'UABP_Elite_TP_01_C::IsFoamed' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, IsFoamedOut) == 0x00593B, "Member 'UABP_Elite_TP_01_C::IsFoamedOut' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, FoamPercentage) == 0x00593C, "Member 'UABP_Elite_TP_01_C::FoamPercentage' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, MoveToLocationWorld) == 0x005940, "Member 'UABP_Elite_TP_01_C::MoveToLocationWorld' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, DistanceToMoveTarget) == 0x00594C, "Member 'UABP_Elite_TP_01_C::DistanceToMoveTarget' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, TurnTargetHeading) == 0x005950, "Member 'UABP_Elite_TP_01_C::TurnTargetHeading' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, WasMovingRecently) == 0x005954, "Member 'UABP_Elite_TP_01_C::WasMovingRecently' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, FootToTargetMin) == 0x005958, "Member 'UABP_Elite_TP_01_C::FootToTargetMin' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, TurnDeltaAngle) == 0x00595C, "Member 'UABP_Elite_TP_01_C::TurnDeltaAngle' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, Haste) == 0x005960, "Member 'UABP_Elite_TP_01_C::Haste' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, TurnSourceHeading) == 0x005964, "Member 'UABP_Elite_TP_01_C::TurnSourceHeading' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, TurnIsFadingOut) == 0x005968, "Member 'UABP_Elite_TP_01_C::TurnIsFadingOut' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, MinTurnAngle) == 0x00596C, "Member 'UABP_Elite_TP_01_C::MinTurnAngle' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, IsInAir) == 0x005970, "Member 'UABP_Elite_TP_01_C::IsInAir' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, HeadHitAnimsZG) == 0x005978, "Member 'UABP_Elite_TP_01_C::HeadHitAnimsZG' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, ChestHitAnimsZG) == 0x005988, "Member 'UABP_Elite_TP_01_C::ChestHitAnimsZG' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, GutHitAnimsZG) == 0x005998, "Member 'UABP_Elite_TP_01_C::GutHitAnimsZG' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, LegHitAnimsZG) == 0x0059A8, "Member 'UABP_Elite_TP_01_C::LegHitAnimsZG' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, DeathAnims_Explosion) == 0x0059B8, "Member 'UABP_Elite_TP_01_C::DeathAnims_Explosion' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, HeadDeathAnims_ZG) == 0x0059C8, "Member 'UABP_Elite_TP_01_C::HeadDeathAnims_ZG' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, ChestDeathAnims_ZG) == 0x0059D8, "Member 'UABP_Elite_TP_01_C::ChestDeathAnims_ZG' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, GutDeathAnims_ZG) == 0x0059E8, "Member 'UABP_Elite_TP_01_C::GutDeathAnims_ZG' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, TurnBlendSpace) == 0x0059F8, "Member 'UABP_Elite_TP_01_C::TurnBlendSpace' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, JumpDiffVectors) == 0x005A00, "Member 'UABP_Elite_TP_01_C::JumpDiffVectors' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, LegDeathAnims_ZG) == 0x005A10, "Member 'UABP_Elite_TP_01_C::LegDeathAnims_ZG' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, ChestDeathAnims_Moving) == 0x005A20, "Member 'UABP_Elite_TP_01_C::ChestDeathAnims_Moving' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, GutDeathAnims_Moving) == 0x005A30, "Member 'UABP_Elite_TP_01_C::GutDeathAnims_Moving' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, GutDeathAnims_SG) == 0x005A40, "Member 'UABP_Elite_TP_01_C::GutDeathAnims_SG' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, ChestDeathAnims_SG) == 0x005A50, "Member 'UABP_Elite_TP_01_C::ChestDeathAnims_SG' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, ChestDeathAnims_Jumping) == 0x005A60, "Member 'UABP_Elite_TP_01_C::ChestDeathAnims_Jumping' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, DeathAnims_ZGMB) == 0x005A70, "Member 'UABP_Elite_TP_01_C::DeathAnims_ZGMB' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, UseProceduralFace) == 0x005A80, "Member 'UABP_Elite_TP_01_C::UseProceduralFace' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, StoppingTriggerDistance) == 0x005A84, "Member 'UABP_Elite_TP_01_C::StoppingTriggerDistance' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, IsIdle) == 0x005A88, "Member 'UABP_Elite_TP_01_C::IsIdle' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, DebugColor) == 0x005A8C, "Member 'UABP_Elite_TP_01_C::DebugColor' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, DebugTime0) == 0x005A9C, "Member 'UABP_Elite_TP_01_C::DebugTime0' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, DebugPos0) == 0x005AA0, "Member 'UABP_Elite_TP_01_C::DebugPos0' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, _DEBUG_CachedVelocity) == 0x005AAC, "Member 'UABP_Elite_TP_01_C::_DEBUG_CachedVelocity' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, _DEBUG_Velocity) == 0x005AB8, "Member 'UABP_Elite_TP_01_C::_DEBUG_Velocity' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, FireDeathAnims) == 0x005AC8, "Member 'UABP_Elite_TP_01_C::FireDeathAnims' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, FireDeathAnims_TEST) == 0x005AD8, "Member 'UABP_Elite_TP_01_C::FireDeathAnims_TEST' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, DeathAnims_BBQ) == 0x005AE8, "Member 'UABP_Elite_TP_01_C::DeathAnims_BBQ' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, DeathDirectionRotator) == 0x005AF8, "Member 'UABP_Elite_TP_01_C::DeathDirectionRotator' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, DeathDirectionIndex) == 0x005B04, "Member 'UABP_Elite_TP_01_C::DeathDirectionIndex' has a wrong offset!");
static_assert(offsetof(UABP_Elite_TP_01_C, DeathAttackDirection) == 0x005B08, "Member 'UABP_Elite_TP_01_C::DeathAttackDirection' has a wrong offset!");

}

