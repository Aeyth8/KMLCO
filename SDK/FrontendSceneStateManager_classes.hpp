#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FrontendSceneStateManager

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "CAUIEvents_structs.hpp"
#include "Keaton_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass FrontendSceneStateManager.FrontendSceneStateManager_C
// 0x0090 (0x01E0 - 0x0150)
class UFrontendSceneStateManager_C final : public UCASceneStateManager
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0150(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UFrontendSceneStateManager_C*           Target;                                            // 0x0158(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	int32                                         Ftue_current_caracter_index;                       // 0x0160(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_164[0x4];                                      // 0x0164(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCAUIEventMapping                      Ftue_selected_event;                               // 0x0168(0x0058)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	class AActor*                                 Conversion_actor;                                  // 0x01C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           FadeColor;                                         // 0x01C8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         WaitTimeBeforeFade;                                // 0x01D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void OnComplete_AC7F358943EF84E716A8CA9C6EFF374D();
	void OnComplete_8079C53446745C3C19CCEA80CB0366E7();
	void OnComplete_01EF718641817D99B9BF47A15FDE450F();
	void OnComplete_8A139F6A40441C353DC625B5AB276DA4();
	void OnComplete_1C2E397845028BDC716E609E1F633808();
	void OnComplete_6FB64A014EA3AE63D01A009DF037061F();
	void OnComplete_290C20344165AD60666E2B8F0D9564DE();
	void OnEnterMerch();
	void OnExitMerch();
	void OnEnterFromNonGame();
	void OnExitFromNonGame();
	void OnEnterTutorialWelcome();
	void OnExitTutorialWelcome();
	void OnEnterPostTutorialPurchase();
	void OnExitPostTutorialPurchase();
	void OnEnterPostTutorialPurchasePrompt();
	void OnExitPostTutorialPurchasePrompt();
	void OnExitPostTutorialPurchaseInit();
	void OnEnterPostTutorialPurchaseInit();
	void OnSpecialistSelected(const class UCABaseUIEvent* Event_data);
	void OnEnterPostTutorialPurchaseConversion();
	void OnExitPostTutorialPurchaseConversion();
	void OnEnterEndMatchBeta();
	void OnExitEndMatchBeta();
	void OnEnterProfilePlayerCard();
	void OnExitProfilePlayerCard();
	void OnEnterProfile();
	void OnExitProfile();
	void OnEnterNews();
	void OnExitNews();
	void OnEnterChallenges();
	void OnExitChallenges();
	void OnEnterSocial();
	void OnExitSocial();
	void OnEnterSettings();
	void OnExitSettings();
	void OnEnterEndMatch();
	void OnExitEndMatch();
	void OnEnterCollection();
	void OnExitCollection();
	void OnEnterCollectionWeapon();
	void OnExitCollectionWeapon();
	void OnEnterCollectionPendant();
	void OnExitCollectionPendant();
	void OnWeaponSceneChanged(class ACAFrontEndWeaponScene* New_weapon_scene);
	void OnPedentSceneChanged(class ACAFrontEndWeaponScene* New_weapon_scene);
	void OnEnterHyenaSkins();
	void OnExitHyenaSkins();
	void OnEnterEmotes();
	void OnExitEmotes();
	void OnEnterFrontendMain();
	void OnExitFrontendMain();
	void OnEnterStart();
	void OnExitStart();
	void OnEnterIntroScreenPunchOut();
	void OnExitIntroScreenPunchIn();
	void OnPunchOneVideoPlaybackComplete(const struct FCAUIEventData& Event_data);
	void OnEnterIntroScreenPunchIn();
	void OnExitIntroScreenPunchOut();
	void OnPunchTwoVideoPlaybackComplete(const struct FCAUIEventData& Event_data);
	void M_on_player_in_party_state_changed_Event_0(bool Is_in_party);
	void OnEnterEmptyState();
	void ExecuteUbergraph_FrontendSceneStateManager(int32 EntryPoint);
	void UpdateFrontEndMainCamera(bool IsInParty, bool FromAnotherState);
	void UpdateWeaponSceneCamera(class ACAFrontEndWeaponScene* WeaponSceneParameter);
	void OnComplete_B4EC76124A685401843400A4479DC191();
	void OnComplete_D1FD648B4EDD03B28B2B7DA188A79B99();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"FrontendSceneStateManager_C">();
	}
	static class UFrontendSceneStateManager_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFrontendSceneStateManager_C>();
	}
};
static_assert(alignof(UFrontendSceneStateManager_C) == 0x000008, "Wrong alignment on UFrontendSceneStateManager_C");
static_assert(sizeof(UFrontendSceneStateManager_C) == 0x0001E0, "Wrong size on UFrontendSceneStateManager_C");
static_assert(offsetof(UFrontendSceneStateManager_C, UberGraphFrame) == 0x000150, "Member 'UFrontendSceneStateManager_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UFrontendSceneStateManager_C, Target) == 0x000158, "Member 'UFrontendSceneStateManager_C::Target' has a wrong offset!");
static_assert(offsetof(UFrontendSceneStateManager_C, Ftue_current_caracter_index) == 0x000160, "Member 'UFrontendSceneStateManager_C::Ftue_current_caracter_index' has a wrong offset!");
static_assert(offsetof(UFrontendSceneStateManager_C, Ftue_selected_event) == 0x000168, "Member 'UFrontendSceneStateManager_C::Ftue_selected_event' has a wrong offset!");
static_assert(offsetof(UFrontendSceneStateManager_C, Conversion_actor) == 0x0001C0, "Member 'UFrontendSceneStateManager_C::Conversion_actor' has a wrong offset!");
static_assert(offsetof(UFrontendSceneStateManager_C, FadeColor) == 0x0001C8, "Member 'UFrontendSceneStateManager_C::FadeColor' has a wrong offset!");
static_assert(offsetof(UFrontendSceneStateManager_C, WaitTimeBeforeFade) == 0x0001D8, "Member 'UFrontendSceneStateManager_C::WaitTimeBeforeFade' has a wrong offset!");

}

