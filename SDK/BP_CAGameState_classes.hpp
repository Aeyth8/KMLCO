#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CAGameState

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Keaton_structs.hpp"
#include "Keaton_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_CAGameState.BP_CAGameState_C
// 0x0048 (0x07A0 - 0x0758)
class ABP_CAGameState_C : public ACAGameState
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0758(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0760(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_CAPlayerStart_C*>            SpawnPoints;                                       // 0x0768(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	TArray<class ABP_PlayerController_C*>         TeamAControllers;                                  // 0x0778(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	TArray<class ABP_PlayerController_C*>         TeamBControllers;                                  // 0x0788(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	struct FTimerHandle                           TeamScoreUpdateHandle;                             // 0x0798(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_CAGameState(int32 EntryPoint);
	void RefreshHUDForScore();
	void OnMatchStateChanged(EYMatchState NewMatchState);
	void ReceiveBeginPlay();
	void CacheWorldObjects();
	void AddPlayerToTeam(bool A_, class ABP_PlayerController_C* Controller);
	void CacheSpawnPoints();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_CAGameState_C">();
	}
	static class ABP_CAGameState_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_CAGameState_C>();
	}
};
static_assert(alignof(ABP_CAGameState_C) == 0x000008, "Wrong alignment on ABP_CAGameState_C");
static_assert(sizeof(ABP_CAGameState_C) == 0x0007A0, "Wrong size on ABP_CAGameState_C");
static_assert(offsetof(ABP_CAGameState_C, UberGraphFrame) == 0x000758, "Member 'ABP_CAGameState_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_CAGameState_C, DefaultSceneRoot) == 0x000760, "Member 'ABP_CAGameState_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_CAGameState_C, SpawnPoints) == 0x000768, "Member 'ABP_CAGameState_C::SpawnPoints' has a wrong offset!");
static_assert(offsetof(ABP_CAGameState_C, TeamAControllers) == 0x000778, "Member 'ABP_CAGameState_C::TeamAControllers' has a wrong offset!");
static_assert(offsetof(ABP_CAGameState_C, TeamBControllers) == 0x000788, "Member 'ABP_CAGameState_C::TeamBControllers' has a wrong offset!");
static_assert(offsetof(ABP_CAGameState_C, TeamScoreUpdateHandle) == 0x000798, "Member 'ABP_CAGameState_C::TeamScoreUpdateHandle' has a wrong offset!");

}

