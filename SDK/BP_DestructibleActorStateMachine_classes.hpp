#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_DestructibleActorStateMachine

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Keaton_classes.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_DestructibleActorStateMachine.BP_DestructibleActorStateMachine_C
// 0x0338 (0x1098 - 0x0D60)
class UBP_DestructibleActorStateMachine_C final : public UCAStateMachineComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0D60(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCAAbilitySystemComponent*              AbilityComponent;                                  // 0x0D68(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             EventIntact;                                       // 0x0D70(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             EventDestroyed;                                    // 0x0D80(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class UCACollisionComponent*                  GameplayArea;                                      // 0x0D90(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             EventDestroyedSuspended;                           // 0x0D98(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             EventDestroyedResumed;                             // 0x0DA8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             EventDelay;                                        // 0x0DB8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	struct FGameplayEffectSpec                    Killing_Effect_Spec;                               // 0x0DC8(0x0298)(Edit, BlueprintVisible, DisableEditOnInstance)
	class AActor*                                 KillingInstigator;                                 // 0x1060(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDataTableRowHandle                    DestructibleActorData;                             // 0x1068(0x0018)(Edit, BlueprintVisible, NoDestructor)
	float                                         NoiseEventRange;                                   // 0x1080(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1084[0x4];                                     // 0x1084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             EventBroken;                                       // 0x1088(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void EventIntact__DelegateSignature();
	void EventDestroyed__DelegateSignature();
	void EventDestroyedSuspended__DelegateSignature();
	void EventDestroyedResumed__DelegateSignature();
	void EventDelay__DelegateSignature();
	void EventBroken__DelegateSignature();
	void ExecuteUbergraph_BP_DestructibleActorStateMachine(int32 EntryPoint);
	void InstigatorDestroyed(class AActor* DestroyedActor);
	void Delay();
	void BindDelegates();
	void DestroyedResumed();
	void DestroyedSuspended();
	void Destroyed();
	void Intact();
	void OnZeroHealth(const struct FGameplayEffectSpec& Killing_effect_spec, float Delta_value);
	void SetInitialState(class FName Initial_Default_State);
	void AddGameplayAreaReference(class UCACollisionComponent* GameplayArea_0);
	void AddDestructibleActorData(const struct FDataTableRowHandle& DestructibleActorData_0);
	void SetUpDestructibleActorVariant();
	void Set_Instigator_to_Owner();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_DestructibleActorStateMachine_C">();
	}
	static class UBP_DestructibleActorStateMachine_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_DestructibleActorStateMachine_C>();
	}
};
static_assert(alignof(UBP_DestructibleActorStateMachine_C) == 0x000008, "Wrong alignment on UBP_DestructibleActorStateMachine_C");
static_assert(sizeof(UBP_DestructibleActorStateMachine_C) == 0x001098, "Wrong size on UBP_DestructibleActorStateMachine_C");
static_assert(offsetof(UBP_DestructibleActorStateMachine_C, UberGraphFrame) == 0x000D60, "Member 'UBP_DestructibleActorStateMachine_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_DestructibleActorStateMachine_C, AbilityComponent) == 0x000D68, "Member 'UBP_DestructibleActorStateMachine_C::AbilityComponent' has a wrong offset!");
static_assert(offsetof(UBP_DestructibleActorStateMachine_C, EventIntact) == 0x000D70, "Member 'UBP_DestructibleActorStateMachine_C::EventIntact' has a wrong offset!");
static_assert(offsetof(UBP_DestructibleActorStateMachine_C, EventDestroyed) == 0x000D80, "Member 'UBP_DestructibleActorStateMachine_C::EventDestroyed' has a wrong offset!");
static_assert(offsetof(UBP_DestructibleActorStateMachine_C, GameplayArea) == 0x000D90, "Member 'UBP_DestructibleActorStateMachine_C::GameplayArea' has a wrong offset!");
static_assert(offsetof(UBP_DestructibleActorStateMachine_C, EventDestroyedSuspended) == 0x000D98, "Member 'UBP_DestructibleActorStateMachine_C::EventDestroyedSuspended' has a wrong offset!");
static_assert(offsetof(UBP_DestructibleActorStateMachine_C, EventDestroyedResumed) == 0x000DA8, "Member 'UBP_DestructibleActorStateMachine_C::EventDestroyedResumed' has a wrong offset!");
static_assert(offsetof(UBP_DestructibleActorStateMachine_C, EventDelay) == 0x000DB8, "Member 'UBP_DestructibleActorStateMachine_C::EventDelay' has a wrong offset!");
static_assert(offsetof(UBP_DestructibleActorStateMachine_C, Killing_Effect_Spec) == 0x000DC8, "Member 'UBP_DestructibleActorStateMachine_C::Killing_Effect_Spec' has a wrong offset!");
static_assert(offsetof(UBP_DestructibleActorStateMachine_C, KillingInstigator) == 0x001060, "Member 'UBP_DestructibleActorStateMachine_C::KillingInstigator' has a wrong offset!");
static_assert(offsetof(UBP_DestructibleActorStateMachine_C, DestructibleActorData) == 0x001068, "Member 'UBP_DestructibleActorStateMachine_C::DestructibleActorData' has a wrong offset!");
static_assert(offsetof(UBP_DestructibleActorStateMachine_C, NoiseEventRange) == 0x001080, "Member 'UBP_DestructibleActorStateMachine_C::NoiseEventRange' has a wrong offset!");
static_assert(offsetof(UBP_DestructibleActorStateMachine_C, EventBroken) == 0x001088, "Member 'UBP_DestructibleActorStateMachine_C::EventBroken' has a wrong offset!");

}

