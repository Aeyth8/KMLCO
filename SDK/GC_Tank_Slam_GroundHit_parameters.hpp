#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GC_Tank_Slam_GroundHit

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"
#include "CAAudio_structs.hpp"


namespace SDK::Params
{

// Function GC_Tank_Slam_GroundHit.GC_Tank_Slam_GroundHit_C.WhileActive
// 0x0128 (0x0128 - 0x0000)
struct GC_Tank_Slam_GroundHit_C_WhileActive final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x00F0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	bool                                          ReturnValue;                                       // 0x00F8(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F9[0x3];                                       // 0x00F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const struct FCAAudioEventType& Event_name)> Temp_delegate_Variable;                            // 0x00FC(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	struct FCAAudioPlaybackInstance               CallFunc_PlayEvent_playback_instance;              // 0x0110(0x0010)()
	bool                                          CallFunc_PlayEvent_play_success;                   // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GC_Tank_Slam_GroundHit_C_WhileActive) == 0x000008, "Wrong alignment on GC_Tank_Slam_GroundHit_C_WhileActive");
static_assert(sizeof(GC_Tank_Slam_GroundHit_C_WhileActive) == 0x000128, "Wrong size on GC_Tank_Slam_GroundHit_C_WhileActive");
static_assert(offsetof(GC_Tank_Slam_GroundHit_C_WhileActive, MyTarget) == 0x000000, "Member 'GC_Tank_Slam_GroundHit_C_WhileActive::MyTarget' has a wrong offset!");
static_assert(offsetof(GC_Tank_Slam_GroundHit_C_WhileActive, Parameters) == 0x000008, "Member 'GC_Tank_Slam_GroundHit_C_WhileActive::Parameters' has a wrong offset!");
static_assert(offsetof(GC_Tank_Slam_GroundHit_C_WhileActive, ReturnValue) == 0x0000F8, "Member 'GC_Tank_Slam_GroundHit_C_WhileActive::ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_Tank_Slam_GroundHit_C_WhileActive, Temp_delegate_Variable) == 0x0000FC, "Member 'GC_Tank_Slam_GroundHit_C_WhileActive::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(GC_Tank_Slam_GroundHit_C_WhileActive, CallFunc_PlayEvent_playback_instance) == 0x000110, "Member 'GC_Tank_Slam_GroundHit_C_WhileActive::CallFunc_PlayEvent_playback_instance' has a wrong offset!");
static_assert(offsetof(GC_Tank_Slam_GroundHit_C_WhileActive, CallFunc_PlayEvent_play_success) == 0x000120, "Member 'GC_Tank_Slam_GroundHit_C_WhileActive::CallFunc_PlayEvent_play_success' has a wrong offset!");

// Function GC_Tank_Slam_GroundHit.GC_Tank_Slam_GroundHit_C.OnRemove
// 0x0100 (0x0100 - 0x0000)
struct GC_Tank_Slam_GroundHit_C_OnRemove final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x00F0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	bool                                          ReturnValue;                                       // 0x00F8(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GC_Tank_Slam_GroundHit_C_OnRemove) == 0x000008, "Wrong alignment on GC_Tank_Slam_GroundHit_C_OnRemove");
static_assert(sizeof(GC_Tank_Slam_GroundHit_C_OnRemove) == 0x000100, "Wrong size on GC_Tank_Slam_GroundHit_C_OnRemove");
static_assert(offsetof(GC_Tank_Slam_GroundHit_C_OnRemove, MyTarget) == 0x000000, "Member 'GC_Tank_Slam_GroundHit_C_OnRemove::MyTarget' has a wrong offset!");
static_assert(offsetof(GC_Tank_Slam_GroundHit_C_OnRemove, Parameters) == 0x000008, "Member 'GC_Tank_Slam_GroundHit_C_OnRemove::Parameters' has a wrong offset!");
static_assert(offsetof(GC_Tank_Slam_GroundHit_C_OnRemove, ReturnValue) == 0x0000F8, "Member 'GC_Tank_Slam_GroundHit_C_OnRemove::ReturnValue' has a wrong offset!");

}

