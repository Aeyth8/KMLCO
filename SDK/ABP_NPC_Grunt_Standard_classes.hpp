#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_NPC_Grunt_Standard

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Keaton_structs.hpp"
#include "Keaton_classes.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_NPC_Grunt_Standard.ABP_NPC_Grunt_Standard_C
// 0x6710 (0x6B20 - 0x0410)
class UABP_NPC_Grunt_Standard_C : public UCAAnimInstance_NPC
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0410(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_8;                    // 0x0418(0x0158)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_6;                              // 0x0570(0x00E8)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_2;                     // 0x0658(0x00D0)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_5;                              // 0x0728(0x00E8)()
	struct FAnimNode_RefPose                      AnimGraphNode_IdentityPose;                        // 0x0810(0x0018)()
	struct FAnimNode_HandIKRetargeting            AnimGraphNode_HandIKRetargeting;                   // 0x0828(0x0138)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x0960(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x0980(0x0020)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_12;                    // 0x09A0(0x0030)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_4;                              // 0x09D0(0x00E8)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_7;                    // 0x0AB8(0x0158)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_11;                    // 0x0C10(0x0030)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_10;                    // 0x0C40(0x0030)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_5;                   // 0x0C70(0x00A0)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_6;                    // 0x0D10(0x0158)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_5;                    // 0x0E68(0x0158)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_3;                  // 0x0FC0(0x00C0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_26;                   // 0x1080(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_25;                   // 0x1100(0x0080)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_9;                  // 0x1180(0x00E8)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_8;                  // 0x1268(0x00E8)()
	struct FAnimNode_TwoBoneIK                    AnimGraphNode_TwoBoneIK_1;                         // 0x1350(0x0210)()
	struct FAnimNode_TwoBoneIK                    AnimGraphNode_TwoBoneIK;                           // 0x1560(0x0210)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_24;                   // 0x1770(0x0080)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_4;                   // 0x17F0(0x00A0)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_9;                     // 0x1890(0x0030)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_2;                  // 0x18C0(0x00C0)()
	struct FAnimNode_RotateRootBone               AnimGraphNode_RotateRootBone_3;                    // 0x1980(0x00E0)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_3;                   // 0x1A60(0x00A0)()
	struct FAnimNode_RefPose                      AnimGraphNode_LocalRefPose;                        // 0x1B00(0x0018)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_3;                              // 0x1B18(0x00E8)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_1;                        // 0x1C00(0x0110)()
	struct FAnimNode_LegIK                        AnimGraphNode_LegIK;                               // 0x1D10(0x0100)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone;                          // 0x1E10(0x0110)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_7;                  // 0x1F20(0x00E8)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_2;                   // 0x2008(0x00A0)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_6;                  // 0x20A8(0x00E8)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_1;                   // 0x2190(0x00A0)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_4;                    // 0x2230(0x0158)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_8;                     // 0x2388(0x0030)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_7;                     // 0x23B8(0x0030)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_2;                              // 0x23E8(0x00E8)()
	struct FAnimNode_RotationOffsetBlendSpace     AnimGraphNode_RotationOffsetBlendSpace_2;          // 0x24D0(0x0198)()
	struct FAnimNode_RotationOffsetBlendSpace     AnimGraphNode_RotationOffsetBlendSpace_1;          // 0x2668(0x0198)()
	struct FAnimNode_LookAt                       AnimGraphNode_LookAt;                              // 0x2800(0x01D0)()
	struct FAnimNode_ModifyCurve                  AnimGraphNode_ModifyCurve_10;                      // 0x29D0(0x0058)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_46;                 // 0x2A28(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_45;                 // 0x2A50(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_44;                 // 0x2A78(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_43;                 // 0x2AA0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_42;                 // 0x2AC8(0x0028)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x2AF0(0x00A0)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_5;                  // 0x2B90(0x00E8)()
	struct FAnimNode_RotateRootBone               AnimGraphNode_RotateRootBone_2;                    // 0x2C78(0x00E0)()
	struct FAnimNode_ModifyCurve                  AnimGraphNode_ModifyCurve_9;                       // 0x2D58(0x0058)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_4;                  // 0x2DB0(0x00E8)()
	struct FAnimNode_RotateRootBone               AnimGraphNode_RotateRootBone_1;                    // 0x2E98(0x00E0)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_25;                      // 0x2F78(0x0038)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_6;                     // 0x2FB0(0x0030)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_24;                      // 0x2FE0(0x0038)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_3;                      // 0x3018(0x00B0)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_3;                    // 0x30C8(0x0158)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_2;                    // 0x3220(0x0158)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_5;                     // 0x3378(0x0030)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_4;                     // 0x33A8(0x0030)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_1;                  // 0x33D8(0x00C0)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_1;                     // 0x3498(0x00D0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_23;                   // 0x3568(0x0080)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_1;                    // 0x35E8(0x0158)()
	struct FAnimNode_RotationOffsetBlendSpace     AnimGraphNode_RotationOffsetBlendSpace;            // 0x3740(0x0198)()
	struct FAnimNode_ModifyCurve                  AnimGraphNode_ModifyCurve_8;                       // 0x38D8(0x0058)()
	struct FAnimNode_RotateRootBone               AnimGraphNode_RotateRootBone;                      // 0x3930(0x00E0)()
	struct FAnimNode_ModifyCurve                  AnimGraphNode_ModifyCurve_7;                       // 0x3A10(0x0058)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_1;                              // 0x3A68(0x00E8)()
	struct FAnimNode_ModifyCurve                  AnimGraphNode_ModifyCurve_6;                       // 0x3B50(0x0058)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_41;                 // 0x3BA8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_40;                 // 0x3BD0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_39;                 // 0x3BF8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_38;                 // 0x3C20(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_37;                 // 0x3C48(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_36;                 // 0x3C70(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_35;                 // 0x3C98(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_34;                 // 0x3CC0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_33;                 // 0x3CE8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_32;                 // 0x3D10(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_31;                 // 0x3D38(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_30;                 // 0x3D60(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_29;                 // 0x3D88(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_28;                 // 0x3DB0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_27;                 // 0x3DD8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_26;                 // 0x3E00(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_25;                 // 0x3E28(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_24;                 // 0x3E50(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_23;                 // 0x3E78(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_22;                 // 0x3EA0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_21;                 // 0x3EC8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_20;                 // 0x3EF0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_19;                 // 0x3F18(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_18;                 // 0x3F40(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_17;                 // 0x3F68(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_16;                 // 0x3F90(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_15;                 // 0x3FB8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_14;                 // 0x3FE0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_13;                 // 0x4008(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_12;                 // 0x4030(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_11;                 // 0x4058(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_10;                 // 0x4080(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_9;                  // 0x40A8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_8;                  // 0x40D0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_7;                  // 0x40F8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_6;                  // 0x4120(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_5;                  // 0x4148(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x4170(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_22;                   // 0x4198(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_23;                      // 0x4218(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_21;                   // 0x4250(0x0080)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend_6;                       // 0x42D0(0x00C8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_20;                   // 0x4398(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_22;                      // 0x4418(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_19;                   // 0x4450(0x0080)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend_5;                       // 0x44D0(0x00C8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_18;                   // 0x4598(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_21;                      // 0x4618(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_17;                   // 0x4650(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_20;                      // 0x46D0(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_16;                   // 0x4708(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_19;                      // 0x4788(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_15;                   // 0x47C0(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_18;                      // 0x4840(0x0038)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_3;                  // 0x4878(0x00E8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_17;                      // 0x4960(0x0038)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_2;                  // 0x4998(0x00E8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_16;                      // 0x4A80(0x0038)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_1;                  // 0x4AB8(0x00E8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_15;                      // 0x4BA0(0x0038)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer;                    // 0x4BD8(0x00E8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_14;                      // 0x4CC0(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_14;                   // 0x4CF8(0x0080)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend_4;                       // 0x4D78(0x00C8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_13;                   // 0x4E40(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_13;                      // 0x4EC0(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_12;                   // 0x4EF8(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_12;                      // 0x4F78(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_11;                   // 0x4FB0(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_11;                      // 0x5030(0x0038)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend_3;                       // 0x5068(0x00C8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_10;                   // 0x5130(0x0080)()
	struct FAnimNode_ModifyCurve                  AnimGraphNode_ModifyCurve_5;                       // 0x51B0(0x0058)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive;                       // 0x5208(0x00D0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_9;                    // 0x52D8(0x0080)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_3;                     // 0x5358(0x0030)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_10;                      // 0x5388(0x0038)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_2;                     // 0x53C0(0x0030)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_9;                       // 0x53F0(0x0038)()
	struct FAnimNode_ModifyCurve                  AnimGraphNode_ModifyCurve_4;                       // 0x5428(0x0058)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_8;                    // 0x5480(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_8;                       // 0x5500(0x0038)()
	struct FAnimNode_ModifyCurve                  AnimGraphNode_ModifyCurve_3;                       // 0x5538(0x0058)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_7;                    // 0x5590(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_7;                       // 0x5610(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_6;                    // 0x5648(0x0080)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend_2;                       // 0x56C8(0x00C8)()
	struct FAnimNode_ModifyCurve                  AnimGraphNode_ModifyCurve_2;                       // 0x5790(0x0058)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x57E8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x5810(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_5;                    // 0x5838(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_6;                       // 0x58B8(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x58F0(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_5;                       // 0x5970(0x0038)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_2;                      // 0x59A8(0x00B0)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_4;                       // 0x5A58(0x0038)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_1;                     // 0x5A90(0x0030)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x5AC0(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x5AF8(0x0080)()
	struct FAnimNode_ModifyCurve                  AnimGraphNode_ModifyCurve_1;                       // 0x5B78(0x0058)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x5BD0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x5BF8(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x5C20(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x5CA0(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x5CD8(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x5D58(0x0038)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_1;                      // 0x5D90(0x00B0)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend_1;                       // 0x5E40(0x00C8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x5F08(0x0038)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x5F40(0x00B0)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x5FF0(0x0158)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x6148(0x0038)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x6180(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x61B0(0x0080)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend;                    // 0x6230(0x00C0)()
	struct FAnimNode_ModifyCurve                  AnimGraphNode_ModifyCurve;                         // 0x62F0(0x0058)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend;                         // 0x6348(0x00C8)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x6410(0x00E8)()
	struct FAnimNode_PoseBlendNode                AnimGraphNode_PoseBlendNode;                       // 0x64F8(0x00A0)()
	bool                                          IsMoving;                                          // 0x6598(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6599[0x3];                                     // 0x6599(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         _DEBUG_Pitch;                                      // 0x659C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         _DEBUG_Yaw;                                        // 0x65A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         _DEBUG_ForwardSpeed;                               // 0x65A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         _DEBUG_LateralSpeed;                               // 0x65A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65AC[0x4];                                     // 0x65AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequenceBase*                      DeathAnimation;                                    // 0x65B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsAware;                                           // 0x65B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsInCombat;                                        // 0x65B9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsDead;                                            // 0x65BA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_65BB[0x5];                                     // 0x65BB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequenceBase*                      UnawareGesturing;                                  // 0x65C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      CombatGesturing;                                   // 0x65C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACACharacter_NPC*                       CACharacter_NPC;                                   // 0x65D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACAWeapon*                              CAWeapon;                                          // 0x65D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   SlotFullBodyReplacement;                           // 0x65E0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               AimOffsetRotator;                                  // 0x65EC(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	TArray<class UAnimSequenceBase*>              HeadHitAnims;                                      // 0x65F8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UAnimSequenceBase*>              ChestHitAnims;                                     // 0x6608(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UAnimSequenceBase*>              GutHitAnims;                                       // 0x6618(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UAnimSequenceBase*>              LegHitAnims;                                       // 0x6628(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UAnimSequenceBase*>              HeadDeathAnims;                                    // 0x6638(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UAnimSequenceBase*>              GutDeathAnims;                                     // 0x6648(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UAnimSequenceBase*>              ChestDeathAnims;                                   // 0x6658(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FName                                   RagdollRootBone;                                   // 0x6668(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                WorldVelocity;                                     // 0x6674(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                WorldAcceleration;                                 // 0x6680(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LocalVelocity;                                     // 0x668C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsInZeroG;                                         // 0x6698(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsFloating;                                        // 0x6699(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsUsingMagboots;                                   // 0x669A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_669B[0x1];                                     // 0x669B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         StrafeAngle;                                       // 0x669C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PreviousStrafeAngle;                               // 0x66A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          StrafeAngleChanged;                                // 0x66A4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          LocalVelocityChanged;                              // 0x66A5(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_66A6[0x2];                                     // 0x66A6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         PrevForwardSpeed;                                  // 0x66A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PrevLateralSpeed;                                  // 0x66AC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentLOD;                                        // 0x66B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GazeTimer;                                         // 0x66B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CurrentPOI;                                        // 0x66B8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                PreviousPOI;                                       // 0x66C4(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LookAtLocationWorld;                               // 0x66D0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LookAtLocationWorld_Smooth;                        // 0x66DC(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CanSeePOI;                                         // 0x66E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          UseHeadLook;                                       // 0x66E9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          UseEyeLook;                                        // 0x66EA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsDedicatedServer;                                 // 0x66EB(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         VelocityMagnitude;                                 // 0x66EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TimeDelta;                                         // 0x66F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ProceduralLookTargetLocal;                         // 0x66F4(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          PrecisionLook;                                     // 0x6700(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6701[0x3];                                     // 0x6701(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         StoppingThresholdSpeed;                            // 0x6704(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentHeading;                                    // 0x6708(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CapsuleHeading;                                    // 0x670C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AIHeading;                                         // 0x6710(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AimHeading;                                        // 0x6714(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TargetHeading;                                     // 0x6718(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HeadingDelta;                                      // 0x671C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TurnRate;                                          // 0x6720(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          WasMovingRecently;                                 // 0x6724(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6725[0x3];                                     // 0x6725(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MovingTimer;                                       // 0x6728(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AimOffsetRange;                                    // 0x672C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsADS;                                             // 0x6730(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6731[0x3];                                     // 0x6731(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ProcLookAlpha;                                     // 0x6734(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsFiring;                                          // 0x6738(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6739[0x7];                                     // 0x6739(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UAnimSequenceBase*>              LegDeathAnims;                                     // 0x6740(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UAnimSequenceBase*                      TEST_DeathAnim;                                    // 0x6750(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsOnscreenOrAudible;                               // 0x6758(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6759[0x7];                                     // 0x6759(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequenceBase*                      HitReactionFireDamage;                             // 0x6760(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LookAtLocationValid;                               // 0x6768(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6769[0x3];                                     // 0x6769(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         SpinRate;                                          // 0x676C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             RootBoneTransform;                                 // 0x6770(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FTransform                             FeetRootTransform;                                 // 0x67A0(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         SlopeHeightOffset;                                 // 0x67D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_67D4[0x4];                                     // 0x67D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UAnimSequenceBase*>              HeadHitAnims_ZG;                                   // 0x67D8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UAnimSequenceBase*>              ChestHitAnims_ZG;                                  // 0x67E8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UAnimSequenceBase*>              GutHitAnims_ZG;                                    // 0x67F8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FVector                                LastHitDirection;                                  // 0x6808(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LastHitBaseDamage;                                 // 0x6814(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LastHitLocation;                                   // 0x6818(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Spin_AngularVelocity;                              // 0x6824(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               SpinRotator;                                       // 0x6830(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FVector                                Spin_RootBoneOffset;                               // 0x683C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CM_to_RootBone;                                    // 0x6848(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6854[0x4];                                     // 0x6854(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UAnimSequenceBase*>              LegHitAnims_ZG;                                    // 0x6858(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UAnimSequenceBase*>              HeadDeathAnims_ZG;                                 // 0x6868(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UAnimSequenceBase*>              ChestDeathAnims_ZG;                                // 0x6878(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UAnimSequenceBase*>              GutDeathAnims_ZG;                                  // 0x6888(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UAnimSequenceBase*>              LegDeathAnims_ZG;                                  // 0x6898(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         ADS_strength;                                      // 0x68A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ADS_strength_post;                                 // 0x68AC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TurnDeltaAngle;                                    // 0x68B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Haste;                                             // 0x68B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TurnSourceHeading;                                 // 0x68B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TurnTargetHeading;                                 // 0x68BC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          TurnIsFadingOut;                                   // 0x68C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_68C1[0x3];                                     // 0x68C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MinTurnAngle;                                      // 0x68C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FootToTargetMin;                                   // 0x68C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                MoveTarget;                                        // 0x68CC(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                MoveToLocationWorld;                               // 0x68D8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DistanceToMoveTarget;                              // 0x68E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StoppingTriggerDistance;                           // 0x68E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_68EC[0x4];                                     // 0x68EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UAnimSequenceBase*>              RandomCasualIdles;                                 // 0x68F0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<float>                                 CasualIdlesWeights;                                // 0x6900(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UAnimSequenceBase*>              RandomAwareIdles;                                  // 0x6910(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<float>                                 AwareIdlesWeights;                                 // 0x6920(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UAnimSequenceBase*                      RandomCasualIdle1;                                 // 0x6930(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      RandomCasualIdle2;                                 // 0x6938(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      RandomAwareIdle1;                                  // 0x6940(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      RandomAwareIdle2;                                  // 0x6948(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsAccelerating;                                    // 0x6950(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsDecelerating;                                    // 0x6951(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsChangingDirection;                               // 0x6952(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsRagdoll;                                         // 0x6953(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6954[0x4];                                     // 0x6954(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalAnimationComponent*            PhysAnimComp;                                      // 0x6958(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         IsInjured;                                         // 0x6960(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         UseProceduralFace;                                 // 0x6964(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NextIdle;                                          // 0x6968(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_696C[0x4];                                     // 0x696C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 PrevIdles;                                         // 0x6970(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UAnimSequenceBase*>              GutDeathAnims_Moving;                              // 0x6980(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UAnimSequenceBase*>              ChestDeathAnims_Moving;                            // 0x6990(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UAnimSequenceBase*>              GutDeathAnims_Explosion;                           // 0x69A0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UAnimSequenceBase*>              GutDeathAnims_SG;                                  // 0x69B0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UAnimSequenceBase*>              ChestDeathAnims_SG;                                // 0x69C0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UAnimSequenceBase*>              ChestDeathAnims_Auto;                              // 0x69D0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UAnimSequenceBase*>              GutDeathAnims_Auto;                                // 0x69E0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UAnimSequenceBase*                      KnockBackAnim;                                     // 0x69F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Debug300;                                          // 0x69F8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StopAnimStartPos;                                  // 0x6A04(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UAnimSequenceBase*>              LegDeathAnims_SG;                                  // 0x6A08(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         StepPhase;                                         // 0x6A18(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A1C[0x4];                                     // 0x6A1C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDebugFloatHistory                     DebugFloatHistory;                                 // 0x6A20(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FVector                                DebugPos0;                                         // 0x6A40(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DebugTime0;                                        // 0x6A4C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           DebugColor;                                        // 0x6A50(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsInCombatState;                                   // 0x6A60(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsIdle;                                            // 0x6A61(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6A62[0x2];                                     // 0x6A62(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                _DEBUG_Velocity;                                   // 0x6A64(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                _DEBUG_CachedVelocity;                             // 0x6A70(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Debug_Text_Color;                                  // 0x6A7C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Debug_Bool;                                        // 0x6A8C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6A8D[0x3];                                     // 0x6A8D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UAnimSequenceBase*>              DeathAnims_TEST;                                   // 0x6A90(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FName                                   OnNPCTauntPlayer;                                  // 0x6AA0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   OnCombatEvasive;                                   // 0x6AAC(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   OnStartReload;                                     // 0x6AB8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   OnCombatTacticalGenericMove;                       // 0x6AC4(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                DeathAnimMovingDirection_tm;                       // 0x6AD0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6ADC[0x4];                                     // 0x6ADC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UAnimSequenceBase*>              GutDeathAnims_BBQ;                                 // 0x6AE0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         DeathDirectionIndex;                               // 0x6AF0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               DeathAttackDirection;                              // 0x6AF4(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	TArray<class UAnimSequenceBase*>              DeathAnims_Fire;                                   // 0x6B00(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          Initialized;                                       // 0x6B10(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void AnimGraph(struct FPoseLink* AnimGraph_0);
	void Get_Death_Anim_Yaw_Offset(float* Yaw);
	void ShouldLowerWeaponInCombat(bool* IsInCombat_0);
	void AddPOI(const struct FVector& Location, bool ForceCurrent, bool* Changed);
	void OnHitReaction(const struct FNetworkedHit& Hit);
	void GetDeathAnimation(const struct FNetworkedHit& Hit);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_NPC_Grunt_Standard_AnimGraphNode_TransitionResult_4C6A28C2491CF0E36897DF9D3531C71B();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_NPC_Grunt_Standard_AnimGraphNode_TransitionResult_562F8CE3451CE508D6FEAD9DC1236A56();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_NPC_Grunt_Standard_AnimGraphNode_TransitionResult_D0B6E82A41B84957F11ECA9C94492CD5();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_NPC_Grunt_Standard_AnimGraphNode_TransitionResult_8C45B1A34559F140091280B917B5469F();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_NPC_Grunt_Standard_AnimGraphNode_TransitionResult_CEC0F35B4AB0680ACAE3DEB761089CDA();
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void OnDeath(class ACACharacter* Character, const struct FGameplayEffectSpec& Death_gameplay_effect_spec, float Damage_magnitude, const struct FNetworkedHit& Networked_hit, const class AActor* Killer);
	void BlueprintInitializeAnimation();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_NPC_Grunt_Standard_AnimGraphNode_TransitionResult_2E429B86424AE0C2D61731ACE0A1543C();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_NPC_Grunt_Standard_AnimGraphNode_TransitionResult_F59426D6480E6AA2B04629974E6D397C();
	void AnimNotify_SND_NPC_Footfall();
	void OnHitReceivedEvent(const struct FNetworkedHit& Hit);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_NPC_Grunt_Standard_AnimGraphNode_TransitionResult_14A9A580412BB5E1C5C70BB89B1F7DFA();
	void OnLocalHitReceived(const struct FNetworkedHit& Hit);
	void AnimNotify_SND_Foot_Down();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_NPC_Grunt_Standard_AnimGraphNode_TransitionResult_4E49F43B4D4958443E5EB683EE39D744();
	void OnTeleport(float TeleportDuration, bool In);
	void AnimNotify_EnableRagdoll();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_NPC_Grunt_Standard_AnimGraphNode_TransitionResult_E52ECC8D4943ED85208BF7A307C63B6E();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_NPC_Grunt_Standard_AnimGraphNode_TransitionResult_B4D9202E4076F210925B8EBE4472F342();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_NPC_Grunt_Standard_AnimGraphNode_TransitionResult_AD6281EE40A346646ECA01A7F257E9AF();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_NPC_Grunt_Standard_AnimGraphNode_TransitionResult_ABE570DA4E790F5677615AB376CBEB68();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_NPC_Grunt_Standard_AnimGraphNode_TransitionResult_83A27A984DCEB45E4C7855B54ABC2470();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_NPC_Grunt_Standard_AnimGraphNode_TransitionResult_05BBED244E038044F89953B3E06E62CC();
	void BlueprintBeginPlay();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_NPC_Grunt_Standard_AnimGraphNode_TransitionResult_B2D6D8784FF29D1C9DC932B00D7759C6();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_NPC_Grunt_Standard_AnimGraphNode_TransitionResult_370BBE2C4E53EA464F34FD8439DE8BCB();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_NPC_Grunt_Standard_AnimGraphNode_TransitionResult_411BC70047D6EE6D8F9CECB04F162A40();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_NPC_Grunt_Standard_AnimGraphNode_TransitionResult_30A7027346E8EC5F2D62A4AC68D5DE0D();
	void OnDialogStarted(const struct FDialogueAnimParams& Params_0);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_NPC_Grunt_Standard_AnimGraphNode_TransitionResult_2725AFE4443B5AF9AF85AB8B42896CFE();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_NPC_Grunt_Standard_AnimGraphNode_TransitionResult_5C6618034BDA512EFFC8B2A6262DA22B();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_NPC_Grunt_Standard_AnimGraphNode_TransitionResult_9F4B0F2247B157E83ADC478F288C6F1E();
	void AnimNotify_StartFloating();
	void AnimNotify_TurnFadeOutStarted();
	void AnimNotify_EnterCasualIdle1();
	void AnimNotify_EnterCasualIdle2();
	void AnimNotify_EnterAwareIdle1();
	void AnimNotify_EnterAwareIdle2();
	void OnPoolStateChanged(bool Is_in_pool);
	void AnimNotify_Face_Blink();
	void AnimNotify_EnterStopping();
	void AnimNotify_EnterStarting();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_NPC_Grunt_Standard_AnimGraphNode_BlendListByBool_9AB64F664130D9DBFB2283AB3BEEE8AD();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_NPC_Grunt_Standard_AnimGraphNode_ModifyCurve_DDBAE7EE4D9816CF441A96AE853FE373();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_NPC_Grunt_Standard_AnimGraphNode_ModifyBone_20E1801C4CF5FBCAFFFFAEA096C7AA9F();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_NPC_Grunt_Standard_AnimGraphNode_ModifyBone_61ED796140CCC83F23E190AE60A7F964();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_NPC_Grunt_Standard_AnimGraphNode_RotateRootBone_6AFE036546789515B1BD818A0C1BA11F();
	void AnimNotify_DialogueTriggerNPCTaunt();
	void AnimNotify_DialogueTriggerNPCEvasive();
	void AnimNotify_DialogueTriggerNPCReload();
	void AnimNotify_DialogueTriggerNPCMove();
	void ExecuteUbergraph_ABP_NPC_Grunt_Standard(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_NPC_Grunt_Standard_C">();
	}
	static class UABP_NPC_Grunt_Standard_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_NPC_Grunt_Standard_C>();
	}
};
static_assert(alignof(UABP_NPC_Grunt_Standard_C) == 0x000010, "Wrong alignment on UABP_NPC_Grunt_Standard_C");
static_assert(sizeof(UABP_NPC_Grunt_Standard_C) == 0x006B20, "Wrong size on UABP_NPC_Grunt_Standard_C");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, UberGraphFrame) == 0x000410, "Member 'UABP_NPC_Grunt_Standard_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_SaveCachedPose_8) == 0x000418, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_SaveCachedPose_8' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_Slot_6) == 0x000570, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_Slot_6' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_ApplyAdditive_2) == 0x000658, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_ApplyAdditive_2' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_Slot_5) == 0x000728, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_Slot_5' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_IdentityPose) == 0x000810, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_IdentityPose' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_HandIKRetargeting) == 0x000828, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_HandIKRetargeting' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_LocalToComponentSpace) == 0x000960, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_ComponentToLocalSpace) == 0x000980, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_UseCachedPose_12) == 0x0009A0, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_UseCachedPose_12' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_Slot_4) == 0x0009D0, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_Slot_4' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_SaveCachedPose_7) == 0x000AB8, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_SaveCachedPose_7' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_UseCachedPose_11) == 0x000C10, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_UseCachedPose_11' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_UseCachedPose_10) == 0x000C40, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_UseCachedPose_10' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_BlendListByBool_5) == 0x000C70, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_BlendListByBool_5' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_SaveCachedPose_6) == 0x000D10, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_SaveCachedPose_6' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_SaveCachedPose_5) == 0x000E68, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_SaveCachedPose_5' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_LayeredBoneBlend_3) == 0x000FC0, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_LayeredBoneBlend_3' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_SequencePlayer_26) == 0x001080, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_SequencePlayer_26' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_SequencePlayer_25) == 0x001100, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_SequencePlayer_25' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_BlendSpacePlayer_9) == 0x001180, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_BlendSpacePlayer_9' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_BlendSpacePlayer_8) == 0x001268, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_BlendSpacePlayer_8' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_TwoBoneIK_1) == 0x001350, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_TwoBoneIK_1' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_TwoBoneIK) == 0x001560, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_TwoBoneIK' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_SequencePlayer_24) == 0x001770, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_SequencePlayer_24' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_BlendListByBool_4) == 0x0017F0, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_BlendListByBool_4' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_UseCachedPose_9) == 0x001890, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_UseCachedPose_9' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_LayeredBoneBlend_2) == 0x0018C0, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_LayeredBoneBlend_2' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_RotateRootBone_3) == 0x001980, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_RotateRootBone_3' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_BlendListByBool_3) == 0x001A60, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_BlendListByBool_3' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_LocalRefPose) == 0x001B00, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_LocalRefPose' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_Slot_3) == 0x001B18, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_Slot_3' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_ModifyBone_1) == 0x001C00, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_ModifyBone_1' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_LegIK) == 0x001D10, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_LegIK' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_ModifyBone) == 0x001E10, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_ModifyBone' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_BlendSpacePlayer_7) == 0x001F20, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_BlendSpacePlayer_7' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_BlendListByBool_2) == 0x002008, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_BlendListByBool_2' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_BlendSpacePlayer_6) == 0x0020A8, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_BlendSpacePlayer_6' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_BlendListByBool_1) == 0x002190, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_BlendListByBool_1' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_SaveCachedPose_4) == 0x002230, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_SaveCachedPose_4' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_UseCachedPose_8) == 0x002388, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_UseCachedPose_8' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_UseCachedPose_7) == 0x0023B8, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_UseCachedPose_7' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_Slot_2) == 0x0023E8, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_Slot_2' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_RotationOffsetBlendSpace_2) == 0x0024D0, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_RotationOffsetBlendSpace_2' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_RotationOffsetBlendSpace_1) == 0x002668, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_RotationOffsetBlendSpace_1' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_LookAt) == 0x002800, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_LookAt' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_ModifyCurve_10) == 0x0029D0, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_ModifyCurve_10' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_TransitionResult_46) == 0x002A28, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_TransitionResult_46' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_TransitionResult_45) == 0x002A50, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_TransitionResult_45' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_TransitionResult_44) == 0x002A78, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_TransitionResult_44' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_TransitionResult_43) == 0x002AA0, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_TransitionResult_43' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_TransitionResult_42) == 0x002AC8, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_TransitionResult_42' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_BlendListByBool) == 0x002AF0, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_BlendSpacePlayer_5) == 0x002B90, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_BlendSpacePlayer_5' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_RotateRootBone_2) == 0x002C78, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_RotateRootBone_2' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_ModifyCurve_9) == 0x002D58, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_ModifyCurve_9' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_BlendSpacePlayer_4) == 0x002DB0, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_BlendSpacePlayer_4' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_RotateRootBone_1) == 0x002E98, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_RotateRootBone_1' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_StateResult_25) == 0x002F78, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_StateResult_25' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_UseCachedPose_6) == 0x002FB0, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_UseCachedPose_6' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_StateResult_24) == 0x002FE0, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_StateResult_24' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_StateMachine_3) == 0x003018, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_StateMachine_3' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_SaveCachedPose_3) == 0x0030C8, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_SaveCachedPose_3' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_SaveCachedPose_2) == 0x003220, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_SaveCachedPose_2' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_UseCachedPose_5) == 0x003378, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_UseCachedPose_5' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_UseCachedPose_4) == 0x0033A8, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_UseCachedPose_4' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_LayeredBoneBlend_1) == 0x0033D8, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_LayeredBoneBlend_1' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_ApplyAdditive_1) == 0x003498, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_ApplyAdditive_1' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_SequencePlayer_23) == 0x003568, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_SequencePlayer_23' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_SaveCachedPose_1) == 0x0035E8, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_SaveCachedPose_1' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_RotationOffsetBlendSpace) == 0x003740, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_RotationOffsetBlendSpace' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_ModifyCurve_8) == 0x0038D8, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_ModifyCurve_8' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_RotateRootBone) == 0x003930, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_RotateRootBone' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_ModifyCurve_7) == 0x003A10, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_ModifyCurve_7' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_Slot_1) == 0x003A68, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_Slot_1' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_ModifyCurve_6) == 0x003B50, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_ModifyCurve_6' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_TransitionResult_41) == 0x003BA8, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_TransitionResult_41' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_TransitionResult_40) == 0x003BD0, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_TransitionResult_40' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_TransitionResult_39) == 0x003BF8, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_TransitionResult_39' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_TransitionResult_38) == 0x003C20, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_TransitionResult_38' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_TransitionResult_37) == 0x003C48, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_TransitionResult_37' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_TransitionResult_36) == 0x003C70, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_TransitionResult_36' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_TransitionResult_35) == 0x003C98, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_TransitionResult_35' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_TransitionResult_34) == 0x003CC0, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_TransitionResult_34' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_TransitionResult_33) == 0x003CE8, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_TransitionResult_33' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_TransitionResult_32) == 0x003D10, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_TransitionResult_32' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_TransitionResult_31) == 0x003D38, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_TransitionResult_31' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_TransitionResult_30) == 0x003D60, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_TransitionResult_30' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_TransitionResult_29) == 0x003D88, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_TransitionResult_29' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_TransitionResult_28) == 0x003DB0, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_TransitionResult_28' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_TransitionResult_27) == 0x003DD8, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_TransitionResult_27' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_TransitionResult_26) == 0x003E00, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_TransitionResult_26' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_TransitionResult_25) == 0x003E28, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_TransitionResult_25' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_TransitionResult_24) == 0x003E50, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_TransitionResult_24' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_TransitionResult_23) == 0x003E78, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_TransitionResult_23' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_TransitionResult_22) == 0x003EA0, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_TransitionResult_22' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_TransitionResult_21) == 0x003EC8, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_TransitionResult_21' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_TransitionResult_20) == 0x003EF0, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_TransitionResult_20' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_TransitionResult_19) == 0x003F18, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_TransitionResult_19' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_TransitionResult_18) == 0x003F40, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_TransitionResult_18' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_TransitionResult_17) == 0x003F68, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_TransitionResult_17' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_TransitionResult_16) == 0x003F90, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_TransitionResult_16' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_TransitionResult_15) == 0x003FB8, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_TransitionResult_15' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_TransitionResult_14) == 0x003FE0, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_TransitionResult_14' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_TransitionResult_13) == 0x004008, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_TransitionResult_13' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_TransitionResult_12) == 0x004030, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_TransitionResult_12' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_TransitionResult_11) == 0x004058, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_TransitionResult_11' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_TransitionResult_10) == 0x004080, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_TransitionResult_10' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_TransitionResult_9) == 0x0040A8, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_TransitionResult_9' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_TransitionResult_8) == 0x0040D0, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_TransitionResult_8' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_TransitionResult_7) == 0x0040F8, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_TransitionResult_7' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_TransitionResult_6) == 0x004120, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_TransitionResult_6' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_TransitionResult_5) == 0x004148, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_TransitionResult_5' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_TransitionResult_4) == 0x004170, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_SequencePlayer_22) == 0x004198, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_SequencePlayer_22' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_StateResult_23) == 0x004218, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_StateResult_23' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_SequencePlayer_21) == 0x004250, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_SequencePlayer_21' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_TwoWayBlend_6) == 0x0042D0, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_TwoWayBlend_6' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_SequencePlayer_20) == 0x004398, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_SequencePlayer_20' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_StateResult_22) == 0x004418, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_StateResult_22' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_SequencePlayer_19) == 0x004450, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_SequencePlayer_19' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_TwoWayBlend_5) == 0x0044D0, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_TwoWayBlend_5' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_SequencePlayer_18) == 0x004598, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_SequencePlayer_18' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_StateResult_21) == 0x004618, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_StateResult_21' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_SequencePlayer_17) == 0x004650, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_SequencePlayer_17' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_StateResult_20) == 0x0046D0, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_StateResult_20' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_SequencePlayer_16) == 0x004708, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_SequencePlayer_16' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_StateResult_19) == 0x004788, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_StateResult_19' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_SequencePlayer_15) == 0x0047C0, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_SequencePlayer_15' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_StateResult_18) == 0x004840, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_StateResult_18' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_BlendSpacePlayer_3) == 0x004878, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_BlendSpacePlayer_3' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_StateResult_17) == 0x004960, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_StateResult_17' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_BlendSpacePlayer_2) == 0x004998, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_BlendSpacePlayer_2' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_StateResult_16) == 0x004A80, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_StateResult_16' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_BlendSpacePlayer_1) == 0x004AB8, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_BlendSpacePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_StateResult_15) == 0x004BA0, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_StateResult_15' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_BlendSpacePlayer) == 0x004BD8, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_BlendSpacePlayer' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_StateResult_14) == 0x004CC0, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_StateResult_14' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_SequencePlayer_14) == 0x004CF8, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_SequencePlayer_14' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_TwoWayBlend_4) == 0x004D78, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_TwoWayBlend_4' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_SequencePlayer_13) == 0x004E40, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_SequencePlayer_13' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_StateResult_13) == 0x004EC0, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_StateResult_13' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_SequencePlayer_12) == 0x004EF8, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_SequencePlayer_12' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_StateResult_12) == 0x004F78, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_StateResult_12' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_SequencePlayer_11) == 0x004FB0, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_SequencePlayer_11' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_StateResult_11) == 0x005030, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_StateResult_11' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_TwoWayBlend_3) == 0x005068, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_TwoWayBlend_3' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_SequencePlayer_10) == 0x005130, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_SequencePlayer_10' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_ModifyCurve_5) == 0x0051B0, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_ModifyCurve_5' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_ApplyAdditive) == 0x005208, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_ApplyAdditive' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_SequencePlayer_9) == 0x0052D8, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_SequencePlayer_9' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_UseCachedPose_3) == 0x005358, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_UseCachedPose_3' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_StateResult_10) == 0x005388, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_StateResult_10' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_UseCachedPose_2) == 0x0053C0, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_UseCachedPose_2' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_StateResult_9) == 0x0053F0, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_StateResult_9' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_ModifyCurve_4) == 0x005428, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_ModifyCurve_4' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_SequencePlayer_8) == 0x005480, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_SequencePlayer_8' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_StateResult_8) == 0x005500, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_StateResult_8' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_ModifyCurve_3) == 0x005538, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_ModifyCurve_3' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_SequencePlayer_7) == 0x005590, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_SequencePlayer_7' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_StateResult_7) == 0x005610, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_StateResult_7' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_SequencePlayer_6) == 0x005648, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_SequencePlayer_6' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_TwoWayBlend_2) == 0x0056C8, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_TwoWayBlend_2' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_ModifyCurve_2) == 0x005790, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_ModifyCurve_2' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_TransitionResult_3) == 0x0057E8, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_TransitionResult_2) == 0x005810, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_SequencePlayer_5) == 0x005838, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_SequencePlayer_5' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_StateResult_6) == 0x0058B8, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_StateResult_6' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_SequencePlayer_4) == 0x0058F0, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_StateResult_5) == 0x005970, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_StateResult_5' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_StateMachine_2) == 0x0059A8, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_StateMachine_2' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_StateResult_4) == 0x005A58, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_StateResult_4' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_UseCachedPose_1) == 0x005A90, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_UseCachedPose_1' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_StateResult_3) == 0x005AC0, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_SequencePlayer_3) == 0x005AF8, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_ModifyCurve_1) == 0x005B78, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_ModifyCurve_1' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_TransitionResult_1) == 0x005BD0, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_TransitionResult) == 0x005BF8, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_SequencePlayer_2) == 0x005C20, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_StateResult_2) == 0x005CA0, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_SequencePlayer_1) == 0x005CD8, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_StateResult_1) == 0x005D58, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_StateMachine_1) == 0x005D90, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_StateMachine_1' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_TwoWayBlend_1) == 0x005E40, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_TwoWayBlend_1' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_StateResult) == 0x005F08, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_StateMachine) == 0x005F40, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_SaveCachedPose) == 0x005FF0, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_Root) == 0x006148, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_UseCachedPose) == 0x006180, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_SequencePlayer) == 0x0061B0, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_LayeredBoneBlend) == 0x006230, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_LayeredBoneBlend' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_ModifyCurve) == 0x0062F0, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_ModifyCurve' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_TwoWayBlend) == 0x006348, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_TwoWayBlend' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_Slot) == 0x006410, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AnimGraphNode_PoseBlendNode) == 0x0064F8, "Member 'UABP_NPC_Grunt_Standard_C::AnimGraphNode_PoseBlendNode' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, IsMoving) == 0x006598, "Member 'UABP_NPC_Grunt_Standard_C::IsMoving' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, _DEBUG_Pitch) == 0x00659C, "Member 'UABP_NPC_Grunt_Standard_C::_DEBUG_Pitch' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, _DEBUG_Yaw) == 0x0065A0, "Member 'UABP_NPC_Grunt_Standard_C::_DEBUG_Yaw' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, _DEBUG_ForwardSpeed) == 0x0065A4, "Member 'UABP_NPC_Grunt_Standard_C::_DEBUG_ForwardSpeed' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, _DEBUG_LateralSpeed) == 0x0065A8, "Member 'UABP_NPC_Grunt_Standard_C::_DEBUG_LateralSpeed' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, DeathAnimation) == 0x0065B0, "Member 'UABP_NPC_Grunt_Standard_C::DeathAnimation' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, IsAware) == 0x0065B8, "Member 'UABP_NPC_Grunt_Standard_C::IsAware' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, IsInCombat) == 0x0065B9, "Member 'UABP_NPC_Grunt_Standard_C::IsInCombat' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, IsDead) == 0x0065BA, "Member 'UABP_NPC_Grunt_Standard_C::IsDead' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, UnawareGesturing) == 0x0065C0, "Member 'UABP_NPC_Grunt_Standard_C::UnawareGesturing' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, CombatGesturing) == 0x0065C8, "Member 'UABP_NPC_Grunt_Standard_C::CombatGesturing' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, CACharacter_NPC) == 0x0065D0, "Member 'UABP_NPC_Grunt_Standard_C::CACharacter_NPC' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, CAWeapon) == 0x0065D8, "Member 'UABP_NPC_Grunt_Standard_C::CAWeapon' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, SlotFullBodyReplacement) == 0x0065E0, "Member 'UABP_NPC_Grunt_Standard_C::SlotFullBodyReplacement' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AimOffsetRotator) == 0x0065EC, "Member 'UABP_NPC_Grunt_Standard_C::AimOffsetRotator' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, HeadHitAnims) == 0x0065F8, "Member 'UABP_NPC_Grunt_Standard_C::HeadHitAnims' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, ChestHitAnims) == 0x006608, "Member 'UABP_NPC_Grunt_Standard_C::ChestHitAnims' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, GutHitAnims) == 0x006618, "Member 'UABP_NPC_Grunt_Standard_C::GutHitAnims' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, LegHitAnims) == 0x006628, "Member 'UABP_NPC_Grunt_Standard_C::LegHitAnims' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, HeadDeathAnims) == 0x006638, "Member 'UABP_NPC_Grunt_Standard_C::HeadDeathAnims' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, GutDeathAnims) == 0x006648, "Member 'UABP_NPC_Grunt_Standard_C::GutDeathAnims' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, ChestDeathAnims) == 0x006658, "Member 'UABP_NPC_Grunt_Standard_C::ChestDeathAnims' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, RagdollRootBone) == 0x006668, "Member 'UABP_NPC_Grunt_Standard_C::RagdollRootBone' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, WorldVelocity) == 0x006674, "Member 'UABP_NPC_Grunt_Standard_C::WorldVelocity' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, WorldAcceleration) == 0x006680, "Member 'UABP_NPC_Grunt_Standard_C::WorldAcceleration' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, LocalVelocity) == 0x00668C, "Member 'UABP_NPC_Grunt_Standard_C::LocalVelocity' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, IsInZeroG) == 0x006698, "Member 'UABP_NPC_Grunt_Standard_C::IsInZeroG' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, IsFloating) == 0x006699, "Member 'UABP_NPC_Grunt_Standard_C::IsFloating' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, IsUsingMagboots) == 0x00669A, "Member 'UABP_NPC_Grunt_Standard_C::IsUsingMagboots' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, StrafeAngle) == 0x00669C, "Member 'UABP_NPC_Grunt_Standard_C::StrafeAngle' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, PreviousStrafeAngle) == 0x0066A0, "Member 'UABP_NPC_Grunt_Standard_C::PreviousStrafeAngle' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, StrafeAngleChanged) == 0x0066A4, "Member 'UABP_NPC_Grunt_Standard_C::StrafeAngleChanged' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, LocalVelocityChanged) == 0x0066A5, "Member 'UABP_NPC_Grunt_Standard_C::LocalVelocityChanged' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, PrevForwardSpeed) == 0x0066A8, "Member 'UABP_NPC_Grunt_Standard_C::PrevForwardSpeed' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, PrevLateralSpeed) == 0x0066AC, "Member 'UABP_NPC_Grunt_Standard_C::PrevLateralSpeed' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, CurrentLOD) == 0x0066B0, "Member 'UABP_NPC_Grunt_Standard_C::CurrentLOD' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, GazeTimer) == 0x0066B4, "Member 'UABP_NPC_Grunt_Standard_C::GazeTimer' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, CurrentPOI) == 0x0066B8, "Member 'UABP_NPC_Grunt_Standard_C::CurrentPOI' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, PreviousPOI) == 0x0066C4, "Member 'UABP_NPC_Grunt_Standard_C::PreviousPOI' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, LookAtLocationWorld) == 0x0066D0, "Member 'UABP_NPC_Grunt_Standard_C::LookAtLocationWorld' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, LookAtLocationWorld_Smooth) == 0x0066DC, "Member 'UABP_NPC_Grunt_Standard_C::LookAtLocationWorld_Smooth' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, CanSeePOI) == 0x0066E8, "Member 'UABP_NPC_Grunt_Standard_C::CanSeePOI' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, UseHeadLook) == 0x0066E9, "Member 'UABP_NPC_Grunt_Standard_C::UseHeadLook' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, UseEyeLook) == 0x0066EA, "Member 'UABP_NPC_Grunt_Standard_C::UseEyeLook' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, IsDedicatedServer) == 0x0066EB, "Member 'UABP_NPC_Grunt_Standard_C::IsDedicatedServer' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, VelocityMagnitude) == 0x0066EC, "Member 'UABP_NPC_Grunt_Standard_C::VelocityMagnitude' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, TimeDelta) == 0x0066F0, "Member 'UABP_NPC_Grunt_Standard_C::TimeDelta' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, ProceduralLookTargetLocal) == 0x0066F4, "Member 'UABP_NPC_Grunt_Standard_C::ProceduralLookTargetLocal' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, PrecisionLook) == 0x006700, "Member 'UABP_NPC_Grunt_Standard_C::PrecisionLook' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, StoppingThresholdSpeed) == 0x006704, "Member 'UABP_NPC_Grunt_Standard_C::StoppingThresholdSpeed' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, CurrentHeading) == 0x006708, "Member 'UABP_NPC_Grunt_Standard_C::CurrentHeading' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, CapsuleHeading) == 0x00670C, "Member 'UABP_NPC_Grunt_Standard_C::CapsuleHeading' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AIHeading) == 0x006710, "Member 'UABP_NPC_Grunt_Standard_C::AIHeading' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AimHeading) == 0x006714, "Member 'UABP_NPC_Grunt_Standard_C::AimHeading' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, TargetHeading) == 0x006718, "Member 'UABP_NPC_Grunt_Standard_C::TargetHeading' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, HeadingDelta) == 0x00671C, "Member 'UABP_NPC_Grunt_Standard_C::HeadingDelta' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, TurnRate) == 0x006720, "Member 'UABP_NPC_Grunt_Standard_C::TurnRate' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, WasMovingRecently) == 0x006724, "Member 'UABP_NPC_Grunt_Standard_C::WasMovingRecently' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, MovingTimer) == 0x006728, "Member 'UABP_NPC_Grunt_Standard_C::MovingTimer' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AimOffsetRange) == 0x00672C, "Member 'UABP_NPC_Grunt_Standard_C::AimOffsetRange' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, IsADS) == 0x006730, "Member 'UABP_NPC_Grunt_Standard_C::IsADS' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, ProcLookAlpha) == 0x006734, "Member 'UABP_NPC_Grunt_Standard_C::ProcLookAlpha' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, IsFiring) == 0x006738, "Member 'UABP_NPC_Grunt_Standard_C::IsFiring' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, LegDeathAnims) == 0x006740, "Member 'UABP_NPC_Grunt_Standard_C::LegDeathAnims' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, TEST_DeathAnim) == 0x006750, "Member 'UABP_NPC_Grunt_Standard_C::TEST_DeathAnim' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, IsOnscreenOrAudible) == 0x006758, "Member 'UABP_NPC_Grunt_Standard_C::IsOnscreenOrAudible' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, HitReactionFireDamage) == 0x006760, "Member 'UABP_NPC_Grunt_Standard_C::HitReactionFireDamage' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, LookAtLocationValid) == 0x006768, "Member 'UABP_NPC_Grunt_Standard_C::LookAtLocationValid' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, SpinRate) == 0x00676C, "Member 'UABP_NPC_Grunt_Standard_C::SpinRate' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, RootBoneTransform) == 0x006770, "Member 'UABP_NPC_Grunt_Standard_C::RootBoneTransform' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, FeetRootTransform) == 0x0067A0, "Member 'UABP_NPC_Grunt_Standard_C::FeetRootTransform' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, SlopeHeightOffset) == 0x0067D0, "Member 'UABP_NPC_Grunt_Standard_C::SlopeHeightOffset' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, HeadHitAnims_ZG) == 0x0067D8, "Member 'UABP_NPC_Grunt_Standard_C::HeadHitAnims_ZG' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, ChestHitAnims_ZG) == 0x0067E8, "Member 'UABP_NPC_Grunt_Standard_C::ChestHitAnims_ZG' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, GutHitAnims_ZG) == 0x0067F8, "Member 'UABP_NPC_Grunt_Standard_C::GutHitAnims_ZG' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, LastHitDirection) == 0x006808, "Member 'UABP_NPC_Grunt_Standard_C::LastHitDirection' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, LastHitBaseDamage) == 0x006814, "Member 'UABP_NPC_Grunt_Standard_C::LastHitBaseDamage' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, LastHitLocation) == 0x006818, "Member 'UABP_NPC_Grunt_Standard_C::LastHitLocation' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, Spin_AngularVelocity) == 0x006824, "Member 'UABP_NPC_Grunt_Standard_C::Spin_AngularVelocity' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, SpinRotator) == 0x006830, "Member 'UABP_NPC_Grunt_Standard_C::SpinRotator' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, Spin_RootBoneOffset) == 0x00683C, "Member 'UABP_NPC_Grunt_Standard_C::Spin_RootBoneOffset' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, CM_to_RootBone) == 0x006848, "Member 'UABP_NPC_Grunt_Standard_C::CM_to_RootBone' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, LegHitAnims_ZG) == 0x006858, "Member 'UABP_NPC_Grunt_Standard_C::LegHitAnims_ZG' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, HeadDeathAnims_ZG) == 0x006868, "Member 'UABP_NPC_Grunt_Standard_C::HeadDeathAnims_ZG' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, ChestDeathAnims_ZG) == 0x006878, "Member 'UABP_NPC_Grunt_Standard_C::ChestDeathAnims_ZG' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, GutDeathAnims_ZG) == 0x006888, "Member 'UABP_NPC_Grunt_Standard_C::GutDeathAnims_ZG' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, LegDeathAnims_ZG) == 0x006898, "Member 'UABP_NPC_Grunt_Standard_C::LegDeathAnims_ZG' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, ADS_strength) == 0x0068A8, "Member 'UABP_NPC_Grunt_Standard_C::ADS_strength' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, ADS_strength_post) == 0x0068AC, "Member 'UABP_NPC_Grunt_Standard_C::ADS_strength_post' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, TurnDeltaAngle) == 0x0068B0, "Member 'UABP_NPC_Grunt_Standard_C::TurnDeltaAngle' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, Haste) == 0x0068B4, "Member 'UABP_NPC_Grunt_Standard_C::Haste' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, TurnSourceHeading) == 0x0068B8, "Member 'UABP_NPC_Grunt_Standard_C::TurnSourceHeading' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, TurnTargetHeading) == 0x0068BC, "Member 'UABP_NPC_Grunt_Standard_C::TurnTargetHeading' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, TurnIsFadingOut) == 0x0068C0, "Member 'UABP_NPC_Grunt_Standard_C::TurnIsFadingOut' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, MinTurnAngle) == 0x0068C4, "Member 'UABP_NPC_Grunt_Standard_C::MinTurnAngle' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, FootToTargetMin) == 0x0068C8, "Member 'UABP_NPC_Grunt_Standard_C::FootToTargetMin' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, MoveTarget) == 0x0068CC, "Member 'UABP_NPC_Grunt_Standard_C::MoveTarget' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, MoveToLocationWorld) == 0x0068D8, "Member 'UABP_NPC_Grunt_Standard_C::MoveToLocationWorld' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, DistanceToMoveTarget) == 0x0068E4, "Member 'UABP_NPC_Grunt_Standard_C::DistanceToMoveTarget' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, StoppingTriggerDistance) == 0x0068E8, "Member 'UABP_NPC_Grunt_Standard_C::StoppingTriggerDistance' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, RandomCasualIdles) == 0x0068F0, "Member 'UABP_NPC_Grunt_Standard_C::RandomCasualIdles' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, CasualIdlesWeights) == 0x006900, "Member 'UABP_NPC_Grunt_Standard_C::CasualIdlesWeights' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, RandomAwareIdles) == 0x006910, "Member 'UABP_NPC_Grunt_Standard_C::RandomAwareIdles' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, AwareIdlesWeights) == 0x006920, "Member 'UABP_NPC_Grunt_Standard_C::AwareIdlesWeights' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, RandomCasualIdle1) == 0x006930, "Member 'UABP_NPC_Grunt_Standard_C::RandomCasualIdle1' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, RandomCasualIdle2) == 0x006938, "Member 'UABP_NPC_Grunt_Standard_C::RandomCasualIdle2' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, RandomAwareIdle1) == 0x006940, "Member 'UABP_NPC_Grunt_Standard_C::RandomAwareIdle1' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, RandomAwareIdle2) == 0x006948, "Member 'UABP_NPC_Grunt_Standard_C::RandomAwareIdle2' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, IsAccelerating) == 0x006950, "Member 'UABP_NPC_Grunt_Standard_C::IsAccelerating' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, IsDecelerating) == 0x006951, "Member 'UABP_NPC_Grunt_Standard_C::IsDecelerating' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, IsChangingDirection) == 0x006952, "Member 'UABP_NPC_Grunt_Standard_C::IsChangingDirection' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, IsRagdoll) == 0x006953, "Member 'UABP_NPC_Grunt_Standard_C::IsRagdoll' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, PhysAnimComp) == 0x006958, "Member 'UABP_NPC_Grunt_Standard_C::PhysAnimComp' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, IsInjured) == 0x006960, "Member 'UABP_NPC_Grunt_Standard_C::IsInjured' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, UseProceduralFace) == 0x006964, "Member 'UABP_NPC_Grunt_Standard_C::UseProceduralFace' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, NextIdle) == 0x006968, "Member 'UABP_NPC_Grunt_Standard_C::NextIdle' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, PrevIdles) == 0x006970, "Member 'UABP_NPC_Grunt_Standard_C::PrevIdles' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, GutDeathAnims_Moving) == 0x006980, "Member 'UABP_NPC_Grunt_Standard_C::GutDeathAnims_Moving' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, ChestDeathAnims_Moving) == 0x006990, "Member 'UABP_NPC_Grunt_Standard_C::ChestDeathAnims_Moving' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, GutDeathAnims_Explosion) == 0x0069A0, "Member 'UABP_NPC_Grunt_Standard_C::GutDeathAnims_Explosion' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, GutDeathAnims_SG) == 0x0069B0, "Member 'UABP_NPC_Grunt_Standard_C::GutDeathAnims_SG' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, ChestDeathAnims_SG) == 0x0069C0, "Member 'UABP_NPC_Grunt_Standard_C::ChestDeathAnims_SG' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, ChestDeathAnims_Auto) == 0x0069D0, "Member 'UABP_NPC_Grunt_Standard_C::ChestDeathAnims_Auto' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, GutDeathAnims_Auto) == 0x0069E0, "Member 'UABP_NPC_Grunt_Standard_C::GutDeathAnims_Auto' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, KnockBackAnim) == 0x0069F0, "Member 'UABP_NPC_Grunt_Standard_C::KnockBackAnim' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, Debug300) == 0x0069F8, "Member 'UABP_NPC_Grunt_Standard_C::Debug300' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, StopAnimStartPos) == 0x006A04, "Member 'UABP_NPC_Grunt_Standard_C::StopAnimStartPos' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, LegDeathAnims_SG) == 0x006A08, "Member 'UABP_NPC_Grunt_Standard_C::LegDeathAnims_SG' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, StepPhase) == 0x006A18, "Member 'UABP_NPC_Grunt_Standard_C::StepPhase' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, DebugFloatHistory) == 0x006A20, "Member 'UABP_NPC_Grunt_Standard_C::DebugFloatHistory' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, DebugPos0) == 0x006A40, "Member 'UABP_NPC_Grunt_Standard_C::DebugPos0' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, DebugTime0) == 0x006A4C, "Member 'UABP_NPC_Grunt_Standard_C::DebugTime0' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, DebugColor) == 0x006A50, "Member 'UABP_NPC_Grunt_Standard_C::DebugColor' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, IsInCombatState) == 0x006A60, "Member 'UABP_NPC_Grunt_Standard_C::IsInCombatState' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, IsIdle) == 0x006A61, "Member 'UABP_NPC_Grunt_Standard_C::IsIdle' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, _DEBUG_Velocity) == 0x006A64, "Member 'UABP_NPC_Grunt_Standard_C::_DEBUG_Velocity' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, _DEBUG_CachedVelocity) == 0x006A70, "Member 'UABP_NPC_Grunt_Standard_C::_DEBUG_CachedVelocity' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, Debug_Text_Color) == 0x006A7C, "Member 'UABP_NPC_Grunt_Standard_C::Debug_Text_Color' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, Debug_Bool) == 0x006A8C, "Member 'UABP_NPC_Grunt_Standard_C::Debug_Bool' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, DeathAnims_TEST) == 0x006A90, "Member 'UABP_NPC_Grunt_Standard_C::DeathAnims_TEST' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, OnNPCTauntPlayer) == 0x006AA0, "Member 'UABP_NPC_Grunt_Standard_C::OnNPCTauntPlayer' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, OnCombatEvasive) == 0x006AAC, "Member 'UABP_NPC_Grunt_Standard_C::OnCombatEvasive' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, OnStartReload) == 0x006AB8, "Member 'UABP_NPC_Grunt_Standard_C::OnStartReload' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, OnCombatTacticalGenericMove) == 0x006AC4, "Member 'UABP_NPC_Grunt_Standard_C::OnCombatTacticalGenericMove' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, DeathAnimMovingDirection_tm) == 0x006AD0, "Member 'UABP_NPC_Grunt_Standard_C::DeathAnimMovingDirection_tm' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, GutDeathAnims_BBQ) == 0x006AE0, "Member 'UABP_NPC_Grunt_Standard_C::GutDeathAnims_BBQ' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, DeathDirectionIndex) == 0x006AF0, "Member 'UABP_NPC_Grunt_Standard_C::DeathDirectionIndex' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, DeathAttackDirection) == 0x006AF4, "Member 'UABP_NPC_Grunt_Standard_C::DeathAttackDirection' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, DeathAnims_Fire) == 0x006B00, "Member 'UABP_NPC_Grunt_Standard_C::DeathAnims_Fire' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Grunt_Standard_C, Initialized) == 0x006B10, "Member 'UABP_NPC_Grunt_Standard_C::Initialized' has a wrong offset!");

}

