#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AB_Player_BeingRevived

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Keaton_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "AB_Player_ManagedBase_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass AB_Player_BeingRevived.AB_Player_BeingRevived_C
// 0x0110 (0x05B0 - 0x04A0)
class UAB_Player_BeingRevived_C final : public UAB_Player_ManagedBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_AB_Player_BeingRevived_C;           // 0x04A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class ABP_Player_C*                           Recipient;                                         // 0x04A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACACharacter_MainPlayer*                Reviver;                                           // 0x04B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Montage_to_Play__Standing_Revive_;                 // 0x04B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Montage_to_Play__Crouched_Revive_;                 // 0x04C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Is_revive_montage_completed;                       // 0x04C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Is_weapon_equipped;                                // 0x04C9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4CA[0x6];                                      // 0x04CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           Montage_To_Play__Revive_Complete_;                 // 0x04D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Montage_to_Play__Fail_Transition_;                 // 0x04D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCAAbilityTask_PlayDockedWithManualBlendOut* PlayMontageAsyncTask;                              // 0x04E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     Event_Data;                                        // 0x04E8(0x00B8)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UAnimMontage*                           SelectedMontage;                                   // 0x05A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PlayRate;                                          // 0x05A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_AB_Player_BeingRevived(int32 EntryPoint);
	void HealthStateChanged(EHealthState Health_state);
	void EquipWeapon();
	void K2_ActivateAbilityFromEvent(const struct FGameplayEventData& EventData);
	void K2_OnEndAbility(bool bWasCancelled);
	void EventReceived_8A5D76D84C481FE8D1E929B9059871D4(const struct FGameplayEventData& Payload);
	void EventReceived_E1B0DE7C4928126AAC61D78B0B7489C6(const struct FGameplayEventData& Payload);
	void OnSync_F38345F54EF7234F18C0578E135FBC8F();
	void OnCompleted_2B3B3E3141DE40B7232B09B400C919B0();
	void OnBlendOut_2B3B3E3141DE40B7232B09B400C919B0();
	void OnInterrupted_2B3B3E3141DE40B7232B09B400C919B0();
	void OnCancelled_2B3B3E3141DE40B7232B09B400C919B0();
	void OnSkipped_2B3B3E3141DE40B7232B09B400C919B0();
	void OnReachedEvent_B9BE79004DD7C8033ADD3E8DE7B2429C();
	void OnSync_B2576D7A4237B599CCD4B5A2053A0C4E();
	void OnReachedEvent_1A59A98843808D29BF4DA3BA1BA4C68E();
	void OnCompletedAndStop_365D693948EF043E42D6BEB8BCB23112();
	void OnCompleted_365D693948EF043E42D6BEB8BCB23112();
	void OnBlendOut_365D693948EF043E42D6BEB8BCB23112();
	void OnInterrupted_365D693948EF043E42D6BEB8BCB23112();
	void OnCancelled_365D693948EF043E42D6BEB8BCB23112();
	void OnSkipped_365D693948EF043E42D6BEB8BCB23112();
	void OnCompleted_4839FFD745A5D23D6AD9E8AEA1DBCD86();
	void OnBlendOut_4839FFD745A5D23D6AD9E8AEA1DBCD86();
	void OnInterrupted_4839FFD745A5D23D6AD9E8AEA1DBCD86();
	void OnCancelled_4839FFD745A5D23D6AD9E8AEA1DBCD86();
	void OnSkipped_4839FFD745A5D23D6AD9E8AEA1DBCD86();
	void EventReceived_A871E9C74ED1AF3A6A043B9D5E6CCB7B(const struct FGameplayEventData& Payload);
	void OnCompleted_0915D44240B346272722288AFABEB2C5();
	void OnBlendOut_0915D44240B346272722288AFABEB2C5();
	void OnInterrupted_0915D44240B346272722288AFABEB2C5();
	void OnCancelled_0915D44240B346272722288AFABEB2C5();
	void OnSkipped_0915D44240B346272722288AFABEB2C5();
	void EventReceived_16E222144A8D23C3C881F690CABBF90B(const struct FGameplayEventData& Payload);
	struct FTransform CalculateTransformForDocking();
	bool IsReviverCrouching(const struct FGameplayEventData& GameplayEventData);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"AB_Player_BeingRevived_C">();
	}
	static class UAB_Player_BeingRevived_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAB_Player_BeingRevived_C>();
	}
};
static_assert(alignof(UAB_Player_BeingRevived_C) == 0x000008, "Wrong alignment on UAB_Player_BeingRevived_C");
static_assert(sizeof(UAB_Player_BeingRevived_C) == 0x0005B0, "Wrong size on UAB_Player_BeingRevived_C");
static_assert(offsetof(UAB_Player_BeingRevived_C, UberGraphFrame_AB_Player_BeingRevived_C) == 0x0004A0, "Member 'UAB_Player_BeingRevived_C::UberGraphFrame_AB_Player_BeingRevived_C' has a wrong offset!");
static_assert(offsetof(UAB_Player_BeingRevived_C, Recipient) == 0x0004A8, "Member 'UAB_Player_BeingRevived_C::Recipient' has a wrong offset!");
static_assert(offsetof(UAB_Player_BeingRevived_C, Reviver) == 0x0004B0, "Member 'UAB_Player_BeingRevived_C::Reviver' has a wrong offset!");
static_assert(offsetof(UAB_Player_BeingRevived_C, Montage_to_Play__Standing_Revive_) == 0x0004B8, "Member 'UAB_Player_BeingRevived_C::Montage_to_Play__Standing_Revive_' has a wrong offset!");
static_assert(offsetof(UAB_Player_BeingRevived_C, Montage_to_Play__Crouched_Revive_) == 0x0004C0, "Member 'UAB_Player_BeingRevived_C::Montage_to_Play__Crouched_Revive_' has a wrong offset!");
static_assert(offsetof(UAB_Player_BeingRevived_C, Is_revive_montage_completed) == 0x0004C8, "Member 'UAB_Player_BeingRevived_C::Is_revive_montage_completed' has a wrong offset!");
static_assert(offsetof(UAB_Player_BeingRevived_C, Is_weapon_equipped) == 0x0004C9, "Member 'UAB_Player_BeingRevived_C::Is_weapon_equipped' has a wrong offset!");
static_assert(offsetof(UAB_Player_BeingRevived_C, Montage_To_Play__Revive_Complete_) == 0x0004D0, "Member 'UAB_Player_BeingRevived_C::Montage_To_Play__Revive_Complete_' has a wrong offset!");
static_assert(offsetof(UAB_Player_BeingRevived_C, Montage_to_Play__Fail_Transition_) == 0x0004D8, "Member 'UAB_Player_BeingRevived_C::Montage_to_Play__Fail_Transition_' has a wrong offset!");
static_assert(offsetof(UAB_Player_BeingRevived_C, PlayMontageAsyncTask) == 0x0004E0, "Member 'UAB_Player_BeingRevived_C::PlayMontageAsyncTask' has a wrong offset!");
static_assert(offsetof(UAB_Player_BeingRevived_C, Event_Data) == 0x0004E8, "Member 'UAB_Player_BeingRevived_C::Event_Data' has a wrong offset!");
static_assert(offsetof(UAB_Player_BeingRevived_C, SelectedMontage) == 0x0005A0, "Member 'UAB_Player_BeingRevived_C::SelectedMontage' has a wrong offset!");
static_assert(offsetof(UAB_Player_BeingRevived_C, PlayRate) == 0x0005A8, "Member 'UAB_Player_BeingRevived_C::PlayRate' has a wrong offset!");

}

