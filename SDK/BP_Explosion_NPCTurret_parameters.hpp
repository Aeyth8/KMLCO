#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Explosion_NPCTurret

#include "Basic.hpp"

#include "CAAudio_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_Explosion_NPCTurret.BP_Explosion_NPCTurret_C.ExecuteUbergraph_BP_Explosion_NPCTurret
// 0x0070 (0x0070 - 0x0000)
struct BP_Explosion_NPCTurret_C_ExecuteUbergraph_BP_Explosion_NPCTurret final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue;           // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_SpawnCANiagaraSystemAtLocation_ReturnValue; // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCAAudioPlaybackInstance               CallFunc_PlayEventInWorld_playback_instance;       // 0x0020(0x0010)()
	bool                                          CallFunc_PlayEventInWorld_play_success;            // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Event_epicenter;                            // 0x0034(0x000C)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_radius;                               // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_attached_to_surface;                  // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Event_surface_normal;                       // 0x0048(0x000C)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_incoming_direction;                   // 0x0054(0x000C)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_friendly;                             // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_duration;                             // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInZeroGravity_ReturnValue;              // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Explosion_NPCTurret_C_ExecuteUbergraph_BP_Explosion_NPCTurret) == 0x000008, "Wrong alignment on BP_Explosion_NPCTurret_C_ExecuteUbergraph_BP_Explosion_NPCTurret");
static_assert(sizeof(BP_Explosion_NPCTurret_C_ExecuteUbergraph_BP_Explosion_NPCTurret) == 0x000070, "Wrong size on BP_Explosion_NPCTurret_C_ExecuteUbergraph_BP_Explosion_NPCTurret");
static_assert(offsetof(BP_Explosion_NPCTurret_C_ExecuteUbergraph_BP_Explosion_NPCTurret, EntryPoint) == 0x000000, "Member 'BP_Explosion_NPCTurret_C_ExecuteUbergraph_BP_Explosion_NPCTurret::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Explosion_NPCTurret_C_ExecuteUbergraph_BP_Explosion_NPCTurret, CallFunc_Conv_FloatToString_ReturnValue) == 0x000008, "Member 'BP_Explosion_NPCTurret_C_ExecuteUbergraph_BP_Explosion_NPCTurret::CallFunc_Conv_FloatToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Explosion_NPCTurret_C_ExecuteUbergraph_BP_Explosion_NPCTurret, CallFunc_SpawnCANiagaraSystemAtLocation_ReturnValue) == 0x000018, "Member 'BP_Explosion_NPCTurret_C_ExecuteUbergraph_BP_Explosion_NPCTurret::CallFunc_SpawnCANiagaraSystemAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Explosion_NPCTurret_C_ExecuteUbergraph_BP_Explosion_NPCTurret, CallFunc_PlayEventInWorld_playback_instance) == 0x000020, "Member 'BP_Explosion_NPCTurret_C_ExecuteUbergraph_BP_Explosion_NPCTurret::CallFunc_PlayEventInWorld_playback_instance' has a wrong offset!");
static_assert(offsetof(BP_Explosion_NPCTurret_C_ExecuteUbergraph_BP_Explosion_NPCTurret, CallFunc_PlayEventInWorld_play_success) == 0x000030, "Member 'BP_Explosion_NPCTurret_C_ExecuteUbergraph_BP_Explosion_NPCTurret::CallFunc_PlayEventInWorld_play_success' has a wrong offset!");
static_assert(offsetof(BP_Explosion_NPCTurret_C_ExecuteUbergraph_BP_Explosion_NPCTurret, K2Node_Event_epicenter) == 0x000034, "Member 'BP_Explosion_NPCTurret_C_ExecuteUbergraph_BP_Explosion_NPCTurret::K2Node_Event_epicenter' has a wrong offset!");
static_assert(offsetof(BP_Explosion_NPCTurret_C_ExecuteUbergraph_BP_Explosion_NPCTurret, K2Node_Event_radius) == 0x000040, "Member 'BP_Explosion_NPCTurret_C_ExecuteUbergraph_BP_Explosion_NPCTurret::K2Node_Event_radius' has a wrong offset!");
static_assert(offsetof(BP_Explosion_NPCTurret_C_ExecuteUbergraph_BP_Explosion_NPCTurret, K2Node_Event_attached_to_surface) == 0x000044, "Member 'BP_Explosion_NPCTurret_C_ExecuteUbergraph_BP_Explosion_NPCTurret::K2Node_Event_attached_to_surface' has a wrong offset!");
static_assert(offsetof(BP_Explosion_NPCTurret_C_ExecuteUbergraph_BP_Explosion_NPCTurret, K2Node_Event_surface_normal) == 0x000048, "Member 'BP_Explosion_NPCTurret_C_ExecuteUbergraph_BP_Explosion_NPCTurret::K2Node_Event_surface_normal' has a wrong offset!");
static_assert(offsetof(BP_Explosion_NPCTurret_C_ExecuteUbergraph_BP_Explosion_NPCTurret, K2Node_Event_incoming_direction) == 0x000054, "Member 'BP_Explosion_NPCTurret_C_ExecuteUbergraph_BP_Explosion_NPCTurret::K2Node_Event_incoming_direction' has a wrong offset!");
static_assert(offsetof(BP_Explosion_NPCTurret_C_ExecuteUbergraph_BP_Explosion_NPCTurret, K2Node_Event_friendly) == 0x000060, "Member 'BP_Explosion_NPCTurret_C_ExecuteUbergraph_BP_Explosion_NPCTurret::K2Node_Event_friendly' has a wrong offset!");
static_assert(offsetof(BP_Explosion_NPCTurret_C_ExecuteUbergraph_BP_Explosion_NPCTurret, K2Node_Event_duration) == 0x000064, "Member 'BP_Explosion_NPCTurret_C_ExecuteUbergraph_BP_Explosion_NPCTurret::K2Node_Event_duration' has a wrong offset!");
static_assert(offsetof(BP_Explosion_NPCTurret_C_ExecuteUbergraph_BP_Explosion_NPCTurret, CallFunc_IsInZeroGravity_ReturnValue) == 0x000068, "Member 'BP_Explosion_NPCTurret_C_ExecuteUbergraph_BP_Explosion_NPCTurret::CallFunc_IsInZeroGravity_ReturnValue' has a wrong offset!");

// Function BP_Explosion_NPCTurret.BP_Explosion_NPCTurret_C.OnTrigger
// 0x0034 (0x0034 - 0x0000)
struct BP_Explosion_NPCTurret_C_OnTrigger final
{
public:
	struct FVector                                Epicenter_0;                                       // 0x0000(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Radius_0;                                          // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Attached_to_surface;                               // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Surface_normal;                                    // 0x0014(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Incoming_direction;                                // 0x0020(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Friendly;                                          // 0x002C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Duration;                                          // 0x0030(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Explosion_NPCTurret_C_OnTrigger) == 0x000004, "Wrong alignment on BP_Explosion_NPCTurret_C_OnTrigger");
static_assert(sizeof(BP_Explosion_NPCTurret_C_OnTrigger) == 0x000034, "Wrong size on BP_Explosion_NPCTurret_C_OnTrigger");
static_assert(offsetof(BP_Explosion_NPCTurret_C_OnTrigger, Epicenter_0) == 0x000000, "Member 'BP_Explosion_NPCTurret_C_OnTrigger::Epicenter_0' has a wrong offset!");
static_assert(offsetof(BP_Explosion_NPCTurret_C_OnTrigger, Radius_0) == 0x00000C, "Member 'BP_Explosion_NPCTurret_C_OnTrigger::Radius_0' has a wrong offset!");
static_assert(offsetof(BP_Explosion_NPCTurret_C_OnTrigger, Attached_to_surface) == 0x000010, "Member 'BP_Explosion_NPCTurret_C_OnTrigger::Attached_to_surface' has a wrong offset!");
static_assert(offsetof(BP_Explosion_NPCTurret_C_OnTrigger, Surface_normal) == 0x000014, "Member 'BP_Explosion_NPCTurret_C_OnTrigger::Surface_normal' has a wrong offset!");
static_assert(offsetof(BP_Explosion_NPCTurret_C_OnTrigger, Incoming_direction) == 0x000020, "Member 'BP_Explosion_NPCTurret_C_OnTrigger::Incoming_direction' has a wrong offset!");
static_assert(offsetof(BP_Explosion_NPCTurret_C_OnTrigger, Friendly) == 0x00002C, "Member 'BP_Explosion_NPCTurret_C_OnTrigger::Friendly' has a wrong offset!");
static_assert(offsetof(BP_Explosion_NPCTurret_C_OnTrigger, Duration) == 0x000030, "Member 'BP_Explosion_NPCTurret_C_OnTrigger::Duration' has a wrong offset!");

}

