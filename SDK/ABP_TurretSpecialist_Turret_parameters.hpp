#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_TurretSpecialist_Turret

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function ABP_TurretSpecialist_Turret.ABP_TurretSpecialist_Turret_C.ExecuteUbergraph_ABP_TurretSpecialist_Turret
// 0x0030 (0x0030 - 0x0000)
struct ABP_TurretSpecialist_Turret_C_ExecuteUbergraph_ABP_TurretSpecialist_Turret final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaTimeX;                           // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_NPC_Character_C*                    K2Node_DynamicCast_AsBP_NPC_Character;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsInNPCSpawnPool_ReturnValue;             // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x2];                                       // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_get_local_aim_LocalAim;                   // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ABP_TurretSpecialist_Turret_C_ExecuteUbergraph_ABP_TurretSpecialist_Turret) == 0x000008, "Wrong alignment on ABP_TurretSpecialist_Turret_C_ExecuteUbergraph_ABP_TurretSpecialist_Turret");
static_assert(sizeof(ABP_TurretSpecialist_Turret_C_ExecuteUbergraph_ABP_TurretSpecialist_Turret) == 0x000030, "Wrong size on ABP_TurretSpecialist_Turret_C_ExecuteUbergraph_ABP_TurretSpecialist_Turret");
static_assert(offsetof(ABP_TurretSpecialist_Turret_C_ExecuteUbergraph_ABP_TurretSpecialist_Turret, EntryPoint) == 0x000000, "Member 'ABP_TurretSpecialist_Turret_C_ExecuteUbergraph_ABP_TurretSpecialist_Turret::EntryPoint' has a wrong offset!");
static_assert(offsetof(ABP_TurretSpecialist_Turret_C_ExecuteUbergraph_ABP_TurretSpecialist_Turret, CallFunc_TryGetPawnOwner_ReturnValue) == 0x000008, "Member 'ABP_TurretSpecialist_Turret_C_ExecuteUbergraph_ABP_TurretSpecialist_Turret::CallFunc_TryGetPawnOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_TurretSpecialist_Turret_C_ExecuteUbergraph_ABP_TurretSpecialist_Turret, K2Node_Event_DeltaTimeX) == 0x000010, "Member 'ABP_TurretSpecialist_Turret_C_ExecuteUbergraph_ABP_TurretSpecialist_Turret::K2Node_Event_DeltaTimeX' has a wrong offset!");
static_assert(offsetof(ABP_TurretSpecialist_Turret_C_ExecuteUbergraph_ABP_TurretSpecialist_Turret, CallFunc_IsValid_ReturnValue) == 0x000014, "Member 'ABP_TurretSpecialist_Turret_C_ExecuteUbergraph_ABP_TurretSpecialist_Turret::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_TurretSpecialist_Turret_C_ExecuteUbergraph_ABP_TurretSpecialist_Turret, K2Node_DynamicCast_AsBP_NPC_Character) == 0x000018, "Member 'ABP_TurretSpecialist_Turret_C_ExecuteUbergraph_ABP_TurretSpecialist_Turret::K2Node_DynamicCast_AsBP_NPC_Character' has a wrong offset!");
static_assert(offsetof(ABP_TurretSpecialist_Turret_C_ExecuteUbergraph_ABP_TurretSpecialist_Turret, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'ABP_TurretSpecialist_Turret_C_ExecuteUbergraph_ABP_TurretSpecialist_Turret::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ABP_TurretSpecialist_Turret_C_ExecuteUbergraph_ABP_TurretSpecialist_Turret, CallFunc_IsInNPCSpawnPool_ReturnValue) == 0x000021, "Member 'ABP_TurretSpecialist_Turret_C_ExecuteUbergraph_ABP_TurretSpecialist_Turret::CallFunc_IsInNPCSpawnPool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_TurretSpecialist_Turret_C_ExecuteUbergraph_ABP_TurretSpecialist_Turret, CallFunc_get_local_aim_LocalAim) == 0x000024, "Member 'ABP_TurretSpecialist_Turret_C_ExecuteUbergraph_ABP_TurretSpecialist_Turret::CallFunc_get_local_aim_LocalAim' has a wrong offset!");

// Function ABP_TurretSpecialist_Turret.ABP_TurretSpecialist_Turret_C.BlueprintUpdateAnimation
// 0x0004 (0x0004 - 0x0000)
struct ABP_TurretSpecialist_Turret_C_BlueprintUpdateAnimation final
{
public:
	float                                         DeltaTimeX;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_TurretSpecialist_Turret_C_BlueprintUpdateAnimation) == 0x000004, "Wrong alignment on ABP_TurretSpecialist_Turret_C_BlueprintUpdateAnimation");
static_assert(sizeof(ABP_TurretSpecialist_Turret_C_BlueprintUpdateAnimation) == 0x000004, "Wrong size on ABP_TurretSpecialist_Turret_C_BlueprintUpdateAnimation");
static_assert(offsetof(ABP_TurretSpecialist_Turret_C_BlueprintUpdateAnimation, DeltaTimeX) == 0x000000, "Member 'ABP_TurretSpecialist_Turret_C_BlueprintUpdateAnimation::DeltaTimeX' has a wrong offset!");

// Function ABP_TurretSpecialist_Turret.ABP_TurretSpecialist_Turret_C.get_local_aim
// 0x0050 (0x0050 - 0x0000)
struct ABP_TurretSpecialist_Turret_C_Get_local_aim final
{
public:
	class APawn*                                  Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               LocalAim_0;                                        // 0x0008(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_GetBaseAimRotation_ReturnValue;           // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Conv_RotatorToVector_ReturnValue;         // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_LessLess_VectorRotator_ReturnValue;       // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromX_ReturnValue;                 // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ABP_TurretSpecialist_Turret_C_Get_local_aim) == 0x000008, "Wrong alignment on ABP_TurretSpecialist_Turret_C_Get_local_aim");
static_assert(sizeof(ABP_TurretSpecialist_Turret_C_Get_local_aim) == 0x000050, "Wrong size on ABP_TurretSpecialist_Turret_C_Get_local_aim");
static_assert(offsetof(ABP_TurretSpecialist_Turret_C_Get_local_aim, Target) == 0x000000, "Member 'ABP_TurretSpecialist_Turret_C_Get_local_aim::Target' has a wrong offset!");
static_assert(offsetof(ABP_TurretSpecialist_Turret_C_Get_local_aim, LocalAim_0) == 0x000008, "Member 'ABP_TurretSpecialist_Turret_C_Get_local_aim::LocalAim_0' has a wrong offset!");
static_assert(offsetof(ABP_TurretSpecialist_Turret_C_Get_local_aim, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000014, "Member 'ABP_TurretSpecialist_Turret_C_Get_local_aim::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_TurretSpecialist_Turret_C_Get_local_aim, CallFunc_GetBaseAimRotation_ReturnValue) == 0x000020, "Member 'ABP_TurretSpecialist_Turret_C_Get_local_aim::CallFunc_GetBaseAimRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_TurretSpecialist_Turret_C_Get_local_aim, CallFunc_Conv_RotatorToVector_ReturnValue) == 0x00002C, "Member 'ABP_TurretSpecialist_Turret_C_Get_local_aim::CallFunc_Conv_RotatorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_TurretSpecialist_Turret_C_Get_local_aim, CallFunc_LessLess_VectorRotator_ReturnValue) == 0x000038, "Member 'ABP_TurretSpecialist_Turret_C_Get_local_aim::CallFunc_LessLess_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_TurretSpecialist_Turret_C_Get_local_aim, CallFunc_MakeRotFromX_ReturnValue) == 0x000044, "Member 'ABP_TurretSpecialist_Turret_C_Get_local_aim::CallFunc_MakeRotFromX_ReturnValue' has a wrong offset!");

// Function ABP_TurretSpecialist_Turret.ABP_TurretSpecialist_Turret_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct ABP_TurretSpecialist_Turret_C_AnimGraph final
{
public:
	struct FPoseLink                              AnimGraph_0;                                       // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABP_TurretSpecialist_Turret_C_AnimGraph) == 0x000008, "Wrong alignment on ABP_TurretSpecialist_Turret_C_AnimGraph");
static_assert(sizeof(ABP_TurretSpecialist_Turret_C_AnimGraph) == 0x000010, "Wrong size on ABP_TurretSpecialist_Turret_C_AnimGraph");
static_assert(offsetof(ABP_TurretSpecialist_Turret_C_AnimGraph, AnimGraph_0) == 0x000000, "Member 'ABP_TurretSpecialist_Turret_C_AnimGraph::AnimGraph_0' has a wrong offset!");

}

