#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SubHeaderButton

#include "Basic.hpp"

#include "BP_SubHeaderButton_classes.hpp"
#include "BP_SubHeaderButton_parameters.hpp"


namespace SDK
{

// Function BP_SubHeaderButton.BP_SubHeaderButton_C.ExecuteUbergraph_BP_SubHeaderButton
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SubHeaderButton_C::ExecuteUbergraph_BP_SubHeaderButton(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SubHeaderButton_C", "ExecuteUbergraph_BP_SubHeaderButton");

	Params::BP_SubHeaderButton_C_ExecuteUbergraph_BP_SubHeaderButton Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SubHeaderButton.BP_SubHeaderButton_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SubHeaderButton_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SubHeaderButton_C", "Tick");

	Params::BP_SubHeaderButton_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SubHeaderButton.BP_SubHeaderButton_C.glitchMaterial
// (BlueprintCallable, BlueprintEvent)

void UBP_SubHeaderButton_C::GlitchMaterial()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SubHeaderButton_C", "glitchMaterial");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SubHeaderButton.BP_SubHeaderButton_C.UpdateNotification
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// ESlateVisibility                        Notification_visibility                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             Notification_text                                      (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UBP_SubHeaderButton_C::UpdateNotification(const ESlateVisibility& Notification_visibility, const class FText& Notification_text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SubHeaderButton_C", "UpdateNotification");

	Params::BP_SubHeaderButton_C_UpdateNotification Parms{};

	Parms.Notification_visibility = Notification_visibility;
	Parms.Notification_text = std::move(Notification_text);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SubHeaderButton.BP_SubHeaderButton_C.OnIsEnabledChanged
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bInIsEnabled                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_SubHeaderButton_C::OnIsEnabledChanged(bool bInIsEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SubHeaderButton_C", "OnIsEnabledChanged");

	Params::BP_SubHeaderButton_C_OnIsEnabledChanged Parms{};

	Parms.bInIsEnabled = bInIsEnabled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SubHeaderButton.BP_SubHeaderButton_C.SetFocusedState
// (BlueprintCallable, BlueprintEvent)

void UBP_SubHeaderButton_C::SetFocusedState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SubHeaderButton_C", "SetFocusedState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SubHeaderButton.BP_SubHeaderButton_C.SetInactiveState
// (BlueprintCallable, BlueprintEvent)

void UBP_SubHeaderButton_C::SetInactiveState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SubHeaderButton_C", "SetInactiveState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SubHeaderButton.BP_SubHeaderButton_C.SetSelectedState
// (BlueprintCallable, BlueprintEvent)

void UBP_SubHeaderButton_C::SetSelectedState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SubHeaderButton_C", "SetSelectedState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SubHeaderButton.BP_SubHeaderButton_C.OnUserSelected
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Using_mouse                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_SubHeaderButton_C::OnUserSelected(bool Using_mouse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SubHeaderButton_C", "OnUserSelected");

	Params::BP_SubHeaderButton_C_OnUserSelected Parms{};

	Parms.Using_mouse = Using_mouse;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SubHeaderButton.BP_SubHeaderButton_C.OnUserLostFocus
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Using_mouse                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_SubHeaderButton_C::OnUserLostFocus(bool Using_mouse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SubHeaderButton_C", "OnUserLostFocus");

	Params::BP_SubHeaderButton_C_OnUserLostFocus Parms{};

	Parms.Using_mouse = Using_mouse;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SubHeaderButton.BP_SubHeaderButton_C.OnUserFocused
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Using_mouse                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_SubHeaderButton_C::OnUserFocused(bool Using_mouse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SubHeaderButton_C", "OnUserFocused");

	Params::BP_SubHeaderButton_C_OnUserFocused Parms{};

	Parms.Using_mouse = Using_mouse;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SubHeaderButton.BP_SubHeaderButton_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UBP_SubHeaderButton_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SubHeaderButton_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}

}

