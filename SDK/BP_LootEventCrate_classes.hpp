#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_LootEventCrate

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_GadgetBox_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_LootEventCrate.BP_LootEventCrate_C
// 0x0018 (0x0400 - 0x03E8)
class ABP_LootEventCrate_C final : public ABP_GadgetBox_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_LootEventCrate_C;                // 0x03E8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class AActor*                                 Parent;                                            // 0x03F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsCollisionEnabled;                                // 0x03F8(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor)

public:
	void ExecuteUbergraph_BP_LootEventCrate(int32 EntryPoint);
	void BndEvt__BPC_UseableGadgetBox_K2Node_ComponentBoundEvent_1_UseAbilityCompleted__DelegateSignature(class AActor* User);
	void BndEvt__BPC_UseableGadgetBox_K2Node_ComponentBoundEvent_0_UseAbilityActivated__DelegateSignature(class AActor* User);
	void SetParent(class AActor* NewParam);
	void OnRep_IsCollisionEnabled();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_LootEventCrate_C">();
	}
	static class ABP_LootEventCrate_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_LootEventCrate_C>();
	}
};
static_assert(alignof(ABP_LootEventCrate_C) == 0x000008, "Wrong alignment on ABP_LootEventCrate_C");
static_assert(sizeof(ABP_LootEventCrate_C) == 0x000400, "Wrong size on ABP_LootEventCrate_C");
static_assert(offsetof(ABP_LootEventCrate_C, UberGraphFrame_BP_LootEventCrate_C) == 0x0003E8, "Member 'ABP_LootEventCrate_C::UberGraphFrame_BP_LootEventCrate_C' has a wrong offset!");
static_assert(offsetof(ABP_LootEventCrate_C, Parent) == 0x0003F0, "Member 'ABP_LootEventCrate_C::Parent' has a wrong offset!");
static_assert(offsetof(ABP_LootEventCrate_C, IsCollisionEnabled) == 0x0003F8, "Member 'ABP_LootEventCrate_C::IsCollisionEnabled' has a wrong offset!");

}

