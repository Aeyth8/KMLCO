#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AB_Grunt_OnZeroGCollision

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Keaton_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass AB_Grunt_OnZeroGCollision.AB_Grunt_OnZeroGCollision_C
// 0x0018 (0x04A8 - 0x0490)
class UAB_Grunt_OnZeroGCollision_C final : public UCAGameplayAbility_NPC
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0490(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	float                                         Impact_Speed;                                      // 0x0498(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49C[0x4];                                      // 0x049C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACACharacter_NPC*                       Owner_NPC;                                         // 0x04A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_AB_Grunt_OnZeroGCollision(int32 EntryPoint);
	void K2_ActivateAbilityFromEvent(const struct FGameplayEventData& EventData);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"AB_Grunt_OnZeroGCollision_C">();
	}
	static class UAB_Grunt_OnZeroGCollision_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAB_Grunt_OnZeroGCollision_C>();
	}
};
static_assert(alignof(UAB_Grunt_OnZeroGCollision_C) == 0x000008, "Wrong alignment on UAB_Grunt_OnZeroGCollision_C");
static_assert(sizeof(UAB_Grunt_OnZeroGCollision_C) == 0x0004A8, "Wrong size on UAB_Grunt_OnZeroGCollision_C");
static_assert(offsetof(UAB_Grunt_OnZeroGCollision_C, UberGraphFrame) == 0x000490, "Member 'UAB_Grunt_OnZeroGCollision_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UAB_Grunt_OnZeroGCollision_C, Impact_Speed) == 0x000498, "Member 'UAB_Grunt_OnZeroGCollision_C::Impact_Speed' has a wrong offset!");
static_assert(offsetof(UAB_Grunt_OnZeroGCollision_C, Owner_NPC) == 0x0004A0, "Member 'UAB_Grunt_OnZeroGCollision_C::Owner_NPC' has a wrong offset!");

}

