#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPUI_HowToPlay_Screen

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BPUI_HowToPlay_Screen.BPUI_HowToPlay_Screen_C.ExecuteUbergraph_BPUI_HowToPlay_Screen
// 0x0118 (0x0118 - 0x0000)
struct BPUI_HowToPlay_Screen_C_ExecuteUbergraph_BPUI_HowToPlay_Screen final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded_1;                       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0014)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Temp_object_Variable;                              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                K2Node_CustomEvent_Loaded;                         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_1;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCAGameModeConfiguration*               K2Node_DynamicCast_AsCAGame_Mode_Configuration;    // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A[0x6];                                       // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UCAGameModeConfiguration> K2Node_CustomEvent_Configuration;                  // 0x0050(0x0030)(HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_1;            // 0x0088(0x0014)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCAGamemodeInstructions*                K2Node_DynamicCast_AsCAGamemode_Instructions;      // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Temp_object_Variable_2;                            // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCAGamemodeInstructions*                K2Node_DynamicCast_AsCAGamemode_Instructions_1;    // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded_2;                       // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UCAGamemodeInstructions> CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue; // 0x00D0(0x0030)(UObjectWrapper, HasGetValueTypeHash)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_2;            // 0x0100(0x0014)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(BPUI_HowToPlay_Screen_C_ExecuteUbergraph_BPUI_HowToPlay_Screen) == 0x000008, "Wrong alignment on BPUI_HowToPlay_Screen_C_ExecuteUbergraph_BPUI_HowToPlay_Screen");
static_assert(sizeof(BPUI_HowToPlay_Screen_C_ExecuteUbergraph_BPUI_HowToPlay_Screen) == 0x000118, "Wrong size on BPUI_HowToPlay_Screen_C_ExecuteUbergraph_BPUI_HowToPlay_Screen");
static_assert(offsetof(BPUI_HowToPlay_Screen_C_ExecuteUbergraph_BPUI_HowToPlay_Screen, EntryPoint) == 0x000000, "Member 'BPUI_HowToPlay_Screen_C_ExecuteUbergraph_BPUI_HowToPlay_Screen::EntryPoint' has a wrong offset!");
static_assert(offsetof(BPUI_HowToPlay_Screen_C_ExecuteUbergraph_BPUI_HowToPlay_Screen, K2Node_CustomEvent_Loaded_1) == 0x000008, "Member 'BPUI_HowToPlay_Screen_C_ExecuteUbergraph_BPUI_HowToPlay_Screen::K2Node_CustomEvent_Loaded_1' has a wrong offset!");
static_assert(offsetof(BPUI_HowToPlay_Screen_C_ExecuteUbergraph_BPUI_HowToPlay_Screen, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'BPUI_HowToPlay_Screen_C_ExecuteUbergraph_BPUI_HowToPlay_Screen::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BPUI_HowToPlay_Screen_C_ExecuteUbergraph_BPUI_HowToPlay_Screen, Temp_object_Variable) == 0x000028, "Member 'BPUI_HowToPlay_Screen_C_ExecuteUbergraph_BPUI_HowToPlay_Screen::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BPUI_HowToPlay_Screen_C_ExecuteUbergraph_BPUI_HowToPlay_Screen, K2Node_CustomEvent_Loaded) == 0x000030, "Member 'BPUI_HowToPlay_Screen_C_ExecuteUbergraph_BPUI_HowToPlay_Screen::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(BPUI_HowToPlay_Screen_C_ExecuteUbergraph_BPUI_HowToPlay_Screen, Temp_object_Variable_1) == 0x000038, "Member 'BPUI_HowToPlay_Screen_C_ExecuteUbergraph_BPUI_HowToPlay_Screen::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BPUI_HowToPlay_Screen_C_ExecuteUbergraph_BPUI_HowToPlay_Screen, K2Node_DynamicCast_AsCAGame_Mode_Configuration) == 0x000040, "Member 'BPUI_HowToPlay_Screen_C_ExecuteUbergraph_BPUI_HowToPlay_Screen::K2Node_DynamicCast_AsCAGame_Mode_Configuration' has a wrong offset!");
static_assert(offsetof(BPUI_HowToPlay_Screen_C_ExecuteUbergraph_BPUI_HowToPlay_Screen, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'BPUI_HowToPlay_Screen_C_ExecuteUbergraph_BPUI_HowToPlay_Screen::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPUI_HowToPlay_Screen_C_ExecuteUbergraph_BPUI_HowToPlay_Screen, K2Node_Event_IsDesignTime) == 0x000049, "Member 'BPUI_HowToPlay_Screen_C_ExecuteUbergraph_BPUI_HowToPlay_Screen::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(BPUI_HowToPlay_Screen_C_ExecuteUbergraph_BPUI_HowToPlay_Screen, K2Node_CustomEvent_Configuration) == 0x000050, "Member 'BPUI_HowToPlay_Screen_C_ExecuteUbergraph_BPUI_HowToPlay_Screen::K2Node_CustomEvent_Configuration' has a wrong offset!");
static_assert(offsetof(BPUI_HowToPlay_Screen_C_ExecuteUbergraph_BPUI_HowToPlay_Screen, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000080, "Member 'BPUI_HowToPlay_Screen_C_ExecuteUbergraph_BPUI_HowToPlay_Screen::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPUI_HowToPlay_Screen_C_ExecuteUbergraph_BPUI_HowToPlay_Screen, K2Node_CreateDelegate_OutputDelegate_1) == 0x000088, "Member 'BPUI_HowToPlay_Screen_C_ExecuteUbergraph_BPUI_HowToPlay_Screen::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BPUI_HowToPlay_Screen_C_ExecuteUbergraph_BPUI_HowToPlay_Screen, K2Node_DynamicCast_AsCAGamemode_Instructions) == 0x0000A0, "Member 'BPUI_HowToPlay_Screen_C_ExecuteUbergraph_BPUI_HowToPlay_Screen::K2Node_DynamicCast_AsCAGamemode_Instructions' has a wrong offset!");
static_assert(offsetof(BPUI_HowToPlay_Screen_C_ExecuteUbergraph_BPUI_HowToPlay_Screen, K2Node_DynamicCast_bSuccess_1) == 0x0000A8, "Member 'BPUI_HowToPlay_Screen_C_ExecuteUbergraph_BPUI_HowToPlay_Screen::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BPUI_HowToPlay_Screen_C_ExecuteUbergraph_BPUI_HowToPlay_Screen, Temp_object_Variable_2) == 0x0000B0, "Member 'BPUI_HowToPlay_Screen_C_ExecuteUbergraph_BPUI_HowToPlay_Screen::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BPUI_HowToPlay_Screen_C_ExecuteUbergraph_BPUI_HowToPlay_Screen, K2Node_DynamicCast_AsCAGamemode_Instructions_1) == 0x0000B8, "Member 'BPUI_HowToPlay_Screen_C_ExecuteUbergraph_BPUI_HowToPlay_Screen::K2Node_DynamicCast_AsCAGamemode_Instructions_1' has a wrong offset!");
static_assert(offsetof(BPUI_HowToPlay_Screen_C_ExecuteUbergraph_BPUI_HowToPlay_Screen, K2Node_DynamicCast_bSuccess_2) == 0x0000C0, "Member 'BPUI_HowToPlay_Screen_C_ExecuteUbergraph_BPUI_HowToPlay_Screen::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BPUI_HowToPlay_Screen_C_ExecuteUbergraph_BPUI_HowToPlay_Screen, K2Node_CustomEvent_Loaded_2) == 0x0000C8, "Member 'BPUI_HowToPlay_Screen_C_ExecuteUbergraph_BPUI_HowToPlay_Screen::K2Node_CustomEvent_Loaded_2' has a wrong offset!");
static_assert(offsetof(BPUI_HowToPlay_Screen_C_ExecuteUbergraph_BPUI_HowToPlay_Screen, CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue) == 0x0000D0, "Member 'BPUI_HowToPlay_Screen_C_ExecuteUbergraph_BPUI_HowToPlay_Screen::CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPUI_HowToPlay_Screen_C_ExecuteUbergraph_BPUI_HowToPlay_Screen, K2Node_CreateDelegate_OutputDelegate_2) == 0x000100, "Member 'BPUI_HowToPlay_Screen_C_ExecuteUbergraph_BPUI_HowToPlay_Screen::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");

// Function BPUI_HowToPlay_Screen.BPUI_HowToPlay_Screen_C.SetData
// 0x0030 (0x0030 - 0x0000)
struct BPUI_HowToPlay_Screen_C_SetData final
{
public:
	TSoftObjectPtr<class UCAGameModeConfiguration> Configuration_0;                                   // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BPUI_HowToPlay_Screen_C_SetData) == 0x000008, "Wrong alignment on BPUI_HowToPlay_Screen_C_SetData");
static_assert(sizeof(BPUI_HowToPlay_Screen_C_SetData) == 0x000030, "Wrong size on BPUI_HowToPlay_Screen_C_SetData");
static_assert(offsetof(BPUI_HowToPlay_Screen_C_SetData, Configuration_0) == 0x000000, "Member 'BPUI_HowToPlay_Screen_C_SetData::Configuration_0' has a wrong offset!");

// Function BPUI_HowToPlay_Screen.BPUI_HowToPlay_Screen_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct BPUI_HowToPlay_Screen_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPUI_HowToPlay_Screen_C_PreConstruct) == 0x000001, "Wrong alignment on BPUI_HowToPlay_Screen_C_PreConstruct");
static_assert(sizeof(BPUI_HowToPlay_Screen_C_PreConstruct) == 0x000001, "Wrong size on BPUI_HowToPlay_Screen_C_PreConstruct");
static_assert(offsetof(BPUI_HowToPlay_Screen_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'BPUI_HowToPlay_Screen_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function BPUI_HowToPlay_Screen.BPUI_HowToPlay_Screen_C.OnLoaded_34B22CBA4BD633EE74F1FBAA81E7D042
// 0x0008 (0x0008 - 0x0000)
struct BPUI_HowToPlay_Screen_C_OnLoaded_34B22CBA4BD633EE74F1FBAA81E7D042 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPUI_HowToPlay_Screen_C_OnLoaded_34B22CBA4BD633EE74F1FBAA81E7D042) == 0x000008, "Wrong alignment on BPUI_HowToPlay_Screen_C_OnLoaded_34B22CBA4BD633EE74F1FBAA81E7D042");
static_assert(sizeof(BPUI_HowToPlay_Screen_C_OnLoaded_34B22CBA4BD633EE74F1FBAA81E7D042) == 0x000008, "Wrong size on BPUI_HowToPlay_Screen_C_OnLoaded_34B22CBA4BD633EE74F1FBAA81E7D042");
static_assert(offsetof(BPUI_HowToPlay_Screen_C_OnLoaded_34B22CBA4BD633EE74F1FBAA81E7D042, Loaded) == 0x000000, "Member 'BPUI_HowToPlay_Screen_C_OnLoaded_34B22CBA4BD633EE74F1FBAA81E7D042::Loaded' has a wrong offset!");

// Function BPUI_HowToPlay_Screen.BPUI_HowToPlay_Screen_C.OnLoaded_BF80057944E838B6D523DDA3E107D9BC
// 0x0008 (0x0008 - 0x0000)
struct BPUI_HowToPlay_Screen_C_OnLoaded_BF80057944E838B6D523DDA3E107D9BC final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPUI_HowToPlay_Screen_C_OnLoaded_BF80057944E838B6D523DDA3E107D9BC) == 0x000008, "Wrong alignment on BPUI_HowToPlay_Screen_C_OnLoaded_BF80057944E838B6D523DDA3E107D9BC");
static_assert(sizeof(BPUI_HowToPlay_Screen_C_OnLoaded_BF80057944E838B6D523DDA3E107D9BC) == 0x000008, "Wrong size on BPUI_HowToPlay_Screen_C_OnLoaded_BF80057944E838B6D523DDA3E107D9BC");
static_assert(offsetof(BPUI_HowToPlay_Screen_C_OnLoaded_BF80057944E838B6D523DDA3E107D9BC, Loaded) == 0x000000, "Member 'BPUI_HowToPlay_Screen_C_OnLoaded_BF80057944E838B6D523DDA3E107D9BC::Loaded' has a wrong offset!");

// Function BPUI_HowToPlay_Screen.BPUI_HowToPlay_Screen_C.OnLoaded_8B939B0D461FF57D12F52495119EB929
// 0x0008 (0x0008 - 0x0000)
struct BPUI_HowToPlay_Screen_C_OnLoaded_8B939B0D461FF57D12F52495119EB929 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPUI_HowToPlay_Screen_C_OnLoaded_8B939B0D461FF57D12F52495119EB929) == 0x000008, "Wrong alignment on BPUI_HowToPlay_Screen_C_OnLoaded_8B939B0D461FF57D12F52495119EB929");
static_assert(sizeof(BPUI_HowToPlay_Screen_C_OnLoaded_8B939B0D461FF57D12F52495119EB929) == 0x000008, "Wrong size on BPUI_HowToPlay_Screen_C_OnLoaded_8B939B0D461FF57D12F52495119EB929");
static_assert(offsetof(BPUI_HowToPlay_Screen_C_OnLoaded_8B939B0D461FF57D12F52495119EB929, Loaded) == 0x000000, "Member 'BPUI_HowToPlay_Screen_C_OnLoaded_8B939B0D461FF57D12F52495119EB929::Loaded' has a wrong offset!");

// Function BPUI_HowToPlay_Screen.BPUI_HowToPlay_Screen_C.SetInstructionsInternal
// 0x0030 (0x0030 - 0x0000)
struct BPUI_HowToPlay_Screen_C_SetInstructionsInternal final
{
public:
	TSoftObjectPtr<class UCAGamemodeInstructions> Instructions_0;                                    // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BPUI_HowToPlay_Screen_C_SetInstructionsInternal) == 0x000008, "Wrong alignment on BPUI_HowToPlay_Screen_C_SetInstructionsInternal");
static_assert(sizeof(BPUI_HowToPlay_Screen_C_SetInstructionsInternal) == 0x000030, "Wrong size on BPUI_HowToPlay_Screen_C_SetInstructionsInternal");
static_assert(offsetof(BPUI_HowToPlay_Screen_C_SetInstructionsInternal, Instructions_0) == 0x000000, "Member 'BPUI_HowToPlay_Screen_C_SetInstructionsInternal::Instructions_0' has a wrong offset!");

// Function BPUI_HowToPlay_Screen.BPUI_HowToPlay_Screen_C.UpdateHeader
// 0x0040 (0x0040 - 0x0000)
struct BPUI_HowToPlay_Screen_C_UpdateHeader final
{
public:
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCAGamemodeInstructions*                K2Node_DynamicCast_AsCAGamemode_Instructions;      // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_Conv_ColorToLinearColor_ReturnValue;      // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1; // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterial*                              K2Node_DynamicCast_AsMaterial;                     // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPUI_HowToPlay_Screen_C_UpdateHeader) == 0x000008, "Wrong alignment on BPUI_HowToPlay_Screen_C_UpdateHeader");
static_assert(sizeof(BPUI_HowToPlay_Screen_C_UpdateHeader) == 0x000040, "Wrong size on BPUI_HowToPlay_Screen_C_UpdateHeader");
static_assert(offsetof(BPUI_HowToPlay_Screen_C_UpdateHeader, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000000, "Member 'BPUI_HowToPlay_Screen_C_UpdateHeader::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPUI_HowToPlay_Screen_C_UpdateHeader, K2Node_DynamicCast_AsCAGamemode_Instructions) == 0x000008, "Member 'BPUI_HowToPlay_Screen_C_UpdateHeader::K2Node_DynamicCast_AsCAGamemode_Instructions' has a wrong offset!");
static_assert(offsetof(BPUI_HowToPlay_Screen_C_UpdateHeader, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BPUI_HowToPlay_Screen_C_UpdateHeader::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPUI_HowToPlay_Screen_C_UpdateHeader, CallFunc_Conv_ColorToLinearColor_ReturnValue) == 0x000014, "Member 'BPUI_HowToPlay_Screen_C_UpdateHeader::CallFunc_Conv_ColorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPUI_HowToPlay_Screen_C_UpdateHeader, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1) == 0x000028, "Member 'BPUI_HowToPlay_Screen_C_UpdateHeader::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPUI_HowToPlay_Screen_C_UpdateHeader, K2Node_DynamicCast_AsMaterial) == 0x000030, "Member 'BPUI_HowToPlay_Screen_C_UpdateHeader::K2Node_DynamicCast_AsMaterial' has a wrong offset!");
static_assert(offsetof(BPUI_HowToPlay_Screen_C_UpdateHeader, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'BPUI_HowToPlay_Screen_C_UpdateHeader::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

}

