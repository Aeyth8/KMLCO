#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AB_Player_Next_Weapon_Mode

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function AB_Player_Next_Weapon_Mode.AB_Player_Next_Weapon_Mode_C.ExecuteUbergraph_AB_Player_Next_Weapon_Mode
// 0x0238 (0x0238 - 0x0000)
struct AB_Player_Next_Weapon_Mode_C_ExecuteUbergraph_AB_Player_Next_Weapon_Mode final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0014)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0018(0x0014)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x002C(0x0014)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x0040(0x0014)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventData                     K2Node_CustomEvent_Payload;                        // 0x0058(0x00B8)()
	TDelegate<void(const struct FGameplayEventData& Payload)> K2Node_CreateDelegate_OutputDelegate_4;            // 0x0110(0x0014)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_124[0x4];                                      // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventData                     Temp_struct_Variable;                              // 0x0128(0x00B8)()
	class UAbilityTask_WaitGameplayEvent*         CallFunc_WaitGameplayEvent_ReturnValue;            // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E9[0x3];                                      // 0x01E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_5;            // 0x01EC(0x0014)(ZeroConstructor, NoDestructor)
	class ACAEquipmentBase*                       CallFunc_GetSourceWeapon_ReturnValue;              // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACAWeapon*                              K2Node_DynamicCast_AsCAWeapon;                     // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_211[0x7];                                      // 0x0211(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc_GetCharacterNextWeaponModeAnim_ReturnValue; // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           CallFunc_GetCharacterNextWeaponModeAnim_ReturnValue_1; // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAbilityTask_PlayMontageAndWait*        CallFunc_CreatePlayMontageAndWaitProxy_ReturnValue; // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0231(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_CommitAbility_ReturnValue;             // 0x0232(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_CommitAbility_ReturnValue_1;           // 0x0233(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AB_Player_Next_Weapon_Mode_C_ExecuteUbergraph_AB_Player_Next_Weapon_Mode) == 0x000008, "Wrong alignment on AB_Player_Next_Weapon_Mode_C_ExecuteUbergraph_AB_Player_Next_Weapon_Mode");
static_assert(sizeof(AB_Player_Next_Weapon_Mode_C_ExecuteUbergraph_AB_Player_Next_Weapon_Mode) == 0x000238, "Wrong size on AB_Player_Next_Weapon_Mode_C_ExecuteUbergraph_AB_Player_Next_Weapon_Mode");
static_assert(offsetof(AB_Player_Next_Weapon_Mode_C_ExecuteUbergraph_AB_Player_Next_Weapon_Mode, EntryPoint) == 0x000000, "Member 'AB_Player_Next_Weapon_Mode_C_ExecuteUbergraph_AB_Player_Next_Weapon_Mode::EntryPoint' has a wrong offset!");
static_assert(offsetof(AB_Player_Next_Weapon_Mode_C_ExecuteUbergraph_AB_Player_Next_Weapon_Mode, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'AB_Player_Next_Weapon_Mode_C_ExecuteUbergraph_AB_Player_Next_Weapon_Mode::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(AB_Player_Next_Weapon_Mode_C_ExecuteUbergraph_AB_Player_Next_Weapon_Mode, K2Node_CreateDelegate_OutputDelegate_1) == 0x000018, "Member 'AB_Player_Next_Weapon_Mode_C_ExecuteUbergraph_AB_Player_Next_Weapon_Mode::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(AB_Player_Next_Weapon_Mode_C_ExecuteUbergraph_AB_Player_Next_Weapon_Mode, K2Node_CreateDelegate_OutputDelegate_2) == 0x00002C, "Member 'AB_Player_Next_Weapon_Mode_C_ExecuteUbergraph_AB_Player_Next_Weapon_Mode::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(AB_Player_Next_Weapon_Mode_C_ExecuteUbergraph_AB_Player_Next_Weapon_Mode, K2Node_CreateDelegate_OutputDelegate_3) == 0x000040, "Member 'AB_Player_Next_Weapon_Mode_C_ExecuteUbergraph_AB_Player_Next_Weapon_Mode::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(AB_Player_Next_Weapon_Mode_C_ExecuteUbergraph_AB_Player_Next_Weapon_Mode, K2Node_CustomEvent_Payload) == 0x000058, "Member 'AB_Player_Next_Weapon_Mode_C_ExecuteUbergraph_AB_Player_Next_Weapon_Mode::K2Node_CustomEvent_Payload' has a wrong offset!");
static_assert(offsetof(AB_Player_Next_Weapon_Mode_C_ExecuteUbergraph_AB_Player_Next_Weapon_Mode, K2Node_CreateDelegate_OutputDelegate_4) == 0x000110, "Member 'AB_Player_Next_Weapon_Mode_C_ExecuteUbergraph_AB_Player_Next_Weapon_Mode::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(AB_Player_Next_Weapon_Mode_C_ExecuteUbergraph_AB_Player_Next_Weapon_Mode, Temp_struct_Variable) == 0x000128, "Member 'AB_Player_Next_Weapon_Mode_C_ExecuteUbergraph_AB_Player_Next_Weapon_Mode::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(AB_Player_Next_Weapon_Mode_C_ExecuteUbergraph_AB_Player_Next_Weapon_Mode, CallFunc_WaitGameplayEvent_ReturnValue) == 0x0001E0, "Member 'AB_Player_Next_Weapon_Mode_C_ExecuteUbergraph_AB_Player_Next_Weapon_Mode::CallFunc_WaitGameplayEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_Player_Next_Weapon_Mode_C_ExecuteUbergraph_AB_Player_Next_Weapon_Mode, CallFunc_IsValid_ReturnValue) == 0x0001E8, "Member 'AB_Player_Next_Weapon_Mode_C_ExecuteUbergraph_AB_Player_Next_Weapon_Mode::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_Player_Next_Weapon_Mode_C_ExecuteUbergraph_AB_Player_Next_Weapon_Mode, K2Node_CreateDelegate_OutputDelegate_5) == 0x0001EC, "Member 'AB_Player_Next_Weapon_Mode_C_ExecuteUbergraph_AB_Player_Next_Weapon_Mode::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(AB_Player_Next_Weapon_Mode_C_ExecuteUbergraph_AB_Player_Next_Weapon_Mode, CallFunc_GetSourceWeapon_ReturnValue) == 0x000200, "Member 'AB_Player_Next_Weapon_Mode_C_ExecuteUbergraph_AB_Player_Next_Weapon_Mode::CallFunc_GetSourceWeapon_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_Player_Next_Weapon_Mode_C_ExecuteUbergraph_AB_Player_Next_Weapon_Mode, K2Node_DynamicCast_AsCAWeapon) == 0x000208, "Member 'AB_Player_Next_Weapon_Mode_C_ExecuteUbergraph_AB_Player_Next_Weapon_Mode::K2Node_DynamicCast_AsCAWeapon' has a wrong offset!");
static_assert(offsetof(AB_Player_Next_Weapon_Mode_C_ExecuteUbergraph_AB_Player_Next_Weapon_Mode, K2Node_DynamicCast_bSuccess) == 0x000210, "Member 'AB_Player_Next_Weapon_Mode_C_ExecuteUbergraph_AB_Player_Next_Weapon_Mode::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AB_Player_Next_Weapon_Mode_C_ExecuteUbergraph_AB_Player_Next_Weapon_Mode, CallFunc_GetCharacterNextWeaponModeAnim_ReturnValue) == 0x000218, "Member 'AB_Player_Next_Weapon_Mode_C_ExecuteUbergraph_AB_Player_Next_Weapon_Mode::CallFunc_GetCharacterNextWeaponModeAnim_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_Player_Next_Weapon_Mode_C_ExecuteUbergraph_AB_Player_Next_Weapon_Mode, CallFunc_GetCharacterNextWeaponModeAnim_ReturnValue_1) == 0x000220, "Member 'AB_Player_Next_Weapon_Mode_C_ExecuteUbergraph_AB_Player_Next_Weapon_Mode::CallFunc_GetCharacterNextWeaponModeAnim_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AB_Player_Next_Weapon_Mode_C_ExecuteUbergraph_AB_Player_Next_Weapon_Mode, CallFunc_CreatePlayMontageAndWaitProxy_ReturnValue) == 0x000228, "Member 'AB_Player_Next_Weapon_Mode_C_ExecuteUbergraph_AB_Player_Next_Weapon_Mode::CallFunc_CreatePlayMontageAndWaitProxy_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_Player_Next_Weapon_Mode_C_ExecuteUbergraph_AB_Player_Next_Weapon_Mode, CallFunc_IsValid_ReturnValue_1) == 0x000230, "Member 'AB_Player_Next_Weapon_Mode_C_ExecuteUbergraph_AB_Player_Next_Weapon_Mode::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AB_Player_Next_Weapon_Mode_C_ExecuteUbergraph_AB_Player_Next_Weapon_Mode, CallFunc_IsValid_ReturnValue_2) == 0x000231, "Member 'AB_Player_Next_Weapon_Mode_C_ExecuteUbergraph_AB_Player_Next_Weapon_Mode::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AB_Player_Next_Weapon_Mode_C_ExecuteUbergraph_AB_Player_Next_Weapon_Mode, CallFunc_K2_CommitAbility_ReturnValue) == 0x000232, "Member 'AB_Player_Next_Weapon_Mode_C_ExecuteUbergraph_AB_Player_Next_Weapon_Mode::CallFunc_K2_CommitAbility_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_Player_Next_Weapon_Mode_C_ExecuteUbergraph_AB_Player_Next_Weapon_Mode, CallFunc_K2_CommitAbility_ReturnValue_1) == 0x000233, "Member 'AB_Player_Next_Weapon_Mode_C_ExecuteUbergraph_AB_Player_Next_Weapon_Mode::CallFunc_K2_CommitAbility_ReturnValue_1' has a wrong offset!");

// Function AB_Player_Next_Weapon_Mode.AB_Player_Next_Weapon_Mode_C.EventReceived_0E50F83148F839B0BA925DAD480A1FC4
// 0x00B8 (0x00B8 - 0x0000)
struct AB_Player_Next_Weapon_Mode_C_EventReceived_0E50F83148F839B0BA925DAD480A1FC4 final
{
public:
	struct FGameplayEventData                     Payload;                                           // 0x0000(0x00B8)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(AB_Player_Next_Weapon_Mode_C_EventReceived_0E50F83148F839B0BA925DAD480A1FC4) == 0x000008, "Wrong alignment on AB_Player_Next_Weapon_Mode_C_EventReceived_0E50F83148F839B0BA925DAD480A1FC4");
static_assert(sizeof(AB_Player_Next_Weapon_Mode_C_EventReceived_0E50F83148F839B0BA925DAD480A1FC4) == 0x0000B8, "Wrong size on AB_Player_Next_Weapon_Mode_C_EventReceived_0E50F83148F839B0BA925DAD480A1FC4");
static_assert(offsetof(AB_Player_Next_Weapon_Mode_C_EventReceived_0E50F83148F839B0BA925DAD480A1FC4, Payload) == 0x000000, "Member 'AB_Player_Next_Weapon_Mode_C_EventReceived_0E50F83148F839B0BA925DAD480A1FC4::Payload' has a wrong offset!");

// Function AB_Player_Next_Weapon_Mode.AB_Player_Next_Weapon_Mode_C.SetNextWeaponMode
// 0x0030 (0x0030 - 0x0000)
struct AB_Player_Next_Weapon_Mode_C_SetNextWeaponMode final
{
public:
	class ACAEquipmentBase*                       CallFunc_GetSourceWeapon_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACAWeapon*                              K2Node_DynamicCast_AsCAWeapon;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetCurrentWeaponModeName_ReturnValue;     // 0x0014(0x000C)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(AB_Player_Next_Weapon_Mode_C_SetNextWeaponMode) == 0x000008, "Wrong alignment on AB_Player_Next_Weapon_Mode_C_SetNextWeaponMode");
static_assert(sizeof(AB_Player_Next_Weapon_Mode_C_SetNextWeaponMode) == 0x000030, "Wrong size on AB_Player_Next_Weapon_Mode_C_SetNextWeaponMode");
static_assert(offsetof(AB_Player_Next_Weapon_Mode_C_SetNextWeaponMode, CallFunc_GetSourceWeapon_ReturnValue) == 0x000000, "Member 'AB_Player_Next_Weapon_Mode_C_SetNextWeaponMode::CallFunc_GetSourceWeapon_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_Player_Next_Weapon_Mode_C_SetNextWeaponMode, K2Node_DynamicCast_AsCAWeapon) == 0x000008, "Member 'AB_Player_Next_Weapon_Mode_C_SetNextWeaponMode::K2Node_DynamicCast_AsCAWeapon' has a wrong offset!");
static_assert(offsetof(AB_Player_Next_Weapon_Mode_C_SetNextWeaponMode, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'AB_Player_Next_Weapon_Mode_C_SetNextWeaponMode::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AB_Player_Next_Weapon_Mode_C_SetNextWeaponMode, CallFunc_GetCurrentWeaponModeName_ReturnValue) == 0x000014, "Member 'AB_Player_Next_Weapon_Mode_C_SetNextWeaponMode::CallFunc_GetCurrentWeaponModeName_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_Player_Next_Weapon_Mode_C_SetNextWeaponMode, CallFunc_Conv_NameToString_ReturnValue) == 0x000020, "Member 'AB_Player_Next_Weapon_Mode_C_SetNextWeaponMode::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");

// Function AB_Player_Next_Weapon_Mode.AB_Player_Next_Weapon_Mode_C.End if Complete
// 0x0001 (0x0001 - 0x0000)
struct AB_Player_Next_Weapon_Mode_C_End_if_Complete final
{
public:
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AB_Player_Next_Weapon_Mode_C_End_if_Complete) == 0x000001, "Wrong alignment on AB_Player_Next_Weapon_Mode_C_End_if_Complete");
static_assert(sizeof(AB_Player_Next_Weapon_Mode_C_End_if_Complete) == 0x000001, "Wrong size on AB_Player_Next_Weapon_Mode_C_End_if_Complete");
static_assert(offsetof(AB_Player_Next_Weapon_Mode_C_End_if_Complete, CallFunc_BooleanAND_ReturnValue) == 0x000000, "Member 'AB_Player_Next_Weapon_Mode_C_End_if_Complete::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

}

