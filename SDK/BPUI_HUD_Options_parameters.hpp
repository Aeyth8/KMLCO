#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPUI_HUD_Options

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "CAAudio_structs.hpp"
#include "UMG_structs.hpp"
#include "CALocalisationRuntime_structs.hpp"


namespace SDK::Params
{

// Function BPUI_HUD_Options.BPUI_HUD_Options_C.ExecuteUbergraph_BPUI_HUD_Options
// 0x00D0 (0x00D0 - 0x0000)
struct BPUI_HUD_Options_C_ExecuteUbergraph_BPUI_HUD_Options final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FCAAudioEventType& Event_name)> Temp_delegate_Variable;                            // 0x0004(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	TDelegate<void(const struct FCAAudioEventType& Event_name)> Temp_delegate_Variable_1;                          // 0x0018(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACAHUD_InGameMain*                      CallFunc_GetCAHUD_As_CA_UI_HUD_in_Game;            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACAHUD_InGameMain*                      CallFunc_GetCAHUD_As_CA_UI_HUD_in_Game_1;          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCAAudioPlaybackInstance               CallFunc_PlayEvent_playback_instance;              // 0x0040(0x0010)()
	bool                                          CallFunc_PlayEvent_play_success;                   // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCAAudioPlaybackInstance               CallFunc_PlayEvent_playback_instance_1;            // 0x0058(0x0010)()
	bool                                          CallFunc_PlayEvent_play_success_1;                 // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCAText                                K2Node_CustomEvent_Parent_Title;                   // 0x0070(0x0030)()
	struct FCAText                                K2Node_CustomEvent_Screen_Title;                   // 0x00A0(0x0030)()
};
static_assert(alignof(BPUI_HUD_Options_C_ExecuteUbergraph_BPUI_HUD_Options) == 0x000008, "Wrong alignment on BPUI_HUD_Options_C_ExecuteUbergraph_BPUI_HUD_Options");
static_assert(sizeof(BPUI_HUD_Options_C_ExecuteUbergraph_BPUI_HUD_Options) == 0x0000D0, "Wrong size on BPUI_HUD_Options_C_ExecuteUbergraph_BPUI_HUD_Options");
static_assert(offsetof(BPUI_HUD_Options_C_ExecuteUbergraph_BPUI_HUD_Options, EntryPoint) == 0x000000, "Member 'BPUI_HUD_Options_C_ExecuteUbergraph_BPUI_HUD_Options::EntryPoint' has a wrong offset!");
static_assert(offsetof(BPUI_HUD_Options_C_ExecuteUbergraph_BPUI_HUD_Options, Temp_delegate_Variable) == 0x000004, "Member 'BPUI_HUD_Options_C_ExecuteUbergraph_BPUI_HUD_Options::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(BPUI_HUD_Options_C_ExecuteUbergraph_BPUI_HUD_Options, Temp_delegate_Variable_1) == 0x000018, "Member 'BPUI_HUD_Options_C_ExecuteUbergraph_BPUI_HUD_Options::Temp_delegate_Variable_1' has a wrong offset!");
static_assert(offsetof(BPUI_HUD_Options_C_ExecuteUbergraph_BPUI_HUD_Options, CallFunc_GetCAHUD_As_CA_UI_HUD_in_Game) == 0x000030, "Member 'BPUI_HUD_Options_C_ExecuteUbergraph_BPUI_HUD_Options::CallFunc_GetCAHUD_As_CA_UI_HUD_in_Game' has a wrong offset!");
static_assert(offsetof(BPUI_HUD_Options_C_ExecuteUbergraph_BPUI_HUD_Options, CallFunc_GetCAHUD_As_CA_UI_HUD_in_Game_1) == 0x000038, "Member 'BPUI_HUD_Options_C_ExecuteUbergraph_BPUI_HUD_Options::CallFunc_GetCAHUD_As_CA_UI_HUD_in_Game_1' has a wrong offset!");
static_assert(offsetof(BPUI_HUD_Options_C_ExecuteUbergraph_BPUI_HUD_Options, CallFunc_PlayEvent_playback_instance) == 0x000040, "Member 'BPUI_HUD_Options_C_ExecuteUbergraph_BPUI_HUD_Options::CallFunc_PlayEvent_playback_instance' has a wrong offset!");
static_assert(offsetof(BPUI_HUD_Options_C_ExecuteUbergraph_BPUI_HUD_Options, CallFunc_PlayEvent_play_success) == 0x000050, "Member 'BPUI_HUD_Options_C_ExecuteUbergraph_BPUI_HUD_Options::CallFunc_PlayEvent_play_success' has a wrong offset!");
static_assert(offsetof(BPUI_HUD_Options_C_ExecuteUbergraph_BPUI_HUD_Options, CallFunc_PlayEvent_playback_instance_1) == 0x000058, "Member 'BPUI_HUD_Options_C_ExecuteUbergraph_BPUI_HUD_Options::CallFunc_PlayEvent_playback_instance_1' has a wrong offset!");
static_assert(offsetof(BPUI_HUD_Options_C_ExecuteUbergraph_BPUI_HUD_Options, CallFunc_PlayEvent_play_success_1) == 0x000068, "Member 'BPUI_HUD_Options_C_ExecuteUbergraph_BPUI_HUD_Options::CallFunc_PlayEvent_play_success_1' has a wrong offset!");
static_assert(offsetof(BPUI_HUD_Options_C_ExecuteUbergraph_BPUI_HUD_Options, K2Node_CustomEvent_Parent_Title) == 0x000070, "Member 'BPUI_HUD_Options_C_ExecuteUbergraph_BPUI_HUD_Options::K2Node_CustomEvent_Parent_Title' has a wrong offset!");
static_assert(offsetof(BPUI_HUD_Options_C_ExecuteUbergraph_BPUI_HUD_Options, K2Node_CustomEvent_Screen_Title) == 0x0000A0, "Member 'BPUI_HUD_Options_C_ExecuteUbergraph_BPUI_HUD_Options::K2Node_CustomEvent_Screen_Title' has a wrong offset!");

// Function BPUI_HUD_Options.BPUI_HUD_Options_C.SetTitles
// 0x0060 (0x0060 - 0x0000)
struct BPUI_HUD_Options_C_SetTitles final
{
public:
	struct FCAText                                Parent_Title;                                      // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FCAText                                Screen_Title;                                      // 0x0030(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(BPUI_HUD_Options_C_SetTitles) == 0x000008, "Wrong alignment on BPUI_HUD_Options_C_SetTitles");
static_assert(sizeof(BPUI_HUD_Options_C_SetTitles) == 0x000060, "Wrong size on BPUI_HUD_Options_C_SetTitles");
static_assert(offsetof(BPUI_HUD_Options_C_SetTitles, Parent_Title) == 0x000000, "Member 'BPUI_HUD_Options_C_SetTitles::Parent_Title' has a wrong offset!");
static_assert(offsetof(BPUI_HUD_Options_C_SetTitles, Screen_Title) == 0x000030, "Member 'BPUI_HUD_Options_C_SetTitles::Screen_Title' has a wrong offset!");

// Function BPUI_HUD_Options.BPUI_HUD_Options_C.OnFocusReceived
// 0x01C0 (0x01C0 - 0x0000)
struct BPUI_HUD_Options_C_OnFocusReceived final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FFocusEvent                            InFocusEvent;                                      // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FEventReply                            ReturnValue;                                       // 0x0040(0x00C0)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0100(0x00C0)()
};
static_assert(alignof(BPUI_HUD_Options_C_OnFocusReceived) == 0x000008, "Wrong alignment on BPUI_HUD_Options_C_OnFocusReceived");
static_assert(sizeof(BPUI_HUD_Options_C_OnFocusReceived) == 0x0001C0, "Wrong size on BPUI_HUD_Options_C_OnFocusReceived");
static_assert(offsetof(BPUI_HUD_Options_C_OnFocusReceived, MyGeometry) == 0x000000, "Member 'BPUI_HUD_Options_C_OnFocusReceived::MyGeometry' has a wrong offset!");
static_assert(offsetof(BPUI_HUD_Options_C_OnFocusReceived, InFocusEvent) == 0x000038, "Member 'BPUI_HUD_Options_C_OnFocusReceived::InFocusEvent' has a wrong offset!");
static_assert(offsetof(BPUI_HUD_Options_C_OnFocusReceived, ReturnValue) == 0x000040, "Member 'BPUI_HUD_Options_C_OnFocusReceived::ReturnValue' has a wrong offset!");
static_assert(offsetof(BPUI_HUD_Options_C_OnFocusReceived, CallFunc_Handled_ReturnValue) == 0x000100, "Member 'BPUI_HUD_Options_C_OnFocusReceived::CallFunc_Handled_ReturnValue' has a wrong offset!");

// Function BPUI_HUD_Options.BPUI_HUD_Options_C.CaptureInput
// 0x0014 (0x0014 - 0x0000)
struct BPUI_HUD_Options_C_CaptureInput final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0014)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(BPUI_HUD_Options_C_CaptureInput) == 0x000004, "Wrong alignment on BPUI_HUD_Options_C_CaptureInput");
static_assert(sizeof(BPUI_HUD_Options_C_CaptureInput) == 0x000014, "Wrong size on BPUI_HUD_Options_C_CaptureInput");
static_assert(offsetof(BPUI_HUD_Options_C_CaptureInput, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'BPUI_HUD_Options_C_CaptureInput::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

}

