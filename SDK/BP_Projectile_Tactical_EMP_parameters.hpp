#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Projectile_Tactical_EMP

#include "Basic.hpp"

#include "Keaton_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "CAAudio_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_Projectile_Tactical_EMP.BP_Projectile_Tactical_EMP_C.ExecuteUbergraph_BP_Projectile_Tactical_EMP
// 0x0200 (0x0200 - 0x0000)
struct BP_Projectile_Tactical_EMP_C_ExecuteUbergraph_BP_Projectile_Tactical_EMP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCAAudioPlaybackInstance               CallFunc_PlayPortalledEventInWorld_playback_instance; // 0x0010(0x0010)()
	bool                                          CallFunc_PlayPortalledEventInWorld_play_success;   // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACACharacter_MainPlayer*                CallFunc_GetLocalPlayerCharacter_ReturnValue;      // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetInstigator_ReturnValue;                // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetUniqueID_ReturnValue;                  // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetUniqueID_ReturnValue_1;                // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_CustomEvent_hit;                            // 0x0044(0x0090)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x00D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D6[0x2];                                       // 0x00D6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x00E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x00EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x00F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0104(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0120(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0128(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0140(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x014C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue;        // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_161[0x7];                                      // 0x0161(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_ComponentBoundEvent_predicted_actor;        // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FHitResult& Hit)> K2Node_CreateDelegate_OutputDelegate;              // 0x0170(0x0014)(ZeroConstructor, NoDestructor)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0184(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0190(0x0030)(IsPlainOldData, NoDestructor)
	class APawn*                                  CallFunc_GetInstigator_ReturnValue_1;              // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Tactical_EffectSphere_EMP_C*        CallFunc_FinishSpawningActor_ReturnValue;          // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D9[0x3];                                      // 0x01D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x01DC(0x0014)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x01F0(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Projectile_Tactical_EMP_C_ExecuteUbergraph_BP_Projectile_Tactical_EMP) == 0x000010, "Wrong alignment on BP_Projectile_Tactical_EMP_C_ExecuteUbergraph_BP_Projectile_Tactical_EMP");
static_assert(sizeof(BP_Projectile_Tactical_EMP_C_ExecuteUbergraph_BP_Projectile_Tactical_EMP) == 0x000200, "Wrong size on BP_Projectile_Tactical_EMP_C_ExecuteUbergraph_BP_Projectile_Tactical_EMP");
static_assert(offsetof(BP_Projectile_Tactical_EMP_C_ExecuteUbergraph_BP_Projectile_Tactical_EMP, EntryPoint) == 0x000000, "Member 'BP_Projectile_Tactical_EMP_C_ExecuteUbergraph_BP_Projectile_Tactical_EMP::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Tactical_EMP_C_ExecuteUbergraph_BP_Projectile_Tactical_EMP, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000004, "Member 'BP_Projectile_Tactical_EMP_C_ExecuteUbergraph_BP_Projectile_Tactical_EMP::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Tactical_EMP_C_ExecuteUbergraph_BP_Projectile_Tactical_EMP, CallFunc_PlayPortalledEventInWorld_playback_instance) == 0x000010, "Member 'BP_Projectile_Tactical_EMP_C_ExecuteUbergraph_BP_Projectile_Tactical_EMP::CallFunc_PlayPortalledEventInWorld_playback_instance' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Tactical_EMP_C_ExecuteUbergraph_BP_Projectile_Tactical_EMP, CallFunc_PlayPortalledEventInWorld_play_success) == 0x000020, "Member 'BP_Projectile_Tactical_EMP_C_ExecuteUbergraph_BP_Projectile_Tactical_EMP::CallFunc_PlayPortalledEventInWorld_play_success' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Tactical_EMP_C_ExecuteUbergraph_BP_Projectile_Tactical_EMP, CallFunc_GetLocalPlayerCharacter_ReturnValue) == 0x000028, "Member 'BP_Projectile_Tactical_EMP_C_ExecuteUbergraph_BP_Projectile_Tactical_EMP::CallFunc_GetLocalPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Tactical_EMP_C_ExecuteUbergraph_BP_Projectile_Tactical_EMP, CallFunc_GetInstigator_ReturnValue) == 0x000030, "Member 'BP_Projectile_Tactical_EMP_C_ExecuteUbergraph_BP_Projectile_Tactical_EMP::CallFunc_GetInstigator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Tactical_EMP_C_ExecuteUbergraph_BP_Projectile_Tactical_EMP, CallFunc_GetUniqueID_ReturnValue) == 0x000038, "Member 'BP_Projectile_Tactical_EMP_C_ExecuteUbergraph_BP_Projectile_Tactical_EMP::CallFunc_GetUniqueID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Tactical_EMP_C_ExecuteUbergraph_BP_Projectile_Tactical_EMP, CallFunc_GetUniqueID_ReturnValue_1) == 0x00003C, "Member 'BP_Projectile_Tactical_EMP_C_ExecuteUbergraph_BP_Projectile_Tactical_EMP::CallFunc_GetUniqueID_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Tactical_EMP_C_ExecuteUbergraph_BP_Projectile_Tactical_EMP, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000040, "Member 'BP_Projectile_Tactical_EMP_C_ExecuteUbergraph_BP_Projectile_Tactical_EMP::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Tactical_EMP_C_ExecuteUbergraph_BP_Projectile_Tactical_EMP, K2Node_CustomEvent_hit) == 0x000044, "Member 'BP_Projectile_Tactical_EMP_C_ExecuteUbergraph_BP_Projectile_Tactical_EMP::K2Node_CustomEvent_hit' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Tactical_EMP_C_ExecuteUbergraph_BP_Projectile_Tactical_EMP, CallFunc_BreakHitResult_bBlockingHit) == 0x0000D4, "Member 'BP_Projectile_Tactical_EMP_C_ExecuteUbergraph_BP_Projectile_Tactical_EMP::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Tactical_EMP_C_ExecuteUbergraph_BP_Projectile_Tactical_EMP, CallFunc_BreakHitResult_bInitialOverlap) == 0x0000D5, "Member 'BP_Projectile_Tactical_EMP_C_ExecuteUbergraph_BP_Projectile_Tactical_EMP::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Tactical_EMP_C_ExecuteUbergraph_BP_Projectile_Tactical_EMP, CallFunc_BreakHitResult_Time) == 0x0000D8, "Member 'BP_Projectile_Tactical_EMP_C_ExecuteUbergraph_BP_Projectile_Tactical_EMP::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Tactical_EMP_C_ExecuteUbergraph_BP_Projectile_Tactical_EMP, CallFunc_BreakHitResult_Distance) == 0x0000DC, "Member 'BP_Projectile_Tactical_EMP_C_ExecuteUbergraph_BP_Projectile_Tactical_EMP::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Tactical_EMP_C_ExecuteUbergraph_BP_Projectile_Tactical_EMP, CallFunc_BreakHitResult_Location) == 0x0000E0, "Member 'BP_Projectile_Tactical_EMP_C_ExecuteUbergraph_BP_Projectile_Tactical_EMP::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Tactical_EMP_C_ExecuteUbergraph_BP_Projectile_Tactical_EMP, CallFunc_BreakHitResult_ImpactPoint) == 0x0000EC, "Member 'BP_Projectile_Tactical_EMP_C_ExecuteUbergraph_BP_Projectile_Tactical_EMP::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Tactical_EMP_C_ExecuteUbergraph_BP_Projectile_Tactical_EMP, CallFunc_BreakHitResult_Normal) == 0x0000F8, "Member 'BP_Projectile_Tactical_EMP_C_ExecuteUbergraph_BP_Projectile_Tactical_EMP::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Tactical_EMP_C_ExecuteUbergraph_BP_Projectile_Tactical_EMP, CallFunc_BreakHitResult_ImpactNormal) == 0x000104, "Member 'BP_Projectile_Tactical_EMP_C_ExecuteUbergraph_BP_Projectile_Tactical_EMP::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Tactical_EMP_C_ExecuteUbergraph_BP_Projectile_Tactical_EMP, CallFunc_BreakHitResult_PhysMat) == 0x000110, "Member 'BP_Projectile_Tactical_EMP_C_ExecuteUbergraph_BP_Projectile_Tactical_EMP::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Tactical_EMP_C_ExecuteUbergraph_BP_Projectile_Tactical_EMP, CallFunc_BreakHitResult_HitActor) == 0x000118, "Member 'BP_Projectile_Tactical_EMP_C_ExecuteUbergraph_BP_Projectile_Tactical_EMP::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Tactical_EMP_C_ExecuteUbergraph_BP_Projectile_Tactical_EMP, CallFunc_BreakHitResult_HitComponent) == 0x000120, "Member 'BP_Projectile_Tactical_EMP_C_ExecuteUbergraph_BP_Projectile_Tactical_EMP::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Tactical_EMP_C_ExecuteUbergraph_BP_Projectile_Tactical_EMP, CallFunc_BreakHitResult_HitBoneName) == 0x000128, "Member 'BP_Projectile_Tactical_EMP_C_ExecuteUbergraph_BP_Projectile_Tactical_EMP::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Tactical_EMP_C_ExecuteUbergraph_BP_Projectile_Tactical_EMP, CallFunc_BreakHitResult_HitItem) == 0x000134, "Member 'BP_Projectile_Tactical_EMP_C_ExecuteUbergraph_BP_Projectile_Tactical_EMP::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Tactical_EMP_C_ExecuteUbergraph_BP_Projectile_Tactical_EMP, CallFunc_BreakHitResult_ElementIndex) == 0x000138, "Member 'BP_Projectile_Tactical_EMP_C_ExecuteUbergraph_BP_Projectile_Tactical_EMP::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Tactical_EMP_C_ExecuteUbergraph_BP_Projectile_Tactical_EMP, CallFunc_BreakHitResult_FaceIndex) == 0x00013C, "Member 'BP_Projectile_Tactical_EMP_C_ExecuteUbergraph_BP_Projectile_Tactical_EMP::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Tactical_EMP_C_ExecuteUbergraph_BP_Projectile_Tactical_EMP, CallFunc_BreakHitResult_TraceStart) == 0x000140, "Member 'BP_Projectile_Tactical_EMP_C_ExecuteUbergraph_BP_Projectile_Tactical_EMP::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Tactical_EMP_C_ExecuteUbergraph_BP_Projectile_Tactical_EMP, CallFunc_BreakHitResult_TraceEnd) == 0x00014C, "Member 'BP_Projectile_Tactical_EMP_C_ExecuteUbergraph_BP_Projectile_Tactical_EMP::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Tactical_EMP_C_ExecuteUbergraph_BP_Projectile_Tactical_EMP, CallFunc_GetObjectClass_ReturnValue) == 0x000158, "Member 'BP_Projectile_Tactical_EMP_C_ExecuteUbergraph_BP_Projectile_Tactical_EMP::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Tactical_EMP_C_ExecuteUbergraph_BP_Projectile_Tactical_EMP, CallFunc_EqualEqual_ClassClass_ReturnValue) == 0x000160, "Member 'BP_Projectile_Tactical_EMP_C_ExecuteUbergraph_BP_Projectile_Tactical_EMP::CallFunc_EqualEqual_ClassClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Tactical_EMP_C_ExecuteUbergraph_BP_Projectile_Tactical_EMP, K2Node_ComponentBoundEvent_predicted_actor) == 0x000168, "Member 'BP_Projectile_Tactical_EMP_C_ExecuteUbergraph_BP_Projectile_Tactical_EMP::K2Node_ComponentBoundEvent_predicted_actor' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Tactical_EMP_C_ExecuteUbergraph_BP_Projectile_Tactical_EMP, K2Node_CreateDelegate_OutputDelegate) == 0x000170, "Member 'BP_Projectile_Tactical_EMP_C_ExecuteUbergraph_BP_Projectile_Tactical_EMP::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Tactical_EMP_C_ExecuteUbergraph_BP_Projectile_Tactical_EMP, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000184, "Member 'BP_Projectile_Tactical_EMP_C_ExecuteUbergraph_BP_Projectile_Tactical_EMP::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Tactical_EMP_C_ExecuteUbergraph_BP_Projectile_Tactical_EMP, CallFunc_MakeTransform_ReturnValue) == 0x000190, "Member 'BP_Projectile_Tactical_EMP_C_ExecuteUbergraph_BP_Projectile_Tactical_EMP::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Tactical_EMP_C_ExecuteUbergraph_BP_Projectile_Tactical_EMP, CallFunc_GetInstigator_ReturnValue_1) == 0x0001C0, "Member 'BP_Projectile_Tactical_EMP_C_ExecuteUbergraph_BP_Projectile_Tactical_EMP::CallFunc_GetInstigator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Tactical_EMP_C_ExecuteUbergraph_BP_Projectile_Tactical_EMP, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0001C8, "Member 'BP_Projectile_Tactical_EMP_C_ExecuteUbergraph_BP_Projectile_Tactical_EMP::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Tactical_EMP_C_ExecuteUbergraph_BP_Projectile_Tactical_EMP, CallFunc_FinishSpawningActor_ReturnValue) == 0x0001D0, "Member 'BP_Projectile_Tactical_EMP_C_ExecuteUbergraph_BP_Projectile_Tactical_EMP::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Tactical_EMP_C_ExecuteUbergraph_BP_Projectile_Tactical_EMP, CallFunc_IsServer_ReturnValue) == 0x0001D8, "Member 'BP_Projectile_Tactical_EMP_C_ExecuteUbergraph_BP_Projectile_Tactical_EMP::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Tactical_EMP_C_ExecuteUbergraph_BP_Projectile_Tactical_EMP, K2Node_CreateDelegate_OutputDelegate_1) == 0x0001DC, "Member 'BP_Projectile_Tactical_EMP_C_ExecuteUbergraph_BP_Projectile_Tactical_EMP::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Tactical_EMP_C_ExecuteUbergraph_BP_Projectile_Tactical_EMP, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x0001F0, "Member 'BP_Projectile_Tactical_EMP_C_ExecuteUbergraph_BP_Projectile_Tactical_EMP::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");

// Function BP_Projectile_Tactical_EMP.BP_Projectile_Tactical_EMP_C.BndEvt__BP_Projectile_Tactical_EMP_m_predicted_physics_component_K2Node_ComponentBoundEvent_1_OnPairedWithPredictedActor__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BP_Projectile_Tactical_EMP_C_BndEvt__BP_Projectile_Tactical_EMP_m_predicted_physics_component_K2Node_ComponentBoundEvent_1_OnPairedWithPredictedActor__DelegateSignature final
{
public:
	class AActor*                                 Predicted_actor;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Projectile_Tactical_EMP_C_BndEvt__BP_Projectile_Tactical_EMP_m_predicted_physics_component_K2Node_ComponentBoundEvent_1_OnPairedWithPredictedActor__DelegateSignature) == 0x000008, "Wrong alignment on BP_Projectile_Tactical_EMP_C_BndEvt__BP_Projectile_Tactical_EMP_m_predicted_physics_component_K2Node_ComponentBoundEvent_1_OnPairedWithPredictedActor__DelegateSignature");
static_assert(sizeof(BP_Projectile_Tactical_EMP_C_BndEvt__BP_Projectile_Tactical_EMP_m_predicted_physics_component_K2Node_ComponentBoundEvent_1_OnPairedWithPredictedActor__DelegateSignature) == 0x000008, "Wrong size on BP_Projectile_Tactical_EMP_C_BndEvt__BP_Projectile_Tactical_EMP_m_predicted_physics_component_K2Node_ComponentBoundEvent_1_OnPairedWithPredictedActor__DelegateSignature");
static_assert(offsetof(BP_Projectile_Tactical_EMP_C_BndEvt__BP_Projectile_Tactical_EMP_m_predicted_physics_component_K2Node_ComponentBoundEvent_1_OnPairedWithPredictedActor__DelegateSignature, Predicted_actor) == 0x000000, "Member 'BP_Projectile_Tactical_EMP_C_BndEvt__BP_Projectile_Tactical_EMP_m_predicted_physics_component_K2Node_ComponentBoundEvent_1_OnPairedWithPredictedActor__DelegateSignature::Predicted_actor' has a wrong offset!");

// Function BP_Projectile_Tactical_EMP.BP_Projectile_Tactical_EMP_C.OnProjFinalImpact
// 0x0090 (0x0090 - 0x0000)
struct BP_Projectile_Tactical_EMP_C_OnProjFinalImpact final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x0090)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_Projectile_Tactical_EMP_C_OnProjFinalImpact) == 0x000004, "Wrong alignment on BP_Projectile_Tactical_EMP_C_OnProjFinalImpact");
static_assert(sizeof(BP_Projectile_Tactical_EMP_C_OnProjFinalImpact) == 0x000090, "Wrong size on BP_Projectile_Tactical_EMP_C_OnProjFinalImpact");
static_assert(offsetof(BP_Projectile_Tactical_EMP_C_OnProjFinalImpact, Hit) == 0x000000, "Member 'BP_Projectile_Tactical_EMP_C_OnProjFinalImpact::Hit' has a wrong offset!");

// Function BP_Projectile_Tactical_EMP.BP_Projectile_Tactical_EMP_C.PlayArmingAudio
// 0x0068 (0x0068 - 0x0000)
struct BP_Projectile_Tactical_EMP_C_PlayArmingAudio final
{
public:
	bool                                          HitShield;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const struct FCAAudioEventType& Event_name)> Temp_delegate_Variable;                            // 0x0004(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0018(0x0014)(ZeroConstructor, NoDestructor)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0040(0x0008)(NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_SpawnCANiagaraSystemAtLocation_ReturnValue; // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCAAudioPlaybackInstance               CallFunc_PlayEvent_playback_instance;              // 0x0050(0x0010)()
	bool                                          CallFunc_PlayEvent_play_success;                   // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Projectile_Tactical_EMP_C_PlayArmingAudio) == 0x000008, "Wrong alignment on BP_Projectile_Tactical_EMP_C_PlayArmingAudio");
static_assert(sizeof(BP_Projectile_Tactical_EMP_C_PlayArmingAudio) == 0x000068, "Wrong size on BP_Projectile_Tactical_EMP_C_PlayArmingAudio");
static_assert(offsetof(BP_Projectile_Tactical_EMP_C_PlayArmingAudio, HitShield) == 0x000000, "Member 'BP_Projectile_Tactical_EMP_C_PlayArmingAudio::HitShield' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Tactical_EMP_C_PlayArmingAudio, Temp_delegate_Variable) == 0x000004, "Member 'BP_Projectile_Tactical_EMP_C_PlayArmingAudio::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Tactical_EMP_C_PlayArmingAudio, K2Node_CreateDelegate_OutputDelegate) == 0x000018, "Member 'BP_Projectile_Tactical_EMP_C_PlayArmingAudio::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Tactical_EMP_C_PlayArmingAudio, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00002C, "Member 'BP_Projectile_Tactical_EMP_C_PlayArmingAudio::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Tactical_EMP_C_PlayArmingAudio, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000030, "Member 'BP_Projectile_Tactical_EMP_C_PlayArmingAudio::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Tactical_EMP_C_PlayArmingAudio, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000040, "Member 'BP_Projectile_Tactical_EMP_C_PlayArmingAudio::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Tactical_EMP_C_PlayArmingAudio, CallFunc_SpawnCANiagaraSystemAtLocation_ReturnValue) == 0x000048, "Member 'BP_Projectile_Tactical_EMP_C_PlayArmingAudio::CallFunc_SpawnCANiagaraSystemAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Tactical_EMP_C_PlayArmingAudio, CallFunc_PlayEvent_playback_instance) == 0x000050, "Member 'BP_Projectile_Tactical_EMP_C_PlayArmingAudio::CallFunc_PlayEvent_playback_instance' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Tactical_EMP_C_PlayArmingAudio, CallFunc_PlayEvent_play_success) == 0x000060, "Member 'BP_Projectile_Tactical_EMP_C_PlayArmingAudio::CallFunc_PlayEvent_play_success' has a wrong offset!");

// Function BP_Projectile_Tactical_EMP.BP_Projectile_Tactical_EMP_C.StopSFX
// 0x0030 (0x0030 - 0x0000)
struct BP_Projectile_Tactical_EMP_C_StopSFX final
{
public:
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const struct FCAAudioEventType& Event_name)> Temp_delegate_Variable;                            // 0x0004(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	struct FCAAudioPlaybackInstance               CallFunc_PlayEvent_playback_instance;              // 0x0018(0x0010)()
	bool                                          CallFunc_PlayEvent_play_success;                   // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Projectile_Tactical_EMP_C_StopSFX) == 0x000008, "Wrong alignment on BP_Projectile_Tactical_EMP_C_StopSFX");
static_assert(sizeof(BP_Projectile_Tactical_EMP_C_StopSFX) == 0x000030, "Wrong size on BP_Projectile_Tactical_EMP_C_StopSFX");
static_assert(offsetof(BP_Projectile_Tactical_EMP_C_StopSFX, CallFunc_HasAuthority_ReturnValue) == 0x000000, "Member 'BP_Projectile_Tactical_EMP_C_StopSFX::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Tactical_EMP_C_StopSFX, Temp_delegate_Variable) == 0x000004, "Member 'BP_Projectile_Tactical_EMP_C_StopSFX::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Tactical_EMP_C_StopSFX, CallFunc_PlayEvent_playback_instance) == 0x000018, "Member 'BP_Projectile_Tactical_EMP_C_StopSFX::CallFunc_PlayEvent_playback_instance' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Tactical_EMP_C_StopSFX, CallFunc_PlayEvent_play_success) == 0x000028, "Member 'BP_Projectile_Tactical_EMP_C_StopSFX::CallFunc_PlayEvent_play_success' has a wrong offset!");

// Function BP_Projectile_Tactical_EMP.BP_Projectile_Tactical_EMP_C.OnEffectSphereSpawned
// 0x0010 (0x0010 - 0x0000)
struct BP_Projectile_Tactical_EMP_C_OnEffectSphereSpawned final
{
public:
	class ABP_Tactical_EffectSphere_EMP_C*        Effect_Sphere;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Projectile_Tactical_EMP_C_OnEffectSphereSpawned) == 0x000008, "Wrong alignment on BP_Projectile_Tactical_EMP_C_OnEffectSphereSpawned");
static_assert(sizeof(BP_Projectile_Tactical_EMP_C_OnEffectSphereSpawned) == 0x000010, "Wrong size on BP_Projectile_Tactical_EMP_C_OnEffectSphereSpawned");
static_assert(offsetof(BP_Projectile_Tactical_EMP_C_OnEffectSphereSpawned, Effect_Sphere) == 0x000000, "Member 'BP_Projectile_Tactical_EMP_C_OnEffectSphereSpawned::Effect_Sphere' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Tactical_EMP_C_OnEffectSphereSpawned, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_Projectile_Tactical_EMP_C_OnEffectSphereSpawned::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Tactical_EMP_C_OnEffectSphereSpawned, CallFunc_IsValid_ReturnValue_1) == 0x000009, "Member 'BP_Projectile_Tactical_EMP_C_OnEffectSphereSpawned::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_Projectile_Tactical_EMP.BP_Projectile_Tactical_EMP_C.SFX Projectile Travel Audio Start
// 0x0038 (0x0038 - 0x0000)
struct BP_Projectile_Tactical_EMP_C_SFX_Projectile_Travel_Audio_Start final
{
public:
	struct FCAAudioSwitchNameType                 Switch_Group;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FCAAudioSwitchValueType                Switch_Value;                                      // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FCAAudioEventType                      In_Flight_Audio_Event;                             // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	TDelegate<void(const struct FCAAudioEventType& Event_name)> Temp_delegate_Variable;                            // 0x000C(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	struct FCAAudioPlaybackInstance               CallFunc_PlayEvent_playback_instance;              // 0x0020(0x0010)()
	bool                                          CallFunc_PlayEvent_play_success;                   // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Projectile_Tactical_EMP_C_SFX_Projectile_Travel_Audio_Start) == 0x000008, "Wrong alignment on BP_Projectile_Tactical_EMP_C_SFX_Projectile_Travel_Audio_Start");
static_assert(sizeof(BP_Projectile_Tactical_EMP_C_SFX_Projectile_Travel_Audio_Start) == 0x000038, "Wrong size on BP_Projectile_Tactical_EMP_C_SFX_Projectile_Travel_Audio_Start");
static_assert(offsetof(BP_Projectile_Tactical_EMP_C_SFX_Projectile_Travel_Audio_Start, Switch_Group) == 0x000000, "Member 'BP_Projectile_Tactical_EMP_C_SFX_Projectile_Travel_Audio_Start::Switch_Group' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Tactical_EMP_C_SFX_Projectile_Travel_Audio_Start, Switch_Value) == 0x000004, "Member 'BP_Projectile_Tactical_EMP_C_SFX_Projectile_Travel_Audio_Start::Switch_Value' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Tactical_EMP_C_SFX_Projectile_Travel_Audio_Start, In_Flight_Audio_Event) == 0x000008, "Member 'BP_Projectile_Tactical_EMP_C_SFX_Projectile_Travel_Audio_Start::In_Flight_Audio_Event' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Tactical_EMP_C_SFX_Projectile_Travel_Audio_Start, Temp_delegate_Variable) == 0x00000C, "Member 'BP_Projectile_Tactical_EMP_C_SFX_Projectile_Travel_Audio_Start::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Tactical_EMP_C_SFX_Projectile_Travel_Audio_Start, CallFunc_PlayEvent_playback_instance) == 0x000020, "Member 'BP_Projectile_Tactical_EMP_C_SFX_Projectile_Travel_Audio_Start::CallFunc_PlayEvent_playback_instance' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Tactical_EMP_C_SFX_Projectile_Travel_Audio_Start, CallFunc_PlayEvent_play_success) == 0x000030, "Member 'BP_Projectile_Tactical_EMP_C_SFX_Projectile_Travel_Audio_Start::CallFunc_PlayEvent_play_success' has a wrong offset!");

// Function BP_Projectile_Tactical_EMP.BP_Projectile_Tactical_EMP_C.SFX Projectile Travel Audio Stop
// 0x0030 (0x0030 - 0x0000)
struct BP_Projectile_Tactical_EMP_C_SFX_Projectile_Travel_Audio_Stop final
{
public:
	struct FCAAudioEventType                      Stop_In_Flight_Audio_Event;                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	TDelegate<void(const struct FCAAudioEventType& Event_name)> Temp_delegate_Variable;                            // 0x0004(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	struct FCAAudioPlaybackInstance               CallFunc_PlayEvent_playback_instance;              // 0x0018(0x0010)()
	bool                                          CallFunc_PlayEvent_play_success;                   // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Projectile_Tactical_EMP_C_SFX_Projectile_Travel_Audio_Stop) == 0x000008, "Wrong alignment on BP_Projectile_Tactical_EMP_C_SFX_Projectile_Travel_Audio_Stop");
static_assert(sizeof(BP_Projectile_Tactical_EMP_C_SFX_Projectile_Travel_Audio_Stop) == 0x000030, "Wrong size on BP_Projectile_Tactical_EMP_C_SFX_Projectile_Travel_Audio_Stop");
static_assert(offsetof(BP_Projectile_Tactical_EMP_C_SFX_Projectile_Travel_Audio_Stop, Stop_In_Flight_Audio_Event) == 0x000000, "Member 'BP_Projectile_Tactical_EMP_C_SFX_Projectile_Travel_Audio_Stop::Stop_In_Flight_Audio_Event' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Tactical_EMP_C_SFX_Projectile_Travel_Audio_Stop, Temp_delegate_Variable) == 0x000004, "Member 'BP_Projectile_Tactical_EMP_C_SFX_Projectile_Travel_Audio_Stop::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Tactical_EMP_C_SFX_Projectile_Travel_Audio_Stop, CallFunc_PlayEvent_playback_instance) == 0x000018, "Member 'BP_Projectile_Tactical_EMP_C_SFX_Projectile_Travel_Audio_Stop::CallFunc_PlayEvent_playback_instance' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Tactical_EMP_C_SFX_Projectile_Travel_Audio_Stop, CallFunc_PlayEvent_play_success) == 0x000028, "Member 'BP_Projectile_Tactical_EMP_C_SFX_Projectile_Travel_Audio_Stop::CallFunc_PlayEvent_play_success' has a wrong offset!");

// Function BP_Projectile_Tactical_EMP.BP_Projectile_Tactical_EMP_C.UpgradeGadgetToCurrentLevel
// 0x0038 (0x0038 - 0x0000)
struct BP_Projectile_Tactical_EMP_C_UpgradeGadgetToCurrentLevel final
{
public:
	struct FCAGameplayEffectTableValueRow         CallFunc_GetDataTableRowFromName_OutRow;           // 0x0000(0x0010)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BP_GetProjectileGravityScale_ReturnValue; // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UCAProjectileMovementComponent*         CallFunc_GetProjectileMovementComponent_ReturnValue; // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Projectile_Tactical_EMP_C_UpgradeGadgetToCurrentLevel) == 0x000008, "Wrong alignment on BP_Projectile_Tactical_EMP_C_UpgradeGadgetToCurrentLevel");
static_assert(sizeof(BP_Projectile_Tactical_EMP_C_UpgradeGadgetToCurrentLevel) == 0x000038, "Wrong size on BP_Projectile_Tactical_EMP_C_UpgradeGadgetToCurrentLevel");
static_assert(offsetof(BP_Projectile_Tactical_EMP_C_UpgradeGadgetToCurrentLevel, CallFunc_GetDataTableRowFromName_OutRow) == 0x000000, "Member 'BP_Projectile_Tactical_EMP_C_UpgradeGadgetToCurrentLevel::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Tactical_EMP_C_UpgradeGadgetToCurrentLevel, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000010, "Member 'BP_Projectile_Tactical_EMP_C_UpgradeGadgetToCurrentLevel::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Tactical_EMP_C_UpgradeGadgetToCurrentLevel, CallFunc_BP_GetProjectileGravityScale_ReturnValue) == 0x000014, "Member 'BP_Projectile_Tactical_EMP_C_UpgradeGadgetToCurrentLevel::CallFunc_BP_GetProjectileGravityScale_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Tactical_EMP_C_UpgradeGadgetToCurrentLevel, CallFunc_Add_FloatFloat_ReturnValue) == 0x000018, "Member 'BP_Projectile_Tactical_EMP_C_UpgradeGadgetToCurrentLevel::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Tactical_EMP_C_UpgradeGadgetToCurrentLevel, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x00001C, "Member 'BP_Projectile_Tactical_EMP_C_UpgradeGadgetToCurrentLevel::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Tactical_EMP_C_UpgradeGadgetToCurrentLevel, CallFunc_GetProjectileMovementComponent_ReturnValue) == 0x000020, "Member 'BP_Projectile_Tactical_EMP_C_UpgradeGadgetToCurrentLevel::CallFunc_GetProjectileMovementComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Tactical_EMP_C_UpgradeGadgetToCurrentLevel, CallFunc_GetOwner_ReturnValue) == 0x000028, "Member 'BP_Projectile_Tactical_EMP_C_UpgradeGadgetToCurrentLevel::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Tactical_EMP_C_UpgradeGadgetToCurrentLevel, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'BP_Projectile_Tactical_EMP_C_UpgradeGadgetToCurrentLevel::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_Projectile_Tactical_EMP.BP_Projectile_Tactical_EMP_C.BP_GetProjectileGravityScale
// 0x0020 (0x0020 - 0x0000)
struct BP_Projectile_Tactical_EMP_C_BP_GetProjectileGravityScale final
{
public:
	int32                                         Upgrade_level;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCAGameplayEffectTableValueRow         CallFunc_GetDataTableRowFromName_OutRow;           // 0x0008(0x0010)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BP_GetProjectileGravityScale_ReturnValue; // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Projectile_Tactical_EMP_C_BP_GetProjectileGravityScale) == 0x000008, "Wrong alignment on BP_Projectile_Tactical_EMP_C_BP_GetProjectileGravityScale");
static_assert(sizeof(BP_Projectile_Tactical_EMP_C_BP_GetProjectileGravityScale) == 0x000020, "Wrong size on BP_Projectile_Tactical_EMP_C_BP_GetProjectileGravityScale");
static_assert(offsetof(BP_Projectile_Tactical_EMP_C_BP_GetProjectileGravityScale, Upgrade_level) == 0x000000, "Member 'BP_Projectile_Tactical_EMP_C_BP_GetProjectileGravityScale::Upgrade_level' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Tactical_EMP_C_BP_GetProjectileGravityScale, ReturnValue) == 0x000004, "Member 'BP_Projectile_Tactical_EMP_C_BP_GetProjectileGravityScale::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Tactical_EMP_C_BP_GetProjectileGravityScale, CallFunc_GetDataTableRowFromName_OutRow) == 0x000008, "Member 'BP_Projectile_Tactical_EMP_C_BP_GetProjectileGravityScale::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Tactical_EMP_C_BP_GetProjectileGravityScale, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000018, "Member 'BP_Projectile_Tactical_EMP_C_BP_GetProjectileGravityScale::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Tactical_EMP_C_BP_GetProjectileGravityScale, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000019, "Member 'BP_Projectile_Tactical_EMP_C_BP_GetProjectileGravityScale::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Tactical_EMP_C_BP_GetProjectileGravityScale, CallFunc_BP_GetProjectileGravityScale_ReturnValue) == 0x00001C, "Member 'BP_Projectile_Tactical_EMP_C_BP_GetProjectileGravityScale::CallFunc_BP_GetProjectileGravityScale_ReturnValue' has a wrong offset!");

// Function BP_Projectile_Tactical_EMP.BP_Projectile_Tactical_EMP_C.IsPlayerInFutureDamageArea
// 0x0050 (0x0050 - 0x0000)
struct BP_Projectile_Tactical_EMP_C_IsPlayerInFutureDamageArea final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACACharacter_MainPlayer*                CallFunc_GetLocalPlayerCharacter_ReturnValue;      // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Vector_Distance_ReturnValue;              // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInZeroGravity_ReturnValue;              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCATeamID                              CallFunc_GetTeamID_ReturnValue;                    // 0x003C(0x0004)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsNPCTeamDefault_ReturnValue;             // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42[0x2];                                       // 0x0042(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRadiusFromDT_Radius;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Projectile_Tactical_EMP_C_IsPlayerInFutureDamageArea) == 0x000008, "Wrong alignment on BP_Projectile_Tactical_EMP_C_IsPlayerInFutureDamageArea");
static_assert(sizeof(BP_Projectile_Tactical_EMP_C_IsPlayerInFutureDamageArea) == 0x000050, "Wrong size on BP_Projectile_Tactical_EMP_C_IsPlayerInFutureDamageArea");
static_assert(offsetof(BP_Projectile_Tactical_EMP_C_IsPlayerInFutureDamageArea, ReturnValue) == 0x000000, "Member 'BP_Projectile_Tactical_EMP_C_IsPlayerInFutureDamageArea::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Tactical_EMP_C_IsPlayerInFutureDamageArea, CallFunc_GetLocalPlayerCharacter_ReturnValue) == 0x000008, "Member 'BP_Projectile_Tactical_EMP_C_IsPlayerInFutureDamageArea::CallFunc_GetLocalPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Tactical_EMP_C_IsPlayerInFutureDamageArea, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000010, "Member 'BP_Projectile_Tactical_EMP_C_IsPlayerInFutureDamageArea::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Tactical_EMP_C_IsPlayerInFutureDamageArea, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x00001C, "Member 'BP_Projectile_Tactical_EMP_C_IsPlayerInFutureDamageArea::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Tactical_EMP_C_IsPlayerInFutureDamageArea, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x000028, "Member 'BP_Projectile_Tactical_EMP_C_IsPlayerInFutureDamageArea::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Tactical_EMP_C_IsPlayerInFutureDamageArea, CallFunc_Vector_Distance_ReturnValue) == 0x000034, "Member 'BP_Projectile_Tactical_EMP_C_IsPlayerInFutureDamageArea::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Tactical_EMP_C_IsPlayerInFutureDamageArea, CallFunc_IsInZeroGravity_ReturnValue) == 0x000038, "Member 'BP_Projectile_Tactical_EMP_C_IsPlayerInFutureDamageArea::CallFunc_IsInZeroGravity_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Tactical_EMP_C_IsPlayerInFutureDamageArea, CallFunc_GetTeamID_ReturnValue) == 0x00003C, "Member 'BP_Projectile_Tactical_EMP_C_IsPlayerInFutureDamageArea::CallFunc_GetTeamID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Tactical_EMP_C_IsPlayerInFutureDamageArea, CallFunc_IsNPCTeamDefault_ReturnValue) == 0x000040, "Member 'BP_Projectile_Tactical_EMP_C_IsPlayerInFutureDamageArea::CallFunc_IsNPCTeamDefault_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Tactical_EMP_C_IsPlayerInFutureDamageArea, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000041, "Member 'BP_Projectile_Tactical_EMP_C_IsPlayerInFutureDamageArea::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Tactical_EMP_C_IsPlayerInFutureDamageArea, CallFunc_GetRadiusFromDT_Radius) == 0x000044, "Member 'BP_Projectile_Tactical_EMP_C_IsPlayerInFutureDamageArea::CallFunc_GetRadiusFromDT_Radius' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Tactical_EMP_C_IsPlayerInFutureDamageArea, CallFunc_Add_FloatFloat_ReturnValue) == 0x000048, "Member 'BP_Projectile_Tactical_EMP_C_IsPlayerInFutureDamageArea::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Tactical_EMP_C_IsPlayerInFutureDamageArea, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x00004C, "Member 'BP_Projectile_Tactical_EMP_C_IsPlayerInFutureDamageArea::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_Projectile_Tactical_EMP.BP_Projectile_Tactical_EMP_C.GetRadiusFromDT
// 0x0098 (0x0098 - 0x0000)
struct BP_Projectile_Tactical_EMP_C_GetRadiusFromDT final
{
public:
	bool                                          Upgraded;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ZeroG;                                             // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsNPCThrown;                                       // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3[0x1];                                        // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Radius;                                            // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCAGameplayEffectTableValueRow         CallFunc_GetDataTableRowFromName_OutRow;           // 0x0008(0x0010)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCAGameplayEffectTableValueRow         CallFunc_GetDataTableRowFromName_OutRow_1;         // 0x0020(0x0010)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_1;    // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCAGameplayEffectTableValueRow         CallFunc_GetDataTableRowFromName_OutRow_2;         // 0x0038(0x0010)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_2;    // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCAGameplayEffectTableValueRow         CallFunc_GetDataTableRowFromName_OutRow_3;         // 0x0050(0x0010)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_3;    // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCAGameplayEffectTableValueRow         CallFunc_GetDataTableRowFromName_OutRow_4;         // 0x0068(0x0010)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_4;    // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCAGameplayEffectTableValueRow         CallFunc_GetDataTableRowFromName_OutRow_5;         // 0x0080(0x0010)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_5;    // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Projectile_Tactical_EMP_C_GetRadiusFromDT) == 0x000008, "Wrong alignment on BP_Projectile_Tactical_EMP_C_GetRadiusFromDT");
static_assert(sizeof(BP_Projectile_Tactical_EMP_C_GetRadiusFromDT) == 0x000098, "Wrong size on BP_Projectile_Tactical_EMP_C_GetRadiusFromDT");
static_assert(offsetof(BP_Projectile_Tactical_EMP_C_GetRadiusFromDT, Upgraded) == 0x000000, "Member 'BP_Projectile_Tactical_EMP_C_GetRadiusFromDT::Upgraded' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Tactical_EMP_C_GetRadiusFromDT, ZeroG) == 0x000001, "Member 'BP_Projectile_Tactical_EMP_C_GetRadiusFromDT::ZeroG' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Tactical_EMP_C_GetRadiusFromDT, IsNPCThrown) == 0x000002, "Member 'BP_Projectile_Tactical_EMP_C_GetRadiusFromDT::IsNPCThrown' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Tactical_EMP_C_GetRadiusFromDT, Radius) == 0x000004, "Member 'BP_Projectile_Tactical_EMP_C_GetRadiusFromDT::Radius' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Tactical_EMP_C_GetRadiusFromDT, CallFunc_GetDataTableRowFromName_OutRow) == 0x000008, "Member 'BP_Projectile_Tactical_EMP_C_GetRadiusFromDT::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Tactical_EMP_C_GetRadiusFromDT, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000018, "Member 'BP_Projectile_Tactical_EMP_C_GetRadiusFromDT::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Tactical_EMP_C_GetRadiusFromDT, CallFunc_Not_PreBool_ReturnValue) == 0x000019, "Member 'BP_Projectile_Tactical_EMP_C_GetRadiusFromDT::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Tactical_EMP_C_GetRadiusFromDT, CallFunc_Not_PreBool_ReturnValue_1) == 0x00001A, "Member 'BP_Projectile_Tactical_EMP_C_GetRadiusFromDT::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Tactical_EMP_C_GetRadiusFromDT, CallFunc_BooleanAND_ReturnValue) == 0x00001B, "Member 'BP_Projectile_Tactical_EMP_C_GetRadiusFromDT::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Tactical_EMP_C_GetRadiusFromDT, CallFunc_Not_PreBool_ReturnValue_2) == 0x00001C, "Member 'BP_Projectile_Tactical_EMP_C_GetRadiusFromDT::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Tactical_EMP_C_GetRadiusFromDT, CallFunc_GetDataTableRowFromName_OutRow_1) == 0x000020, "Member 'BP_Projectile_Tactical_EMP_C_GetRadiusFromDT::CallFunc_GetDataTableRowFromName_OutRow_1' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Tactical_EMP_C_GetRadiusFromDT, CallFunc_GetDataTableRowFromName_ReturnValue_1) == 0x000030, "Member 'BP_Projectile_Tactical_EMP_C_GetRadiusFromDT::CallFunc_GetDataTableRowFromName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Tactical_EMP_C_GetRadiusFromDT, CallFunc_BooleanAND_ReturnValue_1) == 0x000031, "Member 'BP_Projectile_Tactical_EMP_C_GetRadiusFromDT::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Tactical_EMP_C_GetRadiusFromDT, CallFunc_GetDataTableRowFromName_OutRow_2) == 0x000038, "Member 'BP_Projectile_Tactical_EMP_C_GetRadiusFromDT::CallFunc_GetDataTableRowFromName_OutRow_2' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Tactical_EMP_C_GetRadiusFromDT, CallFunc_GetDataTableRowFromName_ReturnValue_2) == 0x000048, "Member 'BP_Projectile_Tactical_EMP_C_GetRadiusFromDT::CallFunc_GetDataTableRowFromName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Tactical_EMP_C_GetRadiusFromDT, CallFunc_GetDataTableRowFromName_OutRow_3) == 0x000050, "Member 'BP_Projectile_Tactical_EMP_C_GetRadiusFromDT::CallFunc_GetDataTableRowFromName_OutRow_3' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Tactical_EMP_C_GetRadiusFromDT, CallFunc_GetDataTableRowFromName_ReturnValue_3) == 0x000060, "Member 'BP_Projectile_Tactical_EMP_C_GetRadiusFromDT::CallFunc_GetDataTableRowFromName_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Tactical_EMP_C_GetRadiusFromDT, CallFunc_GetDataTableRowFromName_OutRow_4) == 0x000068, "Member 'BP_Projectile_Tactical_EMP_C_GetRadiusFromDT::CallFunc_GetDataTableRowFromName_OutRow_4' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Tactical_EMP_C_GetRadiusFromDT, CallFunc_GetDataTableRowFromName_ReturnValue_4) == 0x000078, "Member 'BP_Projectile_Tactical_EMP_C_GetRadiusFromDT::CallFunc_GetDataTableRowFromName_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Tactical_EMP_C_GetRadiusFromDT, CallFunc_GetDataTableRowFromName_OutRow_5) == 0x000080, "Member 'BP_Projectile_Tactical_EMP_C_GetRadiusFromDT::CallFunc_GetDataTableRowFromName_OutRow_5' has a wrong offset!");
static_assert(offsetof(BP_Projectile_Tactical_EMP_C_GetRadiusFromDT, CallFunc_GetDataTableRowFromName_ReturnValue_5) == 0x000090, "Member 'BP_Projectile_Tactical_EMP_C_GetRadiusFromDT::CallFunc_GetDataTableRowFromName_ReturnValue_5' has a wrong offset!");

}

