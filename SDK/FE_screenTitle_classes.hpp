#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FE_screenTitle

#include "Basic.hpp"

#include "CALocalisationRuntime_structs.hpp"
#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass FE_screenTitle.FE_screenTitle_C
// 0x0128 (0x03B8 - 0x0290)
class UFE_screenTitle_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0290(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       ParentSlide;                                       // 0x0298(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       blink;                                             // 0x02A0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Slide;                                             // 0x02A8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Image;                                             // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_61;                                          // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class URetainerBox*                           MainGlitchRetainer;                                // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCATextBlock*                           Parent_text;                                       // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class URetainerBox*                           RetainerBox_0;                                     // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCATextBlock*                           Screen_text;                                       // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCATextBlock*                           Screen_text_1;                                     // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCATextBlock*                           Screen_text_2;                                     // 0x02E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCATextBlock*                           Screen_text_3;                                     // 0x02F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCATextBlock*                           Screen_text_4;                                     // 0x02F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCATextBlock*                           Screen_text_5;                                     // 0x0300(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCATextBlock*                           Screen_text_6;                                     // 0x0308(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCATextBlock*                           Screen_text_7;                                     // 0x0310(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCATextBlock*                           Screen_text_8;                                     // 0x0318(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCATextBlock*                           Screen_text_9;                                     // 0x0320(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCATextBlock*                           Screen_text_10;                                    // 0x0328(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCATextBlock*                           Screen_text_11;                                    // 0x0330(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCATextBlock*                           Screen_text_12;                                    // 0x0338(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FCAText                                Parent_title;                                      // 0x0340(0x0030)(Edit, BlueprintVisible)
	struct FCAText                                Screen_title;                                      // 0x0370(0x0030)(Edit, BlueprintVisible)
	class UMaterialInstanceDynamic*               Main_Material_Inst;                                // 0x03A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaterialValue;                                     // 0x03A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GlitchMaterialValue;                               // 0x03AC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               Main_Glitch_Material_Inst;                         // 0x03B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_FE_screenTitle(int32 EntryPoint);
	void SetParentTitleText(const class FText& Text);
	void SetScreenTitleText(const class FText& Text);
	void Animate();
	void SetScreenTitle(const struct FCAText& Ca_text);
	void SetParentTitle(const struct FCAText& Ca_text);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void Construct();
	void GlitchMaterial();
	void PreConstruct(bool IsDesignTime);
	void SetTitles(const struct FCAText& Parent_Title, const struct FCAText& Screen_Title);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"FE_screenTitle_C">();
	}
	static class UFE_screenTitle_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFE_screenTitle_C>();
	}
};
static_assert(alignof(UFE_screenTitle_C) == 0x000008, "Wrong alignment on UFE_screenTitle_C");
static_assert(sizeof(UFE_screenTitle_C) == 0x0003B8, "Wrong size on UFE_screenTitle_C");
static_assert(offsetof(UFE_screenTitle_C, UberGraphFrame) == 0x000290, "Member 'UFE_screenTitle_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UFE_screenTitle_C, ParentSlide) == 0x000298, "Member 'UFE_screenTitle_C::ParentSlide' has a wrong offset!");
static_assert(offsetof(UFE_screenTitle_C, blink) == 0x0002A0, "Member 'UFE_screenTitle_C::blink' has a wrong offset!");
static_assert(offsetof(UFE_screenTitle_C, Slide) == 0x0002A8, "Member 'UFE_screenTitle_C::Slide' has a wrong offset!");
static_assert(offsetof(UFE_screenTitle_C, Image) == 0x0002B0, "Member 'UFE_screenTitle_C::Image' has a wrong offset!");
static_assert(offsetof(UFE_screenTitle_C, Image_61) == 0x0002B8, "Member 'UFE_screenTitle_C::Image_61' has a wrong offset!");
static_assert(offsetof(UFE_screenTitle_C, MainGlitchRetainer) == 0x0002C0, "Member 'UFE_screenTitle_C::MainGlitchRetainer' has a wrong offset!");
static_assert(offsetof(UFE_screenTitle_C, Parent_text) == 0x0002C8, "Member 'UFE_screenTitle_C::Parent_text' has a wrong offset!");
static_assert(offsetof(UFE_screenTitle_C, RetainerBox_0) == 0x0002D0, "Member 'UFE_screenTitle_C::RetainerBox_0' has a wrong offset!");
static_assert(offsetof(UFE_screenTitle_C, Screen_text) == 0x0002D8, "Member 'UFE_screenTitle_C::Screen_text' has a wrong offset!");
static_assert(offsetof(UFE_screenTitle_C, Screen_text_1) == 0x0002E0, "Member 'UFE_screenTitle_C::Screen_text_1' has a wrong offset!");
static_assert(offsetof(UFE_screenTitle_C, Screen_text_2) == 0x0002E8, "Member 'UFE_screenTitle_C::Screen_text_2' has a wrong offset!");
static_assert(offsetof(UFE_screenTitle_C, Screen_text_3) == 0x0002F0, "Member 'UFE_screenTitle_C::Screen_text_3' has a wrong offset!");
static_assert(offsetof(UFE_screenTitle_C, Screen_text_4) == 0x0002F8, "Member 'UFE_screenTitle_C::Screen_text_4' has a wrong offset!");
static_assert(offsetof(UFE_screenTitle_C, Screen_text_5) == 0x000300, "Member 'UFE_screenTitle_C::Screen_text_5' has a wrong offset!");
static_assert(offsetof(UFE_screenTitle_C, Screen_text_6) == 0x000308, "Member 'UFE_screenTitle_C::Screen_text_6' has a wrong offset!");
static_assert(offsetof(UFE_screenTitle_C, Screen_text_7) == 0x000310, "Member 'UFE_screenTitle_C::Screen_text_7' has a wrong offset!");
static_assert(offsetof(UFE_screenTitle_C, Screen_text_8) == 0x000318, "Member 'UFE_screenTitle_C::Screen_text_8' has a wrong offset!");
static_assert(offsetof(UFE_screenTitle_C, Screen_text_9) == 0x000320, "Member 'UFE_screenTitle_C::Screen_text_9' has a wrong offset!");
static_assert(offsetof(UFE_screenTitle_C, Screen_text_10) == 0x000328, "Member 'UFE_screenTitle_C::Screen_text_10' has a wrong offset!");
static_assert(offsetof(UFE_screenTitle_C, Screen_text_11) == 0x000330, "Member 'UFE_screenTitle_C::Screen_text_11' has a wrong offset!");
static_assert(offsetof(UFE_screenTitle_C, Screen_text_12) == 0x000338, "Member 'UFE_screenTitle_C::Screen_text_12' has a wrong offset!");
static_assert(offsetof(UFE_screenTitle_C, Parent_title) == 0x000340, "Member 'UFE_screenTitle_C::Parent_title' has a wrong offset!");
static_assert(offsetof(UFE_screenTitle_C, Screen_title) == 0x000370, "Member 'UFE_screenTitle_C::Screen_title' has a wrong offset!");
static_assert(offsetof(UFE_screenTitle_C, Main_Material_Inst) == 0x0003A0, "Member 'UFE_screenTitle_C::Main_Material_Inst' has a wrong offset!");
static_assert(offsetof(UFE_screenTitle_C, MaterialValue) == 0x0003A8, "Member 'UFE_screenTitle_C::MaterialValue' has a wrong offset!");
static_assert(offsetof(UFE_screenTitle_C, GlitchMaterialValue) == 0x0003AC, "Member 'UFE_screenTitle_C::GlitchMaterialValue' has a wrong offset!");
static_assert(offsetof(UFE_screenTitle_C, Main_Glitch_Material_Inst) == 0x0003B0, "Member 'UFE_screenTitle_C::Main_Glitch_Material_Inst' has a wrong offset!");

}

