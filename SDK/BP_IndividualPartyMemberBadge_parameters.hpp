#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_IndividualPartyMemberBadge

#include "Basic.hpp"

#include "Keaton_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function BP_IndividualPartyMemberBadge.BP_IndividualPartyMemberBadge_C.ExecuteUbergraph_BP_IndividualPartyMemberBadge
// 0x02B0 (0x02B0 - 0x0000)
struct BP_IndividualPartyMemberBadge_C_ExecuteUbergraph_BP_IndividualPartyMemberBadge final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEmpty_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_6;                              // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_7;                              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCAPartyMemberUIData                   K2Node_Event_data;                                 // 0x0018(0x0068)(ConstParm)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x0082(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_83[0x1];                                       // 0x0083(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_8;                              // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_is_matchmaking;                 // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEmpty_ReturnValue_1;                    // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9B[0x5];                                       // 0x009B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x00A0(0x0090)()
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush_1;                    // 0x0130(0x0090)()
	TArray<class FString>                         K2Node_CustomEvent_talkers_ids;                    // 0x01C0(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_3;                           // 0x01D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D2[0x6];                                      // 0x01D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush_2;                    // 0x01D8(0x0090)()
	ESlateVisibility                              Temp_byte_Variable_9;                              // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0269(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_4;                           // 0x026A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26B[0x5];                                      // 0x026B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UCASocialScreenProxy*                   CallFunc_GetSocialScreenProxy_ReturnValue;         // 0x0270(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0278(0x0014)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_GetIsUserMuted_ReturnValue;               // 0x028C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_28D[0x3];                                      // 0x028D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UCASocialScreenProxy*                   CallFunc_GetSocialScreenProxy_ReturnValue_1;       // 0x0290(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0298(0x0014)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(BP_IndividualPartyMemberBadge_C_ExecuteUbergraph_BP_IndividualPartyMemberBadge) == 0x000008, "Wrong alignment on BP_IndividualPartyMemberBadge_C_ExecuteUbergraph_BP_IndividualPartyMemberBadge");
static_assert(sizeof(BP_IndividualPartyMemberBadge_C_ExecuteUbergraph_BP_IndividualPartyMemberBadge) == 0x0002B0, "Wrong size on BP_IndividualPartyMemberBadge_C_ExecuteUbergraph_BP_IndividualPartyMemberBadge");
static_assert(offsetof(BP_IndividualPartyMemberBadge_C_ExecuteUbergraph_BP_IndividualPartyMemberBadge, EntryPoint) == 0x000000, "Member 'BP_IndividualPartyMemberBadge_C_ExecuteUbergraph_BP_IndividualPartyMemberBadge::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_IndividualPartyMemberBadge_C_ExecuteUbergraph_BP_IndividualPartyMemberBadge, Temp_bool_Variable) == 0x000004, "Member 'BP_IndividualPartyMemberBadge_C_ExecuteUbergraph_BP_IndividualPartyMemberBadge::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_IndividualPartyMemberBadge_C_ExecuteUbergraph_BP_IndividualPartyMemberBadge, Temp_byte_Variable) == 0x000005, "Member 'BP_IndividualPartyMemberBadge_C_ExecuteUbergraph_BP_IndividualPartyMemberBadge::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_IndividualPartyMemberBadge_C_ExecuteUbergraph_BP_IndividualPartyMemberBadge, Temp_byte_Variable_1) == 0x000006, "Member 'BP_IndividualPartyMemberBadge_C_ExecuteUbergraph_BP_IndividualPartyMemberBadge::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_IndividualPartyMemberBadge_C_ExecuteUbergraph_BP_IndividualPartyMemberBadge, Temp_bool_Variable_1) == 0x000007, "Member 'BP_IndividualPartyMemberBadge_C_ExecuteUbergraph_BP_IndividualPartyMemberBadge::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_IndividualPartyMemberBadge_C_ExecuteUbergraph_BP_IndividualPartyMemberBadge, CallFunc_IsEmpty_ReturnValue) == 0x000008, "Member 'BP_IndividualPartyMemberBadge_C_ExecuteUbergraph_BP_IndividualPartyMemberBadge::CallFunc_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_IndividualPartyMemberBadge_C_ExecuteUbergraph_BP_IndividualPartyMemberBadge, Temp_byte_Variable_2) == 0x000009, "Member 'BP_IndividualPartyMemberBadge_C_ExecuteUbergraph_BP_IndividualPartyMemberBadge::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_IndividualPartyMemberBadge_C_ExecuteUbergraph_BP_IndividualPartyMemberBadge, Temp_byte_Variable_3) == 0x00000A, "Member 'BP_IndividualPartyMemberBadge_C_ExecuteUbergraph_BP_IndividualPartyMemberBadge::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_IndividualPartyMemberBadge_C_ExecuteUbergraph_BP_IndividualPartyMemberBadge, Temp_bool_Variable_2) == 0x00000B, "Member 'BP_IndividualPartyMemberBadge_C_ExecuteUbergraph_BP_IndividualPartyMemberBadge::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_IndividualPartyMemberBadge_C_ExecuteUbergraph_BP_IndividualPartyMemberBadge, Temp_byte_Variable_4) == 0x00000C, "Member 'BP_IndividualPartyMemberBadge_C_ExecuteUbergraph_BP_IndividualPartyMemberBadge::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_IndividualPartyMemberBadge_C_ExecuteUbergraph_BP_IndividualPartyMemberBadge, Temp_byte_Variable_5) == 0x00000D, "Member 'BP_IndividualPartyMemberBadge_C_ExecuteUbergraph_BP_IndividualPartyMemberBadge::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_IndividualPartyMemberBadge_C_ExecuteUbergraph_BP_IndividualPartyMemberBadge, Temp_bool_Variable_3) == 0x00000E, "Member 'BP_IndividualPartyMemberBadge_C_ExecuteUbergraph_BP_IndividualPartyMemberBadge::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_IndividualPartyMemberBadge_C_ExecuteUbergraph_BP_IndividualPartyMemberBadge, Temp_byte_Variable_6) == 0x00000F, "Member 'BP_IndividualPartyMemberBadge_C_ExecuteUbergraph_BP_IndividualPartyMemberBadge::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_IndividualPartyMemberBadge_C_ExecuteUbergraph_BP_IndividualPartyMemberBadge, Temp_byte_Variable_7) == 0x000010, "Member 'BP_IndividualPartyMemberBadge_C_ExecuteUbergraph_BP_IndividualPartyMemberBadge::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_IndividualPartyMemberBadge_C_ExecuteUbergraph_BP_IndividualPartyMemberBadge, K2Node_Event_data) == 0x000018, "Member 'BP_IndividualPartyMemberBadge_C_ExecuteUbergraph_BP_IndividualPartyMemberBadge::K2Node_Event_data' has a wrong offset!");
static_assert(offsetof(BP_IndividualPartyMemberBadge_C_ExecuteUbergraph_BP_IndividualPartyMemberBadge, K2Node_Select_Default) == 0x000080, "Member 'BP_IndividualPartyMemberBadge_C_ExecuteUbergraph_BP_IndividualPartyMemberBadge::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_IndividualPartyMemberBadge_C_ExecuteUbergraph_BP_IndividualPartyMemberBadge, K2Node_Select_Default_1) == 0x000081, "Member 'BP_IndividualPartyMemberBadge_C_ExecuteUbergraph_BP_IndividualPartyMemberBadge::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_IndividualPartyMemberBadge_C_ExecuteUbergraph_BP_IndividualPartyMemberBadge, K2Node_Select_Default_2) == 0x000082, "Member 'BP_IndividualPartyMemberBadge_C_ExecuteUbergraph_BP_IndividualPartyMemberBadge::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_IndividualPartyMemberBadge_C_ExecuteUbergraph_BP_IndividualPartyMemberBadge, CallFunc_SelectFloat_ReturnValue) == 0x000084, "Member 'BP_IndividualPartyMemberBadge_C_ExecuteUbergraph_BP_IndividualPartyMemberBadge::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_IndividualPartyMemberBadge_C_ExecuteUbergraph_BP_IndividualPartyMemberBadge, CallFunc_SelectColor_ReturnValue) == 0x000088, "Member 'BP_IndividualPartyMemberBadge_C_ExecuteUbergraph_BP_IndividualPartyMemberBadge::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_IndividualPartyMemberBadge_C_ExecuteUbergraph_BP_IndividualPartyMemberBadge, Temp_byte_Variable_8) == 0x000098, "Member 'BP_IndividualPartyMemberBadge_C_ExecuteUbergraph_BP_IndividualPartyMemberBadge::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_IndividualPartyMemberBadge_C_ExecuteUbergraph_BP_IndividualPartyMemberBadge, K2Node_CustomEvent_is_matchmaking) == 0x000099, "Member 'BP_IndividualPartyMemberBadge_C_ExecuteUbergraph_BP_IndividualPartyMemberBadge::K2Node_CustomEvent_is_matchmaking' has a wrong offset!");
static_assert(offsetof(BP_IndividualPartyMemberBadge_C_ExecuteUbergraph_BP_IndividualPartyMemberBadge, CallFunc_IsEmpty_ReturnValue_1) == 0x00009A, "Member 'BP_IndividualPartyMemberBadge_C_ExecuteUbergraph_BP_IndividualPartyMemberBadge::CallFunc_IsEmpty_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_IndividualPartyMemberBadge_C_ExecuteUbergraph_BP_IndividualPartyMemberBadge, K2Node_MakeStruct_SlateBrush) == 0x0000A0, "Member 'BP_IndividualPartyMemberBadge_C_ExecuteUbergraph_BP_IndividualPartyMemberBadge::K2Node_MakeStruct_SlateBrush' has a wrong offset!");
static_assert(offsetof(BP_IndividualPartyMemberBadge_C_ExecuteUbergraph_BP_IndividualPartyMemberBadge, K2Node_MakeStruct_SlateBrush_1) == 0x000130, "Member 'BP_IndividualPartyMemberBadge_C_ExecuteUbergraph_BP_IndividualPartyMemberBadge::K2Node_MakeStruct_SlateBrush_1' has a wrong offset!");
static_assert(offsetof(BP_IndividualPartyMemberBadge_C_ExecuteUbergraph_BP_IndividualPartyMemberBadge, K2Node_CustomEvent_talkers_ids) == 0x0001C0, "Member 'BP_IndividualPartyMemberBadge_C_ExecuteUbergraph_BP_IndividualPartyMemberBadge::K2Node_CustomEvent_talkers_ids' has a wrong offset!");
static_assert(offsetof(BP_IndividualPartyMemberBadge_C_ExecuteUbergraph_BP_IndividualPartyMemberBadge, CallFunc_Array_Contains_ReturnValue) == 0x0001D0, "Member 'BP_IndividualPartyMemberBadge_C_ExecuteUbergraph_BP_IndividualPartyMemberBadge::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_IndividualPartyMemberBadge_C_ExecuteUbergraph_BP_IndividualPartyMemberBadge, K2Node_Select_Default_3) == 0x0001D1, "Member 'BP_IndividualPartyMemberBadge_C_ExecuteUbergraph_BP_IndividualPartyMemberBadge::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(BP_IndividualPartyMemberBadge_C_ExecuteUbergraph_BP_IndividualPartyMemberBadge, K2Node_MakeStruct_SlateBrush_2) == 0x0001D8, "Member 'BP_IndividualPartyMemberBadge_C_ExecuteUbergraph_BP_IndividualPartyMemberBadge::K2Node_MakeStruct_SlateBrush_2' has a wrong offset!");
static_assert(offsetof(BP_IndividualPartyMemberBadge_C_ExecuteUbergraph_BP_IndividualPartyMemberBadge, Temp_byte_Variable_9) == 0x000268, "Member 'BP_IndividualPartyMemberBadge_C_ExecuteUbergraph_BP_IndividualPartyMemberBadge::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_IndividualPartyMemberBadge_C_ExecuteUbergraph_BP_IndividualPartyMemberBadge, Temp_bool_Variable_4) == 0x000269, "Member 'BP_IndividualPartyMemberBadge_C_ExecuteUbergraph_BP_IndividualPartyMemberBadge::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_IndividualPartyMemberBadge_C_ExecuteUbergraph_BP_IndividualPartyMemberBadge, K2Node_Select_Default_4) == 0x00026A, "Member 'BP_IndividualPartyMemberBadge_C_ExecuteUbergraph_BP_IndividualPartyMemberBadge::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(BP_IndividualPartyMemberBadge_C_ExecuteUbergraph_BP_IndividualPartyMemberBadge, CallFunc_GetSocialScreenProxy_ReturnValue) == 0x000270, "Member 'BP_IndividualPartyMemberBadge_C_ExecuteUbergraph_BP_IndividualPartyMemberBadge::CallFunc_GetSocialScreenProxy_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_IndividualPartyMemberBadge_C_ExecuteUbergraph_BP_IndividualPartyMemberBadge, K2Node_CreateDelegate_OutputDelegate) == 0x000278, "Member 'BP_IndividualPartyMemberBadge_C_ExecuteUbergraph_BP_IndividualPartyMemberBadge::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_IndividualPartyMemberBadge_C_ExecuteUbergraph_BP_IndividualPartyMemberBadge, CallFunc_GetIsUserMuted_ReturnValue) == 0x00028C, "Member 'BP_IndividualPartyMemberBadge_C_ExecuteUbergraph_BP_IndividualPartyMemberBadge::CallFunc_GetIsUserMuted_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_IndividualPartyMemberBadge_C_ExecuteUbergraph_BP_IndividualPartyMemberBadge, CallFunc_GetSocialScreenProxy_ReturnValue_1) == 0x000290, "Member 'BP_IndividualPartyMemberBadge_C_ExecuteUbergraph_BP_IndividualPartyMemberBadge::CallFunc_GetSocialScreenProxy_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_IndividualPartyMemberBadge_C_ExecuteUbergraph_BP_IndividualPartyMemberBadge, K2Node_CreateDelegate_OutputDelegate_1) == 0x000298, "Member 'BP_IndividualPartyMemberBadge_C_ExecuteUbergraph_BP_IndividualPartyMemberBadge::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");

// Function BP_IndividualPartyMemberBadge.BP_IndividualPartyMemberBadge_C.UpdateVOIPStatus
// 0x0010 (0x0010 - 0x0000)
struct BP_IndividualPartyMemberBadge_C_UpdateVOIPStatus final
{
public:
	TArray<class FString>                         Talkers_ids;                                       // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_IndividualPartyMemberBadge_C_UpdateVOIPStatus) == 0x000008, "Wrong alignment on BP_IndividualPartyMemberBadge_C_UpdateVOIPStatus");
static_assert(sizeof(BP_IndividualPartyMemberBadge_C_UpdateVOIPStatus) == 0x000010, "Wrong size on BP_IndividualPartyMemberBadge_C_UpdateVOIPStatus");
static_assert(offsetof(BP_IndividualPartyMemberBadge_C_UpdateVOIPStatus, Talkers_ids) == 0x000000, "Member 'BP_IndividualPartyMemberBadge_C_UpdateVOIPStatus::Talkers_ids' has a wrong offset!");

// Function BP_IndividualPartyMemberBadge.BP_IndividualPartyMemberBadge_C.MatchmakingStateChanged
// 0x0001 (0x0001 - 0x0000)
struct BP_IndividualPartyMemberBadge_C_MatchmakingStateChanged final
{
public:
	bool                                          Is_matchmaking;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_IndividualPartyMemberBadge_C_MatchmakingStateChanged) == 0x000001, "Wrong alignment on BP_IndividualPartyMemberBadge_C_MatchmakingStateChanged");
static_assert(sizeof(BP_IndividualPartyMemberBadge_C_MatchmakingStateChanged) == 0x000001, "Wrong size on BP_IndividualPartyMemberBadge_C_MatchmakingStateChanged");
static_assert(offsetof(BP_IndividualPartyMemberBadge_C_MatchmakingStateChanged, Is_matchmaking) == 0x000000, "Member 'BP_IndividualPartyMemberBadge_C_MatchmakingStateChanged::Is_matchmaking' has a wrong offset!");

// Function BP_IndividualPartyMemberBadge.BP_IndividualPartyMemberBadge_C.SetPartyMemberInfo
// 0x0068 (0x0068 - 0x0000)
struct BP_IndividualPartyMemberBadge_C_SetPartyMemberInfo final
{
public:
	struct FCAPartyMemberUIData                   Data;                                              // 0x0000(0x0068)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(BP_IndividualPartyMemberBadge_C_SetPartyMemberInfo) == 0x000008, "Wrong alignment on BP_IndividualPartyMemberBadge_C_SetPartyMemberInfo");
static_assert(sizeof(BP_IndividualPartyMemberBadge_C_SetPartyMemberInfo) == 0x000068, "Wrong size on BP_IndividualPartyMemberBadge_C_SetPartyMemberInfo");
static_assert(offsetof(BP_IndividualPartyMemberBadge_C_SetPartyMemberInfo, Data) == 0x000000, "Member 'BP_IndividualPartyMemberBadge_C_SetPartyMemberInfo::Data' has a wrong offset!");

}

