#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_HeistBase_GM

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_GameMode_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_HeistBase_GM.BP_HeistBase_GM_C
// 0x0040 (0x0640 - 0x0600)
class ABP_HeistBase_GM_C : public ABP_GameMode_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_HeistBase_GM_C;                  // 0x0600(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBP_ThresholdMapRevealComponent_C*      BP_ThresholdMapRevealComponent;                    // 0x0608(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCAInformationControlManager*           CAInformationControlManager;                       // 0x0610(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         ActiveExtraction;                                  // 0x0618(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	class AActor*                                 Extraction_area;                                   // 0x0628(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class APlayerState*>                   ExtractedPlayers;                                  // 0x0630(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)

public:
	void ExecuteUbergraph_BP_HeistBase_GM(int32 EntryPoint);
	void K2_OnRestartPlayer(class AController* NewPlayer);
	void OnVaultDoorStateUpdate(class AActor* Vault_door, const struct FCATeamID& Team);
	void ProcessExtraction(TArray<class AActor*>& Actors);
	void ExtractionNotifications(class AActor* ExtractionTerminal);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_HeistBase_GM_C">();
	}
	static class ABP_HeistBase_GM_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_HeistBase_GM_C>();
	}
};
static_assert(alignof(ABP_HeistBase_GM_C) == 0x000008, "Wrong alignment on ABP_HeistBase_GM_C");
static_assert(sizeof(ABP_HeistBase_GM_C) == 0x000640, "Wrong size on ABP_HeistBase_GM_C");
static_assert(offsetof(ABP_HeistBase_GM_C, UberGraphFrame_BP_HeistBase_GM_C) == 0x000600, "Member 'ABP_HeistBase_GM_C::UberGraphFrame_BP_HeistBase_GM_C' has a wrong offset!");
static_assert(offsetof(ABP_HeistBase_GM_C, BP_ThresholdMapRevealComponent) == 0x000608, "Member 'ABP_HeistBase_GM_C::BP_ThresholdMapRevealComponent' has a wrong offset!");
static_assert(offsetof(ABP_HeistBase_GM_C, CAInformationControlManager) == 0x000610, "Member 'ABP_HeistBase_GM_C::CAInformationControlManager' has a wrong offset!");
static_assert(offsetof(ABP_HeistBase_GM_C, ActiveExtraction) == 0x000618, "Member 'ABP_HeistBase_GM_C::ActiveExtraction' has a wrong offset!");
static_assert(offsetof(ABP_HeistBase_GM_C, Extraction_area) == 0x000628, "Member 'ABP_HeistBase_GM_C::Extraction_area' has a wrong offset!");
static_assert(offsetof(ABP_HeistBase_GM_C, ExtractedPlayers) == 0x000630, "Member 'ABP_HeistBase_GM_C::ExtractedPlayers' has a wrong offset!");

}

