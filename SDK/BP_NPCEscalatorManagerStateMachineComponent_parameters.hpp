#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_NPCEscalatorManagerStateMachineComponent

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"
#include "Keaton_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_NPCEscalatorManagerStateMachineComponent.BP_NPCEscalatorManagerStateMachineComponent_C.ExecuteUbergraph_BP_NPCEscalatorManagerStateMachineComponent
// 0x0420 (0x0420 - 0x0000)
struct BP_NPCEscalatorManagerStateMachineComponent_C_ExecuteUbergraph_BP_NPCEscalatorManagerStateMachineComponent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACACharacter*                           K2Node_CustomEvent_character;                      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectSpec                    K2Node_CustomEvent_death_gameplay_effect_spec;     // 0x0018(0x0298)(ConstParm)
	float                                         K2Node_CustomEvent_damage_magnitude;               // 0x02B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B4[0x4];                                      // 0x02B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FNetworkedHit                          K2Node_CustomEvent_networked_hit;                  // 0x02B8(0x0068)(ConstParm, NoDestructor)
	class AActor*                                 K2Node_CustomEvent_killer;                         // 0x0320(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0328(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_329[0x3];                                      // 0x0329(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x032C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0330(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_2;                   // 0x0338(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x0340(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue_2;               // 0x0341(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_342[0x6];                                      // 0x0342(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_3;                   // 0x0348(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_4;                   // 0x0350(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_3;               // 0x0358(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue_4;               // 0x0359(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35A[0x6];                                      // 0x035A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_5;                   // 0x0360(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_6;                   // 0x0368(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_5;               // 0x0370(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue_6;               // 0x0371(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_372[0x2];                                      // 0x0372(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0374(0x0014)(ZeroConstructor, NoDestructor)
	class AActor*                                 K2Node_CustomEvent_OverlappedActor_1;              // 0x0388(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_OtherActor_1;                   // 0x0390(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCAComponent_NPCTargetManager*          CallFunc_Get_Enemy_Target_Manager_Component_ReturnValue; // 0x0398(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACACharacter_MainPlayer*                K2Node_DynamicCast_AsCACharacter_Main_Player;      // 0x03A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x03A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x03A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x03AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3AB[0x5];                                      // 0x03AB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_OverlappedActor;                // 0x03B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_OtherActor;                     // 0x03B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_7;                   // 0x03C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_7;               // 0x03C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C9[0x7];                                      // 0x03C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACACharacter_MainPlayer*                K2Node_DynamicCast_AsCACharacter_Main_Player_1;    // 0x03D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x03D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D9[0x3];                                      // 0x03D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x03DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasGameplayTag_ReturnValue;               // 0x03E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E1[0x3];                                      // 0x03E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AActor* Target)>         K2Node_CreateDelegate_OutputDelegate_1;            // 0x03E4(0x0014)(ZeroConstructor, NoDestructor)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_8;                   // 0x03F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCASecurityAreaStateMachineComponent*   CallFunc_GetComponentByClass_ReturnValue;          // 0x0400(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UCAFiniteState* State)>  K2Node_CreateDelegate_OutputDelegate_2;            // 0x0408(0x0014)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(BP_NPCEscalatorManagerStateMachineComponent_C_ExecuteUbergraph_BP_NPCEscalatorManagerStateMachineComponent) == 0x000008, "Wrong alignment on BP_NPCEscalatorManagerStateMachineComponent_C_ExecuteUbergraph_BP_NPCEscalatorManagerStateMachineComponent");
static_assert(sizeof(BP_NPCEscalatorManagerStateMachineComponent_C_ExecuteUbergraph_BP_NPCEscalatorManagerStateMachineComponent) == 0x000420, "Wrong size on BP_NPCEscalatorManagerStateMachineComponent_C_ExecuteUbergraph_BP_NPCEscalatorManagerStateMachineComponent");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_ExecuteUbergraph_BP_NPCEscalatorManagerStateMachineComponent, EntryPoint) == 0x000000, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_ExecuteUbergraph_BP_NPCEscalatorManagerStateMachineComponent::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_ExecuteUbergraph_BP_NPCEscalatorManagerStateMachineComponent, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_ExecuteUbergraph_BP_NPCEscalatorManagerStateMachineComponent::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_ExecuteUbergraph_BP_NPCEscalatorManagerStateMachineComponent, K2Node_CustomEvent_character) == 0x000010, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_ExecuteUbergraph_BP_NPCEscalatorManagerStateMachineComponent::K2Node_CustomEvent_character' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_ExecuteUbergraph_BP_NPCEscalatorManagerStateMachineComponent, K2Node_CustomEvent_death_gameplay_effect_spec) == 0x000018, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_ExecuteUbergraph_BP_NPCEscalatorManagerStateMachineComponent::K2Node_CustomEvent_death_gameplay_effect_spec' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_ExecuteUbergraph_BP_NPCEscalatorManagerStateMachineComponent, K2Node_CustomEvent_damage_magnitude) == 0x0002B0, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_ExecuteUbergraph_BP_NPCEscalatorManagerStateMachineComponent::K2Node_CustomEvent_damage_magnitude' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_ExecuteUbergraph_BP_NPCEscalatorManagerStateMachineComponent, K2Node_CustomEvent_networked_hit) == 0x0002B8, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_ExecuteUbergraph_BP_NPCEscalatorManagerStateMachineComponent::K2Node_CustomEvent_networked_hit' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_ExecuteUbergraph_BP_NPCEscalatorManagerStateMachineComponent, K2Node_CustomEvent_killer) == 0x000320, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_ExecuteUbergraph_BP_NPCEscalatorManagerStateMachineComponent::K2Node_CustomEvent_killer' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_ExecuteUbergraph_BP_NPCEscalatorManagerStateMachineComponent, CallFunc_HasAuthority_ReturnValue) == 0x000328, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_ExecuteUbergraph_BP_NPCEscalatorManagerStateMachineComponent::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_ExecuteUbergraph_BP_NPCEscalatorManagerStateMachineComponent, K2Node_Event_DeltaSeconds) == 0x00032C, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_ExecuteUbergraph_BP_NPCEscalatorManagerStateMachineComponent::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_ExecuteUbergraph_BP_NPCEscalatorManagerStateMachineComponent, CallFunc_GetOwner_ReturnValue_1) == 0x000330, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_ExecuteUbergraph_BP_NPCEscalatorManagerStateMachineComponent::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_ExecuteUbergraph_BP_NPCEscalatorManagerStateMachineComponent, CallFunc_GetOwner_ReturnValue_2) == 0x000338, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_ExecuteUbergraph_BP_NPCEscalatorManagerStateMachineComponent::CallFunc_GetOwner_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_ExecuteUbergraph_BP_NPCEscalatorManagerStateMachineComponent, CallFunc_HasAuthority_ReturnValue_1) == 0x000340, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_ExecuteUbergraph_BP_NPCEscalatorManagerStateMachineComponent::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_ExecuteUbergraph_BP_NPCEscalatorManagerStateMachineComponent, CallFunc_HasAuthority_ReturnValue_2) == 0x000341, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_ExecuteUbergraph_BP_NPCEscalatorManagerStateMachineComponent::CallFunc_HasAuthority_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_ExecuteUbergraph_BP_NPCEscalatorManagerStateMachineComponent, CallFunc_GetOwner_ReturnValue_3) == 0x000348, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_ExecuteUbergraph_BP_NPCEscalatorManagerStateMachineComponent::CallFunc_GetOwner_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_ExecuteUbergraph_BP_NPCEscalatorManagerStateMachineComponent, CallFunc_GetOwner_ReturnValue_4) == 0x000350, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_ExecuteUbergraph_BP_NPCEscalatorManagerStateMachineComponent::CallFunc_GetOwner_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_ExecuteUbergraph_BP_NPCEscalatorManagerStateMachineComponent, CallFunc_HasAuthority_ReturnValue_3) == 0x000358, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_ExecuteUbergraph_BP_NPCEscalatorManagerStateMachineComponent::CallFunc_HasAuthority_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_ExecuteUbergraph_BP_NPCEscalatorManagerStateMachineComponent, CallFunc_HasAuthority_ReturnValue_4) == 0x000359, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_ExecuteUbergraph_BP_NPCEscalatorManagerStateMachineComponent::CallFunc_HasAuthority_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_ExecuteUbergraph_BP_NPCEscalatorManagerStateMachineComponent, CallFunc_GetOwner_ReturnValue_5) == 0x000360, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_ExecuteUbergraph_BP_NPCEscalatorManagerStateMachineComponent::CallFunc_GetOwner_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_ExecuteUbergraph_BP_NPCEscalatorManagerStateMachineComponent, CallFunc_GetOwner_ReturnValue_6) == 0x000368, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_ExecuteUbergraph_BP_NPCEscalatorManagerStateMachineComponent::CallFunc_GetOwner_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_ExecuteUbergraph_BP_NPCEscalatorManagerStateMachineComponent, CallFunc_HasAuthority_ReturnValue_5) == 0x000370, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_ExecuteUbergraph_BP_NPCEscalatorManagerStateMachineComponent::CallFunc_HasAuthority_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_ExecuteUbergraph_BP_NPCEscalatorManagerStateMachineComponent, CallFunc_HasAuthority_ReturnValue_6) == 0x000371, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_ExecuteUbergraph_BP_NPCEscalatorManagerStateMachineComponent::CallFunc_HasAuthority_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_ExecuteUbergraph_BP_NPCEscalatorManagerStateMachineComponent, K2Node_CreateDelegate_OutputDelegate) == 0x000374, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_ExecuteUbergraph_BP_NPCEscalatorManagerStateMachineComponent::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_ExecuteUbergraph_BP_NPCEscalatorManagerStateMachineComponent, K2Node_CustomEvent_OverlappedActor_1) == 0x000388, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_ExecuteUbergraph_BP_NPCEscalatorManagerStateMachineComponent::K2Node_CustomEvent_OverlappedActor_1' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_ExecuteUbergraph_BP_NPCEscalatorManagerStateMachineComponent, K2Node_CustomEvent_OtherActor_1) == 0x000390, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_ExecuteUbergraph_BP_NPCEscalatorManagerStateMachineComponent::K2Node_CustomEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_ExecuteUbergraph_BP_NPCEscalatorManagerStateMachineComponent, CallFunc_Get_Enemy_Target_Manager_Component_ReturnValue) == 0x000398, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_ExecuteUbergraph_BP_NPCEscalatorManagerStateMachineComponent::CallFunc_Get_Enemy_Target_Manager_Component_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_ExecuteUbergraph_BP_NPCEscalatorManagerStateMachineComponent, K2Node_DynamicCast_AsCACharacter_Main_Player) == 0x0003A0, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_ExecuteUbergraph_BP_NPCEscalatorManagerStateMachineComponent::K2Node_DynamicCast_AsCACharacter_Main_Player' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_ExecuteUbergraph_BP_NPCEscalatorManagerStateMachineComponent, K2Node_DynamicCast_bSuccess) == 0x0003A8, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_ExecuteUbergraph_BP_NPCEscalatorManagerStateMachineComponent::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_ExecuteUbergraph_BP_NPCEscalatorManagerStateMachineComponent, CallFunc_IsValid_ReturnValue) == 0x0003A9, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_ExecuteUbergraph_BP_NPCEscalatorManagerStateMachineComponent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_ExecuteUbergraph_BP_NPCEscalatorManagerStateMachineComponent, CallFunc_Array_RemoveItem_ReturnValue) == 0x0003AA, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_ExecuteUbergraph_BP_NPCEscalatorManagerStateMachineComponent::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_ExecuteUbergraph_BP_NPCEscalatorManagerStateMachineComponent, K2Node_CustomEvent_OverlappedActor) == 0x0003B0, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_ExecuteUbergraph_BP_NPCEscalatorManagerStateMachineComponent::K2Node_CustomEvent_OverlappedActor' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_ExecuteUbergraph_BP_NPCEscalatorManagerStateMachineComponent, K2Node_CustomEvent_OtherActor) == 0x0003B8, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_ExecuteUbergraph_BP_NPCEscalatorManagerStateMachineComponent::K2Node_CustomEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_ExecuteUbergraph_BP_NPCEscalatorManagerStateMachineComponent, CallFunc_GetOwner_ReturnValue_7) == 0x0003C0, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_ExecuteUbergraph_BP_NPCEscalatorManagerStateMachineComponent::CallFunc_GetOwner_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_ExecuteUbergraph_BP_NPCEscalatorManagerStateMachineComponent, CallFunc_HasAuthority_ReturnValue_7) == 0x0003C8, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_ExecuteUbergraph_BP_NPCEscalatorManagerStateMachineComponent::CallFunc_HasAuthority_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_ExecuteUbergraph_BP_NPCEscalatorManagerStateMachineComponent, K2Node_DynamicCast_AsCACharacter_Main_Player_1) == 0x0003D0, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_ExecuteUbergraph_BP_NPCEscalatorManagerStateMachineComponent::K2Node_DynamicCast_AsCACharacter_Main_Player_1' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_ExecuteUbergraph_BP_NPCEscalatorManagerStateMachineComponent, K2Node_DynamicCast_bSuccess_1) == 0x0003D8, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_ExecuteUbergraph_BP_NPCEscalatorManagerStateMachineComponent::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_ExecuteUbergraph_BP_NPCEscalatorManagerStateMachineComponent, CallFunc_Array_AddUnique_ReturnValue) == 0x0003DC, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_ExecuteUbergraph_BP_NPCEscalatorManagerStateMachineComponent::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_ExecuteUbergraph_BP_NPCEscalatorManagerStateMachineComponent, CallFunc_HasGameplayTag_ReturnValue) == 0x0003E0, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_ExecuteUbergraph_BP_NPCEscalatorManagerStateMachineComponent::CallFunc_HasGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_ExecuteUbergraph_BP_NPCEscalatorManagerStateMachineComponent, K2Node_CreateDelegate_OutputDelegate_1) == 0x0003E4, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_ExecuteUbergraph_BP_NPCEscalatorManagerStateMachineComponent::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_ExecuteUbergraph_BP_NPCEscalatorManagerStateMachineComponent, CallFunc_GetOwner_ReturnValue_8) == 0x0003F8, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_ExecuteUbergraph_BP_NPCEscalatorManagerStateMachineComponent::CallFunc_GetOwner_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_ExecuteUbergraph_BP_NPCEscalatorManagerStateMachineComponent, CallFunc_GetComponentByClass_ReturnValue) == 0x000400, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_ExecuteUbergraph_BP_NPCEscalatorManagerStateMachineComponent::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_ExecuteUbergraph_BP_NPCEscalatorManagerStateMachineComponent, K2Node_CreateDelegate_OutputDelegate_2) == 0x000408, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_ExecuteUbergraph_BP_NPCEscalatorManagerStateMachineComponent::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");

// Function BP_NPCEscalatorManagerStateMachineComponent.BP_NPCEscalatorManagerStateMachineComponent_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_NPCEscalatorManagerStateMachineComponent_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPCEscalatorManagerStateMachineComponent_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_NPCEscalatorManagerStateMachineComponent_C_ReceiveTick");
static_assert(sizeof(BP_NPCEscalatorManagerStateMachineComponent_C_ReceiveTick) == 0x000004, "Wrong size on BP_NPCEscalatorManagerStateMachineComponent_C_ReceiveTick");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_NPCEscalatorManagerStateMachineComponent.BP_NPCEscalatorManagerStateMachineComponent_C.EventOnEscalatorDeath
// 0x0318 (0x0318 - 0x0000)
struct BP_NPCEscalatorManagerStateMachineComponent_C_EventOnEscalatorDeath final
{
public:
	class ACACharacter*                           Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectSpec                    Death_gameplay_effect_spec;                        // 0x0008(0x0298)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	float                                         Damage_magnitude;                                  // 0x02A0(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A4[0x4];                                      // 0x02A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FNetworkedHit                          Networked_hit;                                     // 0x02A8(0x0068)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	class AActor*                                 Killer;                                            // 0x0310(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPCEscalatorManagerStateMachineComponent_C_EventOnEscalatorDeath) == 0x000008, "Wrong alignment on BP_NPCEscalatorManagerStateMachineComponent_C_EventOnEscalatorDeath");
static_assert(sizeof(BP_NPCEscalatorManagerStateMachineComponent_C_EventOnEscalatorDeath) == 0x000318, "Wrong size on BP_NPCEscalatorManagerStateMachineComponent_C_EventOnEscalatorDeath");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_EventOnEscalatorDeath, Character) == 0x000000, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_EventOnEscalatorDeath::Character' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_EventOnEscalatorDeath, Death_gameplay_effect_spec) == 0x000008, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_EventOnEscalatorDeath::Death_gameplay_effect_spec' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_EventOnEscalatorDeath, Damage_magnitude) == 0x0002A0, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_EventOnEscalatorDeath::Damage_magnitude' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_EventOnEscalatorDeath, Networked_hit) == 0x0002A8, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_EventOnEscalatorDeath::Networked_hit' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_EventOnEscalatorDeath, Killer) == 0x000310, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_EventOnEscalatorDeath::Killer' has a wrong offset!");

// Function BP_NPCEscalatorManagerStateMachineComponent.BP_NPCEscalatorManagerStateMachineComponent_C.OnEscalatorAreaActorBeginOverlap
// 0x0010 (0x0010 - 0x0000)
struct BP_NPCEscalatorManagerStateMachineComponent_C_OnEscalatorAreaActorBeginOverlap final
{
public:
	class AActor*                                 OverlappedActor;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPCEscalatorManagerStateMachineComponent_C_OnEscalatorAreaActorBeginOverlap) == 0x000008, "Wrong alignment on BP_NPCEscalatorManagerStateMachineComponent_C_OnEscalatorAreaActorBeginOverlap");
static_assert(sizeof(BP_NPCEscalatorManagerStateMachineComponent_C_OnEscalatorAreaActorBeginOverlap) == 0x000010, "Wrong size on BP_NPCEscalatorManagerStateMachineComponent_C_OnEscalatorAreaActorBeginOverlap");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_OnEscalatorAreaActorBeginOverlap, OverlappedActor) == 0x000000, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_OnEscalatorAreaActorBeginOverlap::OverlappedActor' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_OnEscalatorAreaActorBeginOverlap, OtherActor) == 0x000008, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_OnEscalatorAreaActorBeginOverlap::OtherActor' has a wrong offset!");

// Function BP_NPCEscalatorManagerStateMachineComponent.BP_NPCEscalatorManagerStateMachineComponent_C.OnEscalatorAreaActorEndOverlap
// 0x0010 (0x0010 - 0x0000)
struct BP_NPCEscalatorManagerStateMachineComponent_C_OnEscalatorAreaActorEndOverlap final
{
public:
	class AActor*                                 OverlappedActor;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPCEscalatorManagerStateMachineComponent_C_OnEscalatorAreaActorEndOverlap) == 0x000008, "Wrong alignment on BP_NPCEscalatorManagerStateMachineComponent_C_OnEscalatorAreaActorEndOverlap");
static_assert(sizeof(BP_NPCEscalatorManagerStateMachineComponent_C_OnEscalatorAreaActorEndOverlap) == 0x000010, "Wrong size on BP_NPCEscalatorManagerStateMachineComponent_C_OnEscalatorAreaActorEndOverlap");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_OnEscalatorAreaActorEndOverlap, OverlappedActor) == 0x000000, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_OnEscalatorAreaActorEndOverlap::OverlappedActor' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_OnEscalatorAreaActorEndOverlap, OtherActor) == 0x000008, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_OnEscalatorAreaActorEndOverlap::OtherActor' has a wrong offset!");

// Function BP_NPCEscalatorManagerStateMachineComponent.BP_NPCEscalatorManagerStateMachineComponent_C.IsOnEnemyNPCTeam
// 0x0018 (0x0018 - 0x0000)
struct BP_NPCEscalatorManagerStateMachineComponent_C_IsOnEnemyNPCTeam final
{
public:
	const class AActor*                           SourceActor;                                       // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DoesImplementInterface_ReturnValue;       // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCATeamID                              CallFunc_GetTeamID_ReturnValue;                    // 0x000C(0x0004)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_TeamIDTeamID_ReturnValue;      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_NPCEscalatorManagerStateMachineComponent_C_IsOnEnemyNPCTeam) == 0x000008, "Wrong alignment on BP_NPCEscalatorManagerStateMachineComponent_C_IsOnEnemyNPCTeam");
static_assert(sizeof(BP_NPCEscalatorManagerStateMachineComponent_C_IsOnEnemyNPCTeam) == 0x000018, "Wrong size on BP_NPCEscalatorManagerStateMachineComponent_C_IsOnEnemyNPCTeam");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_IsOnEnemyNPCTeam, SourceActor) == 0x000000, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_IsOnEnemyNPCTeam::SourceActor' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_IsOnEnemyNPCTeam, ReturnValue) == 0x000008, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_IsOnEnemyNPCTeam::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_IsOnEnemyNPCTeam, CallFunc_DoesImplementInterface_ReturnValue) == 0x000009, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_IsOnEnemyNPCTeam::CallFunc_DoesImplementInterface_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_IsOnEnemyNPCTeam, CallFunc_GetTeamID_ReturnValue) == 0x00000C, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_IsOnEnemyNPCTeam::CallFunc_GetTeamID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_IsOnEnemyNPCTeam, CallFunc_EqualEqual_TeamIDTeamID_ReturnValue) == 0x000010, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_IsOnEnemyNPCTeam::CallFunc_EqualEqual_TeamIDTeamID_ReturnValue' has a wrong offset!");

// Function BP_NPCEscalatorManagerStateMachineComponent.BP_NPCEscalatorManagerStateMachineComponent_C.UpdateEscalatorHighlightsForViewer
// 0x00D8 (0x00D8 - 0x0000)
struct BP_NPCEscalatorManagerStateMachineComponent_C_UpdateEscalatorHighlightsForViewer final
{
public:
	class ACACharacter_MainPlayer*                PlayerCharacter;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AreHighlightsVisible;                              // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACAPlayerController*                    PlayerController;                                  // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class ACAGlobalHighlightManager*              HighlightManager;                                  // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACAPlayerController*                    CallFunc_GetAssociatedPlayerController_ReturnValue; // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E[0x2];                                       // 0x003E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ACAGlobalHighlightManager*              CallFunc_GetGlobalHighlightManager_ReturnValue;    // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHighlightTagsRules                    K2Node_MakeStruct_HighlightTagsRules;              // 0x0058(0x0080)()
};
static_assert(alignof(BP_NPCEscalatorManagerStateMachineComponent_C_UpdateEscalatorHighlightsForViewer) == 0x000008, "Wrong alignment on BP_NPCEscalatorManagerStateMachineComponent_C_UpdateEscalatorHighlightsForViewer");
static_assert(sizeof(BP_NPCEscalatorManagerStateMachineComponent_C_UpdateEscalatorHighlightsForViewer) == 0x0000D8, "Wrong size on BP_NPCEscalatorManagerStateMachineComponent_C_UpdateEscalatorHighlightsForViewer");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_UpdateEscalatorHighlightsForViewer, PlayerCharacter) == 0x000000, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_UpdateEscalatorHighlightsForViewer::PlayerCharacter' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_UpdateEscalatorHighlightsForViewer, AreHighlightsVisible) == 0x000008, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_UpdateEscalatorHighlightsForViewer::AreHighlightsVisible' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_UpdateEscalatorHighlightsForViewer, PlayerController) == 0x000010, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_UpdateEscalatorHighlightsForViewer::PlayerController' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_UpdateEscalatorHighlightsForViewer, HighlightManager) == 0x000018, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_UpdateEscalatorHighlightsForViewer::HighlightManager' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_UpdateEscalatorHighlightsForViewer, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_UpdateEscalatorHighlightsForViewer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_UpdateEscalatorHighlightsForViewer, CallFunc_GetAssociatedPlayerController_ReturnValue) == 0x000028, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_UpdateEscalatorHighlightsForViewer::CallFunc_GetAssociatedPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_UpdateEscalatorHighlightsForViewer, Temp_int_Array_Index_Variable) == 0x000030, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_UpdateEscalatorHighlightsForViewer::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_UpdateEscalatorHighlightsForViewer, Temp_int_Loop_Counter_Variable) == 0x000034, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_UpdateEscalatorHighlightsForViewer::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_UpdateEscalatorHighlightsForViewer, CallFunc_Add_IntInt_ReturnValue) == 0x000038, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_UpdateEscalatorHighlightsForViewer::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_UpdateEscalatorHighlightsForViewer, CallFunc_IsValid_ReturnValue_1) == 0x00003C, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_UpdateEscalatorHighlightsForViewer::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_UpdateEscalatorHighlightsForViewer, CallFunc_IsValid_ReturnValue_2) == 0x00003D, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_UpdateEscalatorHighlightsForViewer::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_UpdateEscalatorHighlightsForViewer, CallFunc_GetGlobalHighlightManager_ReturnValue) == 0x000040, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_UpdateEscalatorHighlightsForViewer::CallFunc_GetGlobalHighlightManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_UpdateEscalatorHighlightsForViewer, CallFunc_Array_Get_Item) == 0x000048, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_UpdateEscalatorHighlightsForViewer::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_UpdateEscalatorHighlightsForViewer, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_UpdateEscalatorHighlightsForViewer::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_UpdateEscalatorHighlightsForViewer, CallFunc_Less_IntInt_ReturnValue) == 0x000054, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_UpdateEscalatorHighlightsForViewer::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_UpdateEscalatorHighlightsForViewer, K2Node_MakeStruct_HighlightTagsRules) == 0x000058, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_UpdateEscalatorHighlightsForViewer::K2Node_MakeStruct_HighlightTagsRules' has a wrong offset!");

// Function BP_NPCEscalatorManagerStateMachineComponent.BP_NPCEscalatorManagerStateMachineComponent_C.Get Enemy Target Manager Component
// 0x0040 (0x0040 - 0x0000)
struct BP_NPCEscalatorManagerStateMachineComponent_C_Get_Enemy_Target_Manager_Component final
{
public:
	class AActor*                                 SourceNPC;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UCAComponent_NPCTargetManager*          ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACACharacter_NPC*                       K2Node_DynamicCast_AsCACharacter_NPC;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACAAIController*                        CallFunc_GetCAAIController_ReturnValue;            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	const class UCAComponent_NPCTargetManager*    CallFunc_GetNPCTargetManager_ReturnValue;          // 0x0030(0x0008)(ConstParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_NPCEscalatorManagerStateMachineComponent_C_Get_Enemy_Target_Manager_Component) == 0x000008, "Wrong alignment on BP_NPCEscalatorManagerStateMachineComponent_C_Get_Enemy_Target_Manager_Component");
static_assert(sizeof(BP_NPCEscalatorManagerStateMachineComponent_C_Get_Enemy_Target_Manager_Component) == 0x000040, "Wrong size on BP_NPCEscalatorManagerStateMachineComponent_C_Get_Enemy_Target_Manager_Component");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_Get_Enemy_Target_Manager_Component, SourceNPC) == 0x000000, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_Get_Enemy_Target_Manager_Component::SourceNPC' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_Get_Enemy_Target_Manager_Component, ReturnValue) == 0x000008, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_Get_Enemy_Target_Manager_Component::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_Get_Enemy_Target_Manager_Component, K2Node_DynamicCast_AsCACharacter_NPC) == 0x000010, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_Get_Enemy_Target_Manager_Component::K2Node_DynamicCast_AsCACharacter_NPC' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_Get_Enemy_Target_Manager_Component, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_Get_Enemy_Target_Manager_Component::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_Get_Enemy_Target_Manager_Component, CallFunc_GetCAAIController_ReturnValue) == 0x000020, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_Get_Enemy_Target_Manager_Component::CallFunc_GetCAAIController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_Get_Enemy_Target_Manager_Component, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_Get_Enemy_Target_Manager_Component::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_Get_Enemy_Target_Manager_Component, CallFunc_IsValid_ReturnValue_1) == 0x000029, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_Get_Enemy_Target_Manager_Component::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_Get_Enemy_Target_Manager_Component, CallFunc_GetNPCTargetManager_ReturnValue) == 0x000030, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_Get_Enemy_Target_Manager_Component::CallFunc_GetNPCTargetManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_Get_Enemy_Target_Manager_Component, CallFunc_IsValid_ReturnValue_2) == 0x000038, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_Get_Enemy_Target_Manager_Component::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

// Function BP_NPCEscalatorManagerStateMachineComponent.BP_NPCEscalatorManagerStateMachineComponent_C.RemoveEscalationTagsAndUnregisterEscalators
// 0x0040 (0x0040 - 0x0000)
struct BP_NPCEscalatorManagerStateMachineComponent_C_RemoveEscalationTagsAndUnregisterEscalators final
{
public:
	class UCAAbilitySystemComponent*              EscalatorAbilitySystemComponent;                   // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Escalator;                                         // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPCEscalatorManagerStateMachineComponent_C_RemoveEscalationTagsAndUnregisterEscalators) == 0x000008, "Wrong alignment on BP_NPCEscalatorManagerStateMachineComponent_C_RemoveEscalationTagsAndUnregisterEscalators");
static_assert(sizeof(BP_NPCEscalatorManagerStateMachineComponent_C_RemoveEscalationTagsAndUnregisterEscalators) == 0x000040, "Wrong size on BP_NPCEscalatorManagerStateMachineComponent_C_RemoveEscalationTagsAndUnregisterEscalators");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_RemoveEscalationTagsAndUnregisterEscalators, EscalatorAbilitySystemComponent) == 0x000000, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_RemoveEscalationTagsAndUnregisterEscalators::EscalatorAbilitySystemComponent' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_RemoveEscalationTagsAndUnregisterEscalators, Escalator) == 0x000008, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_RemoveEscalationTagsAndUnregisterEscalators::Escalator' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_RemoveEscalationTagsAndUnregisterEscalators, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_RemoveEscalationTagsAndUnregisterEscalators::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_RemoveEscalationTagsAndUnregisterEscalators, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_RemoveEscalationTagsAndUnregisterEscalators::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_RemoveEscalationTagsAndUnregisterEscalators, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_RemoveEscalationTagsAndUnregisterEscalators::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_RemoveEscalationTagsAndUnregisterEscalators, CallFunc_Subtract_IntInt_ReturnValue) == 0x00001C, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_RemoveEscalationTagsAndUnregisterEscalators::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_RemoveEscalationTagsAndUnregisterEscalators, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000020, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_RemoveEscalationTagsAndUnregisterEscalators::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_RemoveEscalationTagsAndUnregisterEscalators, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_RemoveEscalationTagsAndUnregisterEscalators::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_RemoveEscalationTagsAndUnregisterEscalators, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_RemoveEscalationTagsAndUnregisterEscalators::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_RemoveEscalationTagsAndUnregisterEscalators, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000034, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_RemoveEscalationTagsAndUnregisterEscalators::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_RemoveEscalationTagsAndUnregisterEscalators, CallFunc_Max_ReturnValue) == 0x000038, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_RemoveEscalationTagsAndUnregisterEscalators::CallFunc_Max_ReturnValue' has a wrong offset!");

// Function BP_NPCEscalatorManagerStateMachineComponent.BP_NPCEscalatorManagerStateMachineComponent_C.UnregisterEscalatorHighlights
// 0x0018 (0x0018 - 0x0000)
struct BP_NPCEscalatorManagerStateMachineComponent_C_UnregisterEscalatorHighlights final
{
public:
	class AActor*                                 Highlightactor;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACAGlobalHighlightManager*              CallFunc_GetGlobalHighlightManager_ReturnValue;    // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_NPCEscalatorManagerStateMachineComponent_C_UnregisterEscalatorHighlights) == 0x000008, "Wrong alignment on BP_NPCEscalatorManagerStateMachineComponent_C_UnregisterEscalatorHighlights");
static_assert(sizeof(BP_NPCEscalatorManagerStateMachineComponent_C_UnregisterEscalatorHighlights) == 0x000018, "Wrong size on BP_NPCEscalatorManagerStateMachineComponent_C_UnregisterEscalatorHighlights");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_UnregisterEscalatorHighlights, Highlightactor) == 0x000000, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_UnregisterEscalatorHighlights::Highlightactor' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_UnregisterEscalatorHighlights, CallFunc_GetGlobalHighlightManager_ReturnValue) == 0x000008, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_UnregisterEscalatorHighlights::CallFunc_GetGlobalHighlightManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_UnregisterEscalatorHighlights, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_UnregisterEscalatorHighlights::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_NPCEscalatorManagerStateMachineComponent.BP_NPCEscalatorManagerStateMachineComponent_C.DrawDebugInfo
// 0x0040 (0x0040 - 0x0000)
struct BP_NPCEscalatorManagerStateMachineComponent_C_DrawDebugInfo final
{
public:
	struct FLinearColor                           LineColor;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Duration;                                          // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Thickness;                                         // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32[0x2];                                       // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPCEscalatorManagerStateMachineComponent_C_DrawDebugInfo) == 0x000008, "Wrong alignment on BP_NPCEscalatorManagerStateMachineComponent_C_DrawDebugInfo");
static_assert(sizeof(BP_NPCEscalatorManagerStateMachineComponent_C_DrawDebugInfo) == 0x000040, "Wrong size on BP_NPCEscalatorManagerStateMachineComponent_C_DrawDebugInfo");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_DrawDebugInfo, LineColor) == 0x000000, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_DrawDebugInfo::LineColor' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_DrawDebugInfo, Duration) == 0x000010, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_DrawDebugInfo::Duration' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_DrawDebugInfo, Thickness) == 0x000014, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_DrawDebugInfo::Thickness' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_DrawDebugInfo, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_DrawDebugInfo::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_DrawDebugInfo, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_DrawDebugInfo::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_DrawDebugInfo, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_DrawDebugInfo::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_DrawDebugInfo, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_DrawDebugInfo::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_DrawDebugInfo, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_DrawDebugInfo::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_DrawDebugInfo, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_DrawDebugInfo::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_DrawDebugInfo, CallFunc_IsValid_ReturnValue) == 0x000031, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_DrawDebugInfo::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_DrawDebugInfo, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000034, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_DrawDebugInfo::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");

// Function BP_NPCEscalatorManagerStateMachineComponent.BP_NPCEscalatorManagerStateMachineComponent_C.UnregisterAllEscalatorHighlights
// 0x0020 (0x0020 - 0x0000)
struct BP_NPCEscalatorManagerStateMachineComponent_C_UnregisterAllEscalatorHighlights final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_NPCEscalatorManagerStateMachineComponent_C_UnregisterAllEscalatorHighlights) == 0x000008, "Wrong alignment on BP_NPCEscalatorManagerStateMachineComponent_C_UnregisterAllEscalatorHighlights");
static_assert(sizeof(BP_NPCEscalatorManagerStateMachineComponent_C_UnregisterAllEscalatorHighlights) == 0x000020, "Wrong size on BP_NPCEscalatorManagerStateMachineComponent_C_UnregisterAllEscalatorHighlights");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_UnregisterAllEscalatorHighlights, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_UnregisterAllEscalatorHighlights::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_UnregisterAllEscalatorHighlights, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_UnregisterAllEscalatorHighlights::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_UnregisterAllEscalatorHighlights, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_UnregisterAllEscalatorHighlights::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_UnregisterAllEscalatorHighlights, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_UnregisterAllEscalatorHighlights::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_UnregisterAllEscalatorHighlights, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_UnregisterAllEscalatorHighlights::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_UnregisterAllEscalatorHighlights, CallFunc_Less_IntInt_ReturnValue) == 0x000018, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_UnregisterAllEscalatorHighlights::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_UnregisterAllEscalatorHighlights, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_UnregisterAllEscalatorHighlights::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_NPCEscalatorManagerStateMachineComponent.BP_NPCEscalatorManagerStateMachineComponent_C.RegisterEscalationActor
// 0x0048 (0x0048 - 0x0000)
struct BP_NPCEscalatorManagerStateMachineComponent_C_RegisterEscalationActor final
{
public:
	const class AActor*                           EscalationActor;                                   // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACACharacter_NPC*                       CharacterNPC;                                      // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBPWC_NPC_AlertWidget_C*                NPCAlertWidget;                                    // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCAComponent_NPCTargetManager*          TargetManagerComponent;                            // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class ACACharacter* Character, struct FGameplayEffectSpec& Death_gameplay_effect_spec, float Damage_magnitude, struct FNetworkedHit& Networked_hit, class AActor* Killer)> K2Node_CreateDelegate_OutputDelegate;              // 0x0020(0x0014)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACACharacter_NPC*                       K2Node_DynamicCast_AsCACharacter_NPC;              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPCEscalatorManagerStateMachineComponent_C_RegisterEscalationActor) == 0x000008, "Wrong alignment on BP_NPCEscalatorManagerStateMachineComponent_C_RegisterEscalationActor");
static_assert(sizeof(BP_NPCEscalatorManagerStateMachineComponent_C_RegisterEscalationActor) == 0x000048, "Wrong size on BP_NPCEscalatorManagerStateMachineComponent_C_RegisterEscalationActor");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_RegisterEscalationActor, EscalationActor) == 0x000000, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_RegisterEscalationActor::EscalationActor' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_RegisterEscalationActor, CharacterNPC) == 0x000008, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_RegisterEscalationActor::CharacterNPC' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_RegisterEscalationActor, NPCAlertWidget) == 0x000010, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_RegisterEscalationActor::NPCAlertWidget' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_RegisterEscalationActor, TargetManagerComponent) == 0x000018, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_RegisterEscalationActor::TargetManagerComponent' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_RegisterEscalationActor, K2Node_CreateDelegate_OutputDelegate) == 0x000020, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_RegisterEscalationActor::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_RegisterEscalationActor, K2Node_DynamicCast_AsCACharacter_NPC) == 0x000038, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_RegisterEscalationActor::K2Node_DynamicCast_AsCACharacter_NPC' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_RegisterEscalationActor, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_RegisterEscalationActor::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_RegisterEscalationActor, CallFunc_Array_AddUnique_ReturnValue) == 0x000044, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_RegisterEscalationActor::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");

// Function BP_NPCEscalatorManagerStateMachineComponent.BP_NPCEscalatorManagerStateMachineComponent_C.UnregisterEscalationActor
// 0x0058 (0x0058 - 0x0000)
struct BP_NPCEscalatorManagerStateMachineComponent_C_UnregisterEscalationActor final
{
public:
	const class AActor*                           EscalationActor;                                   // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACACharacter_NPC*                       CharacterNPC;                                      // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCAAbilitySystemComponent*              EscalatorAbilitySystemComponent;                   // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBPWC_NPC_AlertWidget_C*                NPCAlertWidget;                                    // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACACharacter_NPC*                       K2Node_DynamicCast_AsCACharacter_NPC;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ACACharacter_NPC*                       K2Node_DynamicCast_AsCACharacter_NPC_1;            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class ACACharacter* Character, struct FGameplayEffectSpec& Death_gameplay_effect_spec, float Damage_magnitude, struct FNetworkedHit& Networked_hit, class AActor* Killer)> K2Node_CreateDelegate_OutputDelegate;              // 0x0044(0x0014)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(BP_NPCEscalatorManagerStateMachineComponent_C_UnregisterEscalationActor) == 0x000008, "Wrong alignment on BP_NPCEscalatorManagerStateMachineComponent_C_UnregisterEscalationActor");
static_assert(sizeof(BP_NPCEscalatorManagerStateMachineComponent_C_UnregisterEscalationActor) == 0x000058, "Wrong size on BP_NPCEscalatorManagerStateMachineComponent_C_UnregisterEscalationActor");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_UnregisterEscalationActor, EscalationActor) == 0x000000, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_UnregisterEscalationActor::EscalationActor' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_UnregisterEscalationActor, CharacterNPC) == 0x000008, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_UnregisterEscalationActor::CharacterNPC' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_UnregisterEscalationActor, EscalatorAbilitySystemComponent) == 0x000010, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_UnregisterEscalationActor::EscalatorAbilitySystemComponent' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_UnregisterEscalationActor, NPCAlertWidget) == 0x000018, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_UnregisterEscalationActor::NPCAlertWidget' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_UnregisterEscalationActor, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_UnregisterEscalationActor::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_UnregisterEscalationActor, K2Node_DynamicCast_AsCACharacter_NPC) == 0x000028, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_UnregisterEscalationActor::K2Node_DynamicCast_AsCACharacter_NPC' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_UnregisterEscalationActor, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_UnregisterEscalationActor::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_UnregisterEscalationActor, CallFunc_Array_RemoveItem_ReturnValue) == 0x000031, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_UnregisterEscalationActor::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_UnregisterEscalationActor, K2Node_DynamicCast_AsCACharacter_NPC_1) == 0x000038, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_UnregisterEscalationActor::K2Node_DynamicCast_AsCACharacter_NPC_1' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_UnregisterEscalationActor, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_UnregisterEscalationActor::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_UnregisterEscalationActor, K2Node_CreateDelegate_OutputDelegate) == 0x000044, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_UnregisterEscalationActor::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function BP_NPCEscalatorManagerStateMachineComponent.BP_NPCEscalatorManagerStateMachineComponent_C.UpdateHighlightsForEscalator
// 0x00E0 (0x00E0 - 0x0000)
struct BP_NPCEscalatorManagerStateMachineComponent_C_UpdateHighlightsForEscalator final
{
public:
	bool                                          AreHighlightsVisible;                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Actor_to_highlight;                                // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACAPlayerController*                    PlayerController;                                  // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class ACAGlobalHighlightManager*              HighlightManager;                                  // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHighlightTagsRules                    K2Node_MakeStruct_HighlightTagsRules;              // 0x0030(0x0080)()
	class ACAGlobalHighlightManager*              CallFunc_GetGlobalHighlightManager_ReturnValue;    // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACACharacter_MainPlayer*                CallFunc_Array_Get_Item;                           // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACAPlayerController*                    K2Node_DynamicCast_AsCAPlayer_Controller;          // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_NPCEscalatorManagerStateMachineComponent_C_UpdateHighlightsForEscalator) == 0x000008, "Wrong alignment on BP_NPCEscalatorManagerStateMachineComponent_C_UpdateHighlightsForEscalator");
static_assert(sizeof(BP_NPCEscalatorManagerStateMachineComponent_C_UpdateHighlightsForEscalator) == 0x0000E0, "Wrong size on BP_NPCEscalatorManagerStateMachineComponent_C_UpdateHighlightsForEscalator");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_UpdateHighlightsForEscalator, AreHighlightsVisible) == 0x000000, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_UpdateHighlightsForEscalator::AreHighlightsVisible' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_UpdateHighlightsForEscalator, Actor_to_highlight) == 0x000008, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_UpdateHighlightsForEscalator::Actor_to_highlight' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_UpdateHighlightsForEscalator, PlayerController) == 0x000010, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_UpdateHighlightsForEscalator::PlayerController' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_UpdateHighlightsForEscalator, HighlightManager) == 0x000018, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_UpdateHighlightsForEscalator::HighlightManager' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_UpdateHighlightsForEscalator, Temp_int_Array_Index_Variable) == 0x000020, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_UpdateHighlightsForEscalator::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_UpdateHighlightsForEscalator, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_UpdateHighlightsForEscalator::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_UpdateHighlightsForEscalator, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_UpdateHighlightsForEscalator::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_UpdateHighlightsForEscalator, CallFunc_IsValid_ReturnValue) == 0x00002C, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_UpdateHighlightsForEscalator::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_UpdateHighlightsForEscalator, K2Node_MakeStruct_HighlightTagsRules) == 0x000030, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_UpdateHighlightsForEscalator::K2Node_MakeStruct_HighlightTagsRules' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_UpdateHighlightsForEscalator, CallFunc_GetGlobalHighlightManager_ReturnValue) == 0x0000B0, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_UpdateHighlightsForEscalator::CallFunc_GetGlobalHighlightManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_UpdateHighlightsForEscalator, CallFunc_Array_Get_Item) == 0x0000B8, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_UpdateHighlightsForEscalator::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_UpdateHighlightsForEscalator, CallFunc_GetController_ReturnValue) == 0x0000C0, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_UpdateHighlightsForEscalator::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_UpdateHighlightsForEscalator, CallFunc_Array_Length_ReturnValue) == 0x0000C8, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_UpdateHighlightsForEscalator::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_UpdateHighlightsForEscalator, K2Node_DynamicCast_AsCAPlayer_Controller) == 0x0000D0, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_UpdateHighlightsForEscalator::K2Node_DynamicCast_AsCAPlayer_Controller' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_UpdateHighlightsForEscalator, K2Node_DynamicCast_bSuccess) == 0x0000D8, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_UpdateHighlightsForEscalator::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_UpdateHighlightsForEscalator, CallFunc_Less_IntInt_ReturnValue) == 0x0000D9, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_UpdateHighlightsForEscalator::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_NPCEscalatorManagerStateMachineComponent.BP_NPCEscalatorManagerStateMachineComponent_C.ResetEscalatorManager
// 0x0038 (0x0038 - 0x0000)
struct BP_NPCEscalatorManagerStateMachineComponent_C_ResetEscalatorManager final
{
public:
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AActor* OverlappedActor, class AActor* OtherActor)> K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0014)(ZeroConstructor, NoDestructor)
	TDelegate<void(class AActor* OverlappedActor, class AActor* OtherActor)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0024(0x0014)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(BP_NPCEscalatorManagerStateMachineComponent_C_ResetEscalatorManager) == 0x000008, "Wrong alignment on BP_NPCEscalatorManagerStateMachineComponent_C_ResetEscalatorManager");
static_assert(sizeof(BP_NPCEscalatorManagerStateMachineComponent_C_ResetEscalatorManager) == 0x000038, "Wrong size on BP_NPCEscalatorManagerStateMachineComponent_C_ResetEscalatorManager");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_ResetEscalatorManager, CallFunc_GetOwner_ReturnValue) == 0x000000, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_ResetEscalatorManager::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_ResetEscalatorManager, CallFunc_GetOwner_ReturnValue_1) == 0x000008, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_ResetEscalatorManager::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_ResetEscalatorManager, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_ResetEscalatorManager::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_ResetEscalatorManager, K2Node_CreateDelegate_OutputDelegate_1) == 0x000024, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_ResetEscalatorManager::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");

// Function BP_NPCEscalatorManagerStateMachineComponent.BP_NPCEscalatorManagerStateMachineComponent_C.OnIdleStart
// 0x0038 (0x0038 - 0x0000)
struct BP_NPCEscalatorManagerStateMachineComponent_C_OnIdleStart final
{
public:
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AActor* OverlappedActor, class AActor* OtherActor)> K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0014)(ZeroConstructor, NoDestructor)
	TDelegate<void(class AActor* OverlappedActor, class AActor* OtherActor)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0024(0x0014)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(BP_NPCEscalatorManagerStateMachineComponent_C_OnIdleStart) == 0x000008, "Wrong alignment on BP_NPCEscalatorManagerStateMachineComponent_C_OnIdleStart");
static_assert(sizeof(BP_NPCEscalatorManagerStateMachineComponent_C_OnIdleStart) == 0x000038, "Wrong size on BP_NPCEscalatorManagerStateMachineComponent_C_OnIdleStart");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_OnIdleStart, CallFunc_GetOwner_ReturnValue) == 0x000000, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_OnIdleStart::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_OnIdleStart, CallFunc_GetOwner_ReturnValue_1) == 0x000008, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_OnIdleStart::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_OnIdleStart, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_OnIdleStart::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_OnIdleStart, K2Node_CreateDelegate_OutputDelegate_1) == 0x000024, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_OnIdleStart::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");

// Function BP_NPCEscalatorManagerStateMachineComponent.BP_NPCEscalatorManagerStateMachineComponent_C.CheckForEscalatorsLosingEscalatorCondition
// 0x0068 (0x0068 - 0x0000)
struct BP_NPCEscalatorManagerStateMachineComponent_C_CheckForEscalatorsLosingEscalatorCondition final
{
public:
	class AActor*                                 Escalator;                                         // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IGameplayTagAssetInterface> K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface; // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsOnEnemyNPCTeam_ReturnValue;             // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAnyMatchingGameplayTags_ReturnValue;   // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B[0x5];                                       // 0x003B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetNPCEscalatorActorArray_ReturnValue;    // 0x0040(0x0010)(ConstParm, ReferenceParm)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPCEscalatorManagerStateMachineComponent_C_CheckForEscalatorsLosingEscalatorCondition) == 0x000008, "Wrong alignment on BP_NPCEscalatorManagerStateMachineComponent_C_CheckForEscalatorsLosingEscalatorCondition");
static_assert(sizeof(BP_NPCEscalatorManagerStateMachineComponent_C_CheckForEscalatorsLosingEscalatorCondition) == 0x000068, "Wrong size on BP_NPCEscalatorManagerStateMachineComponent_C_CheckForEscalatorsLosingEscalatorCondition");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_CheckForEscalatorsLosingEscalatorCondition, Escalator) == 0x000000, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_CheckForEscalatorsLosingEscalatorCondition::Escalator' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_CheckForEscalatorsLosingEscalatorCondition, Temp_bool_Variable) == 0x000008, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_CheckForEscalatorsLosingEscalatorCondition::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_CheckForEscalatorsLosingEscalatorCondition, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_CheckForEscalatorsLosingEscalatorCondition::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_CheckForEscalatorsLosingEscalatorCondition, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_CheckForEscalatorsLosingEscalatorCondition::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_CheckForEscalatorsLosingEscalatorCondition, CallFunc_Subtract_IntInt_ReturnValue) == 0x000014, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_CheckForEscalatorsLosingEscalatorCondition::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_CheckForEscalatorsLosingEscalatorCondition, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000018, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_CheckForEscalatorsLosingEscalatorCondition::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_CheckForEscalatorsLosingEscalatorCondition, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x000020, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_CheckForEscalatorsLosingEscalatorCondition::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_CheckForEscalatorsLosingEscalatorCondition, K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface) == 0x000028, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_CheckForEscalatorsLosingEscalatorCondition::K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_CheckForEscalatorsLosingEscalatorCondition, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_CheckForEscalatorsLosingEscalatorCondition::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_CheckForEscalatorsLosingEscalatorCondition, CallFunc_IsOnEnemyNPCTeam_ReturnValue) == 0x000039, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_CheckForEscalatorsLosingEscalatorCondition::CallFunc_IsOnEnemyNPCTeam_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_CheckForEscalatorsLosingEscalatorCondition, CallFunc_HasAnyMatchingGameplayTags_ReturnValue) == 0x00003A, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_CheckForEscalatorsLosingEscalatorCondition::CallFunc_HasAnyMatchingGameplayTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_CheckForEscalatorsLosingEscalatorCondition, CallFunc_GetNPCEscalatorActorArray_ReturnValue) == 0x000040, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_CheckForEscalatorsLosingEscalatorCondition::CallFunc_GetNPCEscalatorActorArray_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_CheckForEscalatorsLosingEscalatorCondition, CallFunc_Array_Get_Item) == 0x000050, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_CheckForEscalatorsLosingEscalatorCondition::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_CheckForEscalatorsLosingEscalatorCondition, CallFunc_Array_Length_ReturnValue) == 0x000058, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_CheckForEscalatorsLosingEscalatorCondition::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_CheckForEscalatorsLosingEscalatorCondition, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x00005C, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_CheckForEscalatorsLosingEscalatorCondition::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_CheckForEscalatorsLosingEscalatorCondition, CallFunc_Max_ReturnValue) == 0x000060, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_CheckForEscalatorsLosingEscalatorCondition::CallFunc_Max_ReturnValue' has a wrong offset!");

// Function BP_NPCEscalatorManagerStateMachineComponent.BP_NPCEscalatorManagerStateMachineComponent_C.OnResetStateMachine
// 0x0010 (0x0010 - 0x0000)
struct BP_NPCEscalatorManagerStateMachineComponent_C_OnResetStateMachine final
{
public:
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_NPCEscalatorManagerStateMachineComponent_C_OnResetStateMachine) == 0x000008, "Wrong alignment on BP_NPCEscalatorManagerStateMachineComponent_C_OnResetStateMachine");
static_assert(sizeof(BP_NPCEscalatorManagerStateMachineComponent_C_OnResetStateMachine) == 0x000010, "Wrong size on BP_NPCEscalatorManagerStateMachineComponent_C_OnResetStateMachine");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_OnResetStateMachine, CallFunc_GetOwner_ReturnValue) == 0x000000, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_OnResetStateMachine::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_OnResetStateMachine, CallFunc_HasAuthority_ReturnValue) == 0x000008, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_OnResetStateMachine::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");

// Function BP_NPCEscalatorManagerStateMachineComponent.BP_NPCEscalatorManagerStateMachineComponent_C.Register For NPCSenses Player Callback
// 0x0050 (0x0050 - 0x0000)
struct BP_NPCEscalatorManagerStateMachineComponent_C_Register_For_NPCSenses_Player_Callback final
{
public:
	class AActor*                                 NPCActor;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UCAComponent_NPCTargetManager*          TargetManagerComponent;                            // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AActor* Target)>         K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0014)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UCAComponent_NPCTargetManager*          CallFunc_Get_Enemy_Target_Manager_Component_ReturnValue; // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetCurrentTarget_ReturnValue;             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACACharacter_MainPlayer*                K2Node_DynamicCast_AsCACharacter_Main_Player;      // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_NPCEscalatorManagerStateMachineComponent_C_Register_For_NPCSenses_Player_Callback) == 0x000008, "Wrong alignment on BP_NPCEscalatorManagerStateMachineComponent_C_Register_For_NPCSenses_Player_Callback");
static_assert(sizeof(BP_NPCEscalatorManagerStateMachineComponent_C_Register_For_NPCSenses_Player_Callback) == 0x000050, "Wrong size on BP_NPCEscalatorManagerStateMachineComponent_C_Register_For_NPCSenses_Player_Callback");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_Register_For_NPCSenses_Player_Callback, NPCActor) == 0x000000, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_Register_For_NPCSenses_Player_Callback::NPCActor' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_Register_For_NPCSenses_Player_Callback, TargetManagerComponent) == 0x000008, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_Register_For_NPCSenses_Player_Callback::TargetManagerComponent' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_Register_For_NPCSenses_Player_Callback, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_Register_For_NPCSenses_Player_Callback::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_Register_For_NPCSenses_Player_Callback, CallFunc_IsValid_ReturnValue) == 0x000024, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_Register_For_NPCSenses_Player_Callback::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_Register_For_NPCSenses_Player_Callback, CallFunc_Get_Enemy_Target_Manager_Component_ReturnValue) == 0x000028, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_Register_For_NPCSenses_Player_Callback::CallFunc_Get_Enemy_Target_Manager_Component_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_Register_For_NPCSenses_Player_Callback, CallFunc_IsValid_ReturnValue_1) == 0x000030, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_Register_For_NPCSenses_Player_Callback::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_Register_For_NPCSenses_Player_Callback, CallFunc_GetCurrentTarget_ReturnValue) == 0x000038, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_Register_For_NPCSenses_Player_Callback::CallFunc_GetCurrentTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_Register_For_NPCSenses_Player_Callback, K2Node_DynamicCast_AsCACharacter_Main_Player) == 0x000040, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_Register_For_NPCSenses_Player_Callback::K2Node_DynamicCast_AsCACharacter_Main_Player' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_Register_For_NPCSenses_Player_Callback, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_Register_For_NPCSenses_Player_Callback::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_NPCEscalatorManagerStateMachineComponent.BP_NPCEscalatorManagerStateMachineComponent_C.OnNPCAdquiresNewTarget
// 0x0018 (0x0018 - 0x0000)
struct BP_NPCEscalatorManagerStateMachineComponent_C_OnNPCAdquiresNewTarget final
{
public:
	class AActor*                                 Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACACharacter_MainPlayer*                K2Node_DynamicCast_AsCACharacter_Main_Player;      // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_NPCEscalatorManagerStateMachineComponent_C_OnNPCAdquiresNewTarget) == 0x000008, "Wrong alignment on BP_NPCEscalatorManagerStateMachineComponent_C_OnNPCAdquiresNewTarget");
static_assert(sizeof(BP_NPCEscalatorManagerStateMachineComponent_C_OnNPCAdquiresNewTarget) == 0x000018, "Wrong size on BP_NPCEscalatorManagerStateMachineComponent_C_OnNPCAdquiresNewTarget");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_OnNPCAdquiresNewTarget, Target) == 0x000000, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_OnNPCAdquiresNewTarget::Target' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_OnNPCAdquiresNewTarget, K2Node_DynamicCast_AsCACharacter_Main_Player) == 0x000008, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_OnNPCAdquiresNewTarget::K2Node_DynamicCast_AsCACharacter_Main_Player' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_OnNPCAdquiresNewTarget, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_OnNPCAdquiresNewTarget::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_NPCEscalatorManagerStateMachineComponent.BP_NPCEscalatorManagerStateMachineComponent_C.AllowHighlightingFromStatusTag
// 0x0020 (0x0020 - 0x0000)
struct BP_NPCEscalatorManagerStateMachineComponent_C_AllowHighlightingFromStatusTag final
{
public:
	bool                                          bEnabled;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACACharacter_MainPlayer*                CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_NPCEscalatorManagerStateMachineComponent_C_AllowHighlightingFromStatusTag) == 0x000008, "Wrong alignment on BP_NPCEscalatorManagerStateMachineComponent_C_AllowHighlightingFromStatusTag");
static_assert(sizeof(BP_NPCEscalatorManagerStateMachineComponent_C_AllowHighlightingFromStatusTag) == 0x000020, "Wrong size on BP_NPCEscalatorManagerStateMachineComponent_C_AllowHighlightingFromStatusTag");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_AllowHighlightingFromStatusTag, bEnabled) == 0x000000, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_AllowHighlightingFromStatusTag::bEnabled' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_AllowHighlightingFromStatusTag, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_AllowHighlightingFromStatusTag::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_AllowHighlightingFromStatusTag, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_AllowHighlightingFromStatusTag::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_AllowHighlightingFromStatusTag, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_AllowHighlightingFromStatusTag::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_AllowHighlightingFromStatusTag, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_AllowHighlightingFromStatusTag::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_AllowHighlightingFromStatusTag, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_AllowHighlightingFromStatusTag::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_AllowHighlightingFromStatusTag, CallFunc_Less_IntInt_ReturnValue) == 0x00001C, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_AllowHighlightingFromStatusTag::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_AllowHighlightingFromStatusTag, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x00001D, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_AllowHighlightingFromStatusTag::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function BP_NPCEscalatorManagerStateMachineComponent.BP_NPCEscalatorManagerStateMachineComponent_C.SecurityStateChanged
// 0x0038 (0x0038 - 0x0000)
struct BP_NPCEscalatorManagerStateMachineComponent_C_SecurityStateChanged final
{
public:
	class UCAFiniteState*                         State;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IGameplayTagAssetInterface> K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface; // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAnyMatchingGameplayTags_ReturnValue;   // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_NPCEscalatorManagerStateMachineComponent_C_SecurityStateChanged) == 0x000008, "Wrong alignment on BP_NPCEscalatorManagerStateMachineComponent_C_SecurityStateChanged");
static_assert(sizeof(BP_NPCEscalatorManagerStateMachineComponent_C_SecurityStateChanged) == 0x000038, "Wrong size on BP_NPCEscalatorManagerStateMachineComponent_C_SecurityStateChanged");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_SecurityStateChanged, State) == 0x000000, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_SecurityStateChanged::State' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_SecurityStateChanged, Temp_bool_Variable) == 0x000008, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_SecurityStateChanged::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_SecurityStateChanged, CallFunc_GetOwner_ReturnValue) == 0x000010, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_SecurityStateChanged::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_SecurityStateChanged, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x000018, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_SecurityStateChanged::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_SecurityStateChanged, K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface) == 0x000020, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_SecurityStateChanged::K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_SecurityStateChanged, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_SecurityStateChanged::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_SecurityStateChanged, CallFunc_HasAnyMatchingGameplayTags_ReturnValue) == 0x000031, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_SecurityStateChanged::CallFunc_HasAnyMatchingGameplayTags_ReturnValue' has a wrong offset!");

// Function BP_NPCEscalatorManagerStateMachineComponent.BP_NPCEscalatorManagerStateMachineComponent_C.CollectDebugInfo
// 0x0080 (0x0080 - 0x0000)
struct BP_NPCEscalatorManagerStateMachineComponent_C_CollectDebugInfo final
{
public:
	struct FCADebugTextCollector                  InCollector;                                       // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FCADebugTextCollector                  OutCollector;                                      // 0x0018(0x0018)(Parm, OutParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCAFiniteState*                         CallFunc_GetCurrentState_ReturnValue;              // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue_1;             // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_NPCEscalatorManagerStateMachineComponent_C_CollectDebugInfo) == 0x000008, "Wrong alignment on BP_NPCEscalatorManagerStateMachineComponent_C_CollectDebugInfo");
static_assert(sizeof(BP_NPCEscalatorManagerStateMachineComponent_C_CollectDebugInfo) == 0x000080, "Wrong size on BP_NPCEscalatorManagerStateMachineComponent_C_CollectDebugInfo");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_CollectDebugInfo, InCollector) == 0x000000, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_CollectDebugInfo::InCollector' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_CollectDebugInfo, OutCollector) == 0x000018, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_CollectDebugInfo::OutCollector' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_CollectDebugInfo, Temp_int_Array_Index_Variable) == 0x000030, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_CollectDebugInfo::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_CollectDebugInfo, Temp_int_Loop_Counter_Variable) == 0x000034, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_CollectDebugInfo::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_CollectDebugInfo, CallFunc_Add_IntInt_ReturnValue) == 0x000038, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_CollectDebugInfo::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_CollectDebugInfo, CallFunc_GetCurrentState_ReturnValue) == 0x000040, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_CollectDebugInfo::CallFunc_GetCurrentState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_CollectDebugInfo, CallFunc_GetDisplayName_ReturnValue) == 0x000048, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_CollectDebugInfo::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_CollectDebugInfo, CallFunc_Array_Get_Item) == 0x000058, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_CollectDebugInfo::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_CollectDebugInfo, CallFunc_Array_Length_ReturnValue) == 0x000060, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_CollectDebugInfo::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_CollectDebugInfo, CallFunc_GetDisplayName_ReturnValue_1) == 0x000068, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_CollectDebugInfo::CallFunc_GetDisplayName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NPCEscalatorManagerStateMachineComponent_C_CollectDebugInfo, CallFunc_Less_IntInt_ReturnValue) == 0x000078, "Member 'BP_NPCEscalatorManagerStateMachineComponent_C_CollectDebugInfo::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

}

