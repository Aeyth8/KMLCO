#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_NPC_DroneLight_AudioComponent

#include "Basic.hpp"

#include "Keaton_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_NPC_DroneLight_AudioComponent.BP_NPC_DroneLight_AudioComponent_C.ExecuteUbergraph_BP_NPC_DroneLight_AudioComponent
// 0x0310 (0x0310 - 0x0000)
struct BP_NPC_DroneLight_AudioComponent_C_ExecuteUbergraph_BP_NPC_DroneLight_AudioComponent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECAAwarenessState                             K2Node_CustomEvent_NewParam;                       // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class ACACharacter*                           K2Node_CustomEvent_character;                      // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectSpec                    K2Node_CustomEvent_death_gameplay_effect_spec;     // 0x0010(0x0298)(ConstParm)
	float                                         K2Node_CustomEvent_damage_magnitude;               // 0x02A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2AC[0x4];                                      // 0x02AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetRelativeTransform_ReturnValue;         // 0x02B0(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x02E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x02EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x02F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0304(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0308(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x030C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPC_DroneLight_AudioComponent_C_ExecuteUbergraph_BP_NPC_DroneLight_AudioComponent) == 0x000010, "Wrong alignment on BP_NPC_DroneLight_AudioComponent_C_ExecuteUbergraph_BP_NPC_DroneLight_AudioComponent");
static_assert(sizeof(BP_NPC_DroneLight_AudioComponent_C_ExecuteUbergraph_BP_NPC_DroneLight_AudioComponent) == 0x000310, "Wrong size on BP_NPC_DroneLight_AudioComponent_C_ExecuteUbergraph_BP_NPC_DroneLight_AudioComponent");
static_assert(offsetof(BP_NPC_DroneLight_AudioComponent_C_ExecuteUbergraph_BP_NPC_DroneLight_AudioComponent, EntryPoint) == 0x000000, "Member 'BP_NPC_DroneLight_AudioComponent_C_ExecuteUbergraph_BP_NPC_DroneLight_AudioComponent::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_NPC_DroneLight_AudioComponent_C_ExecuteUbergraph_BP_NPC_DroneLight_AudioComponent, K2Node_CustomEvent_NewParam) == 0x000004, "Member 'BP_NPC_DroneLight_AudioComponent_C_ExecuteUbergraph_BP_NPC_DroneLight_AudioComponent::K2Node_CustomEvent_NewParam' has a wrong offset!");
static_assert(offsetof(BP_NPC_DroneLight_AudioComponent_C_ExecuteUbergraph_BP_NPC_DroneLight_AudioComponent, K2Node_SwitchEnum_CmpSuccess) == 0x000005, "Member 'BP_NPC_DroneLight_AudioComponent_C_ExecuteUbergraph_BP_NPC_DroneLight_AudioComponent::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_NPC_DroneLight_AudioComponent_C_ExecuteUbergraph_BP_NPC_DroneLight_AudioComponent, CallFunc_IsValid_ReturnValue) == 0x000006, "Member 'BP_NPC_DroneLight_AudioComponent_C_ExecuteUbergraph_BP_NPC_DroneLight_AudioComponent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_DroneLight_AudioComponent_C_ExecuteUbergraph_BP_NPC_DroneLight_AudioComponent, K2Node_CustomEvent_character) == 0x000008, "Member 'BP_NPC_DroneLight_AudioComponent_C_ExecuteUbergraph_BP_NPC_DroneLight_AudioComponent::K2Node_CustomEvent_character' has a wrong offset!");
static_assert(offsetof(BP_NPC_DroneLight_AudioComponent_C_ExecuteUbergraph_BP_NPC_DroneLight_AudioComponent, K2Node_CustomEvent_death_gameplay_effect_spec) == 0x000010, "Member 'BP_NPC_DroneLight_AudioComponent_C_ExecuteUbergraph_BP_NPC_DroneLight_AudioComponent::K2Node_CustomEvent_death_gameplay_effect_spec' has a wrong offset!");
static_assert(offsetof(BP_NPC_DroneLight_AudioComponent_C_ExecuteUbergraph_BP_NPC_DroneLight_AudioComponent, K2Node_CustomEvent_damage_magnitude) == 0x0002A8, "Member 'BP_NPC_DroneLight_AudioComponent_C_ExecuteUbergraph_BP_NPC_DroneLight_AudioComponent::K2Node_CustomEvent_damage_magnitude' has a wrong offset!");
static_assert(offsetof(BP_NPC_DroneLight_AudioComponent_C_ExecuteUbergraph_BP_NPC_DroneLight_AudioComponent, CallFunc_GetRelativeTransform_ReturnValue) == 0x0002B0, "Member 'BP_NPC_DroneLight_AudioComponent_C_ExecuteUbergraph_BP_NPC_DroneLight_AudioComponent::CallFunc_GetRelativeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_DroneLight_AudioComponent_C_ExecuteUbergraph_BP_NPC_DroneLight_AudioComponent, CallFunc_BreakTransform_Location) == 0x0002E0, "Member 'BP_NPC_DroneLight_AudioComponent_C_ExecuteUbergraph_BP_NPC_DroneLight_AudioComponent::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_NPC_DroneLight_AudioComponent_C_ExecuteUbergraph_BP_NPC_DroneLight_AudioComponent, CallFunc_BreakTransform_Rotation) == 0x0002EC, "Member 'BP_NPC_DroneLight_AudioComponent_C_ExecuteUbergraph_BP_NPC_DroneLight_AudioComponent::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_NPC_DroneLight_AudioComponent_C_ExecuteUbergraph_BP_NPC_DroneLight_AudioComponent, CallFunc_BreakTransform_Scale) == 0x0002F8, "Member 'BP_NPC_DroneLight_AudioComponent_C_ExecuteUbergraph_BP_NPC_DroneLight_AudioComponent::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_NPC_DroneLight_AudioComponent_C_ExecuteUbergraph_BP_NPC_DroneLight_AudioComponent, CallFunc_BreakRotator_Roll) == 0x000304, "Member 'BP_NPC_DroneLight_AudioComponent_C_ExecuteUbergraph_BP_NPC_DroneLight_AudioComponent::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_NPC_DroneLight_AudioComponent_C_ExecuteUbergraph_BP_NPC_DroneLight_AudioComponent, CallFunc_BreakRotator_Pitch) == 0x000308, "Member 'BP_NPC_DroneLight_AudioComponent_C_ExecuteUbergraph_BP_NPC_DroneLight_AudioComponent::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_NPC_DroneLight_AudioComponent_C_ExecuteUbergraph_BP_NPC_DroneLight_AudioComponent, CallFunc_BreakRotator_Yaw) == 0x00030C, "Member 'BP_NPC_DroneLight_AudioComponent_C_ExecuteUbergraph_BP_NPC_DroneLight_AudioComponent::CallFunc_BreakRotator_Yaw' has a wrong offset!");

// Function BP_NPC_DroneLight_AudioComponent.BP_NPC_DroneLight_AudioComponent_C.AwarenessStateChange
// 0x0001 (0x0001 - 0x0000)
struct BP_NPC_DroneLight_AudioComponent_C_AwarenessStateChange final
{
public:
	ECAAwarenessState                             NewParam;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPC_DroneLight_AudioComponent_C_AwarenessStateChange) == 0x000001, "Wrong alignment on BP_NPC_DroneLight_AudioComponent_C_AwarenessStateChange");
static_assert(sizeof(BP_NPC_DroneLight_AudioComponent_C_AwarenessStateChange) == 0x000001, "Wrong size on BP_NPC_DroneLight_AudioComponent_C_AwarenessStateChange");
static_assert(offsetof(BP_NPC_DroneLight_AudioComponent_C_AwarenessStateChange, NewParam) == 0x000000, "Member 'BP_NPC_DroneLight_AudioComponent_C_AwarenessStateChange::NewParam' has a wrong offset!");

// Function BP_NPC_DroneLight_AudioComponent.BP_NPC_DroneLight_AudioComponent_C.OnDeath
// 0x02A8 (0x02A8 - 0x0000)
struct BP_NPC_DroneLight_AudioComponent_C_OnDeath final
{
public:
	class ACACharacter*                           Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectSpec                    Death_gameplay_effect_spec;                        // 0x0008(0x0298)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	float                                         Damage_magnitude;                                  // 0x02A0(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPC_DroneLight_AudioComponent_C_OnDeath) == 0x000008, "Wrong alignment on BP_NPC_DroneLight_AudioComponent_C_OnDeath");
static_assert(sizeof(BP_NPC_DroneLight_AudioComponent_C_OnDeath) == 0x0002A8, "Wrong size on BP_NPC_DroneLight_AudioComponent_C_OnDeath");
static_assert(offsetof(BP_NPC_DroneLight_AudioComponent_C_OnDeath, Character) == 0x000000, "Member 'BP_NPC_DroneLight_AudioComponent_C_OnDeath::Character' has a wrong offset!");
static_assert(offsetof(BP_NPC_DroneLight_AudioComponent_C_OnDeath, Death_gameplay_effect_spec) == 0x000008, "Member 'BP_NPC_DroneLight_AudioComponent_C_OnDeath::Death_gameplay_effect_spec' has a wrong offset!");
static_assert(offsetof(BP_NPC_DroneLight_AudioComponent_C_OnDeath, Damage_magnitude) == 0x0002A0, "Member 'BP_NPC_DroneLight_AudioComponent_C_OnDeath::Damage_magnitude' has a wrong offset!");

}

