#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPC_DropSpawnerBase

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BPC_DropSpawnerBase.BPC_DropSpawnerBase_C
// 0x0090 (0x0180 - 0x00F0)
class UBPC_DropSpawnerBase_C final : public UActorComponent
{
public:
	class UDataTable*                             LootTable;                                         // 0x00F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           Row_Names;                                         // 0x00F8(0x0010)(Edit, BlueprintVisible, Transient, DisableEditOnInstance, AdvancedDisplay)
	float                                         SumOfLootChance;                                   // 0x0108(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	uint8                                         Pad_10C[0x4];                                      // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<TSoftObjectPtr<class UCAInventoryItem>, float> LootMap;                                           // 0x0110(0x0050)(Edit, BlueprintVisible, Transient, DisableEditOnInstance, AdvancedDisplay)
	class UCAInventoryItem*                       PickupToSpawn;                                     // 0x0160(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ACAPickUp*>                      Pickups_Spawned;                                   // 0x0168(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	struct FRandomStream                          RandomStream;                                      // 0x0178(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor)

public:
	void CalculateTotalSpawnChance();
	void RollForLoot(TSoftObjectPtr<class UCAInventoryItem>* ChosenLoot);
	void Create_Loot_Map();
	void Drop_Item(int32 Amount, float Angle_between_directions, float Upwards_Inclination, float Throw_Cone_Max_Half_Angle, float Throw_Velocity, const struct FVector& Offset, bool Throw, bool UseRightVector, TArray<class ACAPickUp*>* ItemSpawned);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BPC_DropSpawnerBase_C">();
	}
	static class UBPC_DropSpawnerBase_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBPC_DropSpawnerBase_C>();
	}
};
static_assert(alignof(UBPC_DropSpawnerBase_C) == 0x000008, "Wrong alignment on UBPC_DropSpawnerBase_C");
static_assert(sizeof(UBPC_DropSpawnerBase_C) == 0x000180, "Wrong size on UBPC_DropSpawnerBase_C");
static_assert(offsetof(UBPC_DropSpawnerBase_C, LootTable) == 0x0000F0, "Member 'UBPC_DropSpawnerBase_C::LootTable' has a wrong offset!");
static_assert(offsetof(UBPC_DropSpawnerBase_C, Row_Names) == 0x0000F8, "Member 'UBPC_DropSpawnerBase_C::Row_Names' has a wrong offset!");
static_assert(offsetof(UBPC_DropSpawnerBase_C, SumOfLootChance) == 0x000108, "Member 'UBPC_DropSpawnerBase_C::SumOfLootChance' has a wrong offset!");
static_assert(offsetof(UBPC_DropSpawnerBase_C, LootMap) == 0x000110, "Member 'UBPC_DropSpawnerBase_C::LootMap' has a wrong offset!");
static_assert(offsetof(UBPC_DropSpawnerBase_C, PickupToSpawn) == 0x000160, "Member 'UBPC_DropSpawnerBase_C::PickupToSpawn' has a wrong offset!");
static_assert(offsetof(UBPC_DropSpawnerBase_C, Pickups_Spawned) == 0x000168, "Member 'UBPC_DropSpawnerBase_C::Pickups_Spawned' has a wrong offset!");
static_assert(offsetof(UBPC_DropSpawnerBase_C, RandomStream) == 0x000178, "Member 'UBPC_DropSpawnerBase_C::RandomStream' has a wrong offset!");

}

