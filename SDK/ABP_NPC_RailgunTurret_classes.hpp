#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_NPC_RailgunTurret

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Keaton_classes.hpp"
#include "AnimGraphRuntime_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_NPC_RailgunTurret.ABP_NPC_RailgunTurret_C
// 0x05B0 (0x09C0 - 0x0410)
class UABP_NPC_RailgunTurret_C final : public UCAAnimInstance_NPC
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0410(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_RotateRootBone               AnimGraphNode_RotateRootBone;                      // 0x0418(0x00E0)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x04F8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x0520(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x0548(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x0570(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x0598(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x05C0(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x0640(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x0678(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x06F8(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x0730(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x07B0(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x07E8(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x0868(0x0038)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x08A0(0x00B0)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0950(0x0038)()
	struct FRotator                               StaticRotation;                                    // 0x0988(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FRotator                               DeltaRotation_Base;                                // 0x0994(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsOffline;                                         // 0x09A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A1[0x3];                                      // 0x09A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               DeltaRotation_Top;                                 // 0x09A4(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FRotator                               BaseAimRotation;                                   // 0x09B0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_ABP_NPC_RailgunTurret(int32 EntryPoint);
	void BlueprintInitializeAnimation();
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void AnimGraph(struct FPoseLink* AnimGraph_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_NPC_RailgunTurret_C">();
	}
	static class UABP_NPC_RailgunTurret_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_NPC_RailgunTurret_C>();
	}
};
static_assert(alignof(UABP_NPC_RailgunTurret_C) == 0x000010, "Wrong alignment on UABP_NPC_RailgunTurret_C");
static_assert(sizeof(UABP_NPC_RailgunTurret_C) == 0x0009C0, "Wrong size on UABP_NPC_RailgunTurret_C");
static_assert(offsetof(UABP_NPC_RailgunTurret_C, UberGraphFrame) == 0x000410, "Member 'UABP_NPC_RailgunTurret_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_NPC_RailgunTurret_C, AnimGraphNode_RotateRootBone) == 0x000418, "Member 'UABP_NPC_RailgunTurret_C::AnimGraphNode_RotateRootBone' has a wrong offset!");
static_assert(offsetof(UABP_NPC_RailgunTurret_C, AnimGraphNode_TransitionResult_4) == 0x0004F8, "Member 'UABP_NPC_RailgunTurret_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UABP_NPC_RailgunTurret_C, AnimGraphNode_TransitionResult_3) == 0x000520, "Member 'UABP_NPC_RailgunTurret_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UABP_NPC_RailgunTurret_C, AnimGraphNode_TransitionResult_2) == 0x000548, "Member 'UABP_NPC_RailgunTurret_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UABP_NPC_RailgunTurret_C, AnimGraphNode_TransitionResult_1) == 0x000570, "Member 'UABP_NPC_RailgunTurret_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UABP_NPC_RailgunTurret_C, AnimGraphNode_TransitionResult) == 0x000598, "Member 'UABP_NPC_RailgunTurret_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UABP_NPC_RailgunTurret_C, AnimGraphNode_SequencePlayer_3) == 0x0005C0, "Member 'UABP_NPC_RailgunTurret_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UABP_NPC_RailgunTurret_C, AnimGraphNode_StateResult_3) == 0x000640, "Member 'UABP_NPC_RailgunTurret_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UABP_NPC_RailgunTurret_C, AnimGraphNode_SequencePlayer_2) == 0x000678, "Member 'UABP_NPC_RailgunTurret_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UABP_NPC_RailgunTurret_C, AnimGraphNode_StateResult_2) == 0x0006F8, "Member 'UABP_NPC_RailgunTurret_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UABP_NPC_RailgunTurret_C, AnimGraphNode_SequencePlayer_1) == 0x000730, "Member 'UABP_NPC_RailgunTurret_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_NPC_RailgunTurret_C, AnimGraphNode_StateResult_1) == 0x0007B0, "Member 'UABP_NPC_RailgunTurret_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UABP_NPC_RailgunTurret_C, AnimGraphNode_SequencePlayer) == 0x0007E8, "Member 'UABP_NPC_RailgunTurret_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UABP_NPC_RailgunTurret_C, AnimGraphNode_StateResult) == 0x000868, "Member 'UABP_NPC_RailgunTurret_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UABP_NPC_RailgunTurret_C, AnimGraphNode_StateMachine) == 0x0008A0, "Member 'UABP_NPC_RailgunTurret_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UABP_NPC_RailgunTurret_C, AnimGraphNode_Root) == 0x000950, "Member 'UABP_NPC_RailgunTurret_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_NPC_RailgunTurret_C, StaticRotation) == 0x000988, "Member 'UABP_NPC_RailgunTurret_C::StaticRotation' has a wrong offset!");
static_assert(offsetof(UABP_NPC_RailgunTurret_C, DeltaRotation_Base) == 0x000994, "Member 'UABP_NPC_RailgunTurret_C::DeltaRotation_Base' has a wrong offset!");
static_assert(offsetof(UABP_NPC_RailgunTurret_C, IsOffline) == 0x0009A0, "Member 'UABP_NPC_RailgunTurret_C::IsOffline' has a wrong offset!");
static_assert(offsetof(UABP_NPC_RailgunTurret_C, DeltaRotation_Top) == 0x0009A4, "Member 'UABP_NPC_RailgunTurret_C::DeltaRotation_Top' has a wrong offset!");
static_assert(offsetof(UABP_NPC_RailgunTurret_C, BaseAimRotation) == 0x0009B0, "Member 'UABP_NPC_RailgunTurret_C::BaseAimRotation' has a wrong offset!");

}

