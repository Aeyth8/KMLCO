#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GCA_SpaceJump

#include "Basic.hpp"

#include "GameplayAbilities_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GCA_SpaceJump.GCA_SpaceJump_C
// 0x0028 (0x02E8 - 0x02C0)
class AGCA_SpaceJump_C final : public AGameplayCueNotify_Actor
{
public:
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      OnePCharacterVFX;                                  // 0x02C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      Niagara1PEffect;                                   // 0x02D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      ThreePCharacterVFX;                                // 0x02D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      Debris_VFX;                                        // 0x02E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	bool WhileActive(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GCA_SpaceJump_C">();
	}
	static class AGCA_SpaceJump_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AGCA_SpaceJump_C>();
	}
};
static_assert(alignof(AGCA_SpaceJump_C) == 0x000008, "Wrong alignment on AGCA_SpaceJump_C");
static_assert(sizeof(AGCA_SpaceJump_C) == 0x0002E8, "Wrong size on AGCA_SpaceJump_C");
static_assert(offsetof(AGCA_SpaceJump_C, DefaultSceneRoot) == 0x0002C0, "Member 'AGCA_SpaceJump_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(AGCA_SpaceJump_C, OnePCharacterVFX) == 0x0002C8, "Member 'AGCA_SpaceJump_C::OnePCharacterVFX' has a wrong offset!");
static_assert(offsetof(AGCA_SpaceJump_C, Niagara1PEffect) == 0x0002D0, "Member 'AGCA_SpaceJump_C::Niagara1PEffect' has a wrong offset!");
static_assert(offsetof(AGCA_SpaceJump_C, ThreePCharacterVFX) == 0x0002D8, "Member 'AGCA_SpaceJump_C::ThreePCharacterVFX' has a wrong offset!");
static_assert(offsetof(AGCA_SpaceJump_C, Debris_VFX) == 0x0002E0, "Member 'AGCA_SpaceJump_C::Debris_VFX' has a wrong offset!");

}

