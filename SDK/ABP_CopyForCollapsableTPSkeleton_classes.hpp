#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_CopyForCollapsableTPSkeleton

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Keaton_classes.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_CopyForCollapsableTPSkeleton.ABP_CopyForCollapsableTPSkeleton_C
// 0x07C0 (0x0A80 - 0x02C0)
class UABP_CopyForCollapsableTPSkeleton_C final : public UCAAnimInstance
{
public:
	uint8                                         Pad_2B8[0x8];                                      // 0x02B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x02C8(0x0020)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_1;                        // 0x02E8(0x0110)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x03F8(0x0020)()
	struct FAnimNode_CopyPoseFromMesh             AnimGraphNode_CopyPoseFromMesh;                    // 0x0418(0x01D8)(ContainsInstancedReference)
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x05F0(0x0038)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone_2;                          // 0x0628(0x0100)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone;                          // 0x0728(0x0110)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone_1;                          // 0x0838(0x0100)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone;                            // 0x0938(0x0100)()
	class USkeletalMeshComponent*                 SourceMesh;                                        // 0x0A38(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SpineOffset;                                       // 0x0A40(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               AimRotationDelta;                                  // 0x0A4C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class ACACharacter_MainPlayer*                MainPlayer;                                        // 0x0A58(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SpineCorrectionScale;                              // 0x0A60(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HipShiftOffset;                                    // 0x0A64(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SlideSmoothed;                                     // 0x0A70(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_ABP_CopyForCollapsableTPSkeleton(int32 EntryPoint);
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void BlueprintBeginPlay();
	void AnimGraph(struct FPoseLink* AnimGraph_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_CopyForCollapsableTPSkeleton_C">();
	}
	static class UABP_CopyForCollapsableTPSkeleton_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_CopyForCollapsableTPSkeleton_C>();
	}
};
static_assert(alignof(UABP_CopyForCollapsableTPSkeleton_C) == 0x000010, "Wrong alignment on UABP_CopyForCollapsableTPSkeleton_C");
static_assert(sizeof(UABP_CopyForCollapsableTPSkeleton_C) == 0x000A80, "Wrong size on UABP_CopyForCollapsableTPSkeleton_C");
static_assert(offsetof(UABP_CopyForCollapsableTPSkeleton_C, UberGraphFrame) == 0x0002C0, "Member 'UABP_CopyForCollapsableTPSkeleton_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_CopyForCollapsableTPSkeleton_C, AnimGraphNode_LocalToComponentSpace) == 0x0002C8, "Member 'UABP_CopyForCollapsableTPSkeleton_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UABP_CopyForCollapsableTPSkeleton_C, AnimGraphNode_ModifyBone_1) == 0x0002E8, "Member 'UABP_CopyForCollapsableTPSkeleton_C::AnimGraphNode_ModifyBone_1' has a wrong offset!");
static_assert(offsetof(UABP_CopyForCollapsableTPSkeleton_C, AnimGraphNode_ComponentToLocalSpace) == 0x0003F8, "Member 'UABP_CopyForCollapsableTPSkeleton_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UABP_CopyForCollapsableTPSkeleton_C, AnimGraphNode_CopyPoseFromMesh) == 0x000418, "Member 'UABP_CopyForCollapsableTPSkeleton_C::AnimGraphNode_CopyPoseFromMesh' has a wrong offset!");
static_assert(offsetof(UABP_CopyForCollapsableTPSkeleton_C, AnimGraphNode_Root) == 0x0005F0, "Member 'UABP_CopyForCollapsableTPSkeleton_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_CopyForCollapsableTPSkeleton_C, AnimGraphNode_CopyBone_2) == 0x000628, "Member 'UABP_CopyForCollapsableTPSkeleton_C::AnimGraphNode_CopyBone_2' has a wrong offset!");
static_assert(offsetof(UABP_CopyForCollapsableTPSkeleton_C, AnimGraphNode_ModifyBone) == 0x000728, "Member 'UABP_CopyForCollapsableTPSkeleton_C::AnimGraphNode_ModifyBone' has a wrong offset!");
static_assert(offsetof(UABP_CopyForCollapsableTPSkeleton_C, AnimGraphNode_CopyBone_1) == 0x000838, "Member 'UABP_CopyForCollapsableTPSkeleton_C::AnimGraphNode_CopyBone_1' has a wrong offset!");
static_assert(offsetof(UABP_CopyForCollapsableTPSkeleton_C, AnimGraphNode_CopyBone) == 0x000938, "Member 'UABP_CopyForCollapsableTPSkeleton_C::AnimGraphNode_CopyBone' has a wrong offset!");
static_assert(offsetof(UABP_CopyForCollapsableTPSkeleton_C, SourceMesh) == 0x000A38, "Member 'UABP_CopyForCollapsableTPSkeleton_C::SourceMesh' has a wrong offset!");
static_assert(offsetof(UABP_CopyForCollapsableTPSkeleton_C, SpineOffset) == 0x000A40, "Member 'UABP_CopyForCollapsableTPSkeleton_C::SpineOffset' has a wrong offset!");
static_assert(offsetof(UABP_CopyForCollapsableTPSkeleton_C, AimRotationDelta) == 0x000A4C, "Member 'UABP_CopyForCollapsableTPSkeleton_C::AimRotationDelta' has a wrong offset!");
static_assert(offsetof(UABP_CopyForCollapsableTPSkeleton_C, MainPlayer) == 0x000A58, "Member 'UABP_CopyForCollapsableTPSkeleton_C::MainPlayer' has a wrong offset!");
static_assert(offsetof(UABP_CopyForCollapsableTPSkeleton_C, SpineCorrectionScale) == 0x000A60, "Member 'UABP_CopyForCollapsableTPSkeleton_C::SpineCorrectionScale' has a wrong offset!");
static_assert(offsetof(UABP_CopyForCollapsableTPSkeleton_C, HipShiftOffset) == 0x000A64, "Member 'UABP_CopyForCollapsableTPSkeleton_C::HipShiftOffset' has a wrong offset!");
static_assert(offsetof(UABP_CopyForCollapsableTPSkeleton_C, SlideSmoothed) == 0x000A70, "Member 'UABP_CopyForCollapsableTPSkeleton_C::SlideSmoothed' has a wrong offset!");

}

