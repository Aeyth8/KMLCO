#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Explosion_ExplosiveCanister

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Keaton_structs.hpp"
#include "Keaton_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Explosion_ExplosiveCanister.BP_Explosion_ExplosiveCanister_C
// 0x0048 (0x02A0 - 0x0258)
class ABP_Explosion_ExplosiveCanister_C final : public ACAExplosionEffect
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0258(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0260(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        AirParticle;                                       // 0x0268(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        AttatchedParticle;                                 // 0x0270(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        AirParticleZeroG;                                  // 0x0278(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        AttatchedParticleZeroG;                            // 0x0280(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GroundDistance;                                    // 0x0288(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_28C[0x4];                                      // 0x028C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FCAEmitterEnabledState>         NewVar_0;                                          // 0x0290(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void ExecuteUbergraph_BP_Explosion_ExplosiveCanister(int32 EntryPoint);
	void OnTrigger(const struct FVector& Epicenter, float Radius, bool Attached_to_surface, const struct FVector& Surface_normal, const struct FVector& Incoming_direction, bool Friendly, float Duration);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Explosion_ExplosiveCanister_C">();
	}
	static class ABP_Explosion_ExplosiveCanister_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Explosion_ExplosiveCanister_C>();
	}
};
static_assert(alignof(ABP_Explosion_ExplosiveCanister_C) == 0x000008, "Wrong alignment on ABP_Explosion_ExplosiveCanister_C");
static_assert(sizeof(ABP_Explosion_ExplosiveCanister_C) == 0x0002A0, "Wrong size on ABP_Explosion_ExplosiveCanister_C");
static_assert(offsetof(ABP_Explosion_ExplosiveCanister_C, UberGraphFrame) == 0x000258, "Member 'ABP_Explosion_ExplosiveCanister_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Explosion_ExplosiveCanister_C, DefaultSceneRoot) == 0x000260, "Member 'ABP_Explosion_ExplosiveCanister_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_Explosion_ExplosiveCanister_C, AirParticle) == 0x000268, "Member 'ABP_Explosion_ExplosiveCanister_C::AirParticle' has a wrong offset!");
static_assert(offsetof(ABP_Explosion_ExplosiveCanister_C, AttatchedParticle) == 0x000270, "Member 'ABP_Explosion_ExplosiveCanister_C::AttatchedParticle' has a wrong offset!");
static_assert(offsetof(ABP_Explosion_ExplosiveCanister_C, AirParticleZeroG) == 0x000278, "Member 'ABP_Explosion_ExplosiveCanister_C::AirParticleZeroG' has a wrong offset!");
static_assert(offsetof(ABP_Explosion_ExplosiveCanister_C, AttatchedParticleZeroG) == 0x000280, "Member 'ABP_Explosion_ExplosiveCanister_C::AttatchedParticleZeroG' has a wrong offset!");
static_assert(offsetof(ABP_Explosion_ExplosiveCanister_C, GroundDistance) == 0x000288, "Member 'ABP_Explosion_ExplosiveCanister_C::GroundDistance' has a wrong offset!");
static_assert(offsetof(ABP_Explosion_ExplosiveCanister_C, NewVar_0) == 0x000290, "Member 'ABP_Explosion_ExplosiveCanister_C::NewVar_0' has a wrong offset!");

}

