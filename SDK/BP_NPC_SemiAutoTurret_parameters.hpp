#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_NPC_SemiAutoTurret

#include "Basic.hpp"

#include "CAAudio_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "Keaton_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_NPC_SemiAutoTurret.BP_NPC_SemiAutoTurret_C.ExecuteUbergraph_BP_NPC_SemiAutoTurret
// 0x0758 (0x0758 - 0x0000)
struct BP_NPC_SemiAutoTurret_C_ExecuteUbergraph_BP_NPC_SemiAutoTurret final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FCAAudioEventType& Event_name)> Temp_delegate_Variable;                            // 0x0004(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0018(0x0014)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCAAudioPlaybackInstance               CallFunc_PlayEvent_playback_instance;              // 0x0030(0x0010)()
	bool                                          CallFunc_PlayEvent_play_success;                   // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0048(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class ACACharacter* Character, struct FGameplayEffectSpec& Death_gameplay_effect_spec, float Damage_magnitude, struct FNetworkedHit& Networked_hit, class AActor* Killer)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0060(0x0014)(ZeroConstructor, NoDestructor)
	struct FGameplayTag                           K2Node_Event_objective_loop_tag_1;                 // 0x0074(0x000C)(ConstParm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_Event_objective_loop_tag;                   // 0x0080(0x000C)(ConstParm, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACACharacter*                           K2Node_CustomEvent_character;                      // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectSpec                    K2Node_CustomEvent_death_gameplay_effect_spec;     // 0x0098(0x0298)(ConstParm)
	float                                         K2Node_CustomEvent_damage_magnitude;               // 0x0330(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_334[0x4];                                      // 0x0334(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FNetworkedHit                          K2Node_CustomEvent_networked_hit;                  // 0x0338(0x0068)(ConstParm, NoDestructor)
	const class AActor*                           K2Node_CustomEvent_killer;                         // 0x03A0(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue; // 0x03A8(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_starts_online;                        // 0x03B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_is_in_pool;                           // 0x03B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x03B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B3[0x1];                                      // 0x03B3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x03B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue; // 0x03B8(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue_1; // 0x03C0(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x03C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3CC[0x4];                                      // 0x03CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGameplayTag>                   K2Node_Event_messages;                             // 0x03D0(0x0010)(ConstParm, ReferenceParm)
	struct FCADamageEffectInfo                    K2Node_ComponentBoundEvent_damage_effect_info;     // 0x03E0(0x02F8)(ConstParm)
	struct FGameplayTag                           CallFunc_Array_Get_Item;                           // 0x06D8(0x000C)(NoDestructor, HasGetValueTypeHash)
	bool                                          GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess;   // 0x06E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_AreSameTeamID_ReturnValue;                // 0x06E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E6[0x2];                                      // 0x06E6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x06E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x06EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6ED[0x3];                                      // 0x06ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	const class ACAObjectiveLoop*                 K2Node_Event_objective_loop_1;                     // 0x06F0(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class ACAObjectiveLoop*                 K2Node_Event_objective_loop;                       // 0x06F8(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0700(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0704(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_705[0x3];                                      // 0x0705(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const struct FCAAudioEventType& Event_name)> Temp_delegate_Variable_1;                          // 0x0708(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	uint8                                         Pad_71C[0x4];                                      // 0x071C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCAAudioPlaybackInstance               CallFunc_PlayEvent_playback_instance_1;            // 0x0720(0x0010)()
	bool                                          CallFunc_PlayEvent_play_success_1;                 // 0x0730(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_731[0x7];                                      // 0x0731(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACAObjectiveLoop*                       CallFunc_Array_Get_Item_1;                         // 0x0738(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0740(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0744(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_745[0x3];                                      // 0x0745(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGameplayTag>                   K2Node_Event_objective_loops_ids;                  // 0x0748(0x0010)(ConstParm, ReferenceParm)
};
static_assert(alignof(BP_NPC_SemiAutoTurret_C_ExecuteUbergraph_BP_NPC_SemiAutoTurret) == 0x000008, "Wrong alignment on BP_NPC_SemiAutoTurret_C_ExecuteUbergraph_BP_NPC_SemiAutoTurret");
static_assert(sizeof(BP_NPC_SemiAutoTurret_C_ExecuteUbergraph_BP_NPC_SemiAutoTurret) == 0x000758, "Wrong size on BP_NPC_SemiAutoTurret_C_ExecuteUbergraph_BP_NPC_SemiAutoTurret");
static_assert(offsetof(BP_NPC_SemiAutoTurret_C_ExecuteUbergraph_BP_NPC_SemiAutoTurret, EntryPoint) == 0x000000, "Member 'BP_NPC_SemiAutoTurret_C_ExecuteUbergraph_BP_NPC_SemiAutoTurret::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_NPC_SemiAutoTurret_C_ExecuteUbergraph_BP_NPC_SemiAutoTurret, Temp_delegate_Variable) == 0x000004, "Member 'BP_NPC_SemiAutoTurret_C_ExecuteUbergraph_BP_NPC_SemiAutoTurret::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(BP_NPC_SemiAutoTurret_C_ExecuteUbergraph_BP_NPC_SemiAutoTurret, K2Node_CreateDelegate_OutputDelegate) == 0x000018, "Member 'BP_NPC_SemiAutoTurret_C_ExecuteUbergraph_BP_NPC_SemiAutoTurret::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_NPC_SemiAutoTurret_C_ExecuteUbergraph_BP_NPC_SemiAutoTurret, CallFunc_PlayEvent_playback_instance) == 0x000030, "Member 'BP_NPC_SemiAutoTurret_C_ExecuteUbergraph_BP_NPC_SemiAutoTurret::CallFunc_PlayEvent_playback_instance' has a wrong offset!");
static_assert(offsetof(BP_NPC_SemiAutoTurret_C_ExecuteUbergraph_BP_NPC_SemiAutoTurret, CallFunc_PlayEvent_play_success) == 0x000040, "Member 'BP_NPC_SemiAutoTurret_C_ExecuteUbergraph_BP_NPC_SemiAutoTurret::CallFunc_PlayEvent_play_success' has a wrong offset!");
static_assert(offsetof(BP_NPC_SemiAutoTurret_C_ExecuteUbergraph_BP_NPC_SemiAutoTurret, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000048, "Member 'BP_NPC_SemiAutoTurret_C_ExecuteUbergraph_BP_NPC_SemiAutoTurret::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_SemiAutoTurret_C_ExecuteUbergraph_BP_NPC_SemiAutoTurret, Temp_int_Array_Index_Variable) == 0x000050, "Member 'BP_NPC_SemiAutoTurret_C_ExecuteUbergraph_BP_NPC_SemiAutoTurret::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_NPC_SemiAutoTurret_C_ExecuteUbergraph_BP_NPC_SemiAutoTurret, Temp_int_Loop_Counter_Variable) == 0x000054, "Member 'BP_NPC_SemiAutoTurret_C_ExecuteUbergraph_BP_NPC_SemiAutoTurret::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_NPC_SemiAutoTurret_C_ExecuteUbergraph_BP_NPC_SemiAutoTurret, CallFunc_Add_IntInt_ReturnValue) == 0x000058, "Member 'BP_NPC_SemiAutoTurret_C_ExecuteUbergraph_BP_NPC_SemiAutoTurret::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_SemiAutoTurret_C_ExecuteUbergraph_BP_NPC_SemiAutoTurret, Temp_int_Array_Index_Variable_1) == 0x00005C, "Member 'BP_NPC_SemiAutoTurret_C_ExecuteUbergraph_BP_NPC_SemiAutoTurret::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_SemiAutoTurret_C_ExecuteUbergraph_BP_NPC_SemiAutoTurret, K2Node_CreateDelegate_OutputDelegate_1) == 0x000060, "Member 'BP_NPC_SemiAutoTurret_C_ExecuteUbergraph_BP_NPC_SemiAutoTurret::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_SemiAutoTurret_C_ExecuteUbergraph_BP_NPC_SemiAutoTurret, K2Node_Event_objective_loop_tag_1) == 0x000074, "Member 'BP_NPC_SemiAutoTurret_C_ExecuteUbergraph_BP_NPC_SemiAutoTurret::K2Node_Event_objective_loop_tag_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_SemiAutoTurret_C_ExecuteUbergraph_BP_NPC_SemiAutoTurret, K2Node_Event_objective_loop_tag) == 0x000080, "Member 'BP_NPC_SemiAutoTurret_C_ExecuteUbergraph_BP_NPC_SemiAutoTurret::K2Node_Event_objective_loop_tag' has a wrong offset!");
static_assert(offsetof(BP_NPC_SemiAutoTurret_C_ExecuteUbergraph_BP_NPC_SemiAutoTurret, K2Node_Event_DeltaSeconds) == 0x00008C, "Member 'BP_NPC_SemiAutoTurret_C_ExecuteUbergraph_BP_NPC_SemiAutoTurret::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_NPC_SemiAutoTurret_C_ExecuteUbergraph_BP_NPC_SemiAutoTurret, K2Node_CustomEvent_character) == 0x000090, "Member 'BP_NPC_SemiAutoTurret_C_ExecuteUbergraph_BP_NPC_SemiAutoTurret::K2Node_CustomEvent_character' has a wrong offset!");
static_assert(offsetof(BP_NPC_SemiAutoTurret_C_ExecuteUbergraph_BP_NPC_SemiAutoTurret, K2Node_CustomEvent_death_gameplay_effect_spec) == 0x000098, "Member 'BP_NPC_SemiAutoTurret_C_ExecuteUbergraph_BP_NPC_SemiAutoTurret::K2Node_CustomEvent_death_gameplay_effect_spec' has a wrong offset!");
static_assert(offsetof(BP_NPC_SemiAutoTurret_C_ExecuteUbergraph_BP_NPC_SemiAutoTurret, K2Node_CustomEvent_damage_magnitude) == 0x000330, "Member 'BP_NPC_SemiAutoTurret_C_ExecuteUbergraph_BP_NPC_SemiAutoTurret::K2Node_CustomEvent_damage_magnitude' has a wrong offset!");
static_assert(offsetof(BP_NPC_SemiAutoTurret_C_ExecuteUbergraph_BP_NPC_SemiAutoTurret, K2Node_CustomEvent_networked_hit) == 0x000338, "Member 'BP_NPC_SemiAutoTurret_C_ExecuteUbergraph_BP_NPC_SemiAutoTurret::K2Node_CustomEvent_networked_hit' has a wrong offset!");
static_assert(offsetof(BP_NPC_SemiAutoTurret_C_ExecuteUbergraph_BP_NPC_SemiAutoTurret, K2Node_CustomEvent_killer) == 0x0003A0, "Member 'BP_NPC_SemiAutoTurret_C_ExecuteUbergraph_BP_NPC_SemiAutoTurret::K2Node_CustomEvent_killer' has a wrong offset!");
static_assert(offsetof(BP_NPC_SemiAutoTurret_C_ExecuteUbergraph_BP_NPC_SemiAutoTurret, CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue) == 0x0003A8, "Member 'BP_NPC_SemiAutoTurret_C_ExecuteUbergraph_BP_NPC_SemiAutoTurret::CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_SemiAutoTurret_C_ExecuteUbergraph_BP_NPC_SemiAutoTurret, K2Node_Event_starts_online) == 0x0003B0, "Member 'BP_NPC_SemiAutoTurret_C_ExecuteUbergraph_BP_NPC_SemiAutoTurret::K2Node_Event_starts_online' has a wrong offset!");
static_assert(offsetof(BP_NPC_SemiAutoTurret_C_ExecuteUbergraph_BP_NPC_SemiAutoTurret, K2Node_Event_is_in_pool) == 0x0003B1, "Member 'BP_NPC_SemiAutoTurret_C_ExecuteUbergraph_BP_NPC_SemiAutoTurret::K2Node_Event_is_in_pool' has a wrong offset!");
static_assert(offsetof(BP_NPC_SemiAutoTurret_C_ExecuteUbergraph_BP_NPC_SemiAutoTurret, CallFunc_HasAuthority_ReturnValue) == 0x0003B2, "Member 'BP_NPC_SemiAutoTurret_C_ExecuteUbergraph_BP_NPC_SemiAutoTurret::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_SemiAutoTurret_C_ExecuteUbergraph_BP_NPC_SemiAutoTurret, Temp_int_Loop_Counter_Variable_1) == 0x0003B4, "Member 'BP_NPC_SemiAutoTurret_C_ExecuteUbergraph_BP_NPC_SemiAutoTurret::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_SemiAutoTurret_C_ExecuteUbergraph_BP_NPC_SemiAutoTurret, CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue) == 0x0003B8, "Member 'BP_NPC_SemiAutoTurret_C_ExecuteUbergraph_BP_NPC_SemiAutoTurret::CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_SemiAutoTurret_C_ExecuteUbergraph_BP_NPC_SemiAutoTurret, CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue_1) == 0x0003C0, "Member 'BP_NPC_SemiAutoTurret_C_ExecuteUbergraph_BP_NPC_SemiAutoTurret::CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_SemiAutoTurret_C_ExecuteUbergraph_BP_NPC_SemiAutoTurret, CallFunc_Add_IntInt_ReturnValue_1) == 0x0003C8, "Member 'BP_NPC_SemiAutoTurret_C_ExecuteUbergraph_BP_NPC_SemiAutoTurret::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_SemiAutoTurret_C_ExecuteUbergraph_BP_NPC_SemiAutoTurret, K2Node_Event_messages) == 0x0003D0, "Member 'BP_NPC_SemiAutoTurret_C_ExecuteUbergraph_BP_NPC_SemiAutoTurret::K2Node_Event_messages' has a wrong offset!");
static_assert(offsetof(BP_NPC_SemiAutoTurret_C_ExecuteUbergraph_BP_NPC_SemiAutoTurret, K2Node_ComponentBoundEvent_damage_effect_info) == 0x0003E0, "Member 'BP_NPC_SemiAutoTurret_C_ExecuteUbergraph_BP_NPC_SemiAutoTurret::K2Node_ComponentBoundEvent_damage_effect_info' has a wrong offset!");
static_assert(offsetof(BP_NPC_SemiAutoTurret_C_ExecuteUbergraph_BP_NPC_SemiAutoTurret, CallFunc_Array_Get_Item) == 0x0006D8, "Member 'BP_NPC_SemiAutoTurret_C_ExecuteUbergraph_BP_NPC_SemiAutoTurret::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_NPC_SemiAutoTurret_C_ExecuteUbergraph_BP_NPC_SemiAutoTurret, GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess) == 0x0006E4, "Member 'BP_NPC_SemiAutoTurret_C_ExecuteUbergraph_BP_NPC_SemiAutoTurret::GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_NPC_SemiAutoTurret_C_ExecuteUbergraph_BP_NPC_SemiAutoTurret, CallFunc_AreSameTeamID_ReturnValue) == 0x0006E5, "Member 'BP_NPC_SemiAutoTurret_C_ExecuteUbergraph_BP_NPC_SemiAutoTurret::CallFunc_AreSameTeamID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_SemiAutoTurret_C_ExecuteUbergraph_BP_NPC_SemiAutoTurret, CallFunc_Array_Length_ReturnValue) == 0x0006E8, "Member 'BP_NPC_SemiAutoTurret_C_ExecuteUbergraph_BP_NPC_SemiAutoTurret::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_SemiAutoTurret_C_ExecuteUbergraph_BP_NPC_SemiAutoTurret, CallFunc_Less_IntInt_ReturnValue) == 0x0006EC, "Member 'BP_NPC_SemiAutoTurret_C_ExecuteUbergraph_BP_NPC_SemiAutoTurret::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_SemiAutoTurret_C_ExecuteUbergraph_BP_NPC_SemiAutoTurret, K2Node_Event_objective_loop_1) == 0x0006F0, "Member 'BP_NPC_SemiAutoTurret_C_ExecuteUbergraph_BP_NPC_SemiAutoTurret::K2Node_Event_objective_loop_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_SemiAutoTurret_C_ExecuteUbergraph_BP_NPC_SemiAutoTurret, K2Node_Event_objective_loop) == 0x0006F8, "Member 'BP_NPC_SemiAutoTurret_C_ExecuteUbergraph_BP_NPC_SemiAutoTurret::K2Node_Event_objective_loop' has a wrong offset!");
static_assert(offsetof(BP_NPC_SemiAutoTurret_C_ExecuteUbergraph_BP_NPC_SemiAutoTurret, CallFunc_Array_AddUnique_ReturnValue) == 0x000700, "Member 'BP_NPC_SemiAutoTurret_C_ExecuteUbergraph_BP_NPC_SemiAutoTurret::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_SemiAutoTurret_C_ExecuteUbergraph_BP_NPC_SemiAutoTurret, CallFunc_Array_RemoveItem_ReturnValue) == 0x000704, "Member 'BP_NPC_SemiAutoTurret_C_ExecuteUbergraph_BP_NPC_SemiAutoTurret::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_SemiAutoTurret_C_ExecuteUbergraph_BP_NPC_SemiAutoTurret, Temp_delegate_Variable_1) == 0x000708, "Member 'BP_NPC_SemiAutoTurret_C_ExecuteUbergraph_BP_NPC_SemiAutoTurret::Temp_delegate_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_SemiAutoTurret_C_ExecuteUbergraph_BP_NPC_SemiAutoTurret, CallFunc_PlayEvent_playback_instance_1) == 0x000720, "Member 'BP_NPC_SemiAutoTurret_C_ExecuteUbergraph_BP_NPC_SemiAutoTurret::CallFunc_PlayEvent_playback_instance_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_SemiAutoTurret_C_ExecuteUbergraph_BP_NPC_SemiAutoTurret, CallFunc_PlayEvent_play_success_1) == 0x000730, "Member 'BP_NPC_SemiAutoTurret_C_ExecuteUbergraph_BP_NPC_SemiAutoTurret::CallFunc_PlayEvent_play_success_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_SemiAutoTurret_C_ExecuteUbergraph_BP_NPC_SemiAutoTurret, CallFunc_Array_Get_Item_1) == 0x000738, "Member 'BP_NPC_SemiAutoTurret_C_ExecuteUbergraph_BP_NPC_SemiAutoTurret::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_SemiAutoTurret_C_ExecuteUbergraph_BP_NPC_SemiAutoTurret, CallFunc_Array_Length_ReturnValue_1) == 0x000740, "Member 'BP_NPC_SemiAutoTurret_C_ExecuteUbergraph_BP_NPC_SemiAutoTurret::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_SemiAutoTurret_C_ExecuteUbergraph_BP_NPC_SemiAutoTurret, CallFunc_Less_IntInt_ReturnValue_1) == 0x000744, "Member 'BP_NPC_SemiAutoTurret_C_ExecuteUbergraph_BP_NPC_SemiAutoTurret::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_SemiAutoTurret_C_ExecuteUbergraph_BP_NPC_SemiAutoTurret, K2Node_Event_objective_loops_ids) == 0x000748, "Member 'BP_NPC_SemiAutoTurret_C_ExecuteUbergraph_BP_NPC_SemiAutoTurret::K2Node_Event_objective_loops_ids' has a wrong offset!");

// Function BP_NPC_SemiAutoTurret.BP_NPC_SemiAutoTurret_C.SetObjectiveLoopIds
// 0x0010 (0x0010 - 0x0000)
struct BP_NPC_SemiAutoTurret_C_SetObjectiveLoopIds final
{
public:
	TArray<struct FGameplayTag>                   Objective_loops_ids;                               // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_NPC_SemiAutoTurret_C_SetObjectiveLoopIds) == 0x000008, "Wrong alignment on BP_NPC_SemiAutoTurret_C_SetObjectiveLoopIds");
static_assert(sizeof(BP_NPC_SemiAutoTurret_C_SetObjectiveLoopIds) == 0x000010, "Wrong size on BP_NPC_SemiAutoTurret_C_SetObjectiveLoopIds");
static_assert(offsetof(BP_NPC_SemiAutoTurret_C_SetObjectiveLoopIds, Objective_loops_ids) == 0x000000, "Member 'BP_NPC_SemiAutoTurret_C_SetObjectiveLoopIds::Objective_loops_ids' has a wrong offset!");

// Function BP_NPC_SemiAutoTurret.BP_NPC_SemiAutoTurret_C.RemoveObjectiveLoopOwner
// 0x0008 (0x0008 - 0x0000)
struct BP_NPC_SemiAutoTurret_C_RemoveObjectiveLoopOwner final
{
public:
	const class ACAObjectiveLoop*                 Objective_loop;                                    // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPC_SemiAutoTurret_C_RemoveObjectiveLoopOwner) == 0x000008, "Wrong alignment on BP_NPC_SemiAutoTurret_C_RemoveObjectiveLoopOwner");
static_assert(sizeof(BP_NPC_SemiAutoTurret_C_RemoveObjectiveLoopOwner) == 0x000008, "Wrong size on BP_NPC_SemiAutoTurret_C_RemoveObjectiveLoopOwner");
static_assert(offsetof(BP_NPC_SemiAutoTurret_C_RemoveObjectiveLoopOwner, Objective_loop) == 0x000000, "Member 'BP_NPC_SemiAutoTurret_C_RemoveObjectiveLoopOwner::Objective_loop' has a wrong offset!");

// Function BP_NPC_SemiAutoTurret.BP_NPC_SemiAutoTurret_C.AddObjectiveLoopOwner
// 0x0008 (0x0008 - 0x0000)
struct BP_NPC_SemiAutoTurret_C_AddObjectiveLoopOwner final
{
public:
	const class ACAObjectiveLoop*                 Objective_loop;                                    // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPC_SemiAutoTurret_C_AddObjectiveLoopOwner) == 0x000008, "Wrong alignment on BP_NPC_SemiAutoTurret_C_AddObjectiveLoopOwner");
static_assert(sizeof(BP_NPC_SemiAutoTurret_C_AddObjectiveLoopOwner) == 0x000008, "Wrong size on BP_NPC_SemiAutoTurret_C_AddObjectiveLoopOwner");
static_assert(offsetof(BP_NPC_SemiAutoTurret_C_AddObjectiveLoopOwner, Objective_loop) == 0x000000, "Member 'BP_NPC_SemiAutoTurret_C_AddObjectiveLoopOwner::Objective_loop' has a wrong offset!");

// Function BP_NPC_SemiAutoTurret.BP_NPC_SemiAutoTurret_C.BndEvt__BP_NPC_RailgunTurret_m_ability_system_component_K2Node_ComponentBoundEvent_0_OnHitReceived__DelegateSignature
// 0x02F8 (0x02F8 - 0x0000)
struct BP_NPC_SemiAutoTurret_C_BndEvt__BP_NPC_RailgunTurret_m_ability_system_component_K2Node_ComponentBoundEvent_0_OnHitReceived__DelegateSignature final
{
public:
	struct FCADamageEffectInfo                    Damage_effect_info;                                // 0x0000(0x02F8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_NPC_SemiAutoTurret_C_BndEvt__BP_NPC_RailgunTurret_m_ability_system_component_K2Node_ComponentBoundEvent_0_OnHitReceived__DelegateSignature) == 0x000008, "Wrong alignment on BP_NPC_SemiAutoTurret_C_BndEvt__BP_NPC_RailgunTurret_m_ability_system_component_K2Node_ComponentBoundEvent_0_OnHitReceived__DelegateSignature");
static_assert(sizeof(BP_NPC_SemiAutoTurret_C_BndEvt__BP_NPC_RailgunTurret_m_ability_system_component_K2Node_ComponentBoundEvent_0_OnHitReceived__DelegateSignature) == 0x0002F8, "Wrong size on BP_NPC_SemiAutoTurret_C_BndEvt__BP_NPC_RailgunTurret_m_ability_system_component_K2Node_ComponentBoundEvent_0_OnHitReceived__DelegateSignature");
static_assert(offsetof(BP_NPC_SemiAutoTurret_C_BndEvt__BP_NPC_RailgunTurret_m_ability_system_component_K2Node_ComponentBoundEvent_0_OnHitReceived__DelegateSignature, Damage_effect_info) == 0x000000, "Member 'BP_NPC_SemiAutoTurret_C_BndEvt__BP_NPC_RailgunTurret_m_ability_system_component_K2Node_ComponentBoundEvent_0_OnHitReceived__DelegateSignature::Damage_effect_info' has a wrong offset!");

// Function BP_NPC_SemiAutoTurret.BP_NPC_SemiAutoTurret_C.OnMesssagesFromObjectiveLoopReceived
// 0x0010 (0x0010 - 0x0000)
struct BP_NPC_SemiAutoTurret_C_OnMesssagesFromObjectiveLoopReceived final
{
public:
	TArray<struct FGameplayTag>                   Messages;                                          // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_NPC_SemiAutoTurret_C_OnMesssagesFromObjectiveLoopReceived) == 0x000008, "Wrong alignment on BP_NPC_SemiAutoTurret_C_OnMesssagesFromObjectiveLoopReceived");
static_assert(sizeof(BP_NPC_SemiAutoTurret_C_OnMesssagesFromObjectiveLoopReceived) == 0x000010, "Wrong size on BP_NPC_SemiAutoTurret_C_OnMesssagesFromObjectiveLoopReceived");
static_assert(offsetof(BP_NPC_SemiAutoTurret_C_OnMesssagesFromObjectiveLoopReceived, Messages) == 0x000000, "Member 'BP_NPC_SemiAutoTurret_C_OnMesssagesFromObjectiveLoopReceived::Messages' has a wrong offset!");

// Function BP_NPC_SemiAutoTurret.BP_NPC_SemiAutoTurret_C.OnPoolStatusChanged
// 0x0001 (0x0001 - 0x0000)
struct BP_NPC_SemiAutoTurret_C_OnPoolStatusChanged final
{
public:
	bool                                          Is_in_pool;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_NPC_SemiAutoTurret_C_OnPoolStatusChanged) == 0x000001, "Wrong alignment on BP_NPC_SemiAutoTurret_C_OnPoolStatusChanged");
static_assert(sizeof(BP_NPC_SemiAutoTurret_C_OnPoolStatusChanged) == 0x000001, "Wrong size on BP_NPC_SemiAutoTurret_C_OnPoolStatusChanged");
static_assert(offsetof(BP_NPC_SemiAutoTurret_C_OnPoolStatusChanged, Is_in_pool) == 0x000000, "Member 'BP_NPC_SemiAutoTurret_C_OnPoolStatusChanged::Is_in_pool' has a wrong offset!");

// Function BP_NPC_SemiAutoTurret.BP_NPC_SemiAutoTurret_C.SetStartsOnline
// 0x0001 (0x0001 - 0x0000)
struct BP_NPC_SemiAutoTurret_C_SetStartsOnline final
{
public:
	bool                                          Starts_online;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_NPC_SemiAutoTurret_C_SetStartsOnline) == 0x000001, "Wrong alignment on BP_NPC_SemiAutoTurret_C_SetStartsOnline");
static_assert(sizeof(BP_NPC_SemiAutoTurret_C_SetStartsOnline) == 0x000001, "Wrong size on BP_NPC_SemiAutoTurret_C_SetStartsOnline");
static_assert(offsetof(BP_NPC_SemiAutoTurret_C_SetStartsOnline, Starts_online) == 0x000000, "Member 'BP_NPC_SemiAutoTurret_C_SetStartsOnline::Starts_online' has a wrong offset!");

// Function BP_NPC_SemiAutoTurret.BP_NPC_SemiAutoTurret_C.Death stop sound event
// 0x0318 (0x0318 - 0x0000)
struct BP_NPC_SemiAutoTurret_C_Death_stop_sound_event final
{
public:
	class ACACharacter*                           Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectSpec                    Death_gameplay_effect_spec;                        // 0x0008(0x0298)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	float                                         Damage_magnitude;                                  // 0x02A0(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A4[0x4];                                      // 0x02A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FNetworkedHit                          Networked_hit;                                     // 0x02A8(0x0068)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	const class AActor*                           Killer;                                            // 0x0310(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPC_SemiAutoTurret_C_Death_stop_sound_event) == 0x000008, "Wrong alignment on BP_NPC_SemiAutoTurret_C_Death_stop_sound_event");
static_assert(sizeof(BP_NPC_SemiAutoTurret_C_Death_stop_sound_event) == 0x000318, "Wrong size on BP_NPC_SemiAutoTurret_C_Death_stop_sound_event");
static_assert(offsetof(BP_NPC_SemiAutoTurret_C_Death_stop_sound_event, Character) == 0x000000, "Member 'BP_NPC_SemiAutoTurret_C_Death_stop_sound_event::Character' has a wrong offset!");
static_assert(offsetof(BP_NPC_SemiAutoTurret_C_Death_stop_sound_event, Death_gameplay_effect_spec) == 0x000008, "Member 'BP_NPC_SemiAutoTurret_C_Death_stop_sound_event::Death_gameplay_effect_spec' has a wrong offset!");
static_assert(offsetof(BP_NPC_SemiAutoTurret_C_Death_stop_sound_event, Damage_magnitude) == 0x0002A0, "Member 'BP_NPC_SemiAutoTurret_C_Death_stop_sound_event::Damage_magnitude' has a wrong offset!");
static_assert(offsetof(BP_NPC_SemiAutoTurret_C_Death_stop_sound_event, Networked_hit) == 0x0002A8, "Member 'BP_NPC_SemiAutoTurret_C_Death_stop_sound_event::Networked_hit' has a wrong offset!");
static_assert(offsetof(BP_NPC_SemiAutoTurret_C_Death_stop_sound_event, Killer) == 0x000310, "Member 'BP_NPC_SemiAutoTurret_C_Death_stop_sound_event::Killer' has a wrong offset!");

// Function BP_NPC_SemiAutoTurret.BP_NPC_SemiAutoTurret_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_NPC_SemiAutoTurret_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPC_SemiAutoTurret_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_NPC_SemiAutoTurret_C_ReceiveTick");
static_assert(sizeof(BP_NPC_SemiAutoTurret_C_ReceiveTick) == 0x000004, "Wrong size on BP_NPC_SemiAutoTurret_C_ReceiveTick");
static_assert(offsetof(BP_NPC_SemiAutoTurret_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_NPC_SemiAutoTurret_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_NPC_SemiAutoTurret.BP_NPC_SemiAutoTurret_C.RemoveObjectiveLoopId
// 0x000C (0x000C - 0x0000)
struct BP_NPC_SemiAutoTurret_C_RemoveObjectiveLoopId final
{
public:
	struct FGameplayTag                           Objective_loop_tag;                                // 0x0000(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPC_SemiAutoTurret_C_RemoveObjectiveLoopId) == 0x000004, "Wrong alignment on BP_NPC_SemiAutoTurret_C_RemoveObjectiveLoopId");
static_assert(sizeof(BP_NPC_SemiAutoTurret_C_RemoveObjectiveLoopId) == 0x00000C, "Wrong size on BP_NPC_SemiAutoTurret_C_RemoveObjectiveLoopId");
static_assert(offsetof(BP_NPC_SemiAutoTurret_C_RemoveObjectiveLoopId, Objective_loop_tag) == 0x000000, "Member 'BP_NPC_SemiAutoTurret_C_RemoveObjectiveLoopId::Objective_loop_tag' has a wrong offset!");

// Function BP_NPC_SemiAutoTurret.BP_NPC_SemiAutoTurret_C.AddObjectiveLoopId
// 0x000C (0x000C - 0x0000)
struct BP_NPC_SemiAutoTurret_C_AddObjectiveLoopId final
{
public:
	struct FGameplayTag                           Objective_loop_tag;                                // 0x0000(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPC_SemiAutoTurret_C_AddObjectiveLoopId) == 0x000004, "Wrong alignment on BP_NPC_SemiAutoTurret_C_AddObjectiveLoopId");
static_assert(sizeof(BP_NPC_SemiAutoTurret_C_AddObjectiveLoopId) == 0x00000C, "Wrong size on BP_NPC_SemiAutoTurret_C_AddObjectiveLoopId");
static_assert(offsetof(BP_NPC_SemiAutoTurret_C_AddObjectiveLoopId, Objective_loop_tag) == 0x000000, "Member 'BP_NPC_SemiAutoTurret_C_AddObjectiveLoopId::Objective_loop_tag' has a wrong offset!");

// Function BP_NPC_SemiAutoTurret.BP_NPC_SemiAutoTurret_C.GetObjectiveLoopIds
// 0x0010 (0x0010 - 0x0000)
struct BP_NPC_SemiAutoTurret_C_GetObjectiveLoopIds final
{
public:
	TArray<struct FGameplayTag>                   Out_objective_loop_ids;                            // 0x0000(0x0010)(Parm, OutParm)
};
static_assert(alignof(BP_NPC_SemiAutoTurret_C_GetObjectiveLoopIds) == 0x000008, "Wrong alignment on BP_NPC_SemiAutoTurret_C_GetObjectiveLoopIds");
static_assert(sizeof(BP_NPC_SemiAutoTurret_C_GetObjectiveLoopIds) == 0x000010, "Wrong size on BP_NPC_SemiAutoTurret_C_GetObjectiveLoopIds");
static_assert(offsetof(BP_NPC_SemiAutoTurret_C_GetObjectiveLoopIds, Out_objective_loop_ids) == 0x000000, "Member 'BP_NPC_SemiAutoTurret_C_GetObjectiveLoopIds::Out_objective_loop_ids' has a wrong offset!");

// Function BP_NPC_SemiAutoTurret.BP_NPC_SemiAutoTurret_C.IsAssignedToObjectiveLoop
// 0x0010 (0x0010 - 0x0000)
struct BP_NPC_SemiAutoTurret_C_IsAssignedToObjectiveLoop final
{
public:
	struct FGameplayTag                           Objective_loop_tag;                                // 0x0000(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_NPC_SemiAutoTurret_C_IsAssignedToObjectiveLoop) == 0x000004, "Wrong alignment on BP_NPC_SemiAutoTurret_C_IsAssignedToObjectiveLoop");
static_assert(sizeof(BP_NPC_SemiAutoTurret_C_IsAssignedToObjectiveLoop) == 0x000010, "Wrong size on BP_NPC_SemiAutoTurret_C_IsAssignedToObjectiveLoop");
static_assert(offsetof(BP_NPC_SemiAutoTurret_C_IsAssignedToObjectiveLoop, Objective_loop_tag) == 0x000000, "Member 'BP_NPC_SemiAutoTurret_C_IsAssignedToObjectiveLoop::Objective_loop_tag' has a wrong offset!");
static_assert(offsetof(BP_NPC_SemiAutoTurret_C_IsAssignedToObjectiveLoop, ReturnValue) == 0x00000C, "Member 'BP_NPC_SemiAutoTurret_C_IsAssignedToObjectiveLoop::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_SemiAutoTurret_C_IsAssignedToObjectiveLoop, CallFunc_Array_Contains_ReturnValue) == 0x00000D, "Member 'BP_NPC_SemiAutoTurret_C_IsAssignedToObjectiveLoop::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");

// Function BP_NPC_SemiAutoTurret.BP_NPC_SemiAutoTurret_C.IsAssignedToAnyObjectiveLoop
// 0x000C (0x000C - 0x0000)
struct BP_NPC_SemiAutoTurret_C_IsAssignedToAnyObjectiveLoop final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_NPC_SemiAutoTurret_C_IsAssignedToAnyObjectiveLoop) == 0x000004, "Wrong alignment on BP_NPC_SemiAutoTurret_C_IsAssignedToAnyObjectiveLoop");
static_assert(sizeof(BP_NPC_SemiAutoTurret_C_IsAssignedToAnyObjectiveLoop) == 0x00000C, "Wrong size on BP_NPC_SemiAutoTurret_C_IsAssignedToAnyObjectiveLoop");
static_assert(offsetof(BP_NPC_SemiAutoTurret_C_IsAssignedToAnyObjectiveLoop, ReturnValue) == 0x000000, "Member 'BP_NPC_SemiAutoTurret_C_IsAssignedToAnyObjectiveLoop::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_SemiAutoTurret_C_IsAssignedToAnyObjectiveLoop, CallFunc_Array_Length_ReturnValue) == 0x000004, "Member 'BP_NPC_SemiAutoTurret_C_IsAssignedToAnyObjectiveLoop::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_SemiAutoTurret_C_IsAssignedToAnyObjectiveLoop, CallFunc_Greater_IntInt_ReturnValue) == 0x000008, "Member 'BP_NPC_SemiAutoTurret_C_IsAssignedToAnyObjectiveLoop::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

}

