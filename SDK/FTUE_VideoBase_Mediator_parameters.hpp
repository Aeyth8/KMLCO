#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FTUE_VideoBase_Mediator

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function FTUE_VideoBase_Mediator.FTUE_VideoBase_Mediator_C.ExecuteUbergraph_FTUE_VideoBase_Mediator
// 0x00F0 (0x00F0 - 0x0000)
struct FTUE_VideoBase_Mediator_C_ExecuteUbergraph_FTUE_VideoBase_Mediator final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0014)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0018(0x0014)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_Event_client;                               // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFullSizeVideo_Screen_C*                K2Node_DynamicCast_AsFull_Size_Video_Screen;       // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDataTableRowHandle                    K2Node_CustomEvent_handle;                         // 0x0048(0x0018)(ConstParm, NoDestructor)
	bool                                          K2Node_CustomEvent_InLooping;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UBinkMediaSource>        CallFunc_GetMediaSource_ReturnValue;               // 0x0068(0x0030)(UObjectWrapper, HasGetValueTypeHash)
	TSoftObjectPtr<class UObject>                 K2Node_CustomEvent_MediaSource;                    // 0x0098(0x0030)(ConstParm, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsLooping;                      // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CA[0x6];                                       // 0x00CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Temp_object_Variable;                              // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBinkMediaSource*                       K2Node_DynamicCast_AsBink_Media_Source;            // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded;                         // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FTUE_VideoBase_Mediator_C_ExecuteUbergraph_FTUE_VideoBase_Mediator) == 0x000008, "Wrong alignment on FTUE_VideoBase_Mediator_C_ExecuteUbergraph_FTUE_VideoBase_Mediator");
static_assert(sizeof(FTUE_VideoBase_Mediator_C_ExecuteUbergraph_FTUE_VideoBase_Mediator) == 0x0000F0, "Wrong size on FTUE_VideoBase_Mediator_C_ExecuteUbergraph_FTUE_VideoBase_Mediator");
static_assert(offsetof(FTUE_VideoBase_Mediator_C_ExecuteUbergraph_FTUE_VideoBase_Mediator, EntryPoint) == 0x000000, "Member 'FTUE_VideoBase_Mediator_C_ExecuteUbergraph_FTUE_VideoBase_Mediator::EntryPoint' has a wrong offset!");
static_assert(offsetof(FTUE_VideoBase_Mediator_C_ExecuteUbergraph_FTUE_VideoBase_Mediator, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'FTUE_VideoBase_Mediator_C_ExecuteUbergraph_FTUE_VideoBase_Mediator::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(FTUE_VideoBase_Mediator_C_ExecuteUbergraph_FTUE_VideoBase_Mediator, K2Node_CreateDelegate_OutputDelegate_1) == 0x000018, "Member 'FTUE_VideoBase_Mediator_C_ExecuteUbergraph_FTUE_VideoBase_Mediator::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(FTUE_VideoBase_Mediator_C_ExecuteUbergraph_FTUE_VideoBase_Mediator, K2Node_Event_client) == 0x000030, "Member 'FTUE_VideoBase_Mediator_C_ExecuteUbergraph_FTUE_VideoBase_Mediator::K2Node_Event_client' has a wrong offset!");
static_assert(offsetof(FTUE_VideoBase_Mediator_C_ExecuteUbergraph_FTUE_VideoBase_Mediator, K2Node_DynamicCast_AsFull_Size_Video_Screen) == 0x000038, "Member 'FTUE_VideoBase_Mediator_C_ExecuteUbergraph_FTUE_VideoBase_Mediator::K2Node_DynamicCast_AsFull_Size_Video_Screen' has a wrong offset!");
static_assert(offsetof(FTUE_VideoBase_Mediator_C_ExecuteUbergraph_FTUE_VideoBase_Mediator, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'FTUE_VideoBase_Mediator_C_ExecuteUbergraph_FTUE_VideoBase_Mediator::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(FTUE_VideoBase_Mediator_C_ExecuteUbergraph_FTUE_VideoBase_Mediator, K2Node_CustomEvent_handle) == 0x000048, "Member 'FTUE_VideoBase_Mediator_C_ExecuteUbergraph_FTUE_VideoBase_Mediator::K2Node_CustomEvent_handle' has a wrong offset!");
static_assert(offsetof(FTUE_VideoBase_Mediator_C_ExecuteUbergraph_FTUE_VideoBase_Mediator, K2Node_CustomEvent_InLooping) == 0x000060, "Member 'FTUE_VideoBase_Mediator_C_ExecuteUbergraph_FTUE_VideoBase_Mediator::K2Node_CustomEvent_InLooping' has a wrong offset!");
static_assert(offsetof(FTUE_VideoBase_Mediator_C_ExecuteUbergraph_FTUE_VideoBase_Mediator, CallFunc_GetMediaSource_ReturnValue) == 0x000068, "Member 'FTUE_VideoBase_Mediator_C_ExecuteUbergraph_FTUE_VideoBase_Mediator::CallFunc_GetMediaSource_ReturnValue' has a wrong offset!");
static_assert(offsetof(FTUE_VideoBase_Mediator_C_ExecuteUbergraph_FTUE_VideoBase_Mediator, K2Node_CustomEvent_MediaSource) == 0x000098, "Member 'FTUE_VideoBase_Mediator_C_ExecuteUbergraph_FTUE_VideoBase_Mediator::K2Node_CustomEvent_MediaSource' has a wrong offset!");
static_assert(offsetof(FTUE_VideoBase_Mediator_C_ExecuteUbergraph_FTUE_VideoBase_Mediator, K2Node_CustomEvent_IsLooping) == 0x0000C8, "Member 'FTUE_VideoBase_Mediator_C_ExecuteUbergraph_FTUE_VideoBase_Mediator::K2Node_CustomEvent_IsLooping' has a wrong offset!");
static_assert(offsetof(FTUE_VideoBase_Mediator_C_ExecuteUbergraph_FTUE_VideoBase_Mediator, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x0000C9, "Member 'FTUE_VideoBase_Mediator_C_ExecuteUbergraph_FTUE_VideoBase_Mediator::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(FTUE_VideoBase_Mediator_C_ExecuteUbergraph_FTUE_VideoBase_Mediator, Temp_object_Variable) == 0x0000D0, "Member 'FTUE_VideoBase_Mediator_C_ExecuteUbergraph_FTUE_VideoBase_Mediator::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(FTUE_VideoBase_Mediator_C_ExecuteUbergraph_FTUE_VideoBase_Mediator, K2Node_DynamicCast_AsBink_Media_Source) == 0x0000D8, "Member 'FTUE_VideoBase_Mediator_C_ExecuteUbergraph_FTUE_VideoBase_Mediator::K2Node_DynamicCast_AsBink_Media_Source' has a wrong offset!");
static_assert(offsetof(FTUE_VideoBase_Mediator_C_ExecuteUbergraph_FTUE_VideoBase_Mediator, K2Node_DynamicCast_bSuccess_1) == 0x0000E0, "Member 'FTUE_VideoBase_Mediator_C_ExecuteUbergraph_FTUE_VideoBase_Mediator::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(FTUE_VideoBase_Mediator_C_ExecuteUbergraph_FTUE_VideoBase_Mediator, K2Node_CustomEvent_Loaded) == 0x0000E8, "Member 'FTUE_VideoBase_Mediator_C_ExecuteUbergraph_FTUE_VideoBase_Mediator::K2Node_CustomEvent_Loaded' has a wrong offset!");

// Function FTUE_VideoBase_Mediator.FTUE_VideoBase_Mediator_C.PlayFromMediaSource
// 0x0038 (0x0038 - 0x0000)
struct FTUE_VideoBase_Mediator_C_PlayFromMediaSource final
{
public:
	TSoftObjectPtr<class UObject>                 MediaSource;                                       // 0x0000(0x0030)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, UObjectWrapper, HasGetValueTypeHash)
	bool                                          IsLooping;                                         // 0x0030(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FTUE_VideoBase_Mediator_C_PlayFromMediaSource) == 0x000008, "Wrong alignment on FTUE_VideoBase_Mediator_C_PlayFromMediaSource");
static_assert(sizeof(FTUE_VideoBase_Mediator_C_PlayFromMediaSource) == 0x000038, "Wrong size on FTUE_VideoBase_Mediator_C_PlayFromMediaSource");
static_assert(offsetof(FTUE_VideoBase_Mediator_C_PlayFromMediaSource, MediaSource) == 0x000000, "Member 'FTUE_VideoBase_Mediator_C_PlayFromMediaSource::MediaSource' has a wrong offset!");
static_assert(offsetof(FTUE_VideoBase_Mediator_C_PlayFromMediaSource, IsLooping) == 0x000030, "Member 'FTUE_VideoBase_Mediator_C_PlayFromMediaSource::IsLooping' has a wrong offset!");

// Function FTUE_VideoBase_Mediator.FTUE_VideoBase_Mediator_C.PlayFromHandle
// 0x0020 (0x0020 - 0x0000)
struct FTUE_VideoBase_Mediator_C_PlayFromHandle final
{
public:
	struct FDataTableRowHandle                    Handle;                                            // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	bool                                          InLooping;                                         // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FTUE_VideoBase_Mediator_C_PlayFromHandle) == 0x000008, "Wrong alignment on FTUE_VideoBase_Mediator_C_PlayFromHandle");
static_assert(sizeof(FTUE_VideoBase_Mediator_C_PlayFromHandle) == 0x000020, "Wrong size on FTUE_VideoBase_Mediator_C_PlayFromHandle");
static_assert(offsetof(FTUE_VideoBase_Mediator_C_PlayFromHandle, Handle) == 0x000000, "Member 'FTUE_VideoBase_Mediator_C_PlayFromHandle::Handle' has a wrong offset!");
static_assert(offsetof(FTUE_VideoBase_Mediator_C_PlayFromHandle, InLooping) == 0x000018, "Member 'FTUE_VideoBase_Mediator_C_PlayFromHandle::InLooping' has a wrong offset!");

// Function FTUE_VideoBase_Mediator.FTUE_VideoBase_Mediator_C.SetClient
// 0x0008 (0x0008 - 0x0000)
struct FTUE_VideoBase_Mediator_C_SetClient final
{
public:
	class UObject*                                Client_0;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FTUE_VideoBase_Mediator_C_SetClient) == 0x000008, "Wrong alignment on FTUE_VideoBase_Mediator_C_SetClient");
static_assert(sizeof(FTUE_VideoBase_Mediator_C_SetClient) == 0x000008, "Wrong size on FTUE_VideoBase_Mediator_C_SetClient");
static_assert(offsetof(FTUE_VideoBase_Mediator_C_SetClient, Client_0) == 0x000000, "Member 'FTUE_VideoBase_Mediator_C_SetClient::Client_0' has a wrong offset!");

// Function FTUE_VideoBase_Mediator.FTUE_VideoBase_Mediator_C.OnLoaded_C018DCFB4ECF6EA14DAAED9187AC010D
// 0x0008 (0x0008 - 0x0000)
struct FTUE_VideoBase_Mediator_C_OnLoaded_C018DCFB4ECF6EA14DAAED9187AC010D final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FTUE_VideoBase_Mediator_C_OnLoaded_C018DCFB4ECF6EA14DAAED9187AC010D) == 0x000008, "Wrong alignment on FTUE_VideoBase_Mediator_C_OnLoaded_C018DCFB4ECF6EA14DAAED9187AC010D");
static_assert(sizeof(FTUE_VideoBase_Mediator_C_OnLoaded_C018DCFB4ECF6EA14DAAED9187AC010D) == 0x000008, "Wrong size on FTUE_VideoBase_Mediator_C_OnLoaded_C018DCFB4ECF6EA14DAAED9187AC010D");
static_assert(offsetof(FTUE_VideoBase_Mediator_C_OnLoaded_C018DCFB4ECF6EA14DAAED9187AC010D, Loaded) == 0x000000, "Member 'FTUE_VideoBase_Mediator_C_OnLoaded_C018DCFB4ECF6EA14DAAED9187AC010D::Loaded' has a wrong offset!");

}

