#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: KtnFunctions_Math

#include "Basic.hpp"

#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass KtnFunctions_Math.KtnFunctions_Math_C
// 0x0000 (0x0030 - 0x0030)
class UKtnFunctions_Math_C final : public UBlueprintFunctionLibrary
{
public:
	static void Clamp1f(float Input, class UObject* __WorldContext, float* Output);
	static void Minus1f(float Input, class UObject* __WorldContext, float* Output);
	static float OnepCamDot(class USceneComponent* Camera, class AActor* Target, class UObject* __WorldContext);
	static void DistanceBetweenVectors(const struct FVector& Source, const struct FVector& Target, class UObject* __WorldContext, float* Result);
	static void DistanceBetweenActors(class AActor* Source, class AActor* Target, class UObject* __WorldContext, float* Result);
	static void ClampToMinMax(float Value, struct FSMinMax& SMinMax, class UObject* __WorldContext, float* Result);
	static void ClampVec2dToMinMax(struct FVector2D& InVec, const struct FSMinMax& MinMaxX, const struct FSMinMax& MinMaxY, class UObject* __WorldContext);
	static void ScaleMinMax(const struct FSMinMax& Value, float Scalar, class UObject* __WorldContext, struct FSMinMax* Result);
	static void ApplyRotatorToForwardVector(const struct FVector& ForwardVector, const struct FRotator& Rotator, class UObject* __WorldContext, struct FVector* Result);
	static void GetPitchFromTwoVectors(const struct FVector& A, const struct FVector& B, class UObject* __WorldContext, float* Pitch);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"KtnFunctions_Math_C">();
	}
	static class UKtnFunctions_Math_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UKtnFunctions_Math_C>();
	}
};
static_assert(alignof(UKtnFunctions_Math_C) == 0x000008, "Wrong alignment on UKtnFunctions_Math_C");
static_assert(sizeof(UKtnFunctions_Math_C) == 0x000030, "Wrong size on UKtnFunctions_Math_C");

}

