#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SwitchStateMachine

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_SwitchStateMachine.BP_SwitchStateMachine_C.ExecuteUbergraph_BP_SwitchStateMachine
// 0x00B0 (0x00B0 - 0x0000)
struct BP_SwitchStateMachine_C_ExecuteUbergraph_BP_SwitchStateMachine final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0014)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0018(0x0014)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x002C(0x0014)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x0040(0x0014)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_4;            // 0x0054(0x0014)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_5;            // 0x0068(0x0014)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCAFiniteState*                         CallFunc_GetStateByName_ReturnValue;               // 0x0080(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCAFiniteState*                         CallFunc_GetStateByName_ReturnValue_1;             // 0x0088(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCAFiniteState*                         CallFunc_GetStateByName_ReturnValue_2;             // 0x0090(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCAFiniteState*                         CallFunc_GetStateByName_ReturnValue_3;             // 0x0098(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCAFiniteState*                         CallFunc_GetStateByName_ReturnValue_4;             // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCAFiniteState*                         CallFunc_GetStateByName_ReturnValue_5;             // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SwitchStateMachine_C_ExecuteUbergraph_BP_SwitchStateMachine) == 0x000008, "Wrong alignment on BP_SwitchStateMachine_C_ExecuteUbergraph_BP_SwitchStateMachine");
static_assert(sizeof(BP_SwitchStateMachine_C_ExecuteUbergraph_BP_SwitchStateMachine) == 0x0000B0, "Wrong size on BP_SwitchStateMachine_C_ExecuteUbergraph_BP_SwitchStateMachine");
static_assert(offsetof(BP_SwitchStateMachine_C_ExecuteUbergraph_BP_SwitchStateMachine, EntryPoint) == 0x000000, "Member 'BP_SwitchStateMachine_C_ExecuteUbergraph_BP_SwitchStateMachine::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_SwitchStateMachine_C_ExecuteUbergraph_BP_SwitchStateMachine, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'BP_SwitchStateMachine_C_ExecuteUbergraph_BP_SwitchStateMachine::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_SwitchStateMachine_C_ExecuteUbergraph_BP_SwitchStateMachine, K2Node_CreateDelegate_OutputDelegate_1) == 0x000018, "Member 'BP_SwitchStateMachine_C_ExecuteUbergraph_BP_SwitchStateMachine::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_SwitchStateMachine_C_ExecuteUbergraph_BP_SwitchStateMachine, K2Node_CreateDelegate_OutputDelegate_2) == 0x00002C, "Member 'BP_SwitchStateMachine_C_ExecuteUbergraph_BP_SwitchStateMachine::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_SwitchStateMachine_C_ExecuteUbergraph_BP_SwitchStateMachine, K2Node_CreateDelegate_OutputDelegate_3) == 0x000040, "Member 'BP_SwitchStateMachine_C_ExecuteUbergraph_BP_SwitchStateMachine::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(BP_SwitchStateMachine_C_ExecuteUbergraph_BP_SwitchStateMachine, K2Node_CreateDelegate_OutputDelegate_4) == 0x000054, "Member 'BP_SwitchStateMachine_C_ExecuteUbergraph_BP_SwitchStateMachine::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(BP_SwitchStateMachine_C_ExecuteUbergraph_BP_SwitchStateMachine, K2Node_CreateDelegate_OutputDelegate_5) == 0x000068, "Member 'BP_SwitchStateMachine_C_ExecuteUbergraph_BP_SwitchStateMachine::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(BP_SwitchStateMachine_C_ExecuteUbergraph_BP_SwitchStateMachine, CallFunc_GetStateByName_ReturnValue) == 0x000080, "Member 'BP_SwitchStateMachine_C_ExecuteUbergraph_BP_SwitchStateMachine::CallFunc_GetStateByName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SwitchStateMachine_C_ExecuteUbergraph_BP_SwitchStateMachine, CallFunc_GetStateByName_ReturnValue_1) == 0x000088, "Member 'BP_SwitchStateMachine_C_ExecuteUbergraph_BP_SwitchStateMachine::CallFunc_GetStateByName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SwitchStateMachine_C_ExecuteUbergraph_BP_SwitchStateMachine, CallFunc_GetStateByName_ReturnValue_2) == 0x000090, "Member 'BP_SwitchStateMachine_C_ExecuteUbergraph_BP_SwitchStateMachine::CallFunc_GetStateByName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SwitchStateMachine_C_ExecuteUbergraph_BP_SwitchStateMachine, CallFunc_GetStateByName_ReturnValue_3) == 0x000098, "Member 'BP_SwitchStateMachine_C_ExecuteUbergraph_BP_SwitchStateMachine::CallFunc_GetStateByName_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SwitchStateMachine_C_ExecuteUbergraph_BP_SwitchStateMachine, CallFunc_GetStateByName_ReturnValue_4) == 0x0000A0, "Member 'BP_SwitchStateMachine_C_ExecuteUbergraph_BP_SwitchStateMachine::CallFunc_GetStateByName_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SwitchStateMachine_C_ExecuteUbergraph_BP_SwitchStateMachine, CallFunc_GetStateByName_ReturnValue_5) == 0x0000A8, "Member 'BP_SwitchStateMachine_C_ExecuteUbergraph_BP_SwitchStateMachine::CallFunc_GetStateByName_ReturnValue_5' has a wrong offset!");

// Function BP_SwitchStateMachine.BP_SwitchStateMachine_C.SetHitTarget
// 0x0008 (0x0008 - 0x0000)
struct BP_SwitchStateMachine_C_SetHitTarget final
{
public:
	class UStaticMeshComponent*                   HitTarget_0;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SwitchStateMachine_C_SetHitTarget) == 0x000008, "Wrong alignment on BP_SwitchStateMachine_C_SetHitTarget");
static_assert(sizeof(BP_SwitchStateMachine_C_SetHitTarget) == 0x000008, "Wrong size on BP_SwitchStateMachine_C_SetHitTarget");
static_assert(offsetof(BP_SwitchStateMachine_C_SetHitTarget, HitTarget_0) == 0x000000, "Member 'BP_SwitchStateMachine_C_SetHitTarget::HitTarget_0' has a wrong offset!");

// Function BP_SwitchStateMachine.BP_SwitchStateMachine_C.CanProcessHit
// 0x03C0 (0x03C0 - 0x0000)
struct BP_SwitchStateMachine_C_CanProcessHit final
{
public:
	struct FGameplayEffectSpec                    Effect_spec;                                       // 0x0000(0x0298)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          ReturnValue;                                       // 0x0298(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_299[0x3];                                      // 0x0299(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetProgressToTransition_ReturnValue;      // 0x029C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_GetHitResultFromEffectSpec_ReturnValue;   // 0x02A0(0x0090)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x0330(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0331(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0332(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_333[0x1];                                      // 0x0333(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0334(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0338(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x033C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0348(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0354(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0360(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36C[0x4];                                      // 0x036C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0370(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0378(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0380(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0388(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0394(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0398(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x039C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x03A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x03AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x03B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x03B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SwitchStateMachine_C_CanProcessHit) == 0x000008, "Wrong alignment on BP_SwitchStateMachine_C_CanProcessHit");
static_assert(sizeof(BP_SwitchStateMachine_C_CanProcessHit) == 0x0003C0, "Wrong size on BP_SwitchStateMachine_C_CanProcessHit");
static_assert(offsetof(BP_SwitchStateMachine_C_CanProcessHit, Effect_spec) == 0x000000, "Member 'BP_SwitchStateMachine_C_CanProcessHit::Effect_spec' has a wrong offset!");
static_assert(offsetof(BP_SwitchStateMachine_C_CanProcessHit, ReturnValue) == 0x000298, "Member 'BP_SwitchStateMachine_C_CanProcessHit::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SwitchStateMachine_C_CanProcessHit, CallFunc_GetProgressToTransition_ReturnValue) == 0x00029C, "Member 'BP_SwitchStateMachine_C_CanProcessHit::CallFunc_GetProgressToTransition_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SwitchStateMachine_C_CanProcessHit, CallFunc_GetHitResultFromEffectSpec_ReturnValue) == 0x0002A0, "Member 'BP_SwitchStateMachine_C_CanProcessHit::CallFunc_GetHitResultFromEffectSpec_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SwitchStateMachine_C_CanProcessHit, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x000330, "Member 'BP_SwitchStateMachine_C_CanProcessHit::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SwitchStateMachine_C_CanProcessHit, CallFunc_BreakHitResult_bBlockingHit) == 0x000331, "Member 'BP_SwitchStateMachine_C_CanProcessHit::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_SwitchStateMachine_C_CanProcessHit, CallFunc_BreakHitResult_bInitialOverlap) == 0x000332, "Member 'BP_SwitchStateMachine_C_CanProcessHit::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_SwitchStateMachine_C_CanProcessHit, CallFunc_BreakHitResult_Time) == 0x000334, "Member 'BP_SwitchStateMachine_C_CanProcessHit::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_SwitchStateMachine_C_CanProcessHit, CallFunc_BreakHitResult_Distance) == 0x000338, "Member 'BP_SwitchStateMachine_C_CanProcessHit::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_SwitchStateMachine_C_CanProcessHit, CallFunc_BreakHitResult_Location) == 0x00033C, "Member 'BP_SwitchStateMachine_C_CanProcessHit::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_SwitchStateMachine_C_CanProcessHit, CallFunc_BreakHitResult_ImpactPoint) == 0x000348, "Member 'BP_SwitchStateMachine_C_CanProcessHit::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_SwitchStateMachine_C_CanProcessHit, CallFunc_BreakHitResult_Normal) == 0x000354, "Member 'BP_SwitchStateMachine_C_CanProcessHit::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_SwitchStateMachine_C_CanProcessHit, CallFunc_BreakHitResult_ImpactNormal) == 0x000360, "Member 'BP_SwitchStateMachine_C_CanProcessHit::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_SwitchStateMachine_C_CanProcessHit, CallFunc_BreakHitResult_PhysMat) == 0x000370, "Member 'BP_SwitchStateMachine_C_CanProcessHit::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_SwitchStateMachine_C_CanProcessHit, CallFunc_BreakHitResult_HitActor) == 0x000378, "Member 'BP_SwitchStateMachine_C_CanProcessHit::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_SwitchStateMachine_C_CanProcessHit, CallFunc_BreakHitResult_HitComponent) == 0x000380, "Member 'BP_SwitchStateMachine_C_CanProcessHit::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_SwitchStateMachine_C_CanProcessHit, CallFunc_BreakHitResult_HitBoneName) == 0x000388, "Member 'BP_SwitchStateMachine_C_CanProcessHit::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_SwitchStateMachine_C_CanProcessHit, CallFunc_BreakHitResult_HitItem) == 0x000394, "Member 'BP_SwitchStateMachine_C_CanProcessHit::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_SwitchStateMachine_C_CanProcessHit, CallFunc_BreakHitResult_ElementIndex) == 0x000398, "Member 'BP_SwitchStateMachine_C_CanProcessHit::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_SwitchStateMachine_C_CanProcessHit, CallFunc_BreakHitResult_FaceIndex) == 0x00039C, "Member 'BP_SwitchStateMachine_C_CanProcessHit::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_SwitchStateMachine_C_CanProcessHit, CallFunc_BreakHitResult_TraceStart) == 0x0003A0, "Member 'BP_SwitchStateMachine_C_CanProcessHit::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_SwitchStateMachine_C_CanProcessHit, CallFunc_BreakHitResult_TraceEnd) == 0x0003AC, "Member 'BP_SwitchStateMachine_C_CanProcessHit::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_SwitchStateMachine_C_CanProcessHit, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0003B8, "Member 'BP_SwitchStateMachine_C_CanProcessHit::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SwitchStateMachine_C_CanProcessHit, CallFunc_BooleanAND_ReturnValue) == 0x0003B9, "Member 'BP_SwitchStateMachine_C_CanProcessHit::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_SwitchStateMachine.BP_SwitchStateMachine_C.SetLastNonDisabledState
// 0x0008 (0x0008 - 0x0000)
struct BP_SwitchStateMachine_C_SetLastNonDisabledState final
{
public:
	class UCAFiniteState*                         State;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SwitchStateMachine_C_SetLastNonDisabledState) == 0x000008, "Wrong alignment on BP_SwitchStateMachine_C_SetLastNonDisabledState");
static_assert(sizeof(BP_SwitchStateMachine_C_SetLastNonDisabledState) == 0x000008, "Wrong size on BP_SwitchStateMachine_C_SetLastNonDisabledState");
static_assert(offsetof(BP_SwitchStateMachine_C_SetLastNonDisabledState, State) == 0x000000, "Member 'BP_SwitchStateMachine_C_SetLastNonDisabledState::State' has a wrong offset!");

// Function BP_SwitchStateMachine.BP_SwitchStateMachine_C.GetLastNonDisabledState
// 0x0008 (0x0008 - 0x0000)
struct BP_SwitchStateMachine_C_GetLastNonDisabledState final
{
public:
	class UCAFiniteState*                         LastNonDisabledState_0;                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SwitchStateMachine_C_GetLastNonDisabledState) == 0x000008, "Wrong alignment on BP_SwitchStateMachine_C_GetLastNonDisabledState");
static_assert(sizeof(BP_SwitchStateMachine_C_GetLastNonDisabledState) == 0x000008, "Wrong size on BP_SwitchStateMachine_C_GetLastNonDisabledState");
static_assert(offsetof(BP_SwitchStateMachine_C_GetLastNonDisabledState, LastNonDisabledState_0) == 0x000000, "Member 'BP_SwitchStateMachine_C_GetLastNonDisabledState::LastNonDisabledState_0' has a wrong offset!");

}

