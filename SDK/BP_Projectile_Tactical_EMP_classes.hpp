#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Projectile_Tactical_EMP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_Projectile_Tactical_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Projectile_Tactical_EMP.BP_Projectile_Tactical_EMP_C
// 0x0040 (0x0580 - 0x0540)
class ABP_Projectile_Tactical_EMP_C : public ABP_Projectile_Tactical_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_Projectile_Tactical_EMP_C;       // 0x0540(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCAAudioComponent*                      TacticalEMPAudio;                                  // 0x0548(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCAGameplayCollisionComponent*          CAGameplayCollision;                               // 0x0550(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_ArcLensInspectable_Projectile_C*    BP_ArcLensInspectable_Projectile;                  // 0x0558(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCASkeletalMeshComponentFOV*            CASkeletalMeshComponentFOV;                        // 0x0560(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Fuse_Time;                                         // 0x0568(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ForceAffectFriendlies;                             // 0x056C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          ShouldDetonate;                                    // 0x056D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          DetonateOnBeginPlay;                               // 0x056E(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_56F[0x1];                                      // 0x056F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraComponent*                      EMP_Fuse_VFX;                                      // 0x0570(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Tactical_EffectSphere_EMP_C*        TacticalEffectSphereObj;                           // 0x0578(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_Projectile_Tactical_EMP(int32 EntryPoint);
	void BndEvt__BP_Projectile_Tactical_EMP_m_predicted_physics_component_K2Node_ComponentBoundEvent_1_OnPairedWithPredictedActor__DelegateSignature(class AActor* Predicted_actor);
	void Defuse();
	void OnProjFinalImpact(const struct FHitResult& Hit);
	void OnDetonate();
	void PlayArmingAudio(bool HitShield);
	void PrimeFuse();
	void StopSFX();
	void OnEffectSphereSpawned(class ABP_Tactical_EffectSphere_EMP_C*& Effect_Sphere);
	void ReceiveBeginPlay();
	void SFX_Projectile_Travel_Audio_Start(const struct FCAAudioSwitchNameType& Switch_Group, const struct FCAAudioSwitchValueType& Switch_Value, const struct FCAAudioEventType& In_Flight_Audio_Event);
	void SFX_Projectile_Travel_Audio_Stop(const struct FCAAudioEventType& Stop_In_Flight_Audio_Event);
	void UpgradeGadgetToCurrentLevel();

	float BP_GetProjectileGravityScale(int32 Upgrade_level) const;
	bool IsPlayerInFutureDamageArea() const;
	void GetRadiusFromDT(bool Upgraded, bool ZeroG, bool IsNPCThrown, float* Radius) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Projectile_Tactical_EMP_C">();
	}
	static class ABP_Projectile_Tactical_EMP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Projectile_Tactical_EMP_C>();
	}
};
static_assert(alignof(ABP_Projectile_Tactical_EMP_C) == 0x000010, "Wrong alignment on ABP_Projectile_Tactical_EMP_C");
static_assert(sizeof(ABP_Projectile_Tactical_EMP_C) == 0x000580, "Wrong size on ABP_Projectile_Tactical_EMP_C");
static_assert(offsetof(ABP_Projectile_Tactical_EMP_C, UberGraphFrame_BP_Projectile_Tactical_EMP_C) == 0x000540, "Member 'ABP_Projectile_Tactical_EMP_C::UberGraphFrame_BP_Projectile_Tactical_EMP_C' has a wrong offset!");
static_assert(offsetof(ABP_Projectile_Tactical_EMP_C, TacticalEMPAudio) == 0x000548, "Member 'ABP_Projectile_Tactical_EMP_C::TacticalEMPAudio' has a wrong offset!");
static_assert(offsetof(ABP_Projectile_Tactical_EMP_C, CAGameplayCollision) == 0x000550, "Member 'ABP_Projectile_Tactical_EMP_C::CAGameplayCollision' has a wrong offset!");
static_assert(offsetof(ABP_Projectile_Tactical_EMP_C, BP_ArcLensInspectable_Projectile) == 0x000558, "Member 'ABP_Projectile_Tactical_EMP_C::BP_ArcLensInspectable_Projectile' has a wrong offset!");
static_assert(offsetof(ABP_Projectile_Tactical_EMP_C, CASkeletalMeshComponentFOV) == 0x000560, "Member 'ABP_Projectile_Tactical_EMP_C::CASkeletalMeshComponentFOV' has a wrong offset!");
static_assert(offsetof(ABP_Projectile_Tactical_EMP_C, Fuse_Time) == 0x000568, "Member 'ABP_Projectile_Tactical_EMP_C::Fuse_Time' has a wrong offset!");
static_assert(offsetof(ABP_Projectile_Tactical_EMP_C, ForceAffectFriendlies) == 0x00056C, "Member 'ABP_Projectile_Tactical_EMP_C::ForceAffectFriendlies' has a wrong offset!");
static_assert(offsetof(ABP_Projectile_Tactical_EMP_C, ShouldDetonate) == 0x00056D, "Member 'ABP_Projectile_Tactical_EMP_C::ShouldDetonate' has a wrong offset!");
static_assert(offsetof(ABP_Projectile_Tactical_EMP_C, DetonateOnBeginPlay) == 0x00056E, "Member 'ABP_Projectile_Tactical_EMP_C::DetonateOnBeginPlay' has a wrong offset!");
static_assert(offsetof(ABP_Projectile_Tactical_EMP_C, EMP_Fuse_VFX) == 0x000570, "Member 'ABP_Projectile_Tactical_EMP_C::EMP_Fuse_VFX' has a wrong offset!");
static_assert(offsetof(ABP_Projectile_Tactical_EMP_C, TacticalEffectSphereObj) == 0x000578, "Member 'ABP_Projectile_Tactical_EMP_C::TacticalEffectSphereObj' has a wrong offset!");

}

