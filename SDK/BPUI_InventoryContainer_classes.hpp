#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPUI_InventoryContainer

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Keaton_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BPUI_InventoryContainer.BPUI_InventoryContainer_C
// 0x0068 (0x0440 - 0x03D8)
class UBPUI_InventoryContainer_C final : public UCAHUDInventoryContainer
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x03D8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBPUI_InventoryItem_C*                  BPUI_InventoryItem;                                // 0x03E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBPUI_InventoryItem_C*                  BPUI_InventoryItem_1;                              // 0x03E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBPUI_InventoryItem_C*                  BPUI_InventoryItem_2;                              // 0x03F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBPUI_InventoryItem_C*                  BPUI_InventoryItem_3;                              // 0x03F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBPUI_InventoryItem_C*                  BPUI_InventoryItem_4;                              // 0x0400(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBPUI_PerkItem_C*                       BPUI_PerkItem_1;                                   // 0x0408(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBPUI_PerkItem_C*                       BPUI_PerkItem_2;                                   // 0x0410(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFE_screenTitle_C*                      FE_screenTitle;                                    // 0x0418(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image;                                             // 0x0420(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_1;                                           // 0x0428(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_130;                                         // 0x0430(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          IsMatchStartActive;                                // 0x0438(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BPUI_InventoryContainer(int32 EntryPoint);
	void BlockInputEvent();
	void OnHide();
	void Refresh();
	void OnShow();
	void CaptureInput();
	void ReleaseInput();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BPUI_InventoryContainer_C">();
	}
	static class UBPUI_InventoryContainer_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBPUI_InventoryContainer_C>();
	}
};
static_assert(alignof(UBPUI_InventoryContainer_C) == 0x000008, "Wrong alignment on UBPUI_InventoryContainer_C");
static_assert(sizeof(UBPUI_InventoryContainer_C) == 0x000440, "Wrong size on UBPUI_InventoryContainer_C");
static_assert(offsetof(UBPUI_InventoryContainer_C, UberGraphFrame) == 0x0003D8, "Member 'UBPUI_InventoryContainer_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBPUI_InventoryContainer_C, BPUI_InventoryItem) == 0x0003E0, "Member 'UBPUI_InventoryContainer_C::BPUI_InventoryItem' has a wrong offset!");
static_assert(offsetof(UBPUI_InventoryContainer_C, BPUI_InventoryItem_1) == 0x0003E8, "Member 'UBPUI_InventoryContainer_C::BPUI_InventoryItem_1' has a wrong offset!");
static_assert(offsetof(UBPUI_InventoryContainer_C, BPUI_InventoryItem_2) == 0x0003F0, "Member 'UBPUI_InventoryContainer_C::BPUI_InventoryItem_2' has a wrong offset!");
static_assert(offsetof(UBPUI_InventoryContainer_C, BPUI_InventoryItem_3) == 0x0003F8, "Member 'UBPUI_InventoryContainer_C::BPUI_InventoryItem_3' has a wrong offset!");
static_assert(offsetof(UBPUI_InventoryContainer_C, BPUI_InventoryItem_4) == 0x000400, "Member 'UBPUI_InventoryContainer_C::BPUI_InventoryItem_4' has a wrong offset!");
static_assert(offsetof(UBPUI_InventoryContainer_C, BPUI_PerkItem_1) == 0x000408, "Member 'UBPUI_InventoryContainer_C::BPUI_PerkItem_1' has a wrong offset!");
static_assert(offsetof(UBPUI_InventoryContainer_C, BPUI_PerkItem_2) == 0x000410, "Member 'UBPUI_InventoryContainer_C::BPUI_PerkItem_2' has a wrong offset!");
static_assert(offsetof(UBPUI_InventoryContainer_C, FE_screenTitle) == 0x000418, "Member 'UBPUI_InventoryContainer_C::FE_screenTitle' has a wrong offset!");
static_assert(offsetof(UBPUI_InventoryContainer_C, Image) == 0x000420, "Member 'UBPUI_InventoryContainer_C::Image' has a wrong offset!");
static_assert(offsetof(UBPUI_InventoryContainer_C, Image_1) == 0x000428, "Member 'UBPUI_InventoryContainer_C::Image_1' has a wrong offset!");
static_assert(offsetof(UBPUI_InventoryContainer_C, Image_130) == 0x000430, "Member 'UBPUI_InventoryContainer_C::Image_130' has a wrong offset!");
static_assert(offsetof(UBPUI_InventoryContainer_C, IsMatchStartActive) == 0x000438, "Member 'UBPUI_InventoryContainer_C::IsMatchStartActive' has a wrong offset!");

}

