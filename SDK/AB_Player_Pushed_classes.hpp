#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AB_Player_Pushed

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Keaton_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass AB_Player_Pushed.AB_Player_Pushed_C
// 0x0058 (0x04F0 - 0x0498)
class UAB_Player_Pushed_C final : public UCAGameplayAbility_Managed
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0498(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	float                                         PushedByMeleeTime;                                 // 0x04A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PushedByExplosionTime;                             // 0x04A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Push_Time;                                         // 0x04A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4AC[0x4];                                      // 0x04AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Projectile_Base_C*                  Source_Projectile;                                 // 0x04B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Knockback_Source_Location;                         // 0x04B8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         State_Multiplier;                                  // 0x04C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Flying_Multiplier;                                 // 0x04C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Player_Multiplier;                                 // 0x04CC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Vertical_Multiplier;                               // 0x04D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Horizontal_multiplier;                             // 0x04D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Event_Tag;                                         // 0x04D8(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4E4[0x4];                                      // 0x04E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Instigator;                                        // 0x04E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_AB_Player_Pushed(int32 EntryPoint);
	void NotifyAbilityGiven(class AActor* User);
	void K2_ActivateAbilityFromEvent(const struct FGameplayEventData& EventData);
	void SetValues();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"AB_Player_Pushed_C">();
	}
	static class UAB_Player_Pushed_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAB_Player_Pushed_C>();
	}
};
static_assert(alignof(UAB_Player_Pushed_C) == 0x000008, "Wrong alignment on UAB_Player_Pushed_C");
static_assert(sizeof(UAB_Player_Pushed_C) == 0x0004F0, "Wrong size on UAB_Player_Pushed_C");
static_assert(offsetof(UAB_Player_Pushed_C, UberGraphFrame) == 0x000498, "Member 'UAB_Player_Pushed_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UAB_Player_Pushed_C, PushedByMeleeTime) == 0x0004A0, "Member 'UAB_Player_Pushed_C::PushedByMeleeTime' has a wrong offset!");
static_assert(offsetof(UAB_Player_Pushed_C, PushedByExplosionTime) == 0x0004A4, "Member 'UAB_Player_Pushed_C::PushedByExplosionTime' has a wrong offset!");
static_assert(offsetof(UAB_Player_Pushed_C, Push_Time) == 0x0004A8, "Member 'UAB_Player_Pushed_C::Push_Time' has a wrong offset!");
static_assert(offsetof(UAB_Player_Pushed_C, Source_Projectile) == 0x0004B0, "Member 'UAB_Player_Pushed_C::Source_Projectile' has a wrong offset!");
static_assert(offsetof(UAB_Player_Pushed_C, Knockback_Source_Location) == 0x0004B8, "Member 'UAB_Player_Pushed_C::Knockback_Source_Location' has a wrong offset!");
static_assert(offsetof(UAB_Player_Pushed_C, State_Multiplier) == 0x0004C4, "Member 'UAB_Player_Pushed_C::State_Multiplier' has a wrong offset!");
static_assert(offsetof(UAB_Player_Pushed_C, Flying_Multiplier) == 0x0004C8, "Member 'UAB_Player_Pushed_C::Flying_Multiplier' has a wrong offset!");
static_assert(offsetof(UAB_Player_Pushed_C, Player_Multiplier) == 0x0004CC, "Member 'UAB_Player_Pushed_C::Player_Multiplier' has a wrong offset!");
static_assert(offsetof(UAB_Player_Pushed_C, Vertical_Multiplier) == 0x0004D0, "Member 'UAB_Player_Pushed_C::Vertical_Multiplier' has a wrong offset!");
static_assert(offsetof(UAB_Player_Pushed_C, Horizontal_multiplier) == 0x0004D4, "Member 'UAB_Player_Pushed_C::Horizontal_multiplier' has a wrong offset!");
static_assert(offsetof(UAB_Player_Pushed_C, Event_Tag) == 0x0004D8, "Member 'UAB_Player_Pushed_C::Event_Tag' has a wrong offset!");
static_assert(offsetof(UAB_Player_Pushed_C, Instigator) == 0x0004E8, "Member 'UAB_Player_Pushed_C::Instigator' has a wrong offset!");

}

