#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Tactical_EffectSphere_EMP

#include "Basic.hpp"

#include "CAAudio_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Keaton_structs.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function BP_Tactical_EffectSphere_EMP.BP_Tactical_EffectSphere_EMP_C.ExecuteUbergraph_BP_Tactical_EffectSphere_EMP
// 0x02B8 (0x02B8 - 0x0000)
struct BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        K2Node_ComponentBoundEvent_OverlappedComponent_1;  // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_1;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        K2Node_ComponentBoundEvent_OtherComp_1;            // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_1;       // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0028(0x0090)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class ACAActorWithTimedMovement*              K2Node_DynamicCast_AsCAActor_with_Timed_Movement;  // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACAProjectileBase*                      K2Node_DynamicCast_AsCAProjectile_Base;            // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D2[0x6];                                       // 0x00D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetAttachedActors_OutActors;              // 0x00D8(0x0010)(ReferenceParm)
	class USceneComponent*                        K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x00E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        K2Node_ComponentBoundEvent_OtherComp;              // 0x00F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x0108(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class ICAEMPDisruptableInterface> K2Node_DynamicCast_AsCAEMPDisruptable_Interface;   // 0x0110(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_121[0x7];                                      // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FActiveGameplayEffectHandle>    CallFunc_GetActiveEffectsWithAllTags_ReturnValue;  // 0x0128(0x0010)(ReferenceParm)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_139[0x3];                                      // 0x0139(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Map_Remove_ReturnValue;                   // 0x0141(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_142[0x2];                                      // 0x0142(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FActiveGameplayEffectHandle            CallFunc_Map_Find_Value;                           // 0x0144(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x014C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_RemoveActiveGameplayEffect_ReturnValue;   // 0x014D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_14E[0x2];                                      // 0x014E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ACACharacter_NPC*                       K2Node_DynamicCast_AsCACharacter_NPC;              // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_159[0x7];                                      // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetInstigator_ReturnValue;                // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCATeamID                              CallFunc_GetTeamID_ReturnValue;                    // 0x016C(0x0004)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_171[0x3];                                      // 0x0171(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_179[0x7];                                      // 0x0179(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue_1;  // 0x0180(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            CallFunc_Apply_Player_EMP_GE_Out_GE;               // 0x0188(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0194(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_OverlappingActor;               // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsServer_ReturnValue_1;                   // 0x01A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1AA[0x2];                                      // 0x01AA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_TeamIDTeamID_ReturnValue;      // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsIngredientInsideGivenSphere_ReturnValue; // 0x01B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x01B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x01B3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x01B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Check_Destroy_Overlapping_Actor_Disruption_Handled; // 0x01B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x01B6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B7[0x1];                                      // 0x01B7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ActorIsA_ReturnValue;                     // 0x01BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1BD[0x3];                                      // 0x01BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            CallFunc_Map_Find_Value_1;                         // 0x01C4(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x01CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1CD[0x3];                                      // 0x01CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCATeamID                              CallFunc_GetTeamID_ReturnValue_1;                  // 0x01D0(0x0004)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x01D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ETelemetryStatus                              Temp_byte_Variable;                                // 0x01D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETelemetryStatus                              CallFunc_Telemetry_Output;                         // 0x01D6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x01D7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D9[0x3];                                      // 0x01D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue; // 0x01DC(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x01E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x01F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1FC[0x4];                                      // 0x01FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetSecurityModulesAndAreas_Areas;         // 0x0200(0x0010)(ReferenceParm)
	float                                         CallFunc_GetLifeSpan_ReturnValue;                  // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0214(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue_2;                   // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_219[0x3];                                      // 0x0219(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x021C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACAActorWithTimedMovement*              CallFunc_Array_Get_Item;                           // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCollisionRadius_ReturnValue;           // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x022C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22D[0x3];                                      // 0x022D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0234(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_235[0x3];                                      // 0x0235(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_3;        // 0x0238(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsIngredientInsideGivenSphere_ReturnValue_1; // 0x0244(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_245[0x3];                                      // 0x0245(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x024C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_251[0x7];                                      // 0x0251(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item_1;                         // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_261[0x3];                                      // 0x0261(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0264(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x026C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_26D[0x3];                                      // 0x026D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item_2;                         // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class ICASecurityModuleInterface> K2Node_DynamicCast_AsCASecurity_Module_Interface;  // 0x0278(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_289[0x7];                                      // 0x0289(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCAShipAINPCSpawnManager*               CallFunc_GetShipAINPCSpawnManager_ReturnValue;     // 0x0290(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0298(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue_3;                   // 0x029C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x029D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29E[0x2];                                      // 0x029E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Projectile_Tactical_EMP_C*          K2Node_DynamicCast_AsBP_Projectile_Tactical_EMP;   // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x02B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsServer_ReturnValue_4;                   // 0x02B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP) == 0x000008, "Wrong alignment on BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP");
static_assert(sizeof(BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP) == 0x0002B8, "Wrong size on BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP, EntryPoint) == 0x000000, "Member 'BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP, K2Node_ComponentBoundEvent_OverlappedComponent_1) == 0x000008, "Member 'BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP::K2Node_ComponentBoundEvent_OverlappedComponent_1' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP, K2Node_ComponentBoundEvent_OtherActor_1) == 0x000010, "Member 'BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP::K2Node_ComponentBoundEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP, K2Node_ComponentBoundEvent_OtherComp_1) == 0x000018, "Member 'BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP::K2Node_ComponentBoundEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP, K2Node_ComponentBoundEvent_OtherBodyIndex_1) == 0x000020, "Member 'BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP::K2Node_ComponentBoundEvent_OtherBodyIndex_1' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP, K2Node_ComponentBoundEvent_bFromSweep) == 0x000024, "Member 'BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP, K2Node_ComponentBoundEvent_SweepResult) == 0x000028, "Member 'BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP, K2Node_DynamicCast_AsCAActor_with_Timed_Movement) == 0x0000B8, "Member 'BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP::K2Node_DynamicCast_AsCAActor_with_Timed_Movement' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP, K2Node_DynamicCast_bSuccess) == 0x0000C0, "Member 'BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP, K2Node_DynamicCast_AsCAProjectile_Base) == 0x0000C8, "Member 'BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP::K2Node_DynamicCast_AsCAProjectile_Base' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP, K2Node_DynamicCast_bSuccess_1) == 0x0000D0, "Member 'BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP, CallFunc_IsValid_ReturnValue) == 0x0000D1, "Member 'BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP, CallFunc_GetAttachedActors_OutActors) == 0x0000D8, "Member 'BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP::CallFunc_GetAttachedActors_OutActors' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x0000E8, "Member 'BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP, K2Node_ComponentBoundEvent_OtherActor) == 0x0000F0, "Member 'BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP, K2Node_ComponentBoundEvent_OtherComp) == 0x0000F8, "Member 'BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000100, "Member 'BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP, CallFunc_Array_Length_ReturnValue) == 0x000104, "Member 'BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x000108, "Member 'BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP, K2Node_DynamicCast_AsCAEMPDisruptable_Interface) == 0x000110, "Member 'BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP::K2Node_DynamicCast_AsCAEMPDisruptable_Interface' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP, K2Node_DynamicCast_bSuccess_2) == 0x000120, "Member 'BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP, CallFunc_GetActiveEffectsWithAllTags_ReturnValue) == 0x000128, "Member 'BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP::CallFunc_GetActiveEffectsWithAllTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP, CallFunc_IsValid_ReturnValue_1) == 0x000138, "Member 'BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP, CallFunc_Array_Length_ReturnValue_1) == 0x00013C, "Member 'BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000140, "Member 'BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP, CallFunc_Map_Remove_ReturnValue) == 0x000141, "Member 'BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP::CallFunc_Map_Remove_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP, CallFunc_Map_Find_Value) == 0x000144, "Member 'BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP, CallFunc_Map_Find_ReturnValue) == 0x00014C, "Member 'BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP, CallFunc_RemoveActiveGameplayEffect_ReturnValue) == 0x00014D, "Member 'BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP::CallFunc_RemoveActiveGameplayEffect_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP, K2Node_DynamicCast_AsCACharacter_NPC) == 0x000150, "Member 'BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP::K2Node_DynamicCast_AsCACharacter_NPC' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP, K2Node_DynamicCast_bSuccess_3) == 0x000158, "Member 'BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP, CallFunc_GetInstigator_ReturnValue) == 0x000160, "Member 'BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP::CallFunc_GetInstigator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP, Temp_int_Loop_Counter_Variable) == 0x000168, "Member 'BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP, CallFunc_GetTeamID_ReturnValue) == 0x00016C, "Member 'BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP::CallFunc_GetTeamID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP, CallFunc_Less_IntInt_ReturnValue) == 0x000170, "Member 'BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP, CallFunc_Add_IntInt_ReturnValue) == 0x000174, "Member 'BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP, CallFunc_BooleanOR_ReturnValue) == 0x000178, "Member 'BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP, CallFunc_GetAbilitySystemComponent_ReturnValue_1) == 0x000180, "Member 'BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP::CallFunc_GetAbilitySystemComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP, CallFunc_Apply_Player_EMP_GE_Out_GE) == 0x000188, "Member 'BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP::CallFunc_Apply_Player_EMP_GE_Out_GE' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP, CallFunc_Array_AddUnique_ReturnValue) == 0x000190, "Member 'BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000194, "Member 'BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP, K2Node_CustomEvent_OverlappingActor) == 0x0001A0, "Member 'BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP::K2Node_CustomEvent_OverlappingActor' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP, CallFunc_IsServer_ReturnValue) == 0x0001A8, "Member 'BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP, CallFunc_IsServer_ReturnValue_1) == 0x0001A9, "Member 'BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP::CallFunc_IsServer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP, Temp_int_Array_Index_Variable) == 0x0001AC, "Member 'BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP, CallFunc_EqualEqual_TeamIDTeamID_ReturnValue) == 0x0001B0, "Member 'BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP::CallFunc_EqualEqual_TeamIDTeamID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP, CallFunc_IsIngredientInsideGivenSphere_ReturnValue) == 0x0001B1, "Member 'BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP::CallFunc_IsIngredientInsideGivenSphere_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP, CallFunc_Not_PreBool_ReturnValue) == 0x0001B2, "Member 'BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP, CallFunc_BooleanAND_ReturnValue) == 0x0001B3, "Member 'BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP, CallFunc_BooleanOR_ReturnValue_1) == 0x0001B4, "Member 'BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP, CallFunc_Check_Destroy_Overlapping_Actor_Disruption_Handled) == 0x0001B5, "Member 'BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP::CallFunc_Check_Destroy_Overlapping_Actor_Disruption_Handled' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP, CallFunc_HasAuthority_ReturnValue) == 0x0001B6, "Member 'BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP, Temp_int_Loop_Counter_Variable_1) == 0x0001B8, "Member 'BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP, CallFunc_ActorIsA_ReturnValue) == 0x0001BC, "Member 'BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP::CallFunc_ActorIsA_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP, CallFunc_Add_IntInt_ReturnValue_1) == 0x0001C0, "Member 'BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP, CallFunc_Map_Find_Value_1) == 0x0001C4, "Member 'BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP, CallFunc_Map_Find_ReturnValue_1) == 0x0001CC, "Member 'BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP, CallFunc_GetTeamID_ReturnValue_1) == 0x0001D0, "Member 'BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP::CallFunc_GetTeamID_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP, CallFunc_IsValid_ReturnValue_2) == 0x0001D4, "Member 'BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP, Temp_byte_Variable) == 0x0001D5, "Member 'BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP, CallFunc_Telemetry_Output) == 0x0001D6, "Member 'BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP::CallFunc_Telemetry_Output' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP, CallFunc_HasAuthority_ReturnValue_1) == 0x0001D7, "Member 'BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP, K2Node_SwitchEnum_CmpSuccess) == 0x0001D8, "Member 'BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP, CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue) == 0x0001DC, "Member 'BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP::CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x0001E4, "Member 'BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x0001F0, "Member 'BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP, CallFunc_GetSecurityModulesAndAreas_Areas) == 0x000200, "Member 'BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP::CallFunc_GetSecurityModulesAndAreas_Areas' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP, CallFunc_GetLifeSpan_ReturnValue) == 0x000210, "Member 'BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP::CallFunc_GetLifeSpan_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP, CallFunc_Array_Length_ReturnValue_2) == 0x000214, "Member 'BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP, CallFunc_IsServer_ReturnValue_2) == 0x000218, "Member 'BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP::CallFunc_IsServer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP, K2Node_Event_DeltaSeconds) == 0x00021C, "Member 'BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP, CallFunc_Array_Get_Item) == 0x000220, "Member 'BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP, CallFunc_GetCollisionRadius_ReturnValue) == 0x000228, "Member 'BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP::CallFunc_GetCollisionRadius_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP, CallFunc_IsValid_ReturnValue_3) == 0x00022C, "Member 'BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP, CallFunc_Array_Length_ReturnValue_3) == 0x000230, "Member 'BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP, CallFunc_Less_IntInt_ReturnValue_1) == 0x000234, "Member 'BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP, CallFunc_K2_GetActorLocation_ReturnValue_3) == 0x000238, "Member 'BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP::CallFunc_K2_GetActorLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP, CallFunc_IsIngredientInsideGivenSphere_ReturnValue_1) == 0x000244, "Member 'BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP::CallFunc_IsIngredientInsideGivenSphere_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP, CallFunc_Array_Length_ReturnValue_4) == 0x000248, "Member 'BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP, Temp_int_Array_Index_Variable_1) == 0x00024C, "Member 'BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP, CallFunc_Greater_IntInt_ReturnValue) == 0x000250, "Member 'BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP, CallFunc_Array_Get_Item_1) == 0x000258, "Member 'BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP, CallFunc_IsValid_ReturnValue_4) == 0x000260, "Member 'BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP, Temp_int_Loop_Counter_Variable_2) == 0x000264, "Member 'BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP, Temp_int_Array_Index_Variable_2) == 0x000268, "Member 'BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP, CallFunc_Less_IntInt_ReturnValue_2) == 0x00026C, "Member 'BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP, CallFunc_Array_Get_Item_2) == 0x000270, "Member 'BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP, K2Node_DynamicCast_AsCASecurity_Module_Interface) == 0x000278, "Member 'BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP::K2Node_DynamicCast_AsCASecurity_Module_Interface' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP, K2Node_DynamicCast_bSuccess_4) == 0x000288, "Member 'BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP, CallFunc_GetShipAINPCSpawnManager_ReturnValue) == 0x000290, "Member 'BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP::CallFunc_GetShipAINPCSpawnManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP, CallFunc_Add_IntInt_ReturnValue_2) == 0x000298, "Member 'BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP, CallFunc_IsServer_ReturnValue_3) == 0x00029C, "Member 'BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP::CallFunc_IsServer_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP, K2Node_Event_EndPlayReason) == 0x00029D, "Member 'BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP, CallFunc_GetOwner_ReturnValue) == 0x0002A0, "Member 'BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP, K2Node_DynamicCast_AsBP_Projectile_Tactical_EMP) == 0x0002A8, "Member 'BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP::K2Node_DynamicCast_AsBP_Projectile_Tactical_EMP' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP, K2Node_DynamicCast_bSuccess_5) == 0x0002B0, "Member 'BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP, CallFunc_IsValid_ReturnValue_5) == 0x0002B1, "Member 'BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP, CallFunc_IsServer_ReturnValue_4) == 0x0002B2, "Member 'BP_Tactical_EffectSphere_EMP_C_ExecuteUbergraph_BP_Tactical_EffectSphere_EMP::CallFunc_IsServer_ReturnValue_4' has a wrong offset!");

// Function BP_Tactical_EffectSphere_EMP.BP_Tactical_EffectSphere_EMP_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BP_Tactical_EffectSphere_EMP_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Tactical_EffectSphere_EMP_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BP_Tactical_EffectSphere_EMP_C_ReceiveEndPlay");
static_assert(sizeof(BP_Tactical_EffectSphere_EMP_C_ReceiveEndPlay) == 0x000001, "Wrong size on BP_Tactical_EffectSphere_EMP_C_ReceiveEndPlay");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BP_Tactical_EffectSphere_EMP_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function BP_Tactical_EffectSphere_EMP.BP_Tactical_EffectSphere_EMP_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_Tactical_EffectSphere_EMP_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Tactical_EffectSphere_EMP_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_Tactical_EffectSphere_EMP_C_ReceiveTick");
static_assert(sizeof(BP_Tactical_EffectSphere_EMP_C_ReceiveTick) == 0x000004, "Wrong size on BP_Tactical_EffectSphere_EMP_C_ReceiveTick");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_Tactical_EffectSphere_EMP_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_Tactical_EffectSphere_EMP.BP_Tactical_EffectSphere_EMP_C.TryApplyingOverlappingEffect
// 0x0008 (0x0008 - 0x0000)
struct BP_Tactical_EffectSphere_EMP_C_TryApplyingOverlappingEffect final
{
public:
	class AActor*                                 OverlappingActor;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Tactical_EffectSphere_EMP_C_TryApplyingOverlappingEffect) == 0x000008, "Wrong alignment on BP_Tactical_EffectSphere_EMP_C_TryApplyingOverlappingEffect");
static_assert(sizeof(BP_Tactical_EffectSphere_EMP_C_TryApplyingOverlappingEffect) == 0x000008, "Wrong size on BP_Tactical_EffectSphere_EMP_C_TryApplyingOverlappingEffect");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_TryApplyingOverlappingEffect, OverlappingActor) == 0x000000, "Member 'BP_Tactical_EffectSphere_EMP_C_TryApplyingOverlappingEffect::OverlappingActor' has a wrong offset!");

// Function BP_Tactical_EffectSphere_EMP.BP_Tactical_EffectSphere_EMP_C.BndEvt__BP_Tactical_EffectSphere_EMP_CAGameplayCollision_K2Node_ComponentBoundEvent_1_SceneComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct BP_Tactical_EffectSphere_EMP_C_BndEvt__BP_Tactical_EffectSphere_EMP_CAGameplayCollision_K2Node_ComponentBoundEvent_1_SceneComponentEndOverlapSignature__DelegateSignature final
{
public:
	class USceneComponent*                        OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Tactical_EffectSphere_EMP_C_BndEvt__BP_Tactical_EffectSphere_EMP_CAGameplayCollision_K2Node_ComponentBoundEvent_1_SceneComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_Tactical_EffectSphere_EMP_C_BndEvt__BP_Tactical_EffectSphere_EMP_CAGameplayCollision_K2Node_ComponentBoundEvent_1_SceneComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_Tactical_EffectSphere_EMP_C_BndEvt__BP_Tactical_EffectSphere_EMP_CAGameplayCollision_K2Node_ComponentBoundEvent_1_SceneComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on BP_Tactical_EffectSphere_EMP_C_BndEvt__BP_Tactical_EffectSphere_EMP_CAGameplayCollision_K2Node_ComponentBoundEvent_1_SceneComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_BndEvt__BP_Tactical_EffectSphere_EMP_CAGameplayCollision_K2Node_ComponentBoundEvent_1_SceneComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_Tactical_EffectSphere_EMP_C_BndEvt__BP_Tactical_EffectSphere_EMP_CAGameplayCollision_K2Node_ComponentBoundEvent_1_SceneComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_BndEvt__BP_Tactical_EffectSphere_EMP_CAGameplayCollision_K2Node_ComponentBoundEvent_1_SceneComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_Tactical_EffectSphere_EMP_C_BndEvt__BP_Tactical_EffectSphere_EMP_CAGameplayCollision_K2Node_ComponentBoundEvent_1_SceneComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_BndEvt__BP_Tactical_EffectSphere_EMP_CAGameplayCollision_K2Node_ComponentBoundEvent_1_SceneComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_Tactical_EffectSphere_EMP_C_BndEvt__BP_Tactical_EffectSphere_EMP_CAGameplayCollision_K2Node_ComponentBoundEvent_1_SceneComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_BndEvt__BP_Tactical_EffectSphere_EMP_CAGameplayCollision_K2Node_ComponentBoundEvent_1_SceneComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_Tactical_EffectSphere_EMP_C_BndEvt__BP_Tactical_EffectSphere_EMP_CAGameplayCollision_K2Node_ComponentBoundEvent_1_SceneComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function BP_Tactical_EffectSphere_EMP.BP_Tactical_EffectSphere_EMP_C.BndEvt__BP_Tactical_EffectSphere_EMP_CAGameplayCollision_K2Node_ComponentBoundEvent_0_SceneComponentBeginOverlapSignature__DelegateSignature
// 0x00B0 (0x00B0 - 0x0000)
struct BP_Tactical_EffectSphere_EMP_C_BndEvt__BP_Tactical_EffectSphere_EMP_CAGameplayCollision_K2Node_ComponentBoundEvent_0_SceneComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class USceneComponent*                        OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x0090)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_Tactical_EffectSphere_EMP_C_BndEvt__BP_Tactical_EffectSphere_EMP_CAGameplayCollision_K2Node_ComponentBoundEvent_0_SceneComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_Tactical_EffectSphere_EMP_C_BndEvt__BP_Tactical_EffectSphere_EMP_CAGameplayCollision_K2Node_ComponentBoundEvent_0_SceneComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_Tactical_EffectSphere_EMP_C_BndEvt__BP_Tactical_EffectSphere_EMP_CAGameplayCollision_K2Node_ComponentBoundEvent_0_SceneComponentBeginOverlapSignature__DelegateSignature) == 0x0000B0, "Wrong size on BP_Tactical_EffectSphere_EMP_C_BndEvt__BP_Tactical_EffectSphere_EMP_CAGameplayCollision_K2Node_ComponentBoundEvent_0_SceneComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_BndEvt__BP_Tactical_EffectSphere_EMP_CAGameplayCollision_K2Node_ComponentBoundEvent_0_SceneComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_Tactical_EffectSphere_EMP_C_BndEvt__BP_Tactical_EffectSphere_EMP_CAGameplayCollision_K2Node_ComponentBoundEvent_0_SceneComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_BndEvt__BP_Tactical_EffectSphere_EMP_CAGameplayCollision_K2Node_ComponentBoundEvent_0_SceneComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_Tactical_EffectSphere_EMP_C_BndEvt__BP_Tactical_EffectSphere_EMP_CAGameplayCollision_K2Node_ComponentBoundEvent_0_SceneComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_BndEvt__BP_Tactical_EffectSphere_EMP_CAGameplayCollision_K2Node_ComponentBoundEvent_0_SceneComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_Tactical_EffectSphere_EMP_C_BndEvt__BP_Tactical_EffectSphere_EMP_CAGameplayCollision_K2Node_ComponentBoundEvent_0_SceneComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_BndEvt__BP_Tactical_EffectSphere_EMP_CAGameplayCollision_K2Node_ComponentBoundEvent_0_SceneComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_Tactical_EffectSphere_EMP_C_BndEvt__BP_Tactical_EffectSphere_EMP_CAGameplayCollision_K2Node_ComponentBoundEvent_0_SceneComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_BndEvt__BP_Tactical_EffectSphere_EMP_CAGameplayCollision_K2Node_ComponentBoundEvent_0_SceneComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_Tactical_EffectSphere_EMP_C_BndEvt__BP_Tactical_EffectSphere_EMP_CAGameplayCollision_K2Node_ComponentBoundEvent_0_SceneComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_BndEvt__BP_Tactical_EffectSphere_EMP_CAGameplayCollision_K2Node_ComponentBoundEvent_0_SceneComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_Tactical_EffectSphere_EMP_C_BndEvt__BP_Tactical_EffectSphere_EMP_CAGameplayCollision_K2Node_ComponentBoundEvent_0_SceneComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_Tactical_EffectSphere_EMP.BP_Tactical_EffectSphere_EMP_C.UserConstructionScript
// 0x0008 (0x0008 - 0x0000)
struct BP_Tactical_EffectSphere_EMP_C_UserConstructionScript final
{
public:
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetServerTimeSeconds_ReturnValue;         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Tactical_EffectSphere_EMP_C_UserConstructionScript) == 0x000004, "Wrong alignment on BP_Tactical_EffectSphere_EMP_C_UserConstructionScript");
static_assert(sizeof(BP_Tactical_EffectSphere_EMP_C_UserConstructionScript) == 0x000008, "Wrong size on BP_Tactical_EffectSphere_EMP_C_UserConstructionScript");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_UserConstructionScript, CallFunc_HasAuthority_ReturnValue) == 0x000000, "Member 'BP_Tactical_EffectSphere_EMP_C_UserConstructionScript::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_UserConstructionScript, CallFunc_GetServerTimeSeconds_ReturnValue) == 0x000004, "Member 'BP_Tactical_EffectSphere_EMP_C_UserConstructionScript::CallFunc_GetServerTimeSeconds_ReturnValue' has a wrong offset!");

// Function BP_Tactical_EffectSphere_EMP.BP_Tactical_EffectSphere_EMP_C.SetBalancingVariables
// 0x0090 (0x0090 - 0x0000)
struct BP_Tactical_EffectSphere_EMP_C_SetBalancingVariables final
{
public:
	int32                                         ProjectileDestructionUpgradeRequiredLevel;         // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         FriendlyFireUpgradeRequiredLevel;                  // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DurationUpgradeRequiredLevel;                      // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RadiusUpgradeRequiredLevel;                        // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HasRequiredLevelForRadiusUpgrade;                  // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   UpgradeVFXName;                                    // 0x0014(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   BaseVFXName;                                       // 0x0020(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Projectile_Tactical_EMP_C*          K2Node_DynamicCast_AsBP_Projectile_Tactical_EMP;   // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_2;        // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0046(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0047(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FName                                   K2Node_Select_Default;                             // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRadiusFromDT_Radius;                   // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Projectile_Tactical_C*              K2Node_DynamicCast_AsBP_Projectile_Tactical;       // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetInstigator_ReturnValue;                // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCATeamID                              CallFunc_GetTeamID_ReturnValue;                    // 0x0084(0x0004)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsNPCTeamDefault_ReturnValue;             // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Tactical_EffectSphere_EMP_C_SetBalancingVariables) == 0x000008, "Wrong alignment on BP_Tactical_EffectSphere_EMP_C_SetBalancingVariables");
static_assert(sizeof(BP_Tactical_EffectSphere_EMP_C_SetBalancingVariables) == 0x000090, "Wrong size on BP_Tactical_EffectSphere_EMP_C_SetBalancingVariables");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_SetBalancingVariables, ProjectileDestructionUpgradeRequiredLevel) == 0x000000, "Member 'BP_Tactical_EffectSphere_EMP_C_SetBalancingVariables::ProjectileDestructionUpgradeRequiredLevel' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_SetBalancingVariables, FriendlyFireUpgradeRequiredLevel) == 0x000004, "Member 'BP_Tactical_EffectSphere_EMP_C_SetBalancingVariables::FriendlyFireUpgradeRequiredLevel' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_SetBalancingVariables, DurationUpgradeRequiredLevel) == 0x000008, "Member 'BP_Tactical_EffectSphere_EMP_C_SetBalancingVariables::DurationUpgradeRequiredLevel' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_SetBalancingVariables, RadiusUpgradeRequiredLevel) == 0x00000C, "Member 'BP_Tactical_EffectSphere_EMP_C_SetBalancingVariables::RadiusUpgradeRequiredLevel' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_SetBalancingVariables, HasRequiredLevelForRadiusUpgrade) == 0x000010, "Member 'BP_Tactical_EffectSphere_EMP_C_SetBalancingVariables::HasRequiredLevelForRadiusUpgrade' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_SetBalancingVariables, UpgradeVFXName) == 0x000014, "Member 'BP_Tactical_EffectSphere_EMP_C_SetBalancingVariables::UpgradeVFXName' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_SetBalancingVariables, BaseVFXName) == 0x000020, "Member 'BP_Tactical_EffectSphere_EMP_C_SetBalancingVariables::BaseVFXName' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_SetBalancingVariables, CallFunc_GetOwner_ReturnValue) == 0x000030, "Member 'BP_Tactical_EffectSphere_EMP_C_SetBalancingVariables::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_SetBalancingVariables, K2Node_DynamicCast_AsBP_Projectile_Tactical_EMP) == 0x000038, "Member 'BP_Tactical_EffectSphere_EMP_C_SetBalancingVariables::K2Node_DynamicCast_AsBP_Projectile_Tactical_EMP' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_SetBalancingVariables, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_Tactical_EffectSphere_EMP_C_SetBalancingVariables::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_SetBalancingVariables, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000041, "Member 'BP_Tactical_EffectSphere_EMP_C_SetBalancingVariables::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_SetBalancingVariables, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x000042, "Member 'BP_Tactical_EffectSphere_EMP_C_SetBalancingVariables::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_SetBalancingVariables, CallFunc_GreaterEqual_IntInt_ReturnValue_2) == 0x000043, "Member 'BP_Tactical_EffectSphere_EMP_C_SetBalancingVariables::CallFunc_GreaterEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_SetBalancingVariables, CallFunc_Not_PreBool_ReturnValue) == 0x000044, "Member 'BP_Tactical_EffectSphere_EMP_C_SetBalancingVariables::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_SetBalancingVariables, CallFunc_Less_IntInt_ReturnValue) == 0x000045, "Member 'BP_Tactical_EffectSphere_EMP_C_SetBalancingVariables::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_SetBalancingVariables, CallFunc_BooleanAND_ReturnValue) == 0x000046, "Member 'BP_Tactical_EffectSphere_EMP_C_SetBalancingVariables::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_SetBalancingVariables, Temp_bool_Variable) == 0x000047, "Member 'BP_Tactical_EffectSphere_EMP_C_SetBalancingVariables::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_SetBalancingVariables, K2Node_Select_Default) == 0x000048, "Member 'BP_Tactical_EffectSphere_EMP_C_SetBalancingVariables::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_SetBalancingVariables, CallFunc_GetRadiusFromDT_Radius) == 0x000054, "Member 'BP_Tactical_EffectSphere_EMP_C_SetBalancingVariables::CallFunc_GetRadiusFromDT_Radius' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_SetBalancingVariables, CallFunc_GetOwner_ReturnValue_1) == 0x000058, "Member 'BP_Tactical_EffectSphere_EMP_C_SetBalancingVariables::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_SetBalancingVariables, K2Node_DynamicCast_AsBP_Projectile_Tactical) == 0x000060, "Member 'BP_Tactical_EffectSphere_EMP_C_SetBalancingVariables::K2Node_DynamicCast_AsBP_Projectile_Tactical' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_SetBalancingVariables, K2Node_DynamicCast_bSuccess_1) == 0x000068, "Member 'BP_Tactical_EffectSphere_EMP_C_SetBalancingVariables::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_SetBalancingVariables, CallFunc_MakeVector_ReturnValue) == 0x00006C, "Member 'BP_Tactical_EffectSphere_EMP_C_SetBalancingVariables::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_SetBalancingVariables, CallFunc_GetInstigator_ReturnValue) == 0x000078, "Member 'BP_Tactical_EffectSphere_EMP_C_SetBalancingVariables::CallFunc_GetInstigator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_SetBalancingVariables, CallFunc_IsValid_ReturnValue) == 0x000080, "Member 'BP_Tactical_EffectSphere_EMP_C_SetBalancingVariables::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_SetBalancingVariables, CallFunc_GetTeamID_ReturnValue) == 0x000084, "Member 'BP_Tactical_EffectSphere_EMP_C_SetBalancingVariables::CallFunc_GetTeamID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_SetBalancingVariables, CallFunc_IsNPCTeamDefault_ReturnValue) == 0x000088, "Member 'BP_Tactical_EffectSphere_EMP_C_SetBalancingVariables::CallFunc_IsNPCTeamDefault_ReturnValue' has a wrong offset!");

// Function BP_Tactical_EffectSphere_EMP.BP_Tactical_EffectSphere_EMP_C.GetDurationFromDT
// 0x0050 (0x0050 - 0x0000)
struct BP_Tactical_EffectSphere_EMP_C_GetDurationFromDT final
{
public:
	bool                                          Upgraded;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsNPCThrown;                                       // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Lifespan;                                          // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCAGameplayEffectTableValueRow         CallFunc_GetDataTableRowFromName_OutRow;           // 0x0008(0x0010)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCAGameplayEffectTableValueRow         CallFunc_GetDataTableRowFromName_OutRow_1;         // 0x0020(0x0010)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_1;    // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCAGameplayEffectTableValueRow         CallFunc_GetDataTableRowFromName_OutRow_2;         // 0x0038(0x0010)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_2;    // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Tactical_EffectSphere_EMP_C_GetDurationFromDT) == 0x000008, "Wrong alignment on BP_Tactical_EffectSphere_EMP_C_GetDurationFromDT");
static_assert(sizeof(BP_Tactical_EffectSphere_EMP_C_GetDurationFromDT) == 0x000050, "Wrong size on BP_Tactical_EffectSphere_EMP_C_GetDurationFromDT");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_GetDurationFromDT, Upgraded) == 0x000000, "Member 'BP_Tactical_EffectSphere_EMP_C_GetDurationFromDT::Upgraded' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_GetDurationFromDT, IsNPCThrown) == 0x000001, "Member 'BP_Tactical_EffectSphere_EMP_C_GetDurationFromDT::IsNPCThrown' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_GetDurationFromDT, Lifespan) == 0x000004, "Member 'BP_Tactical_EffectSphere_EMP_C_GetDurationFromDT::Lifespan' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_GetDurationFromDT, CallFunc_GetDataTableRowFromName_OutRow) == 0x000008, "Member 'BP_Tactical_EffectSphere_EMP_C_GetDurationFromDT::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_GetDurationFromDT, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000018, "Member 'BP_Tactical_EffectSphere_EMP_C_GetDurationFromDT::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_GetDurationFromDT, CallFunc_Not_PreBool_ReturnValue) == 0x000019, "Member 'BP_Tactical_EffectSphere_EMP_C_GetDurationFromDT::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_GetDurationFromDT, CallFunc_GetDataTableRowFromName_OutRow_1) == 0x000020, "Member 'BP_Tactical_EffectSphere_EMP_C_GetDurationFromDT::CallFunc_GetDataTableRowFromName_OutRow_1' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_GetDurationFromDT, CallFunc_GetDataTableRowFromName_ReturnValue_1) == 0x000030, "Member 'BP_Tactical_EffectSphere_EMP_C_GetDurationFromDT::CallFunc_GetDataTableRowFromName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_GetDurationFromDT, CallFunc_GetDataTableRowFromName_OutRow_2) == 0x000038, "Member 'BP_Tactical_EffectSphere_EMP_C_GetDurationFromDT::CallFunc_GetDataTableRowFromName_OutRow_2' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_GetDurationFromDT, CallFunc_GetDataTableRowFromName_ReturnValue_2) == 0x000048, "Member 'BP_Tactical_EffectSphere_EMP_C_GetDurationFromDT::CallFunc_GetDataTableRowFromName_ReturnValue_2' has a wrong offset!");

// Function BP_Tactical_EffectSphere_EMP.BP_Tactical_EffectSphere_EMP_C.Remove Linger Effect
// 0x0018 (0x0018 - 0x0000)
struct BP_Tactical_EffectSphere_EMP_C_Remove_Linger_Effect final
{
public:
	const class AActor*                           Target_Actor;                                      // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RemoveActiveEffectsWithTags_ReturnValue;  // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Tactical_EffectSphere_EMP_C_Remove_Linger_Effect) == 0x000008, "Wrong alignment on BP_Tactical_EffectSphere_EMP_C_Remove_Linger_Effect");
static_assert(sizeof(BP_Tactical_EffectSphere_EMP_C_Remove_Linger_Effect) == 0x000018, "Wrong size on BP_Tactical_EffectSphere_EMP_C_Remove_Linger_Effect");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_Remove_Linger_Effect, Target_Actor) == 0x000000, "Member 'BP_Tactical_EffectSphere_EMP_C_Remove_Linger_Effect::Target_Actor' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_Remove_Linger_Effect, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x000008, "Member 'BP_Tactical_EffectSphere_EMP_C_Remove_Linger_Effect::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_Remove_Linger_Effect, CallFunc_RemoveActiveEffectsWithTags_ReturnValue) == 0x000010, "Member 'BP_Tactical_EffectSphere_EMP_C_Remove_Linger_Effect::CallFunc_RemoveActiveEffectsWithTags_ReturnValue' has a wrong offset!");

// Function BP_Tactical_EffectSphere_EMP.BP_Tactical_EffectSphere_EMP_C.TriggerVFX
// 0x0030 (0x0030 - 0x0000)
struct BP_Tactical_EffectSphere_EMP_C_TriggerVFX final
{
public:
	bool                                          IsFriendly;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FCATeamID                              CallFunc_GetTeamID_ReturnValue;                    // 0x0004(0x0004)(NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetLocalPlayerPawn_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCATeamID                              CallFunc_GetTeamID_ReturnValue_1;                  // 0x0010(0x0004)(NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_TeamIDTeamID_ReturnValue;      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default;                             // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23[0x1];                                       // 0x0023(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Select_Default_1;                           // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Tactical_EffectSphere_EMP_C_TriggerVFX) == 0x000008, "Wrong alignment on BP_Tactical_EffectSphere_EMP_C_TriggerVFX");
static_assert(sizeof(BP_Tactical_EffectSphere_EMP_C_TriggerVFX) == 0x000030, "Wrong size on BP_Tactical_EffectSphere_EMP_C_TriggerVFX");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_TriggerVFX, IsFriendly) == 0x000000, "Member 'BP_Tactical_EffectSphere_EMP_C_TriggerVFX::IsFriendly' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_TriggerVFX, Temp_bool_Variable) == 0x000001, "Member 'BP_Tactical_EffectSphere_EMP_C_TriggerVFX::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_TriggerVFX, Temp_bool_Variable_1) == 0x000002, "Member 'BP_Tactical_EffectSphere_EMP_C_TriggerVFX::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_TriggerVFX, Temp_bool_Variable_2) == 0x000003, "Member 'BP_Tactical_EffectSphere_EMP_C_TriggerVFX::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_TriggerVFX, CallFunc_GetTeamID_ReturnValue) == 0x000004, "Member 'BP_Tactical_EffectSphere_EMP_C_TriggerVFX::CallFunc_GetTeamID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_TriggerVFX, CallFunc_GetLocalPlayerPawn_ReturnValue) == 0x000008, "Member 'BP_Tactical_EffectSphere_EMP_C_TriggerVFX::CallFunc_GetLocalPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_TriggerVFX, CallFunc_GetTeamID_ReturnValue_1) == 0x000010, "Member 'BP_Tactical_EffectSphere_EMP_C_TriggerVFX::CallFunc_GetTeamID_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_TriggerVFX, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000014, "Member 'BP_Tactical_EffectSphere_EMP_C_TriggerVFX::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_TriggerVFX, CallFunc_EqualEqual_TeamIDTeamID_ReturnValue) == 0x000020, "Member 'BP_Tactical_EffectSphere_EMP_C_TriggerVFX::CallFunc_EqualEqual_TeamIDTeamID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_TriggerVFX, K2Node_Select_Default) == 0x000021, "Member 'BP_Tactical_EffectSphere_EMP_C_TriggerVFX::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_TriggerVFX, CallFunc_IsServer_ReturnValue) == 0x000022, "Member 'BP_Tactical_EffectSphere_EMP_C_TriggerVFX::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_TriggerVFX, K2Node_Select_Default_1) == 0x000024, "Member 'BP_Tactical_EffectSphere_EMP_C_TriggerVFX::K2Node_Select_Default_1' has a wrong offset!");

// Function BP_Tactical_EffectSphere_EMP.BP_Tactical_EffectSphere_EMP_C.StartSFX
// 0x0058 (0x0058 - 0x0000)
struct BP_Tactical_EffectSphere_EMP_C_StartSFX final
{
public:
	int32                                         Tactical_Level_0;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCAAudioPlaybackInstance               Looped_SFX_Instance;                               // 0x0008(0x0010)(Parm, OutParm)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCAAudioEventType                      Temp_struct_Variable;                              // 0x001C(0x0004)(NoDestructor)
	struct FCAAudioEventType                      Temp_struct_Variable_1;                            // 0x0020(0x0004)(NoDestructor)
	TDelegate<void(const struct FCAAudioEventType& Event_name)> Temp_delegate_Variable;                            // 0x0024(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	struct FCAAudioEventType                      K2Node_Select_Default;                             // 0x0038(0x0004)(NoDestructor)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCAAudioPlaybackInstance               CallFunc_PlayEvent_playback_instance;              // 0x0040(0x0010)()
	bool                                          CallFunc_PlayEvent_play_success;                   // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Tactical_EffectSphere_EMP_C_StartSFX) == 0x000008, "Wrong alignment on BP_Tactical_EffectSphere_EMP_C_StartSFX");
static_assert(sizeof(BP_Tactical_EffectSphere_EMP_C_StartSFX) == 0x000058, "Wrong size on BP_Tactical_EffectSphere_EMP_C_StartSFX");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_StartSFX, Tactical_Level_0) == 0x000000, "Member 'BP_Tactical_EffectSphere_EMP_C_StartSFX::Tactical_Level_0' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_StartSFX, Looped_SFX_Instance) == 0x000008, "Member 'BP_Tactical_EffectSphere_EMP_C_StartSFX::Looped_SFX_Instance' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_StartSFX, Temp_bool_Variable) == 0x000018, "Member 'BP_Tactical_EffectSphere_EMP_C_StartSFX::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_StartSFX, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000019, "Member 'BP_Tactical_EffectSphere_EMP_C_StartSFX::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_StartSFX, Temp_struct_Variable) == 0x00001C, "Member 'BP_Tactical_EffectSphere_EMP_C_StartSFX::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_StartSFX, Temp_struct_Variable_1) == 0x000020, "Member 'BP_Tactical_EffectSphere_EMP_C_StartSFX::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_StartSFX, Temp_delegate_Variable) == 0x000024, "Member 'BP_Tactical_EffectSphere_EMP_C_StartSFX::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_StartSFX, K2Node_Select_Default) == 0x000038, "Member 'BP_Tactical_EffectSphere_EMP_C_StartSFX::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_StartSFX, CallFunc_PlayEvent_playback_instance) == 0x000040, "Member 'BP_Tactical_EffectSphere_EMP_C_StartSFX::CallFunc_PlayEvent_playback_instance' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_StartSFX, CallFunc_PlayEvent_play_success) == 0x000050, "Member 'BP_Tactical_EffectSphere_EMP_C_StartSFX::CallFunc_PlayEvent_play_success' has a wrong offset!");

// Function BP_Tactical_EffectSphere_EMP.BP_Tactical_EffectSphere_EMP_C.PlaySFXOnSphereEnding
// 0x0028 (0x0028 - 0x0000)
struct BP_Tactical_EffectSphere_EMP_C_PlaySFXOnSphereEnding final
{
public:
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0000(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCAAudioPlaybackInstance               CallFunc_PlayEventInWorld_playback_instance;       // 0x0010(0x0010)()
	bool                                          CallFunc_PlayEventInWorld_play_success;            // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Tactical_EffectSphere_EMP_C_PlaySFXOnSphereEnding) == 0x000008, "Wrong alignment on BP_Tactical_EffectSphere_EMP_C_PlaySFXOnSphereEnding");
static_assert(sizeof(BP_Tactical_EffectSphere_EMP_C_PlaySFXOnSphereEnding) == 0x000028, "Wrong size on BP_Tactical_EffectSphere_EMP_C_PlaySFXOnSphereEnding");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_PlaySFXOnSphereEnding, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000000, "Member 'BP_Tactical_EffectSphere_EMP_C_PlaySFXOnSphereEnding::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_PlaySFXOnSphereEnding, CallFunc_PlayEventInWorld_playback_instance) == 0x000010, "Member 'BP_Tactical_EffectSphere_EMP_C_PlaySFXOnSphereEnding::CallFunc_PlayEventInWorld_playback_instance' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_PlaySFXOnSphereEnding, CallFunc_PlayEventInWorld_play_success) == 0x000020, "Member 'BP_Tactical_EffectSphere_EMP_C_PlaySFXOnSphereEnding::CallFunc_PlayEventInWorld_play_success' has a wrong offset!");

// Function BP_Tactical_EffectSphere_EMP.BP_Tactical_EffectSphere_EMP_C.Check Destroy Overlapping Actor
// 0x0120 (0x0120 - 0x0000)
struct BP_Tactical_EffectSphere_EMP_C_Check_Destroy_Overlapping_Actor final
{
public:
	class AActor*                                 Overlapped_Actor;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Disruption_Handled;                                // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput;    // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ACAProjectileBase*                      K2Node_DynamicCast_AsCAProjectile_Base;            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventData                     K2Node_MakeStruct_GameplayEventData;               // 0x0048(0x00B8)()
	TScriptInterface<class ICAEMPDisruptableInterface> K2Node_DynamicCast_AsCAEMPDisruptable_Interface;   // 0x0100(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetInstigator_ReturnValue;                // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Tactical_EffectSphere_EMP_C_Check_Destroy_Overlapping_Actor) == 0x000008, "Wrong alignment on BP_Tactical_EffectSphere_EMP_C_Check_Destroy_Overlapping_Actor");
static_assert(sizeof(BP_Tactical_EffectSphere_EMP_C_Check_Destroy_Overlapping_Actor) == 0x000120, "Wrong size on BP_Tactical_EffectSphere_EMP_C_Check_Destroy_Overlapping_Actor");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_Check_Destroy_Overlapping_Actor, Overlapped_Actor) == 0x000000, "Member 'BP_Tactical_EffectSphere_EMP_C_Check_Destroy_Overlapping_Actor::Overlapped_Actor' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_Check_Destroy_Overlapping_Actor, Disruption_Handled) == 0x000008, "Member 'BP_Tactical_EffectSphere_EMP_C_Check_Destroy_Overlapping_Actor::Disruption_Handled' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_Check_Destroy_Overlapping_Actor, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x000010, "Member 'BP_Tactical_EffectSphere_EMP_C_Check_Destroy_Overlapping_Actor::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_Check_Destroy_Overlapping_Actor, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_Tactical_EffectSphere_EMP_C_Check_Destroy_Overlapping_Actor::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_Check_Destroy_Overlapping_Actor, CallFunc_HasMatchingGameplayTag_self_CastInput) == 0x000020, "Member 'BP_Tactical_EffectSphere_EMP_C_Check_Destroy_Overlapping_Actor::CallFunc_HasMatchingGameplayTag_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_Check_Destroy_Overlapping_Actor, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x000030, "Member 'BP_Tactical_EffectSphere_EMP_C_Check_Destroy_Overlapping_Actor::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_Check_Destroy_Overlapping_Actor, CallFunc_BooleanAND_ReturnValue) == 0x000031, "Member 'BP_Tactical_EffectSphere_EMP_C_Check_Destroy_Overlapping_Actor::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_Check_Destroy_Overlapping_Actor, K2Node_DynamicCast_AsCAProjectile_Base) == 0x000038, "Member 'BP_Tactical_EffectSphere_EMP_C_Check_Destroy_Overlapping_Actor::K2Node_DynamicCast_AsCAProjectile_Base' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_Check_Destroy_Overlapping_Actor, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_Tactical_EffectSphere_EMP_C_Check_Destroy_Overlapping_Actor::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_Check_Destroy_Overlapping_Actor, K2Node_MakeStruct_GameplayEventData) == 0x000048, "Member 'BP_Tactical_EffectSphere_EMP_C_Check_Destroy_Overlapping_Actor::K2Node_MakeStruct_GameplayEventData' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_Check_Destroy_Overlapping_Actor, K2Node_DynamicCast_AsCAEMPDisruptable_Interface) == 0x000100, "Member 'BP_Tactical_EffectSphere_EMP_C_Check_Destroy_Overlapping_Actor::K2Node_DynamicCast_AsCAEMPDisruptable_Interface' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_Check_Destroy_Overlapping_Actor, K2Node_DynamicCast_bSuccess_1) == 0x000110, "Member 'BP_Tactical_EffectSphere_EMP_C_Check_Destroy_Overlapping_Actor::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_Check_Destroy_Overlapping_Actor, CallFunc_GetInstigator_ReturnValue) == 0x000118, "Member 'BP_Tactical_EffectSphere_EMP_C_Check_Destroy_Overlapping_Actor::CallFunc_GetInstigator_ReturnValue' has a wrong offset!");

// Function BP_Tactical_EffectSphere_EMP.BP_Tactical_EffectSphere_EMP_C.Apply Player EMP GE
// 0x0028 (0x0028 - 0x0000)
struct BP_Tactical_EffectSphere_EMP_C_Apply_Player_EMP_GE final
{
public:
	class UAbilitySystemComponent*                Target_Ability_System_Component_Reference;         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            Out_GE;                                            // 0x0008(0x0008)(Parm, OutParm, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryActivateAbilityByClass_ReturnValue;    // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue; // 0x0014(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue_1; // 0x001C(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Tactical_EffectSphere_EMP_C_Apply_Player_EMP_GE) == 0x000008, "Wrong alignment on BP_Tactical_EffectSphere_EMP_C_Apply_Player_EMP_GE");
static_assert(sizeof(BP_Tactical_EffectSphere_EMP_C_Apply_Player_EMP_GE) == 0x000028, "Wrong size on BP_Tactical_EffectSphere_EMP_C_Apply_Player_EMP_GE");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_Apply_Player_EMP_GE, Target_Ability_System_Component_Reference) == 0x000000, "Member 'BP_Tactical_EffectSphere_EMP_C_Apply_Player_EMP_GE::Target_Ability_System_Component_Reference' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_Apply_Player_EMP_GE, Out_GE) == 0x000008, "Member 'BP_Tactical_EffectSphere_EMP_C_Apply_Player_EMP_GE::Out_GE' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_Apply_Player_EMP_GE, CallFunc_TryActivateAbilityByClass_ReturnValue) == 0x000010, "Member 'BP_Tactical_EffectSphere_EMP_C_Apply_Player_EMP_GE::CallFunc_TryActivateAbilityByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_Apply_Player_EMP_GE, CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue) == 0x000014, "Member 'BP_Tactical_EffectSphere_EMP_C_Apply_Player_EMP_GE::CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_Apply_Player_EMP_GE, CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue_1) == 0x00001C, "Member 'BP_Tactical_EffectSphere_EMP_C_Apply_Player_EMP_GE::CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_Apply_Player_EMP_GE, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000024, "Member 'BP_Tactical_EffectSphere_EMP_C_Apply_Player_EMP_GE::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_Tactical_EffectSphere_EMP.BP_Tactical_EffectSphere_EMP_C.Apply Player EMP Linger GE
// 0x0020 (0x0020 - 0x0000)
struct BP_Tactical_EffectSphere_EMP_C_Apply_Player_EMP_Linger_GE final
{
public:
	class UAbilitySystemComponent*                Target_Ability_System_Component_Reference;         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue; // 0x0008(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue_1; // 0x0010(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Tactical_EffectSphere_EMP_C_Apply_Player_EMP_Linger_GE) == 0x000008, "Wrong alignment on BP_Tactical_EffectSphere_EMP_C_Apply_Player_EMP_Linger_GE");
static_assert(sizeof(BP_Tactical_EffectSphere_EMP_C_Apply_Player_EMP_Linger_GE) == 0x000020, "Wrong size on BP_Tactical_EffectSphere_EMP_C_Apply_Player_EMP_Linger_GE");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_Apply_Player_EMP_Linger_GE, Target_Ability_System_Component_Reference) == 0x000000, "Member 'BP_Tactical_EffectSphere_EMP_C_Apply_Player_EMP_Linger_GE::Target_Ability_System_Component_Reference' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_Apply_Player_EMP_Linger_GE, CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue) == 0x000008, "Member 'BP_Tactical_EffectSphere_EMP_C_Apply_Player_EMP_Linger_GE::CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_Apply_Player_EMP_Linger_GE, CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue_1) == 0x000010, "Member 'BP_Tactical_EffectSphere_EMP_C_Apply_Player_EMP_Linger_GE::CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_Apply_Player_EMP_Linger_GE, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000018, "Member 'BP_Tactical_EffectSphere_EMP_C_Apply_Player_EMP_Linger_GE::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_Tactical_EffectSphere_EMP.BP_Tactical_EffectSphere_EMP_C.OnRep_TimeDetonated
// 0x0048 (0x0048 - 0x0000)
struct BP_Tactical_EffectSphere_EMP_C_OnRep_TimeDetonated final
{
public:
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0010(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FCAAudioPlaybackInstance               CallFunc_StartSFX_Looped_SFX_Instance;             // 0x0018(0x0010)()
	float                                         CallFunc_GetServerTimeSeconds_ReturnValue;         // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_2;        // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDurationFromDT_Lifespan;               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_3;        // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInZeroGravity_ReturnValue;              // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Tactical_EffectSphere_EMP_C_OnRep_TimeDetonated) == 0x000008, "Wrong alignment on BP_Tactical_EffectSphere_EMP_C_OnRep_TimeDetonated");
static_assert(sizeof(BP_Tactical_EffectSphere_EMP_C_OnRep_TimeDetonated) == 0x000048, "Wrong size on BP_Tactical_EffectSphere_EMP_C_OnRep_TimeDetonated");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_OnRep_TimeDetonated, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000000, "Member 'BP_Tactical_EffectSphere_EMP_C_OnRep_TimeDetonated::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_OnRep_TimeDetonated, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000004, "Member 'BP_Tactical_EffectSphere_EMP_C_OnRep_TimeDetonated::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_OnRep_TimeDetonated, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000008, "Member 'BP_Tactical_EffectSphere_EMP_C_OnRep_TimeDetonated::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_OnRep_TimeDetonated, CallFunc_K2_SetTimer_ReturnValue) == 0x000010, "Member 'BP_Tactical_EffectSphere_EMP_C_OnRep_TimeDetonated::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_OnRep_TimeDetonated, CallFunc_StartSFX_Looped_SFX_Instance) == 0x000018, "Member 'BP_Tactical_EffectSphere_EMP_C_OnRep_TimeDetonated::CallFunc_StartSFX_Looped_SFX_Instance' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_OnRep_TimeDetonated, CallFunc_GetServerTimeSeconds_ReturnValue) == 0x000028, "Member 'BP_Tactical_EffectSphere_EMP_C_OnRep_TimeDetonated::CallFunc_GetServerTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_OnRep_TimeDetonated, CallFunc_Subtract_FloatFloat_ReturnValue_2) == 0x00002C, "Member 'BP_Tactical_EffectSphere_EMP_C_OnRep_TimeDetonated::CallFunc_Subtract_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_OnRep_TimeDetonated, CallFunc_GetDurationFromDT_Lifespan) == 0x000030, "Member 'BP_Tactical_EffectSphere_EMP_C_OnRep_TimeDetonated::CallFunc_GetDurationFromDT_Lifespan' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_OnRep_TimeDetonated, CallFunc_Subtract_FloatFloat_ReturnValue_3) == 0x000034, "Member 'BP_Tactical_EffectSphere_EMP_C_OnRep_TimeDetonated::CallFunc_Subtract_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_OnRep_TimeDetonated, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000038, "Member 'BP_Tactical_EffectSphere_EMP_C_OnRep_TimeDetonated::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_OnRep_TimeDetonated, CallFunc_IsInZeroGravity_ReturnValue) == 0x000044, "Member 'BP_Tactical_EffectSphere_EMP_C_OnRep_TimeDetonated::CallFunc_IsInZeroGravity_ReturnValue' has a wrong offset!");

// Function BP_Tactical_EffectSphere_EMP.BP_Tactical_EffectSphere_EMP_C.IsPlayerInFutureDamageArea
// 0x0038 (0x0038 - 0x0000)
struct BP_Tactical_EffectSphere_EMP_C_IsPlayerInFutureDamageArea final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACACharacter_MainPlayer*                CallFunc_GetLocalPlayerCharacter_ReturnValue;      // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Vector_Distance_ReturnValue;              // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Tactical_EffectSphere_EMP_C_IsPlayerInFutureDamageArea) == 0x000008, "Wrong alignment on BP_Tactical_EffectSphere_EMP_C_IsPlayerInFutureDamageArea");
static_assert(sizeof(BP_Tactical_EffectSphere_EMP_C_IsPlayerInFutureDamageArea) == 0x000038, "Wrong size on BP_Tactical_EffectSphere_EMP_C_IsPlayerInFutureDamageArea");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_IsPlayerInFutureDamageArea, ReturnValue) == 0x000000, "Member 'BP_Tactical_EffectSphere_EMP_C_IsPlayerInFutureDamageArea::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_IsPlayerInFutureDamageArea, CallFunc_GetLocalPlayerCharacter_ReturnValue) == 0x000008, "Member 'BP_Tactical_EffectSphere_EMP_C_IsPlayerInFutureDamageArea::CallFunc_GetLocalPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_IsPlayerInFutureDamageArea, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000010, "Member 'BP_Tactical_EffectSphere_EMP_C_IsPlayerInFutureDamageArea::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_IsPlayerInFutureDamageArea, CallFunc_Add_FloatFloat_ReturnValue) == 0x00001C, "Member 'BP_Tactical_EffectSphere_EMP_C_IsPlayerInFutureDamageArea::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_IsPlayerInFutureDamageArea, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000020, "Member 'BP_Tactical_EffectSphere_EMP_C_IsPlayerInFutureDamageArea::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_IsPlayerInFutureDamageArea, CallFunc_Vector_Distance_ReturnValue) == 0x00002C, "Member 'BP_Tactical_EffectSphere_EMP_C_IsPlayerInFutureDamageArea::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tactical_EffectSphere_EMP_C_IsPlayerInFutureDamageArea, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000030, "Member 'BP_Tactical_EffectSphere_EMP_C_IsPlayerInFutureDamageArea::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");

}

