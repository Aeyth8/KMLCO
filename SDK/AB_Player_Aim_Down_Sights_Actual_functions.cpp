#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AB_Player_Aim_Down_Sights_Actual

#include "Basic.hpp"

#include "AB_Player_Aim_Down_Sights_Actual_classes.hpp"
#include "AB_Player_Aim_Down_Sights_Actual_parameters.hpp"


namespace SDK
{

// Function AB_Player_Aim_Down_Sights_Actual.AB_Player_Aim_Down_Sights_Actual_C.ExecuteUbergraph_AB_Player_Aim_Down_Sights_Actual
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UAB_Player_Aim_Down_Sights_Actual_C::ExecuteUbergraph_AB_Player_Aim_Down_Sights_Actual(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AB_Player_Aim_Down_Sights_Actual_C", "ExecuteUbergraph_AB_Player_Aim_Down_Sights_Actual");

	Params::AB_Player_Aim_Down_Sights_Actual_C_ExecuteUbergraph_AB_Player_Aim_Down_Sights_Actual Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AB_Player_Aim_Down_Sights_Actual.AB_Player_Aim_Down_Sights_Actual_C.K2_ActivateAbilityFromEvent
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// struct FGameplayEventData               EventData                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UAB_Player_Aim_Down_Sights_Actual_C::K2_ActivateAbilityFromEvent(const struct FGameplayEventData& EventData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AB_Player_Aim_Down_Sights_Actual_C", "K2_ActivateAbilityFromEvent");

	Params::AB_Player_Aim_Down_Sights_Actual_C_K2_ActivateAbilityFromEvent Parms{};

	Parms.EventData = std::move(EventData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function AB_Player_Aim_Down_Sights_Actual.AB_Player_Aim_Down_Sights_Actual_C.K2_OnEndAbility
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bWasCancelled                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UAB_Player_Aim_Down_Sights_Actual_C::K2_OnEndAbility(bool bWasCancelled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AB_Player_Aim_Down_Sights_Actual_C", "K2_OnEndAbility");

	Params::AB_Player_Aim_Down_Sights_Actual_C_K2_OnEndAbility Parms{};

	Parms.bWasCancelled = bWasCancelled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AB_Player_Aim_Down_Sights_Actual.AB_Player_Aim_Down_Sights_Actual_C.K2_CanActivateAbility
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// struct FGameplayAbilityActorInfo        ActorInfo                                              (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
// struct FGameplayAbilitySpecHandle       Handle                                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTagContainer            RelevantTags                                           (Parm, OutParm)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UAB_Player_Aim_Down_Sights_Actual_C::K2_CanActivateAbility(const struct FGameplayAbilityActorInfo& ActorInfo, const struct FGameplayAbilitySpecHandle& Handle, struct FGameplayTagContainer* RelevantTags) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AB_Player_Aim_Down_Sights_Actual_C", "K2_CanActivateAbility");

	Params::AB_Player_Aim_Down_Sights_Actual_C_K2_CanActivateAbility Parms{};

	Parms.ActorInfo = std::move(ActorInfo);
	Parms.Handle = std::move(Handle);

	UObject::ProcessEvent(Func, &Parms);

	if (RelevantTags != nullptr)
		*RelevantTags = std::move(Parms.RelevantTags);

	return Parms.ReturnValue;
}

}

