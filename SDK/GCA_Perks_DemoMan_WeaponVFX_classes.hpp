#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GCA_Perks_DemoMan_WeaponVFX

#include "Basic.hpp"

#include "GameplayAbilities_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GCA_Perks_DemoMan_WeaponVFX.GCA_Perks_DemoMan_WeaponVFX_C
// 0x0020 (0x02E0 - 0x02C0)
class AGCA_Perks_DemoMan_WeaponVFX_C final : public AGameplayCueNotify_Actor
{
public:
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCANiagaraComponentFOV*                 NiagaraRef;                                        // 0x02C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EffectDuration;                                    // 0x02D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D4[0x4];                                      // 0x02D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACACharacter*                           CACharacter;                                       // 0x02D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	bool WhileActive(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters);
	bool OnRemove(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GCA_Perks_DemoMan_WeaponVFX_C">();
	}
	static class AGCA_Perks_DemoMan_WeaponVFX_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AGCA_Perks_DemoMan_WeaponVFX_C>();
	}
};
static_assert(alignof(AGCA_Perks_DemoMan_WeaponVFX_C) == 0x000008, "Wrong alignment on AGCA_Perks_DemoMan_WeaponVFX_C");
static_assert(sizeof(AGCA_Perks_DemoMan_WeaponVFX_C) == 0x0002E0, "Wrong size on AGCA_Perks_DemoMan_WeaponVFX_C");
static_assert(offsetof(AGCA_Perks_DemoMan_WeaponVFX_C, DefaultSceneRoot) == 0x0002C0, "Member 'AGCA_Perks_DemoMan_WeaponVFX_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(AGCA_Perks_DemoMan_WeaponVFX_C, NiagaraRef) == 0x0002C8, "Member 'AGCA_Perks_DemoMan_WeaponVFX_C::NiagaraRef' has a wrong offset!");
static_assert(offsetof(AGCA_Perks_DemoMan_WeaponVFX_C, EffectDuration) == 0x0002D0, "Member 'AGCA_Perks_DemoMan_WeaponVFX_C::EffectDuration' has a wrong offset!");
static_assert(offsetof(AGCA_Perks_DemoMan_WeaponVFX_C, CACharacter) == 0x0002D8, "Member 'AGCA_Perks_DemoMan_WeaponVFX_C::CACharacter' has a wrong offset!");

}

