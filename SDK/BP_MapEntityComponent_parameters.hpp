#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MapEntityComponent

#include "Basic.hpp"

#include "Keaton_structs.hpp"
#include "Engine_structs.hpp"
#include "CALocalisationRuntime_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_MapEntityComponent.BP_MapEntityComponent_C.ExecuteUbergraph_BP_MapEntityComponent
// 0x03F0 (0x03F0 - 0x0000)
struct BP_MapEntityComponent_C_ExecuteUbergraph_BP_MapEntityComponent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue_1;        // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCAText                                K2Node_CustomEvent_Name_1;                         // 0x0048(0x0030)()
	ECAUIHUDEntityId                              K2Node_CustomEvent_Entity_ID;                      // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_CustomEvent_Location_1;                     // 0x007C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_MapOrder_1;                     // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_ShouldHaveMarker;               // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D[0x3];                                       // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCAText                                K2Node_CustomEvent_Name;                           // 0x0090(0x0030)()
	ECAUIHUDEntityId                              K2Node_CustomEvent_HudEntityID;                    // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x3];                                       // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_CustomEvent_Location;                       // 0x00C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_MapOrder;                       // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_2;                   // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E1[0x3];                                       // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue_2;        // 0x00E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x00F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_player_id;                            // 0x00FC(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_actor;                                // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_109[0x7];                                      // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_3;                   // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue_3;        // 0x0118(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x0124(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue_1; // 0x0130(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x013C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_3;        // 0x0148(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0160(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector_NetQuantize                    K2Node_MakeStruct_Vector_NetQuantize;              // 0x016C(0x000C)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_184[0x4];                                      // 0x0184(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCAMapEntityPayload                    K2Node_MakeStruct_CAMapEntityPayload;              // 0x0188(0x0070)()
	struct FVector_NetQuantize                    K2Node_MakeStruct_Vector_NetQuantize_1;            // 0x01F8(0x000C)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_204[0x4];                                      // 0x0204(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCAMapEntityPayload                    K2Node_MakeStruct_CAMapEntityPayload_1;            // 0x0208(0x0070)()
	class AActor*                                 CallFunc_GetOwner_ReturnValue_4;                   // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCATeamID                              K2Node_CustomEvent_Value;                          // 0x0280(0x0004)(NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_player_to_notify;               // 0x0284(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCATeamID>                      K2Node_MakeArray_Array;                            // 0x0288(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue_2; // 0x0298(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x02A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_2;                          // 0x02B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x02B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x02B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2BC[0x4];                                      // 0x02BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FCATeamID>                      K2Node_CustomEvent_teams_to_notify;                // 0x02C0(0x0010)(ConstParm, ReferenceParm)
	struct FVector_NetQuantize                    K2Node_MakeStruct_Vector_NetQuantize_2;            // 0x02D0(0x000C)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2DC[0x4];                                      // 0x02DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCAMapEntityPayload                    K2Node_MakeStruct_CAMapEntityPayload_2;            // 0x02E0(0x0070)()
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue_3; // 0x0350(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_3;           // 0x035C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_3;                          // 0x0368(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_3;                          // 0x036C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_3;                          // 0x0370(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector_NetQuantize                    K2Node_MakeStruct_Vector_NetQuantize_3;            // 0x0374(0x000C)(NoDestructor, HasGetValueTypeHash)
	struct FCAMapEntityPayload                    K2Node_MakeStruct_CAMapEntityPayload_3;            // 0x0380(0x0070)()
};
static_assert(alignof(BP_MapEntityComponent_C_ExecuteUbergraph_BP_MapEntityComponent) == 0x000008, "Wrong alignment on BP_MapEntityComponent_C_ExecuteUbergraph_BP_MapEntityComponent");
static_assert(sizeof(BP_MapEntityComponent_C_ExecuteUbergraph_BP_MapEntityComponent) == 0x0003F0, "Wrong size on BP_MapEntityComponent_C_ExecuteUbergraph_BP_MapEntityComponent");
static_assert(offsetof(BP_MapEntityComponent_C_ExecuteUbergraph_BP_MapEntityComponent, EntryPoint) == 0x000000, "Member 'BP_MapEntityComponent_C_ExecuteUbergraph_BP_MapEntityComponent::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_MapEntityComponent_C_ExecuteUbergraph_BP_MapEntityComponent, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_MapEntityComponent_C_ExecuteUbergraph_BP_MapEntityComponent::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapEntityComponent_C_ExecuteUbergraph_BP_MapEntityComponent, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000010, "Member 'BP_MapEntityComponent_C_ExecuteUbergraph_BP_MapEntityComponent::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapEntityComponent_C_ExecuteUbergraph_BP_MapEntityComponent, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00001C, "Member 'BP_MapEntityComponent_C_ExecuteUbergraph_BP_MapEntityComponent::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapEntityComponent_C_ExecuteUbergraph_BP_MapEntityComponent, CallFunc_GetOwner_ReturnValue_1) == 0x000028, "Member 'BP_MapEntityComponent_C_ExecuteUbergraph_BP_MapEntityComponent::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MapEntityComponent_C_ExecuteUbergraph_BP_MapEntityComponent, CallFunc_K2_GetActorRotation_ReturnValue_1) == 0x000030, "Member 'BP_MapEntityComponent_C_ExecuteUbergraph_BP_MapEntityComponent::CallFunc_K2_GetActorRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MapEntityComponent_C_ExecuteUbergraph_BP_MapEntityComponent, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x00003C, "Member 'BP_MapEntityComponent_C_ExecuteUbergraph_BP_MapEntityComponent::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MapEntityComponent_C_ExecuteUbergraph_BP_MapEntityComponent, K2Node_CustomEvent_Name_1) == 0x000048, "Member 'BP_MapEntityComponent_C_ExecuteUbergraph_BP_MapEntityComponent::K2Node_CustomEvent_Name_1' has a wrong offset!");
static_assert(offsetof(BP_MapEntityComponent_C_ExecuteUbergraph_BP_MapEntityComponent, K2Node_CustomEvent_Entity_ID) == 0x000078, "Member 'BP_MapEntityComponent_C_ExecuteUbergraph_BP_MapEntityComponent::K2Node_CustomEvent_Entity_ID' has a wrong offset!");
static_assert(offsetof(BP_MapEntityComponent_C_ExecuteUbergraph_BP_MapEntityComponent, K2Node_CustomEvent_Location_1) == 0x00007C, "Member 'BP_MapEntityComponent_C_ExecuteUbergraph_BP_MapEntityComponent::K2Node_CustomEvent_Location_1' has a wrong offset!");
static_assert(offsetof(BP_MapEntityComponent_C_ExecuteUbergraph_BP_MapEntityComponent, K2Node_CustomEvent_MapOrder_1) == 0x000088, "Member 'BP_MapEntityComponent_C_ExecuteUbergraph_BP_MapEntityComponent::K2Node_CustomEvent_MapOrder_1' has a wrong offset!");
static_assert(offsetof(BP_MapEntityComponent_C_ExecuteUbergraph_BP_MapEntityComponent, K2Node_CustomEvent_ShouldHaveMarker) == 0x00008C, "Member 'BP_MapEntityComponent_C_ExecuteUbergraph_BP_MapEntityComponent::K2Node_CustomEvent_ShouldHaveMarker' has a wrong offset!");
static_assert(offsetof(BP_MapEntityComponent_C_ExecuteUbergraph_BP_MapEntityComponent, K2Node_CustomEvent_Name) == 0x000090, "Member 'BP_MapEntityComponent_C_ExecuteUbergraph_BP_MapEntityComponent::K2Node_CustomEvent_Name' has a wrong offset!");
static_assert(offsetof(BP_MapEntityComponent_C_ExecuteUbergraph_BP_MapEntityComponent, K2Node_CustomEvent_HudEntityID) == 0x0000C0, "Member 'BP_MapEntityComponent_C_ExecuteUbergraph_BP_MapEntityComponent::K2Node_CustomEvent_HudEntityID' has a wrong offset!");
static_assert(offsetof(BP_MapEntityComponent_C_ExecuteUbergraph_BP_MapEntityComponent, K2Node_CustomEvent_Location) == 0x0000C4, "Member 'BP_MapEntityComponent_C_ExecuteUbergraph_BP_MapEntityComponent::K2Node_CustomEvent_Location' has a wrong offset!");
static_assert(offsetof(BP_MapEntityComponent_C_ExecuteUbergraph_BP_MapEntityComponent, K2Node_CustomEvent_MapOrder) == 0x0000D0, "Member 'BP_MapEntityComponent_C_ExecuteUbergraph_BP_MapEntityComponent::K2Node_CustomEvent_MapOrder' has a wrong offset!");
static_assert(offsetof(BP_MapEntityComponent_C_ExecuteUbergraph_BP_MapEntityComponent, CallFunc_GetOwner_ReturnValue_2) == 0x0000D8, "Member 'BP_MapEntityComponent_C_ExecuteUbergraph_BP_MapEntityComponent::CallFunc_GetOwner_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MapEntityComponent_C_ExecuteUbergraph_BP_MapEntityComponent, CallFunc_IsServer_ReturnValue) == 0x0000E0, "Member 'BP_MapEntityComponent_C_ExecuteUbergraph_BP_MapEntityComponent::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapEntityComponent_C_ExecuteUbergraph_BP_MapEntityComponent, CallFunc_K2_GetActorRotation_ReturnValue_2) == 0x0000E4, "Member 'BP_MapEntityComponent_C_ExecuteUbergraph_BP_MapEntityComponent::CallFunc_K2_GetActorRotation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MapEntityComponent_C_ExecuteUbergraph_BP_MapEntityComponent, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x0000F0, "Member 'BP_MapEntityComponent_C_ExecuteUbergraph_BP_MapEntityComponent::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MapEntityComponent_C_ExecuteUbergraph_BP_MapEntityComponent, K2Node_Event_player_id) == 0x0000FC, "Member 'BP_MapEntityComponent_C_ExecuteUbergraph_BP_MapEntityComponent::K2Node_Event_player_id' has a wrong offset!");
static_assert(offsetof(BP_MapEntityComponent_C_ExecuteUbergraph_BP_MapEntityComponent, K2Node_Event_actor) == 0x000100, "Member 'BP_MapEntityComponent_C_ExecuteUbergraph_BP_MapEntityComponent::K2Node_Event_actor' has a wrong offset!");
static_assert(offsetof(BP_MapEntityComponent_C_ExecuteUbergraph_BP_MapEntityComponent, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000108, "Member 'BP_MapEntityComponent_C_ExecuteUbergraph_BP_MapEntityComponent::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapEntityComponent_C_ExecuteUbergraph_BP_MapEntityComponent, CallFunc_GetOwner_ReturnValue_3) == 0x000110, "Member 'BP_MapEntityComponent_C_ExecuteUbergraph_BP_MapEntityComponent::CallFunc_GetOwner_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_MapEntityComponent_C_ExecuteUbergraph_BP_MapEntityComponent, CallFunc_K2_GetActorRotation_ReturnValue_3) == 0x000118, "Member 'BP_MapEntityComponent_C_ExecuteUbergraph_BP_MapEntityComponent::CallFunc_K2_GetActorRotation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_MapEntityComponent_C_ExecuteUbergraph_BP_MapEntityComponent, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x000124, "Member 'BP_MapEntityComponent_C_ExecuteUbergraph_BP_MapEntityComponent::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapEntityComponent_C_ExecuteUbergraph_BP_MapEntityComponent, CallFunc_GreaterGreater_VectorRotator_ReturnValue_1) == 0x000130, "Member 'BP_MapEntityComponent_C_ExecuteUbergraph_BP_MapEntityComponent::CallFunc_GreaterGreater_VectorRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MapEntityComponent_C_ExecuteUbergraph_BP_MapEntityComponent, CallFunc_Add_VectorVector_ReturnValue) == 0x00013C, "Member 'BP_MapEntityComponent_C_ExecuteUbergraph_BP_MapEntityComponent::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapEntityComponent_C_ExecuteUbergraph_BP_MapEntityComponent, CallFunc_K2_GetActorLocation_ReturnValue_3) == 0x000148, "Member 'BP_MapEntityComponent_C_ExecuteUbergraph_BP_MapEntityComponent::CallFunc_K2_GetActorLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_MapEntityComponent_C_ExecuteUbergraph_BP_MapEntityComponent, CallFunc_BreakVector_X) == 0x000154, "Member 'BP_MapEntityComponent_C_ExecuteUbergraph_BP_MapEntityComponent::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_MapEntityComponent_C_ExecuteUbergraph_BP_MapEntityComponent, CallFunc_BreakVector_Y) == 0x000158, "Member 'BP_MapEntityComponent_C_ExecuteUbergraph_BP_MapEntityComponent::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_MapEntityComponent_C_ExecuteUbergraph_BP_MapEntityComponent, CallFunc_BreakVector_Z) == 0x00015C, "Member 'BP_MapEntityComponent_C_ExecuteUbergraph_BP_MapEntityComponent::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_MapEntityComponent_C_ExecuteUbergraph_BP_MapEntityComponent, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000160, "Member 'BP_MapEntityComponent_C_ExecuteUbergraph_BP_MapEntityComponent::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MapEntityComponent_C_ExecuteUbergraph_BP_MapEntityComponent, K2Node_MakeStruct_Vector_NetQuantize) == 0x00016C, "Member 'BP_MapEntityComponent_C_ExecuteUbergraph_BP_MapEntityComponent::K2Node_MakeStruct_Vector_NetQuantize' has a wrong offset!");
static_assert(offsetof(BP_MapEntityComponent_C_ExecuteUbergraph_BP_MapEntityComponent, CallFunc_BreakVector_X_1) == 0x000178, "Member 'BP_MapEntityComponent_C_ExecuteUbergraph_BP_MapEntityComponent::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_MapEntityComponent_C_ExecuteUbergraph_BP_MapEntityComponent, CallFunc_BreakVector_Y_1) == 0x00017C, "Member 'BP_MapEntityComponent_C_ExecuteUbergraph_BP_MapEntityComponent::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_MapEntityComponent_C_ExecuteUbergraph_BP_MapEntityComponent, CallFunc_BreakVector_Z_1) == 0x000180, "Member 'BP_MapEntityComponent_C_ExecuteUbergraph_BP_MapEntityComponent::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_MapEntityComponent_C_ExecuteUbergraph_BP_MapEntityComponent, K2Node_MakeStruct_CAMapEntityPayload) == 0x000188, "Member 'BP_MapEntityComponent_C_ExecuteUbergraph_BP_MapEntityComponent::K2Node_MakeStruct_CAMapEntityPayload' has a wrong offset!");
static_assert(offsetof(BP_MapEntityComponent_C_ExecuteUbergraph_BP_MapEntityComponent, K2Node_MakeStruct_Vector_NetQuantize_1) == 0x0001F8, "Member 'BP_MapEntityComponent_C_ExecuteUbergraph_BP_MapEntityComponent::K2Node_MakeStruct_Vector_NetQuantize_1' has a wrong offset!");
static_assert(offsetof(BP_MapEntityComponent_C_ExecuteUbergraph_BP_MapEntityComponent, K2Node_MakeStruct_CAMapEntityPayload_1) == 0x000208, "Member 'BP_MapEntityComponent_C_ExecuteUbergraph_BP_MapEntityComponent::K2Node_MakeStruct_CAMapEntityPayload_1' has a wrong offset!");
static_assert(offsetof(BP_MapEntityComponent_C_ExecuteUbergraph_BP_MapEntityComponent, CallFunc_GetOwner_ReturnValue_4) == 0x000278, "Member 'BP_MapEntityComponent_C_ExecuteUbergraph_BP_MapEntityComponent::CallFunc_GetOwner_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_MapEntityComponent_C_ExecuteUbergraph_BP_MapEntityComponent, K2Node_CustomEvent_Value) == 0x000280, "Member 'BP_MapEntityComponent_C_ExecuteUbergraph_BP_MapEntityComponent::K2Node_CustomEvent_Value' has a wrong offset!");
static_assert(offsetof(BP_MapEntityComponent_C_ExecuteUbergraph_BP_MapEntityComponent, K2Node_CustomEvent_player_to_notify) == 0x000284, "Member 'BP_MapEntityComponent_C_ExecuteUbergraph_BP_MapEntityComponent::K2Node_CustomEvent_player_to_notify' has a wrong offset!");
static_assert(offsetof(BP_MapEntityComponent_C_ExecuteUbergraph_BP_MapEntityComponent, K2Node_MakeArray_Array) == 0x000288, "Member 'BP_MapEntityComponent_C_ExecuteUbergraph_BP_MapEntityComponent::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_MapEntityComponent_C_ExecuteUbergraph_BP_MapEntityComponent, CallFunc_GreaterGreater_VectorRotator_ReturnValue_2) == 0x000298, "Member 'BP_MapEntityComponent_C_ExecuteUbergraph_BP_MapEntityComponent::CallFunc_GreaterGreater_VectorRotator_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MapEntityComponent_C_ExecuteUbergraph_BP_MapEntityComponent, CallFunc_Add_VectorVector_ReturnValue_2) == 0x0002A4, "Member 'BP_MapEntityComponent_C_ExecuteUbergraph_BP_MapEntityComponent::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MapEntityComponent_C_ExecuteUbergraph_BP_MapEntityComponent, CallFunc_BreakVector_X_2) == 0x0002B0, "Member 'BP_MapEntityComponent_C_ExecuteUbergraph_BP_MapEntityComponent::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(BP_MapEntityComponent_C_ExecuteUbergraph_BP_MapEntityComponent, CallFunc_BreakVector_Y_2) == 0x0002B4, "Member 'BP_MapEntityComponent_C_ExecuteUbergraph_BP_MapEntityComponent::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(BP_MapEntityComponent_C_ExecuteUbergraph_BP_MapEntityComponent, CallFunc_BreakVector_Z_2) == 0x0002B8, "Member 'BP_MapEntityComponent_C_ExecuteUbergraph_BP_MapEntityComponent::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(BP_MapEntityComponent_C_ExecuteUbergraph_BP_MapEntityComponent, K2Node_CustomEvent_teams_to_notify) == 0x0002C0, "Member 'BP_MapEntityComponent_C_ExecuteUbergraph_BP_MapEntityComponent::K2Node_CustomEvent_teams_to_notify' has a wrong offset!");
static_assert(offsetof(BP_MapEntityComponent_C_ExecuteUbergraph_BP_MapEntityComponent, K2Node_MakeStruct_Vector_NetQuantize_2) == 0x0002D0, "Member 'BP_MapEntityComponent_C_ExecuteUbergraph_BP_MapEntityComponent::K2Node_MakeStruct_Vector_NetQuantize_2' has a wrong offset!");
static_assert(offsetof(BP_MapEntityComponent_C_ExecuteUbergraph_BP_MapEntityComponent, K2Node_MakeStruct_CAMapEntityPayload_2) == 0x0002E0, "Member 'BP_MapEntityComponent_C_ExecuteUbergraph_BP_MapEntityComponent::K2Node_MakeStruct_CAMapEntityPayload_2' has a wrong offset!");
static_assert(offsetof(BP_MapEntityComponent_C_ExecuteUbergraph_BP_MapEntityComponent, CallFunc_GreaterGreater_VectorRotator_ReturnValue_3) == 0x000350, "Member 'BP_MapEntityComponent_C_ExecuteUbergraph_BP_MapEntityComponent::CallFunc_GreaterGreater_VectorRotator_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_MapEntityComponent_C_ExecuteUbergraph_BP_MapEntityComponent, CallFunc_Add_VectorVector_ReturnValue_3) == 0x00035C, "Member 'BP_MapEntityComponent_C_ExecuteUbergraph_BP_MapEntityComponent::CallFunc_Add_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_MapEntityComponent_C_ExecuteUbergraph_BP_MapEntityComponent, CallFunc_BreakVector_X_3) == 0x000368, "Member 'BP_MapEntityComponent_C_ExecuteUbergraph_BP_MapEntityComponent::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(BP_MapEntityComponent_C_ExecuteUbergraph_BP_MapEntityComponent, CallFunc_BreakVector_Y_3) == 0x00036C, "Member 'BP_MapEntityComponent_C_ExecuteUbergraph_BP_MapEntityComponent::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(BP_MapEntityComponent_C_ExecuteUbergraph_BP_MapEntityComponent, CallFunc_BreakVector_Z_3) == 0x000370, "Member 'BP_MapEntityComponent_C_ExecuteUbergraph_BP_MapEntityComponent::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(BP_MapEntityComponent_C_ExecuteUbergraph_BP_MapEntityComponent, K2Node_MakeStruct_Vector_NetQuantize_3) == 0x000374, "Member 'BP_MapEntityComponent_C_ExecuteUbergraph_BP_MapEntityComponent::K2Node_MakeStruct_Vector_NetQuantize_3' has a wrong offset!");
static_assert(offsetof(BP_MapEntityComponent_C_ExecuteUbergraph_BP_MapEntityComponent, K2Node_MakeStruct_CAMapEntityPayload_3) == 0x000380, "Member 'BP_MapEntityComponent_C_ExecuteUbergraph_BP_MapEntityComponent::K2Node_MakeStruct_CAMapEntityPayload_3' has a wrong offset!");

// Function BP_MapEntityComponent.BP_MapEntityComponent_C.UpdateTeam
// 0x0010 (0x0010 - 0x0000)
struct BP_MapEntityComponent_C_UpdateTeam final
{
public:
	TArray<struct FCATeamID>                      Teams_to_notify;                                   // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_MapEntityComponent_C_UpdateTeam) == 0x000008, "Wrong alignment on BP_MapEntityComponent_C_UpdateTeam");
static_assert(sizeof(BP_MapEntityComponent_C_UpdateTeam) == 0x000010, "Wrong size on BP_MapEntityComponent_C_UpdateTeam");
static_assert(offsetof(BP_MapEntityComponent_C_UpdateTeam, Teams_to_notify) == 0x000000, "Member 'BP_MapEntityComponent_C_UpdateTeam::Teams_to_notify' has a wrong offset!");

// Function BP_MapEntityComponent.BP_MapEntityComponent_C.Update
// 0x0004 (0x0004 - 0x0000)
struct BP_MapEntityComponent_C_Update final
{
public:
	int32                                         Player_to_notify;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapEntityComponent_C_Update) == 0x000004, "Wrong alignment on BP_MapEntityComponent_C_Update");
static_assert(sizeof(BP_MapEntityComponent_C_Update) == 0x000004, "Wrong size on BP_MapEntityComponent_C_Update");
static_assert(offsetof(BP_MapEntityComponent_C_Update, Player_to_notify) == 0x000000, "Member 'BP_MapEntityComponent_C_Update::Player_to_notify' has a wrong offset!");

// Function BP_MapEntityComponent.BP_MapEntityComponent_C.SetTeamCaptureID
// 0x0004 (0x0004 - 0x0000)
struct BP_MapEntityComponent_C_SetTeamCaptureID final
{
public:
	struct FCATeamID                              Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapEntityComponent_C_SetTeamCaptureID) == 0x000004, "Wrong alignment on BP_MapEntityComponent_C_SetTeamCaptureID");
static_assert(sizeof(BP_MapEntityComponent_C_SetTeamCaptureID) == 0x000004, "Wrong size on BP_MapEntityComponent_C_SetTeamCaptureID");
static_assert(offsetof(BP_MapEntityComponent_C_SetTeamCaptureID, Value) == 0x000000, "Member 'BP_MapEntityComponent_C_SetTeamCaptureID::Value' has a wrong offset!");

// Function BP_MapEntityComponent.BP_MapEntityComponent_C.SetActorOnPayload
// 0x0010 (0x0010 - 0x0000)
struct BP_MapEntityComponent_C_SetActorOnPayload final
{
public:
	int32                                         Player_id;                                         // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Actor_0;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapEntityComponent_C_SetActorOnPayload) == 0x000008, "Wrong alignment on BP_MapEntityComponent_C_SetActorOnPayload");
static_assert(sizeof(BP_MapEntityComponent_C_SetActorOnPayload) == 0x000010, "Wrong size on BP_MapEntityComponent_C_SetActorOnPayload");
static_assert(offsetof(BP_MapEntityComponent_C_SetActorOnPayload, Player_id) == 0x000000, "Member 'BP_MapEntityComponent_C_SetActorOnPayload::Player_id' has a wrong offset!");
static_assert(offsetof(BP_MapEntityComponent_C_SetActorOnPayload, Actor_0) == 0x000008, "Member 'BP_MapEntityComponent_C_SetActorOnPayload::Actor_0' has a wrong offset!");

// Function BP_MapEntityComponent.BP_MapEntityComponent_C.SetupDataOnly
// 0x0048 (0x0048 - 0x0000)
struct BP_MapEntityComponent_C_SetupDataOnly final
{
public:
	struct FCAText                                Name_0;                                            // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm)
	ECAUIHUDEntityId                              HudEntityID_0;                                     // 0x0030(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Location_0;                                        // 0x0034(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MapOrder_0;                                        // 0x0040(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapEntityComponent_C_SetupDataOnly) == 0x000008, "Wrong alignment on BP_MapEntityComponent_C_SetupDataOnly");
static_assert(sizeof(BP_MapEntityComponent_C_SetupDataOnly) == 0x000048, "Wrong size on BP_MapEntityComponent_C_SetupDataOnly");
static_assert(offsetof(BP_MapEntityComponent_C_SetupDataOnly, Name_0) == 0x000000, "Member 'BP_MapEntityComponent_C_SetupDataOnly::Name_0' has a wrong offset!");
static_assert(offsetof(BP_MapEntityComponent_C_SetupDataOnly, HudEntityID_0) == 0x000030, "Member 'BP_MapEntityComponent_C_SetupDataOnly::HudEntityID_0' has a wrong offset!");
static_assert(offsetof(BP_MapEntityComponent_C_SetupDataOnly, Location_0) == 0x000034, "Member 'BP_MapEntityComponent_C_SetupDataOnly::Location_0' has a wrong offset!");
static_assert(offsetof(BP_MapEntityComponent_C_SetupDataOnly, MapOrder_0) == 0x000040, "Member 'BP_MapEntityComponent_C_SetupDataOnly::MapOrder_0' has a wrong offset!");

// Function BP_MapEntityComponent.BP_MapEntityComponent_C.Setup
// 0x0048 (0x0048 - 0x0000)
struct BP_MapEntityComponent_C_Setup final
{
public:
	struct FCAText                                Name_0;                                            // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm)
	ECAUIHUDEntityId                              Entity_ID;                                         // 0x0030(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Location_0;                                        // 0x0034(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MapOrder_0;                                        // 0x0040(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldHaveMarker;                                  // 0x0044(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapEntityComponent_C_Setup) == 0x000008, "Wrong alignment on BP_MapEntityComponent_C_Setup");
static_assert(sizeof(BP_MapEntityComponent_C_Setup) == 0x000048, "Wrong size on BP_MapEntityComponent_C_Setup");
static_assert(offsetof(BP_MapEntityComponent_C_Setup, Name_0) == 0x000000, "Member 'BP_MapEntityComponent_C_Setup::Name_0' has a wrong offset!");
static_assert(offsetof(BP_MapEntityComponent_C_Setup, Entity_ID) == 0x000030, "Member 'BP_MapEntityComponent_C_Setup::Entity_ID' has a wrong offset!");
static_assert(offsetof(BP_MapEntityComponent_C_Setup, Location_0) == 0x000034, "Member 'BP_MapEntityComponent_C_Setup::Location_0' has a wrong offset!");
static_assert(offsetof(BP_MapEntityComponent_C_Setup, MapOrder_0) == 0x000040, "Member 'BP_MapEntityComponent_C_Setup::MapOrder_0' has a wrong offset!");
static_assert(offsetof(BP_MapEntityComponent_C_Setup, ShouldHaveMarker) == 0x000044, "Member 'BP_MapEntityComponent_C_Setup::ShouldHaveMarker' has a wrong offset!");

// Function BP_MapEntityComponent.BP_MapEntityComponent_C.Update Marker Flags
// 0x0002 (0x0002 - 0x0000)
struct BP_MapEntityComponent_C_Update_Marker_Flags final
{
public:
	bool                                          IsBreached_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsInLockdown_0;                                    // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapEntityComponent_C_Update_Marker_Flags) == 0x000001, "Wrong alignment on BP_MapEntityComponent_C_Update_Marker_Flags");
static_assert(sizeof(BP_MapEntityComponent_C_Update_Marker_Flags) == 0x000002, "Wrong size on BP_MapEntityComponent_C_Update_Marker_Flags");
static_assert(offsetof(BP_MapEntityComponent_C_Update_Marker_Flags, IsBreached_0) == 0x000000, "Member 'BP_MapEntityComponent_C_Update_Marker_Flags::IsBreached_0' has a wrong offset!");
static_assert(offsetof(BP_MapEntityComponent_C_Update_Marker_Flags, IsInLockdown_0) == 0x000001, "Member 'BP_MapEntityComponent_C_Update_Marker_Flags::IsInLockdown_0' has a wrong offset!");

// Function BP_MapEntityComponent.BP_MapEntityComponent_C.RegisterMarker
// 0x0078 (0x0078 - 0x0000)
struct BP_MapEntityComponent_C_RegisterMarker final
{
public:
	struct FCAMapEntityPayload                    Map_Entity_Payload;                                // 0x0000(0x0070)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_RegisterMapEntity_ReturnValue;            // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapEntityComponent_C_RegisterMarker) == 0x000008, "Wrong alignment on BP_MapEntityComponent_C_RegisterMarker");
static_assert(sizeof(BP_MapEntityComponent_C_RegisterMarker) == 0x000078, "Wrong size on BP_MapEntityComponent_C_RegisterMarker");
static_assert(offsetof(BP_MapEntityComponent_C_RegisterMarker, Map_Entity_Payload) == 0x000000, "Member 'BP_MapEntityComponent_C_RegisterMarker::Map_Entity_Payload' has a wrong offset!");
static_assert(offsetof(BP_MapEntityComponent_C_RegisterMarker, CallFunc_Not_PreBool_ReturnValue) == 0x000070, "Member 'BP_MapEntityComponent_C_RegisterMarker::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapEntityComponent_C_RegisterMarker, CallFunc_RegisterMapEntity_ReturnValue) == 0x000074, "Member 'BP_MapEntityComponent_C_RegisterMarker::CallFunc_RegisterMapEntity_ReturnValue' has a wrong offset!");

}

